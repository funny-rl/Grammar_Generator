{"name": "454_D. Little Pony and Harmony Chest", "description": "Princess Twilight went to Celestia and Luna's old castle to research the chest from the Elements of Harmony.\n\n<image>\n\nA sequence of positive integers bi is harmony if and only if for every two elements of the sequence their greatest common divisor equals 1. According to an ancient book, the key of the chest is a harmony sequence bi which minimizes the following expression:\n\n<image>\n\nYou are given sequence ai, help Princess Twilight to find the key.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 100) — the number of elements of the sequences a and b. The next line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 30).\n\nOutput\n\nOutput the key — sequence bi that minimizes the sum described above. If there are multiple optimal sequences, you can output any of them.\n\nExamples\n\nInput\n\n5\n1 1 1 1 1\n\n\nOutput\n\n1 1 1 1 1 \n\nInput\n\n5\n1 6 4 2 8\n\n\nOutput\n\n1 5 3 1 8 ", "grammar": {"answer": null}}
{"name": "p02583 AtCoder Beginner Contest 175 - Making Triangle", "description": "We have sticks numbered 1, \\cdots, N. The length of Stick i (1 \\leq i \\leq N) is L_i.\n\nIn how many ways can we choose three of the sticks with different lengths that can form a triangle?\n\nThat is, find the number of triples of integers (i, j, k) (1 \\leq i < j < k \\leq N) that satisfy both of the following conditions:\n\n* L_i, L_j, and L_k are all different.\n* There exists a triangle whose sides have lengths L_i, L_j, and L_k.\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* 1 \\leq L_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nL_1 L_2 \\cdots L_N\n\n\nOutput\n\nPrint the number of ways to choose three of the sticks with different lengths that can form a triangle.\n\nExamples\n\nInput\n\n5\n4 4 9 7 5\n\n\nOutput\n\n5\n\n\nInput\n\n6\n4 5 4 3 3 5\n\n\nOutput\n\n8\n\n\nInput\n\n10\n9 4 6 1 9 6 10 6 6 8\n\n\nOutput\n\n39\n\n\nInput\n\n2\n1 1\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03583 Tenka1 Programmer Contest - 4/N", "description": "You are given an integer N.\n\nFind a triple of positive integers h, n and w such that 4/N = 1/h + 1/n + 1/w.\n\nIf there are multiple solutions, any of them will be accepted.\n\nConstraints\n\n* It is guaranteed that, for the given integer N, there exists a solution such that h,n,w \\leq 3500.\n\nInputs\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutputs\n\nPrint a triple of positive integers h, n and w that satisfies the condition, in the following format:\n\n\nh n w\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n1 2 2\n\n\nInput\n\n3485\n\n\nOutput\n\n872 1012974 1539173474040\n\n\nInput\n\n4664\n\n\nOutput\n\n3498 3498 3498", "grammar": {"answer": null}}
{"name": "450_B. Jzzhu and Sequences", "description": "Jzzhu has invented a kind of sequences, they meet the following property:\n\n<image>\n\nYou are given x and y, please calculate fn modulo 1000000007 (109 + 7).\n\nInput\n\nThe first line contains two integers x and y (|x|, |y| ≤ 109). The second line contains a single integer n (1 ≤ n ≤ 2·109).\n\nOutput\n\nOutput a single integer representing fn modulo 1000000007 (109 + 7).\n\nExamples\n\nInput\n\n2 3\n3\n\n\nOutput\n\n1\n\n\nInput\n\n0 -1\n2\n\n\nOutput\n\n1000000006\n\nNote\n\nIn the first sample, f2 = f1 + f3, 3 = 2 + f3, f3 = 1.\n\nIn the second sample, f2 = - 1;  - 1 modulo (109 + 7) equals (109 + 6).", "grammar": {"answer": null}}
{"name": "1418_G. Three Occurrences", "description": "You are given an array a consisting of n integers. We denote the subarray a[l..r] as the array [a_l, a_{l + 1}, ..., a_r] (1 ≤ l ≤ r ≤ n).\n\nA subarray is considered good if every integer that occurs in this subarray occurs there exactly thrice. For example, the array [1, 2, 2, 2, 1, 1, 2, 2, 2] has three good subarrays:\n\n  * a[1..6] = [1, 2, 2, 2, 1, 1]; \n  * a[2..4] = [2, 2, 2]; \n  * a[7..9] = [2, 2, 2]. \n\n\n\nCalculate the number of good subarrays of the given array a.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 5 ⋅ 10^5).\n\nThe second line contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ n).\n\nOutput\n\nPrint one integer — the number of good subarrays of the array a.\n\nExamples\n\nInput\n\n\n9\n1 2 2 2 1 1 2 2 2\n\n\nOutput\n\n\n3\n\n\nInput\n\n\n10\n1 2 3 4 1 2 3 1 2 3\n\n\nOutput\n\n\n0\n\n\nInput\n\n\n12\n1 2 3 4 3 4 2 1 3 4 2 1\n\n\nOutput\n\n\n1", "grammar": {"answer": null}}
{"name": "1156_E. Special Segments of Permutation", "description": "You are given a permutation p of n integers 1, 2, ..., n (a permutation is an array where each element from 1 to n occurs exactly once).\n\nLet's call some subsegment p[l, r] of this permutation special if p_l + p_r = max _{i = l}^{r} p_i. Please calculate the number of special subsegments.\n\nInput\n\nThe first line contains one integer n (3 ≤ n ≤ 2 ⋅ 10^5).\n\nThe second line contains n integers p_1, p_2, ..., p_n (1 ≤ p_i ≤ n). All these integers are pairwise distinct.\n\nOutput\n\nPrint the number of special subsegments of the given permutation.\n\nExamples\n\nInput\n\n\n5\n3 4 1 5 2\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n3\n1 3 2\n\n\nOutput\n\n\n1\n\nNote\n\nSpecial subsegments in the first example are [1, 5] and [1, 3].\n\nThe only special subsegment in the second example is [1, 3].", "grammar": {"answer": null}}
{"name": "p03304 SoundHound Inc. Programming Contest 2018 -Masters Tournament- - Ordinary Beauty", "description": "Let us define the beauty of a sequence (a_1,... ,a_n) as the number of pairs of two adjacent elements in it whose absolute differences are d. For example, when d=1, the beauty of the sequence (3, 2, 3, 10, 9) is 3.\n\nThere are a total of n^m sequences of length m where each element is an integer between 1 and n (inclusive). Find the beauty of each of these n^m sequences, and print the average of those values.\n\nConstraints\n\n* 0 \\leq d < n \\leq 10^9\n* 2 \\leq m \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nn m d\n\n\nOutput\n\nPrint the average of the beauties of the sequences of length m where each element is an integer between 1 and n. The output will be judged correct if the absolute or relative error is at most 10^{-6}.\n\nExamples\n\nInput\n\n2 3 1\n\n\nOutput\n\n1.0000000000\n\n\nInput\n\n1000000000 180707 0\n\n\nOutput\n\n0.0001807060", "grammar": {"answer": null}}
{"name": "262_E. Maxim and Matrix", "description": "Maxim loves to fill in a matrix in a special manner. Here is a pseudocode of filling in a matrix of size (m + 1) × (m + 1):\n\n<image>\n\nMaxim asks you to count, how many numbers m (1 ≤ m ≤ n) are there, such that the sum of values in the cells in the row number m + 1 of the resulting matrix equals t.\n\nExpression (x xor y) means applying the operation of bitwise excluding \"OR\" to numbers x and y. The given operation exists in all modern programming languages. For example, in languages C++ and Java it is represented by character \"^\", in Pascal — by \"xor\".\n\nInput\n\nA single line contains two integers n and t (1 ≤ n, t ≤ 1012, t ≤ n + 1).\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nOutput\n\nIn a single line print a single integer — the answer to the problem. \n\nExamples\n\nInput\n\n1 1\n\n\nOutput\n\n1\n\n\nInput\n\n3 2\n\n\nOutput\n\n1\n\n\nInput\n\n3 3\n\n\nOutput\n\n0\n\n\nInput\n\n1000000000000 1048576\n\n\nOutput\n\n118606527258", "grammar": {"answer": null}}
{"name": "p02869 NIKKEI Programming Contest 2019-2 - Non-triangular Triplets", "description": "Given are positive integers N and K.\n\nDetermine if the 3N integers K, K+1, ..., K+3N-1 can be partitioned into N triples (a_1,b_1,c_1), ..., (a_N,b_N,c_N) so that the condition below is satisfied. Any of the integers K, K+1, ..., K+3N-1 must appear in exactly one of those triples.\n\n* For every integer i from 1 to N, a_i + b_i \\leq c_i holds.\n\n\n\nIf the answer is yes, construct one such partition.\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* 1 \\leq K \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\n\n\nOutput\n\nIf it is impossible to partition the integers satisfying the condition, print `-1`. If it is possible, print N triples in the following format:\n\n\na_1 b_1 c_1\n:\na_N b_N c_N\n\nOutput\n\nIf it is impossible to partition the integers satisfying the condition, print `-1`. If it is possible, print N triples in the following format:\n\n\na_1 b_1 c_1\n:\na_N b_N c_N\n\nExamples\n\nInput\n\n1 1\n\n\nOutput\n\n1 2 3\n\n\nInput\n\n3 3\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p03369 AtCoder Beginner Contest 095 - Something on It", "description": "In \"Takahashi-ya\", a ramen restaurant, a bowl of ramen costs 700 yen (the currency of Japan), plus 100 yen for each kind of topping (boiled egg, sliced pork, green onions).\n\nA customer ordered a bowl of ramen and told which toppings to put on his ramen to a clerk. The clerk took a memo of the order as a string S. S is three characters long, and if the first character in S is `o`, it means the ramen should be topped with boiled egg; if that character is `x`, it means the ramen should not be topped with boiled egg. Similarly, the second and third characters in S mean the presence or absence of sliced pork and green onions on top of the ramen.\n\nWrite a program that, when S is given, prints the price of the corresponding bowl of ramen.\n\nConstraints\n\n* S is a string of length 3.\n* Each character in S is `o` or `x`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the price of the bowl of ramen corresponding to S.\n\nExamples\n\nInput\n\noxo\n\n\nOutput\n\n900\n\n\nInput\n\nooo\n\n\nOutput\n\n1000\n\n\nInput\n\nxxx\n\n\nOutput\n\n700", "grammar": {"answer": null}}
{"name": "p03208 AtCoder Beginner Contest 115 - Christmas Eve", "description": "In some other world, today is Christmas Eve.\n\nThere are N trees planted in Mr. Takaha's garden. The height of the i-th tree (1 \\leq i \\leq N) is h_i meters.\n\nHe decides to choose K trees from these trees and decorate them with electric lights. To make the scenery more beautiful, the heights of the decorated trees should be as close to each other as possible.\n\nMore specifically, let the height of the tallest decorated tree be h_{max} meters, and the height of the shortest decorated tree be h_{min} meters. The smaller the value h_{max} - h_{min} is, the better. What is the minimum possible value of h_{max} - h_{min}?\n\nConstraints\n\n* 2 \\leq K < N \\leq 10^5\n* 1 \\leq h_i \\leq 10^9\n* h_i is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nh_1\nh_2\n:\nh_N\n\n\nOutput\n\nPrint the minimum possible value of h_{max} - h_{min}.\n\nExamples\n\nInput\n\n5 3\n10\n15\n11\n14\n12\n\n\nOutput\n\n2\n\n\nInput\n\n5 3\n5\n7\n5\n7\n7\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02721 AtCoder Beginner Contest 161 - Yutori", "description": "Takahashi has decided to work on K days of his choice from the N days starting with tomorrow.\n\nYou are given an integer C and a string S. Takahashi will choose his workdays as follows:\n\n* After working for a day, he will refrain from working on the subsequent C days.\n* If the i-th character of S is `x`, he will not work on Day i, where Day 1 is tomorrow, Day 2 is the day after tomorrow, and so on.\n\n\n\nFind all days on which Takahashi is bound to work.\n\nConstraints\n\n* 1 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq K \\leq N\n* 0 \\leq C \\leq N\n* The length of S is N.\n* Each character of S is `o` or `x`.\n* Takahashi can choose his workdays so that the conditions in Problem Statement are satisfied.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K C\nS\n\n\nOutput\n\nPrint all days on which Takahashi is bound to work in ascending order, one per line.\n\nExamples\n\nInput\n\n11 3 2\nooxxxoxxxoo\n\n\nOutput\n\n6\n\n\nInput\n\n5 2 3\nooxoo\n\n\nOutput\n\n1\n5\n\n\nInput\n\n5 1 0\nooooo\n\n\nOutput\n\n\n\n\nInput\n\n16 4 3\nooxxoxoxxxoxoxxo\n\n\nOutput\n\n11\n16", "grammar": {"answer": null}}
{"name": "1003_B. Binary String Constructing", "description": "You are given three integers a, b and x. Your task is to construct a binary string s of length n = a + b such that there are exactly a zeroes, exactly b ones and exactly x indices i (where 1 ≤ i < n) such that s_i ≠ s_{i + 1}. It is guaranteed that the answer always exists.\n\nFor example, for the string \"01010\" there are four indices i such that 1 ≤ i < n and s_i ≠ s_{i + 1} (i = 1, 2, 3, 4). For the string \"111001\" there are two such indices i (i = 3, 5).\n\nRecall that binary string is a non-empty sequence of characters where each character is either 0 or 1.\n\nInput\n\nThe first line of the input contains three integers a, b and x (1 ≤ a, b ≤ 100, 1 ≤ x < a + b).\n\nOutput\n\nPrint only one string s, where s is any binary string satisfying conditions described above. It is guaranteed that the answer always exists.\n\nExamples\n\nInput\n\n2 2 1\n\n\nOutput\n\n1100\n\n\nInput\n\n3 3 3\n\n\nOutput\n\n101100\n\n\nInput\n\n5 3 6\n\n\nOutput\n\n01010100\n\nNote\n\nAll possible answers for the first example: \n\n  * 1100; \n  * 0011. \n\n\n\nAll possible answers for the second example: \n\n  * 110100; \n  * 101100; \n  * 110010; \n  * 100110; \n  * 011001; \n  * 001101; \n  * 010011; \n  * 001011. ", "grammar": {"answer": null}}
{"name": "1104_B. Game with string", "description": "Two people are playing a game with a string s, consisting of lowercase latin letters. \n\nOn a player's turn, he should choose two consecutive equal letters in the string and delete them. \n\nFor example, if the string is equal to \"xaax\" than there is only one possible turn: delete \"aa\", so the string will become \"xx\". A player not able to make a turn loses.\n\nYour task is to determine which player will win if both play optimally.\n\nInput\n\nThe only line contains the string s, consisting of lowercase latin letters (1 ≤ |s| ≤ 100 000), where |s| means the length of a string s.\n\nOutput\n\nIf the first player wins, print \"Yes\". If the second player wins, print \"No\".\n\nExamples\n\nInput\n\n\nabacaba\n\n\nOutput\n\n\nNo\n\n\nInput\n\n\niiq\n\n\nOutput\n\n\nYes\n\n\nInput\n\n\nabba\n\n\nOutput\n\n\nNo\n\nNote\n\nIn the first example the first player is unable to make a turn, so he loses.\n\nIn the second example first player turns the string into \"q\", then second player is unable to move, so he loses.", "grammar": {"answer": null}}
{"name": "p02037 Tile", "description": "problem\n\nI want to put as many rectangular tiles as possible on a rectangular wall with a size of $ h $ in height and $ w $ in width, and a size of $ a $ in height and $ b $ in width.\n\nThe following conditions must be met when attaching tiles.\n\n\n* Do not stack tiles.\n* Do not apply tiles diagonally, that is, any edge of the tile is parallel or perpendicular to any edge of the wall.\n* Do not change the orientation of the tiles, that is, do not swap the vertical and horizontal directions.\n\n\n\nWhen as many tiles as possible are pasted, find the sum of the areas not covered by the tiles.\n\n\n\noutput\n\nOutput the total area of ​​the part not covered by the tile. Also, output a line break at the end.\n\nExample\n\nInput\n\n5 8\n2 2\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "67_B. Restoration of the Permutation", "description": "Let A = {a1, a2, ..., an} be any permutation of the first n natural numbers {1, 2, ..., n}. You are given a positive integer k and another sequence B = {b1, b2, ..., bn}, where bi is the number of elements aj in A to the left of the element at = i such that aj ≥ (i + k).\n\nFor example, if n = 5, a possible A is {5, 1, 4, 2, 3}. For k = 2, B is given by {1, 2, 1, 0, 0}. But if k = 3, then B = {1, 1, 0, 0, 0}.\n\nFor two sequences X = {x1, x2, ..., xn} and Y = {y1, y2, ..., yn}, let i-th elements be the first elements such that xi ≠ yi. If xi < yi, then X is lexicographically smaller than Y, while if xi > yi, then X is lexicographically greater than Y.\n\nGiven n, k and B, you need to determine the lexicographically smallest A.\n\nInput\n\nThe first line contains two space separated integers n and k (1 ≤ n ≤ 1000, 1 ≤ k ≤ n). On the second line are n integers specifying the values of B = {b1, b2, ..., bn}.\n\nOutput\n\nPrint on a single line n integers of A = {a1, a2, ..., an} such that A is lexicographically minimal. It is guaranteed that the solution exists.\n\nExamples\n\nInput\n\n5 2\n1 2 1 0 0\n\n\nOutput\n\n4 1 5 2 3 \n\nInput\n\n4 2\n1 0 0 0\n\n\nOutput\n\n2 3 1 4 ", "grammar": {"answer": null}}
{"name": "1389_E. Calendar Ambiguity", "description": "Berland year consists of m months with d days each. Months are numbered from 1 to m. Berland week consists of w days. The first day of the year is also the first day of the week. Note that the last week of the year might be shorter than w days.\n\nA pair (x, y) such that x < y is ambiguous if day x of month y is the same day of the week as day y of month x.\n\nCount the number of ambiguous pairs.\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 1000) — the number of testcases.\n\nEach of the next t lines contains three integers m, d and w (1 ≤ m, d, w ≤ 10^9) — the number of months in a year, the number of days in a month and the number of days in a week.\n\nOutput\n\nPrint t integers — for each testcase output the number of pairs (x, y) such that x < y and day x of month y is the same day of the week as day y of month x.\n\nExample\n\nInput\n\n\n5\n6 7 4\n10 7 12\n12 30 7\n1 1 1\n3247834 10298779 625324\n\n\nOutput\n\n\n6\n9\n5\n0\n116461800\n\nNote\n\nHere are the pairs for the first test case: \n\n<image>", "grammar": {"answer": null}}
{"name": "159_D. Palindrome pairs", "description": "You are given a non-empty string s consisting of lowercase letters. Find the number of pairs of non-overlapping palindromic substrings of this string.\n\nIn a more formal way, you have to find the quantity of tuples (a, b, x, y) such that 1 ≤ a ≤ b < x ≤ y ≤ |s| and substrings s[a... b], s[x... y] are palindromes.\n\nA palindrome is a string that can be read the same way from left to right and from right to left. For example, \"abacaba\", \"z\", \"abba\" are palindromes.\n\nA substring s[i... j] (1 ≤ i ≤ j ≤ |s|) of string s = s1s2... s|s| is a string sisi + 1... sj. For example, substring s[2...4] of string s = \"abacaba\" equals \"bac\".\n\nInput\n\nThe first line of input contains a non-empty string s which consists of lowercase letters ('a'...'z'), s contains at most 2000 characters.\n\nOutput\n\nOutput a single number — the quantity of pairs of non-overlapping palindromic substrings of s.\n\nPlease do not use the %lld format specifier to read or write 64-bit integers in С++. It is preferred to use cin, cout streams or the %I64d format specifier.\n\nExamples\n\nInput\n\naa\n\n\nOutput\n\n1\n\n\nInput\n\naaa\n\n\nOutput\n\n5\n\n\nInput\n\nabacaba\n\n\nOutput\n\n36", "grammar": {"answer": null}}
{"name": "p03130 Yahoo Programming Contest 2019 - Path", "description": "There are four towns, numbered 1,2,3 and 4. Also, there are three roads. The i-th road connects different towns a_i and b_i bidirectionally. No two roads connect the same pair of towns. Other than these roads, there is no way to travel between these towns, but any town can be reached from any other town using these roads.\n\nDetermine if we can visit all the towns by traversing each of the roads exactly once.\n\nConstraints\n\n* 1 \\leq a_i,b_i \\leq 4(1\\leq i\\leq 3)\n* a_i and b_i are different. (1\\leq i\\leq 3)\n* No two roads connect the same pair of towns.\n* Any town can be reached from any other town using the roads.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\na_1 b_1\na_2 b_2\na_3 b_3\n\n\nOutput\n\nIf we can visit all the towns by traversing each of the roads exactly once, print `YES`; otherwise, print `NO`.\n\nExamples\n\nInput\n\n4 2\n1 3\n2 3\n\n\nOutput\n\nYES\n\n\nInput\n\n3 2\n2 4\n1 2\n\n\nOutput\n\nNO\n\n\nInput\n\n2 1\n3 2\n4 3\n\n\nOutput\n\nYES", "grammar": {"answer": null}}
{"name": "p03341 AtCoder Regular Contest 098 - Attention", "description": "There are N people standing in a row from west to east. Each person is facing east or west. The directions of the people is given as a string S of length N. The i-th person from the west is facing east if S_i = `E`, and west if S_i = `W`.\n\nYou will appoint one of the N people as the leader, then command the rest of them to face in the direction of the leader. Here, we do not care which direction the leader is facing.\n\nThe people in the row hate to change their directions, so you would like to select the leader so that the number of people who have to change their directions is minimized. Find the minimum number of people who have to change their directions.\n\nConstraints\n\n* 2 \\leq N \\leq 3 \\times 10^5\n* |S| = N\n* S_i is `E` or `W`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS\n\n\nOutput\n\nPrint the minimum number of people who have to change their directions.\n\nExamples\n\nInput\n\n5\nWEEWW\n\n\nOutput\n\n1\n\n\nInput\n\n12\nWEWEWEEEWWWE\n\n\nOutput\n\n4\n\n\nInput\n\n8\nWWWWWEEE\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p03632 AtCoder Beginner Contest 070 - Two Switches", "description": "Alice and Bob are controlling a robot. They each have one switch that controls the robot.\nAlice started holding down her button A second after the start-up of the robot, and released her button B second after the start-up.\nBob started holding down his button C second after the start-up, and released his button D second after the start-up.\nFor how many seconds both Alice and Bob were holding down their buttons?\n\nConstraints\n\n* 0≤A<B≤100\n* 0≤C<D≤100\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C D\n\n\nOutput\n\nPrint the length of the duration (in seconds) in which both Alice and Bob were holding down their buttons.\n\nExamples\n\nInput\n\n0 75 25 100\n\n\nOutput\n\n50\n\n\nInput\n\n0 33 66 99\n\n\nOutput\n\n0\n\n\nInput\n\n10 90 20 80\n\n\nOutput\n\n60", "grammar": {"answer": null}}
{"name": "p02371 Diameter of a Tree", "description": "Diameter of a Tree\n\n\n\n\nGiven a tree T with non-negative weight, find the diameter of the tree.\n\nThe diameter of a tree is the maximum distance between two nodes in a tree.\n\nConstraints\n\n* 1 ≤ n ≤ 100,000\n* 0 ≤ wi ≤ 1,000\n\nInput\n\n\nn\ns1 t1 w1\ns2 t2 w2\n:\nsn-1 tn-1 wn-1\n\n\nThe first line consists of an integer n which represents the number of nodes in the tree. Every node has a unique ID from 0 to n-1 respectively.\n\nIn the following n-1 lines, edges of the tree are given. si and ti represent end-points of the i-th edge (undirected) and wi represents the weight (distance) of the i-th edge.\n\nOutput\n\nPrint the diameter of the tree in a line.\n\nExamples\n\nInput\n\n4\n0 1 2\n1 2 1\n1 3 3\n\n\nOutput\n\n5\n\n\nInput\n\n4\n0 1 1\n1 2 2\n2 3 4\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "p02392 Range", "description": "Write a program which reads three integers a, b and c, and prints \"Yes\" if a < b < c, otherwise \"No\".\n\nConstraints\n\n* 0 ≤ a, b, c ≤ 100\n\nInput\n\nThree integers a, b and c separated by a single space are given in a line.\n\nOutput\n\nPrint \"Yes\" or \"No\" in a line.\n\nExamples\n\nInput\n\n1 3 8\n\n\nOutput\n\nYes\n\n\nInput\n\n3 8 1\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "27_A. Next Test", "description": "«Polygon» is a system which allows to create programming tasks in a simple and professional way. When you add a test to the problem, the corresponding form asks you for the test index. As in most cases it is clear which index the next test will have, the system suggests the default value of the index. It is calculated as the smallest positive integer which is not used as an index for some previously added test.\n\nYou are to implement this feature. Create a program which determines the default index of the next test, given the indexes of the previously added tests.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 3000) — the amount of previously added tests. The second line contains n distinct integers a1, a2, ..., an (1 ≤ ai ≤ 3000) — indexes of these tests.\n\nOutput\n\nOutput the required default value for the next test index.\n\nExamples\n\nInput\n\n3\n1 7 2\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p00375 Celsius and Fahrenheit", "description": "In Japan, temperature is usually expressed using the Celsius (℃) scale. In America, they used the Fahrenheit (℉) scale instead. $20$ degrees Celsius is roughly equal to $68$ degrees Fahrenheit. A phrase such as \"Today’s temperature is $68$ degrees\" is commonly encountered while you are in America.\n\nA value in Fahrenheit can be converted to Celsius by first subtracting $32$ and then multiplying by $\\frac{5}{9}$. A simplified method may be used to produce a rough estimate: first subtract $30$ and then divide by $2$. Using the latter method, $68$ Fahrenheit is converted to $19$ Centigrade, i.e., $\\frac{(68-30)}{2}$.\n\nMake a program to convert Fahrenheit to Celsius using the simplified method: $C = \\frac{F - 30}{2}$.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\n$F$\n\n\nThe input line provides a temperature in Fahrenheit $F$ ($30 \\leq F \\leq 100$), which is an integer divisible by $2$.\n\nOutput\n\nOutput the converted Celsius temperature in a line.\n\nExamples\n\nInput\n\n68\n\n\nOutput\n\n19\n\n\nInput\n\n50\n\n\nOutput\n\n10", "grammar": {"answer": null}}
{"name": "762_A. k-th divisor", "description": "You are given two integers n and k. Find k-th smallest divisor of n, or report that it doesn't exist.\n\nDivisor of n is any such natural number, that n can be divided by it without remainder.\n\nInput\n\nThe first line contains two integers n and k (1 ≤ n ≤ 1015, 1 ≤ k ≤ 109).\n\nOutput\n\nIf n has less than k divisors, output -1.\n\nOtherwise, output the k-th smallest divisor of n.\n\nExamples\n\nInput\n\n4 2\n\n\nOutput\n\n2\n\n\nInput\n\n5 3\n\n\nOutput\n\n-1\n\n\nInput\n\n12 5\n\n\nOutput\n\n6\n\nNote\n\nIn the first example, number 4 has three divisors: 1, 2 and 4. The second one is 2.\n\nIn the second example, number 5 has only two divisors: 1 and 5. The third divisor doesn't exist, so the answer is -1.", "grammar": {"answer": null}}
{"name": "p03162 Educational DP Contest - Vacation", "description": "Taro's summer vacation starts tomorrow, and he has decided to make plans for it now.\n\nThe vacation consists of N days. For each i (1 \\leq i \\leq N), Taro will choose one of the following activities and do it on the i-th day:\n\n* A: Swim in the sea. Gain a_i points of happiness.\n* B: Catch bugs in the mountains. Gain b_i points of happiness.\n* C: Do homework at home. Gain c_i points of happiness.\n\n\n\nAs Taro gets bored easily, he cannot do the same activities for two or more consecutive days.\n\nFind the maximum possible total points of happiness that Taro gains.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq a_i, b_i, c_i \\leq 10^4\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 b_1 c_1\na_2 b_2 c_2\n:\na_N b_N c_N\n\n\nOutput\n\nPrint the maximum possible total points of happiness that Taro gains.\n\nExamples\n\nInput\n\n3\n10 40 70\n20 50 80\n30 60 90\n\n\nOutput\n\n210\n\n\nInput\n\n1\n100 10 1\n\n\nOutput\n\n100\n\n\nInput\n\n7\n6 7 8\n8 8 3\n2 5 2\n7 8 6\n4 6 8\n2 3 4\n7 5 1\n\n\nOutput\n\n46", "grammar": {"answer": null}}
{"name": "301_A. Yaroslav and Sequence", "description": "Yaroslav has an array, consisting of (2·n - 1) integers. In a single operation Yaroslav can change the sign of exactly n elements in the array. In other words, in one operation Yaroslav can select exactly n array elements, and multiply each of them by -1.\n\nYaroslav is now wondering: what maximum sum of array elements can be obtained if it is allowed to perform any number of described operations?\n\nHelp Yaroslav.\n\nInput\n\nThe first line contains an integer n (2 ≤ n ≤ 100). The second line contains (2·n - 1) integers — the array elements. The array elements do not exceed 1000 in their absolute value.\n\nOutput\n\nIn a single line print the answer to the problem — the maximum sum that Yaroslav can get.\n\nExamples\n\nInput\n\n2\n50 50 50\n\n\nOutput\n\n150\n\n\nInput\n\n2\n-1 -100 -1\n\n\nOutput\n\n100\n\nNote\n\nIn the first sample you do not need to change anything. The sum of elements equals 150.\n\nIn the second sample you need to change the sign of the first two elements. Then we get the sum of the elements equal to 100.", "grammar": {"answer": null}}
{"name": "p03244 AtCoder Beginner Contest 111 - /\\/\\/\\/", "description": "A sequence a_1,a_2,... ,a_n is said to be /\\/\\/\\/ when the following conditions are satisfied:\n\n* For each i = 1,2,..., n-2, a_i = a_{i+2}.\n* Exactly two different numbers appear in the sequence.\n\n\n\nYou are given a sequence v_1,v_2,...,v_n whose length is even. We would like to make this sequence /\\/\\/\\/ by replacing some of its elements. Find the minimum number of elements that needs to be replaced.\n\nConstraints\n\n* 2 \\leq n \\leq 10^5\n* n is even.\n* 1 \\leq v_i \\leq 10^5\n* v_i is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nn\nv_1 v_2 ... v_n\n\n\nOutput\n\nPrint the minimum number of elements that needs to be replaced.\n\nExamples\n\nInput\n\n4\n3 1 3 2\n\n\nOutput\n\n1\n\n\nInput\n\n6\n105 119 105 119 105 119\n\n\nOutput\n\n0\n\n\nInput\n\n4\n1 1 1 1\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02634 AtCoder Grand Contest 046 - Extension", "description": "We have a grid with A horizontal rows and B vertical columns, with the squares painted white. On this grid, we will repeatedly apply the following operation:\n\n* Assume that the grid currently has a horizontal rows and b vertical columns. Choose \"vertical\" or \"horizontal\".\n* If we choose \"vertical\", insert one row at the top of the grid, resulting in an (a+1) \\times b grid.\n* If we choose \"horizontal\", insert one column at the right end of the grid, resulting in an a \\times (b+1) grid.\n* Then, paint one of the added squares black, and the other squares white.\n\n\n\nAssume the grid eventually has C horizontal rows and D vertical columns. Find the number of ways in which the squares can be painted in the end, modulo 998244353.\n\nConstraints\n\n* 1 \\leq A \\leq C \\leq 3000\n* 1 \\leq B \\leq D \\leq 3000\n* A, B, C, and D are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C D\n\n\nOutput\n\nPrint the number of ways in which the squares can be painted in the end, modulo 998244353.\n\nExamples\n\nInput\n\n1 1 2 2\n\n\nOutput\n\n3\n\n\nInput\n\n2 1 3 4\n\n\nOutput\n\n65\n\n\nInput\n\n31 41 59 265\n\n\nOutput\n\n387222020", "grammar": {"answer": null}}
{"name": "p02733 AtCoder Beginner Contest 159 - Dividing Chocolate", "description": "We have a chocolate bar partitioned into H horizontal rows and W vertical columns of squares.\n\nThe square (i, j) at the i-th row from the top and the j-th column from the left is dark if S_{i,j} is `0`, and white if S_{i,j} is `1`.\n\nWe will cut the bar some number of times to divide it into some number of blocks. In each cut, we cut the whole bar by a line running along some boundaries of squares from end to end of the bar.\n\nHow many times do we need to cut the bar so that every block after the cuts has K or less white squares?\n\nConstraints\n\n* 1 \\leq H \\leq 10\n* 1 \\leq W \\leq 1000\n* 1 \\leq K \\leq H \\times W\n* S_{i,j} is `0` or `1`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH W K\nS_{1,1}S_{1,2}...S_{1,W}\n:\nS_{H,1}S_{H,2}...S_{H,W}\n\n\nOutput\n\nPrint the number of minimum times the bar needs to be cut so that every block after the cuts has K or less white squares.\n\nExamples\n\nInput\n\n3 5 4\n11100\n10001\n00111\n\n\nOutput\n\n2\n\n\nInput\n\n3 5 8\n11100\n10001\n00111\n\n\nOutput\n\n0\n\n\nInput\n\n4 10 4\n1110010010\n1000101110\n0011101001\n1101000111\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "765_C. Table Tennis Game 2", "description": "Misha and Vanya have played several table tennis sets. Each set consists of several serves, each serve is won by one of the players, he receives one point and the loser receives nothing. Once one of the players scores exactly k points, the score is reset and a new set begins.\n\nAcross all the sets Misha scored a points in total, and Vanya scored b points. Given this information, determine the maximum number of sets they could have played, or that the situation is impossible.\n\nNote that the game consisted of several complete sets.\n\nInput\n\nThe first line contains three space-separated integers k, a and b (1 ≤ k ≤ 109, 0 ≤ a, b ≤ 109, a + b > 0).\n\nOutput\n\nIf the situation is impossible, print a single number -1. Otherwise, print the maximum possible number of sets.\n\nExamples\n\nInput\n\n11 11 5\n\n\nOutput\n\n1\n\n\nInput\n\n11 2 3\n\n\nOutput\n\n-1\n\nNote\n\nNote that the rules of the game in this problem differ from the real table tennis game, for example, the rule of \"balance\" (the winning player has to be at least two points ahead to win a set) has no power within the present problem.", "grammar": {"answer": null}}
{"name": "630_A. Again Twenty Five!", "description": "The HR manager was disappointed again. The last applicant failed the interview the same way as 24 previous ones. \"Do I give such a hard task?\" — the HR manager thought. \"Just raise number 5 to the power of n and get last two digits of the number. Yes, of course, n can be rather big, and one cannot find the power using a calculator, but we need people who are able to think, not just follow the instructions.\"\n\nCould you pass the interview in the machine vision company in IT City?\n\nInput\n\nThe only line of the input contains a single integer n (2 ≤ n ≤ 2·1018) — the power in which you need to raise number 5.\n\nOutput\n\nOutput the last two digits of 5n without spaces between them.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n25", "grammar": {"answer": null}}
{"name": "p03069 Tenka1 Programmer Beginner Contest 2019 - Stones", "description": "There are N stones arranged in a row. Every stone is painted white or black. A string S represents the color of the stones. The i-th stone from the left is white if the i-th character of S is `.`, and the stone is black if the character is `#`.\n\nTakahashi wants to change the colors of some stones to black or white so that there will be no white stone immediately to the right of a black stone. Find the minimum number of stones that needs to be recolored.\n\nConstraints\n\n* 1 \\leq N \\leq 2\\times 10^5\n* S is a string of length N consisting of `.` and `#`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS\n\n\nOutput\n\nPrint the minimum number of stones that needs to be recolored.\n\nExamples\n\nInput\n\n3\n#.#\n\n\nOutput\n\n1\n\n\nInput\n\n3\n.#\n\n\nOutput\n\n1\n\n\nInput\n\n5\n.##.\n\n\nOutput\n\n2\n\n\nInput\n\n9\n.........\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "23_A. You're Given a String...", "description": "You're given a string of lower-case Latin letters. Your task is to find the length of its longest substring that can be met in the string at least twice. These occurrences can overlap (see sample test 2).\n\nInput\n\nThe first input line contains the string. It's guaranteed, that the string is non-empty, consists of lower-case Latin letters, and its length doesn't exceed 100.\n\nOutput\n\nOutput one number — length of the longest substring that can be met in the string at least twice.\n\nExamples\n\nInput\n\nabcd\n\n\nOutput\n\n0\n\nInput\n\nababa\n\n\nOutput\n\n3\n\nInput\n\nzzz\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "841_B. Godsend", "description": "Leha somehow found an array consisting of n integers. Looking at it, he came up with a task. Two players play the game on the array. Players move one by one. The first player can choose for his move a subsegment of non-zero length with an odd sum of numbers and remove it from the array, after that the remaining parts are glued together into one array and the game continues. The second player can choose a subsegment of non-zero length with an even sum and remove it. Loses the one who can not make a move. Who will win if both play optimally?\n\nInput\n\nFirst line of input data contains single integer n (1 ≤ n ≤ 106) — length of the array.\n\nNext line contains n integers a1, a2, ..., an (0 ≤ ai ≤ 109).\n\nOutput\n\nOutput answer in single line. \"First\", if first player wins, and \"Second\" otherwise (without quotes).\n\nExamples\n\nInput\n\n4\n1 3 2 3\n\n\nOutput\n\nFirst\n\n\nInput\n\n2\n2 2\n\n\nOutput\n\nSecond\n\nNote\n\nIn first sample first player remove whole array in one move and win.\n\nIn second sample first player can't make a move and lose.", "grammar": {"answer": null}}
{"name": "577_A. Multiplication Table", "description": "Let's consider a table consisting of n rows and n columns. The cell located at the intersection of i-th row and j-th column contains number i × j. The rows and columns are numbered starting from 1.\n\nYou are given a positive integer x. Your task is to count the number of cells in a table that contain number x.\n\nInput\n\nThe single line contains numbers n and x (1 ≤ n ≤ 105, 1 ≤ x ≤ 109) — the size of the table and the number that we are looking for in the table.\n\nOutput\n\nPrint a single number: the number of times x occurs in the table.\n\nExamples\n\nInput\n\n10 5\n\n\nOutput\n\n2\n\n\nInput\n\n6 12\n\n\nOutput\n\n4\n\n\nInput\n\n5 13\n\n\nOutput\n\n0\n\nNote\n\nA table for the second sample test is given below. The occurrences of number 12 are marked bold. \n\n<image>", "grammar": {"answer": null}}
{"name": "p02679 AtCoder Beginner Contest 168 - ∙ (Bullet)", "description": "We have caught N sardines. The deliciousness and fragrantness of the i-th sardine is A_i and B_i, respectively.\n\nWe will choose one or more of these sardines and put them into a cooler. However, two sardines on bad terms cannot be chosen at the same time.\n\nThe i-th and j-th sardines (i \\neq j) are on bad terms if and only if A_i \\cdot A_j + B_i \\cdot B_j = 0.\n\nIn how many ways can we choose the set of sardines to put into the cooler? Since the count can be enormous, print it modulo 1000000007.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 2 \\times 10^5\n* -10^{18} \\leq A_i, B_i \\leq 10^{18}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 B_1\n:\nA_N B_N\n\n\nOutput\n\nPrint the count modulo 1000000007.\n\nExamples\n\nInput\n\n3\n1 2\n-1 1\n2 -1\n\n\nOutput\n\n5\n\n\nInput\n\n10\n3 2\n3 2\n-1 1\n2 -1\n-3 -9\n-8 12\n7 7\n8 1\n8 2\n8 4\n\n\nOutput\n\n479", "grammar": {"answer": null}}
{"name": "p00059 Intersection of Rectangles", "description": "There are two rectangles whose bases are parallel to the x-axis. Read the lower left coordinates (xa1, ya1) and upper right coordinates (xa2, ya2) of rectangle A, the lower left coordinates (xb1, yb1) and upper right coordinates (xb2, yb2) of rectangle B, and rectangle A and B Create a program that outputs YES if there is any overlap, and NO if there is no overlap at all. However, assume that rectangle A and rectangle B are not the same thing. Also, the things that are in contact are considered to overlap.\n\n<image>\n\n\n\nInput\n\nGiven multiple datasets. The format of each dataset is as follows.\n\n\nxa1 ya1 xa2 ya2 xb1 yb1 xb2 yb2\n\n\nEach value entered is between -2,000 and 2,000, and each value is given as a real number, including up to five digits after the decimal point.\n\nThe number of datasets does not exceed 50.\n\nOutput\n\nPrint YES or NO on one line for each dataset.\n\nExample\n\nInput\n\n0.0 0.0 5.0 5.0 1.0 1.0 4.0 4.0\n0.0 0.0 4.0 5.0 1.0 1.0 5.0 5.0\n0.0 0.0 4.0 4.0 -3.0 -5.0 2.0 -1.0\n\n\nOutput\n\nYES\nYES\nNO", "grammar": {"answer": null}}
{"name": "p02574 AtCoder Beginner Contest 177 - Coprime", "description": "We have N integers. The i-th number is A_i.\n\n\\\\{A_i\\\\} is said to be pairwise coprime when GCD(A_i,A_j)=1 holds for every pair (i, j) such that 1\\leq i < j \\leq N.\n\n\\\\{A_i\\\\} is said to be setwise coprime when \\\\{A_i\\\\} is not pairwise coprime but GCD(A_1,\\ldots,A_N)=1.\n\nDetermine if \\\\{A_i\\\\} is pairwise coprime, setwise coprime, or neither.\n\nHere, GCD(\\ldots) denotes greatest common divisor.\n\nConstraints\n\n* 2 \\leq N \\leq 10^6\n* 1 \\leq A_i\\leq 10^6\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 \\ldots A_N\n\n\nOutput\n\nIf \\\\{A_i\\\\} is pairwise coprime, print `pairwise coprime`; if \\\\{A_i\\\\} is setwise coprime, print `setwise coprime`; if neither, print `not coprime`.\n\nExamples\n\nInput\n\n3\n3 4 5\n\n\nOutput\n\npairwise coprime\n\n\nInput\n\n3\n6 10 15\n\n\nOutput\n\nsetwise coprime\n\n\nInput\n\n3\n6 10 16\n\n\nOutput\n\nnot coprime", "grammar": {"answer": null}}
{"name": "p03145 AtCoder Beginner Contest 116 - Right Triangle", "description": "There is a right triangle ABC with ∠ABC=90°.\n\nGiven the lengths of the three sides, |AB|,|BC| and |CA|, find the area of the right triangle ABC.\n\nIt is guaranteed that the area of the triangle ABC is an integer.\n\nConstraints\n\n* 1 \\leq |AB|,|BC|,|CA| \\leq 100\n* All values in input are integers.\n* The area of the triangle ABC is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\n|AB| |BC| |CA|\n\n\nOutput\n\nPrint the area of the triangle ABC.\n\nExamples\n\nInput\n\n3 4 5\n\n\nOutput\n\n6\n\n\nInput\n\n5 12 13\n\n\nOutput\n\n30\n\n\nInput\n\n45 28 53\n\n\nOutput\n\n630", "grammar": {"answer": null}}
{"name": "426_C. Sereja and Swaps", "description": "As usual, Sereja has array a, its elements are integers: a[1], a[2], ..., a[n]. Let's introduce notation:\n\n<image>\n\nA swap operation is the following sequence of actions:\n\n  * choose two indexes i, j (i ≠ j); \n  * perform assignments tmp = a[i], a[i] = a[j], a[j] = tmp. \n\n\n\nWhat maximum value of function m(a) can Sereja get if he is allowed to perform at most k swap operations?\n\nInput\n\nThe first line contains two integers n and k (1 ≤ n ≤ 200; 1 ≤ k ≤ 10). The next line contains n integers a[1], a[2], ..., a[n] ( - 1000 ≤ a[i] ≤ 1000).\n\nOutput\n\nIn a single line print the maximum value of m(a) that Sereja can get if he is allowed to perform at most k swap operations.\n\nExamples\n\nInput\n\n10 2\n10 -1 2 2 2 2 2 2 -1 10\n\n\nOutput\n\n32\n\n\nInput\n\n5 10\n-1 -1 -1 -1 -1\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p03814 AtCoder Beginner Contest 053 - A to Z String", "description": "Snuke has decided to construct a string that starts with `A` and ends with `Z`, by taking out a substring of a string s (that is, a consecutive part of s).\n\nFind the greatest length of the string Snuke can construct. Here, the test set guarantees that there always exists a substring of s that starts with `A` and ends with `Z`.\n\nConstraints\n\n* 1 ≦ |s| ≦ 200{,}000\n* s consists of uppercase English letters.\n* There exists a substring of s that starts with `A` and ends with `Z`.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\ns\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\nQWERTYASDFZXCV\n\n\nOutput\n\n5\n\n\nInput\n\nZABCZ\n\n\nOutput\n\n4\n\n\nInput\n\nHASFJGHOGAKZZFEGA\n\n\nOutput\n\n12", "grammar": {"answer": null}}
{"name": "1184_A2. Heidi Learns Hashing (Medium)", "description": "After learning about polynomial hashing, Heidi decided to learn about shift-xor hashing. In particular, she came across this interesting problem.\n\nGiven a bitstring y ∈ \\{0,1\\}^n find out the number of different k (0 ≤ k < n) such that there exists x ∈ \\{0,1\\}^n for which y = x ⊕ \\mbox{shift}^k(x).\n\nIn the above, ⊕ is the xor operation and \\mbox{shift}^k is the operation of shifting a bitstring cyclically to the right k times. For example, 001 ⊕ 111 = 110 and \\mbox{shift}^3(00010010111000) = 00000010010111.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 2 ⋅ 10^5), the length of the bitstring y.\n\nThe second line contains the bitstring y.\n\nOutput\n\nOutput a single integer: the number of suitable values of k.\n\nExample\n\nInput\n\n\n4\n1010\n\n\nOutput\n\n\n3\n\nNote\n\nIn the first example:\n\n  * 1100⊕ \\mbox{shift}^1(1100) = 1010 \n  * 1000⊕ \\mbox{shift}^2(1000) = 1010 \n  * 0110⊕ \\mbox{shift}^3(0110) = 1010 \n\n\n\nThere is no x such that x ⊕ x = 1010, hence the answer is 3.", "grammar": {"answer": null}}
{"name": "p03761 AtCoder Beginner Contest 058 - Dubious Document", "description": "Snuke loves \"paper cutting\": he cuts out characters from a newspaper headline and rearranges them to form another string.\n\nHe will receive a headline which contains one of the strings S_1,...,S_n tomorrow. He is excited and already thinking of what string he will create. Since he does not know the string on the headline yet, he is interested in strings that can be created regardless of which string the headline contains.\n\nFind the longest string that can be created regardless of which string among S_1,...,S_n the headline contains. If there are multiple such strings, find the lexicographically smallest one among them.\n\nConstraints\n\n* 1 \\leq n \\leq 50\n* 1 \\leq |S_i| \\leq 50 for every i = 1, ..., n.\n* S_i consists of lowercase English letters (`a` - `z`) for every i = 1, ..., n.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nn\nS_1\n...\nS_n\n\n\nOutput\n\nPrint the lexicographically smallest string among the longest strings that satisfy the condition. If the answer is an empty string, print an empty line.\n\nExamples\n\nInput\n\n3\ncbaa\ndaacc\nacacac\n\n\nOutput\n\naac\n\n\nInput\n\n3\na\naa\nb\n\n\nOutput", "grammar": {"answer": null}}
{"name": "1141_C. Polycarp Restores Permutation", "description": "An array of integers p_1, p_2, ..., p_n is called a permutation if it contains each number from 1 to n exactly once. For example, the following arrays are permutations: [3, 1, 2], [1], [1, 2, 3, 4, 5] and [4, 3, 1, 2]. The following arrays are not permutations: [2], [1, 1], [2, 3, 4].\n\nPolycarp invented a really cool permutation p_1, p_2, ..., p_n of length n. It is very disappointing, but he forgot this permutation. He only remembers the array q_1, q_2, ..., q_{n-1} of length n-1, where q_i=p_{i+1}-p_i.\n\nGiven n and q=q_1, q_2, ..., q_{n-1}, help Polycarp restore the invented permutation.\n\nInput\n\nThe first line contains the integer n (2 ≤ n ≤ 2⋅10^5) — the length of the permutation to restore. The second line contains n-1 integers q_1, q_2, ..., q_{n-1} (-n < q_i < n).\n\nOutput\n\nPrint the integer -1 if there is no such permutation of length n which corresponds to the given array q. Otherwise, if it exists, print p_1, p_2, ..., p_n. Print any such permutation if there are many of them.\n\nExamples\n\nInput\n\n\n3\n-2 1\n\n\nOutput\n\n\n3 1 2 \n\nInput\n\n\n5\n1 1 1 1\n\n\nOutput\n\n\n1 2 3 4 5 \n\nInput\n\n\n4\n-1 2 2\n\n\nOutput\n\n\n-1", "grammar": {"answer": null}}
{"name": "p03543 AtCoder Beginner Contest 079 - Good Integer", "description": "We call a 4-digit integer with three or more consecutive same digits, such as 1118, good.\n\nYou are given a 4-digit integer N. Answer the question: Is N good?\n\nConstraints\n\n* 1000 ≤ N ≤ 9999\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nIf N is good, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n1118\n\n\nOutput\n\nYes\n\n\nInput\n\n7777\n\n\nOutput\n\nYes\n\n\nInput\n\n1234\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "615_E. Hexagons", "description": "Ayrat is looking for the perfect code. He decided to start his search from an infinite field tiled by hexagons. For convenience the coordinate system is introduced, take a look at the picture to see how the coordinates of hexagon are defined: \n\n<image> <image> Ayrat is searching through the field. He started at point (0, 0) and is moving along the spiral (see second picture). Sometimes he forgets where he is now. Help Ayrat determine his location after n moves.\n\nInput\n\nThe only line of the input contains integer n (0 ≤ n ≤ 1018) — the number of Ayrat's moves.\n\nOutput\n\nPrint two integers x and y — current coordinates of Ayrat coordinates.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n-2 0\n\n\nInput\n\n7\n\n\nOutput\n\n3 2", "grammar": {"answer": null}}
{"name": "1183_A. Nearest Interesting Number", "description": "Polycarp knows that if the sum of the digits of a number is divisible by 3, then the number itself is divisible by 3. He assumes that the numbers, the sum of the digits of which is divisible by 4, are also somewhat interesting. Thus, he considers a positive integer n interesting if its sum of digits is divisible by 4.\n\nHelp Polycarp find the nearest larger or equal interesting number for the given number a. That is, find the interesting number n such that n ≥ a and n is minimal.\n\nInput\n\nThe only line in the input contains an integer a (1 ≤ a ≤ 1000).\n\nOutput\n\nPrint the nearest greater or equal interesting number for the given number a. In other words, print the interesting number n such that n ≥ a and n is minimal.\n\nExamples\n\nInput\n\n\n432\n\n\nOutput\n\n\n435\n\n\nInput\n\n\n99\n\n\nOutput\n\n\n103\n\n\nInput\n\n\n237\n\n\nOutput\n\n\n237\n\n\nInput\n\n\n42\n\n\nOutput\n\n\n44", "grammar": {"answer": null}}
{"name": "352_A. Jeff and Digits", "description": "Jeff's got n cards, each card contains either digit 0, or digit 5. Jeff can choose several cards and put them in a line so that he gets some number. What is the largest possible number divisible by 90 Jeff can make from the cards he's got?\n\nJeff must make the number without leading zero. At that, we assume that number 0 doesn't contain any leading zeroes. Jeff doesn't have to use all the cards.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 103). The next line contains n integers a1, a2, ..., an (ai = 0 or ai = 5). Number ai represents the digit that is written on the i-th card.\n\nOutput\n\nIn a single line print the answer to the problem — the maximum number, divisible by 90. If you can't make any divisible by 90 number from the cards, print -1.\n\nExamples\n\nInput\n\n4\n5 0 5 0\n\n\nOutput\n\n0\n\n\nInput\n\n11\n5 5 5 5 5 5 5 5 0 5 5\n\n\nOutput\n\n5555555550\n\nNote\n\nIn the first test you can make only one number that is a multiple of 90 — 0.\n\nIn the second test you can make number 5555555550, it is a multiple of 90.", "grammar": {"answer": null}}
{"name": "1478_B. Nezzar and Lucky Number", "description": "Nezzar's favorite digit among 1,…,9 is d. He calls a positive integer lucky if d occurs at least once in its decimal representation. \n\nGiven q integers a_1,a_2,…,a_q, for each 1 ≤ i ≤ q Nezzar would like to know if a_i can be equal to a sum of several (one or more) lucky numbers.\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 9) — the number of test cases.\n\nThe first line of each test case contains two integers q and d (1 ≤ q ≤ 10^4, 1 ≤ d ≤ 9).\n\nThe second line of each test case contains q integers a_1,a_2,…,a_q (1 ≤ a_i ≤ 10^9).\n\nOutput\n\nFor each integer in each test case, print \"YES\" in a single line if a_i can be equal to a sum of lucky numbers. Otherwise, print \"NO\".\n\nYou can print letters in any case (upper or lower).\n\nExample\n\nInput\n\n\n2\n3 7\n24 25 27\n10 7\n51 52 53 54 55 56 57 58 59 60\n\n\nOutput\n\n\nYES\nNO\nYES\nYES\nYES\nNO\nYES\nYES\nYES\nYES\nYES\nYES\nNO\n\nNote\n\nIn the first test case, 24 = 17 + 7, 27 itself is a lucky number, 25 cannot be equal to a sum of lucky numbers.", "grammar": {"answer": null}}
{"name": "955_C. Sad powers", "description": "You're given Q queries of the form (L, R). \n\nFor each query you have to find the number of such x that L ≤ x ≤ R and there exist integer numbers a > 0, p > 1 such that x = ap.\n\nInput\n\nThe first line contains the number of queries Q (1 ≤ Q ≤ 105).\n\nThe next Q lines contains two integers L, R each (1 ≤ L ≤ R ≤ 1018).\n\nOutput\n\nOutput Q lines — the answers to the queries.\n\nExample\n\nInput\n\n6\n1 4\n9 9\n5 7\n12 29\n137 591\n1 1000000\n\n\nOutput\n\n2\n1\n0\n3\n17\n1111\n\nNote\n\nIn query one the suitable numbers are 1 and 4. ", "grammar": {"answer": null}}
{"name": "p03207 AtCoder Beginner Contest 115 - Christmas Eve Eve", "description": "In some other world, today is the day before Christmas Eve.\n\nMr. Takaha is buying N items at a department store. The regular price of the i-th item (1 \\leq i \\leq N) is p_i yen (the currency of Japan).\n\nHe has a discount coupon, and can buy one item with the highest price for half the regular price. The remaining N-1 items cost their regular prices. What is the total amount he will pay?\n\nConstraints\n\n* 2 \\leq N \\leq 10\n* 100 \\leq p_i \\leq 10000\n* p_i is an even number.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\np_1\np_2\n:\np_N\n\n\nOutput\n\nPrint the total amount Mr. Takaha will pay.\n\nExamples\n\nInput\n\n3\n4980\n7980\n6980\n\n\nOutput\n\n15950\n\n\nInput\n\n4\n4320\n4320\n4320\n4320\n\n\nOutput\n\n15120", "grammar": {"answer": null}}
{"name": "50_B. Choosing Symbol Pairs", "description": "There is a given string S consisting of N symbols. Your task is to find the number of ordered pairs of integers i and j such that\n\n1. 1 ≤ i, j ≤ N\n\n2. S[i] = S[j], that is the i-th symbol of string S is equal to the j-th.\n\nInput\n\nThe single input line contains S, consisting of lowercase Latin letters and digits. It is guaranteed that string S in not empty and its length does not exceed 105.\n\nOutput\n\nPrint a single number which represents the number of pairs i and j with the needed property. Pairs (x, y) and (y, x) should be considered different, i.e. the ordered pairs count.\n\nExamples\n\nInput\n\ngreat10\n\n\nOutput\n\n7\n\n\nInput\n\naaaaaaaaaa\n\n\nOutput\n\n100", "grammar": {"answer": null}}
{"name": "p03018 AtCoder Grand Contest 034 - ABC", "description": "You are given a string s consisting of `A`, `B` and `C`.\n\nSnuke wants to perform the following operation on s as many times as possible:\n\n* Choose a contiguous substring of s that reads `ABC` and replace it with `BCA`.\n\n\n\nFind the maximum possible number of operations.\n\nConstraints\n\n* 1 \\leq |s| \\leq 200000\n* Each character of s is `A`, `B` and `C`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\ns\n\n\nOutput\n\nFind the maximum possible number of operations.\n\nExamples\n\nInput\n\nABCABC\n\n\nOutput\n\n3\n\n\nInput\n\nC\n\n\nOutput\n\n0\n\n\nInput\n\nABCACCBABCBCAABCB\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p02383 Dice I", "description": "Write a program to simulate rolling a dice, which can be constructed by the following net.\n\n\n<image>\n<image>\n\n\n\n\nAs shown in the figures, each face is identified by a different label from 1 to 6.\n\nWrite a program which reads integers assigned to each face identified by the label and a sequence of commands to roll the dice, and prints the integer on the top face. At the initial state, the dice is located as shown in the above figures.\n\nConstraints\n\n* $0 \\leq $ the integer assigned to a face $ \\leq 100$\n* $0 \\leq $ the length of the command $\\leq 100$\n\nInput\n\nIn the first line, six integers assigned to faces are given in ascending order of their corresponding labels.\n\nIn the second line, a string which represents a sequence of commands, is given. The command is one of 'E', 'N', 'S' and 'W' representing four directions shown in the above figures.\n\nOutput\n\nPrint the integer which appears on the top face after the simulation.\n\nExamples\n\nInput\n\n1 2 4 8 16 32\nSE\n\n\nOutput\n\n8\n\n\nInput\n\n1 2 4 8 16 32\nEESWN\n\n\nOutput\n\n32", "grammar": {"answer": null}}
{"name": "p02113 Palindrome", "description": "Problem\n\nTaro has N character strings, each of which is L in length. Taro loves palindromes, so I want to make palindromes as long as possible by selecting some of the N character strings and arranging them in any order.\n\nFind the longest palindrome that Taro can make. If there are more than one, output the smallest one in lexicographical order. If you can't make a palindrome no matter how you choose and arrange them, output a blank line.\n\nConstraints\n\nThe input satisfies the following conditions.\n\n* 1 ≤ N ≤ 1000\n* 1 ≤ L ≤ 30\n* s_i is a character string consisting of lowercase letters.\n\nInput\n\nThe input is given in the following format.\n\n\nN L\ns1\ns2\n..\n..\n..\nsN\n\n\nThe number N of strings and the length L of strings are given on the first line. From the second line that follows, N & plus; The character string s_i that Taro has is given to the first line.\n\nOutput\n\nOutput the longest palindrome with the smallest dictionary order. If you cannot make a palindrome, output a blank line.\n\nExamples\n\nInput\n\n4 2\noi\nio\nrr\nrr\n\n\nOutput\n\niorrrroi\n\n\nInput\n\n5 1\na\nb\nc\na\nc\n\n\nOutput\n\nacbca\n\n\nInput\n\n3 3\nuki\nuku\nuke\n\n\nOutput\n\nuku", "grammar": {"answer": null}}
{"name": "554_A. Kyoya and Photobooks", "description": "Kyoya Ootori is selling photobooks of the Ouran High School Host Club. He has 26 photos, labeled \"a\" to \"z\", and he has compiled them into a photo booklet with some photos in some order (possibly with some photos being duplicated). A photo booklet can be described as a string of lowercase letters, consisting of the photos in the booklet in order. He now wants to sell some \"special edition\" photobooks, each with one extra photo inserted anywhere in the book. He wants to make as many distinct photobooks as possible, so he can make more money. He asks Haruhi, how many distinct photobooks can he make by inserting one extra photo into the photobook he already has?\n\nPlease help Haruhi solve this problem.\n\nInput\n\nThe first line of input will be a single string s (1 ≤ |s| ≤ 20). String s consists only of lowercase English letters. \n\nOutput\n\nOutput a single integer equal to the number of distinct photobooks Kyoya Ootori can make.\n\nExamples\n\nInput\n\na\n\n\nOutput\n\n51\n\n\nInput\n\nhi\n\n\nOutput\n\n76\n\nNote\n\nIn the first case, we can make 'ab','ac',...,'az','ba','ca',...,'za', and 'aa', producing a total of 51 distinct photo booklets. ", "grammar": {"answer": null}}
{"name": "p03061 AtCoder Beginner Contest 125 - GCD on Blackboard", "description": "There are N integers, A_1, A_2, ..., A_N, written on the blackboard.\n\nYou will choose one of them and replace it with an integer of your choice between 1 and 10^9 (inclusive), possibly the same as the integer originally written.\n\nFind the maximum possible greatest common divisor of the N integers on the blackboard after your move.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 10^5\n* 1 \\leq A_i \\leq 10^9\n\nOutput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\nOutput\n\nPrint the maximum possible greatest common divisor of the N integers on the blackboard after your move.\n\nExamples\n\nInput\n\n3\n7 6 8\n\n\nOutput\n\n2\n\n\nInput\n\n3\n12 15 18\n\n\nOutput\n\n6\n\n\nInput\n\n2\n1000000000 1000000000\n\n\nOutput\n\n1000000000", "grammar": {"answer": null}}
{"name": "p02970 AtCoder Beginner Contest 134 - Golden Apple", "description": "There are N apple trees in a row. People say that one of them will bear golden apples.\n\nWe want to deploy some number of inspectors so that each of these trees will be inspected.\n\nEach inspector will be deployed under one of the trees. For convenience, we will assign numbers from 1 through N to the trees. An inspector deployed under the i-th tree (1 \\leq i \\leq N) will inspect the trees with numbers between i-D and i+D (inclusive).\n\nFind the minimum number of inspectors that we need to deploy to achieve the objective.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 20\n* 1 \\leq D \\leq 20\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN D\n\n\nOutput\n\nPrint the minimum number of inspectors that we need to deploy to achieve the objective.\n\nExamples\n\nInput\n\n6 2\n\n\nOutput\n\n2\n\n\nInput\n\n14 3\n\n\nOutput\n\n2\n\n\nInput\n\n20 4\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p03720 AtCoder Beginner Contest 061 - Counting Roads", "description": "There are N cities and M roads. The i-th road (1≤i≤M) connects two cities a_i and b_i (1≤a_i,b_i≤N) bidirectionally. There may be more than one road that connects the same pair of two cities. For each city, how many roads are connected to the city?\n\nConstraints\n\n* 2≤N,M≤50\n* 1≤a_i,b_i≤N\n* a_i ≠ b_i\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\na_1 b_1\n:\na_M b_M\n\n\nOutput\n\nPrint the answer in N lines. In the i-th line (1≤i≤N), print the number of roads connected to city i.\n\nExamples\n\nInput\n\n4 3\n1 2\n2 3\n1 4\n\n\nOutput\n\n2\n2\n1\n1\n\n\nInput\n\n2 5\n1 2\n2 1\n1 2\n2 1\n1 2\n\n\nOutput\n\n5\n5\n\n\nInput\n\n8 8\n1 2\n3 4\n1 5\n2 8\n3 7\n5 2\n4 1\n6 8\n\n\nOutput\n\n3\n3\n2\n2\n2\n1\n1\n2", "grammar": {"answer": null}}
{"name": "p02317 Longest Increasing Subsequence", "description": "For a given sequence A = {a0, a1, ... , an-1}, find the length of the longest increasing subsequnece (LIS) in A.\n\nAn increasing subsequence of A is defined by a subsequence {ai0, ai1, ... , aik} where 0 ≤ i0 < i1 < ... < ik < n and ai0 < ai1 < ... < aik.\n\nConstraints\n\n* 1 ≤ n ≤ 100000\n* 0 ≤ ai ≤ 109\n\nInput\n\n\nn\na0\na1\n:\nan-1\n\n\n\nIn the first line, an integer n is given. In the next n lines, elements of A are given.\n\nOutput\n\nThe length of the longest increasing subsequence of A.\n\nExamples\n\nInput\n\n5\n5\n1\n3\n2\n4\n\n\nOutput\n\n3\n\n\nInput\n\n3\n1\n1\n1\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "1076_C. Meme Problem", "description": "Try guessing the statement from this picture: \n\n<image>\n\nYou are given a non-negative integer d. You have to find two non-negative real numbers a and b such that a + b = d and a ⋅ b = d.\n\nInput\n\nThe first line contains t (1 ≤ t ≤ 10^3) — the number of test cases.\n\nEach test case contains one integer d (0 ≤ d ≤ 10^3).\n\nOutput\n\nFor each test print one line.\n\nIf there is an answer for the i-th test, print \"Y\", and then the numbers a and b.\n\nIf there is no answer for the i-th test, print \"N\".\n\nYour answer will be considered correct if |(a + b) - a ⋅ b| ≤ 10^{-6} and |(a + b) - d| ≤ 10^{-6}.\n\nExample\n\nInput\n\n\n7\n69\n0\n1\n4\n5\n999\n1000\n\n\nOutput\n\n\nY 67.985071301 1.014928699\nY 0.000000000 0.000000000\nN\nY 2.000000000 2.000000000\nY 3.618033989 1.381966011\nY 997.998996990 1.001003010\nY 998.998997995 1.001002005", "grammar": {"answer": null}}
{"name": "275_B. Convex Shape", "description": "Consider an n × m grid. Initially all the cells of the grid are colored white. Lenny has painted some of the cells (at least one) black. We call a painted grid convex if one can walk from any black cell to any another black cell using a path of side-adjacent black cells changing his direction at most once during the path. In the figure below, the left grid is convex while the right one is not convex, because there exist two cells which need more than one time to change direction in their path.\n\n<image>\n\nYou're given a painted grid in the input. Tell Lenny if the grid is convex or not.\n\nInput\n\nThe first line of the input contains two integers n and m (1 ≤ n, m ≤ 50) — the size of the grid. Each of the next n lines contains m characters \"B\" or \"W\". Character \"B\" denotes a black cell of the grid and \"W\" denotes a white cell of the grid.\n\nIt's guaranteed that the grid has at least one black cell.\n\nOutput\n\nOn the only line of the output print \"YES\" if the grid is convex, otherwise print \"NO\". Do not print quotes.\n\nExamples\n\nInput\n\n3 4\nWWBW\nBWWW\nWWWB\n\n\nOutput\n\nNO\n\n\nInput\n\n3 1\nB\nB\nW\n\n\nOutput\n\nYES", "grammar": {"answer": null}}
{"name": "p02607 AIsing Programming Contest 2020 - An Odd Problem", "description": "We have N squares assigned the numbers 1,2,3,\\ldots,N. Each square has an integer written on it, and the integer written on Square i is a_i.\n\nHow many squares i satisfy both of the following conditions?\n\n* The assigned number, i, is odd.\n* The written integer is odd.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N, a_i \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 \\cdots a_N\n\n\nOutput\n\nPrint the number of squares that satisfy both of the conditions.\n\nExamples\n\nInput\n\n5\n1 3 4 5 7\n\n\nOutput\n\n2\n\n\nInput\n\n15\n13 76 46 15 50 98 93 77 31 43 84 90 6 24 14\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "1083_E. The Fair Nut and Rectangles", "description": "The Fair Nut got stacked in planar world. He should solve this task to get out.\n\nYou are given n rectangles with vertexes in (0, 0), (x_i, 0), (x_i, y_i), (0, y_i). For each rectangle, you are also given a number a_i. Choose some of them that the area of union minus sum of a_i of the chosen ones is maximum.\n\nIt is guaranteed that there are no nested rectangles.\n\nNut has no idea how to find the answer, so he asked for your help.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 10^6) — the number of rectangles.\n\nEach of the next n lines contains three integers x_i, y_i and a_i (1 ≤ x_i, y_i ≤ 10^9, 0 ≤ a_i ≤ x_i ⋅ y_i).\n\nIt is guaranteed that there are no nested rectangles.\n\nOutput\n\nIn a single line print the answer to the problem — the maximum value which you can achieve.\n\nExamples\n\nInput\n\n\n3\n4 4 8\n1 5 0\n5 2 10\n\n\nOutput\n\n\n9\n\nInput\n\n\n4\n6 2 4\n1 6 2\n2 4 3\n5 3 8\n\n\nOutput\n\n\n10\n\nNote\n\nIn the first example, the right answer can be achieved by choosing the first and the second rectangles.\n\nIn the second example, the right answer can also be achieved by choosing the first and the second rectangles.", "grammar": {"answer": null}}
{"name": "p02557 AtCoder Beginner Contest 178 - Contrast", "description": "Given are two sequences A and B, both of length N. A and B are each sorted in the ascending order. Check if it is possible to reorder the terms of B so that for each i (1 \\leq i \\leq N) A_i \\neq B_i holds, and if it is possible, output any of the reorderings that achieve it.\n\nConstraints\n\n* 1\\leq N \\leq 2 \\times 10^5\n* 1\\leq A_i,B_i \\leq N\n* A and B are each sorted in the ascending order.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 \\cdots A_N\nB_1 B_2 \\cdots B_N\n\n\nOutput\n\nIf there exist no reorderings that satisfy the condition, print `No`.\n\nIf there exists a reordering that satisfies the condition, print `Yes` on the first line. After that, print a reordering of B on the second line, separating terms with a whitespace.\n\nIf there are multiple reorderings that satisfy the condition, you can print any of them.\n\nExamples\n\nInput\n\n6\n1 1 1 2 2 3\n1 1 1 2 2 3\n\n\nOutput\n\nYes\n2 2 3 1 1 1\n\n\nInput\n\n3\n1 1 2\n1 1 3\n\n\nOutput\n\nNo\n\n\nInput\n\n4\n1 1 2 3\n1 2 3 3\n\n\nOutput\n\nYes\n3 3 1 2", "grammar": {"answer": null}}
{"name": "146_D. Lucky Number 2", "description": "Petya loves lucky numbers very much. Everybody knows that lucky numbers are positive integers whose decimal record contains only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.\n\nPetya loves long lucky numbers very much. He is interested in the minimum lucky number d that meets some condition. Let cnt(x) be the number of occurrences of number x in number d as a substring. For example, if d = 747747, then cnt(4) = 2, cnt(7) = 4, cnt(47) = 2, cnt(74) = 2. Petya wants the following condition to fulfil simultaneously: cnt(4) = a1, cnt(7) = a2, cnt(47) = a3, cnt(74) = a4. Petya is not interested in the occurrences of other numbers. Help him cope with this task.\n\nInput\n\nThe single line contains four integers a1, a2, a3 and a4 (1 ≤ a1, a2, a3, a4 ≤ 106).\n\nOutput\n\nOn the single line print without leading zeroes the answer to the problem — the minimum lucky number d such, that cnt(4) = a1, cnt(7) = a2, cnt(47) = a3, cnt(74) = a4. If such number does not exist, print the single number \"-1\" (without the quotes).\n\nExamples\n\nInput\n\n2 2 1 1\n\n\nOutput\n\n4774\n\n\nInput\n\n4 7 3 1\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p03739 AtCoder Beginner Contest 059 - Sequence", "description": "You are given an integer sequence of length N. The i-th term in the sequence is a_i. In one operation, you can select a term and either increment or decrement it by one.\n\nAt least how many operations are necessary to satisfy the following conditions?\n\n* For every i (1≤i≤n), the sum of the terms from the 1-st through i-th term is not zero.\n* For every i (1≤i≤n-1), the sign of the sum of the terms from the 1-st through i-th term, is different from the sign of the sum of the terms from the 1-st through (i+1)-th term.\n\nConstraints\n\n* 2 ≤ n ≤ 10^5\n* |a_i| ≤ 10^9\n* Each a_i is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nn\na_1 a_2 ... a_n\n\n\nOutput\n\nPrint the minimum necessary count of operations.\n\nExamples\n\nInput\n\n4\n1 -3 1 0\n\n\nOutput\n\n4\n\n\nInput\n\n5\n3 -6 4 -5 7\n\n\nOutput\n\n0\n\n\nInput\n\n6\n-1 4 3 2 -5 4\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "p03880 CODE FESTIVAL 2016 Grand Final(Parallel) - Cheating Nim", "description": "A cheetah and a cheater are going to play the game of Nim. In this game they use N piles of stones. Initially the i-th pile contains a_i stones. The players take turns alternately, and the cheetah plays first. In each turn, the player chooses one of the piles, and takes one or more stones from the pile. The player who can't make a move loses.\n\nHowever, before the game starts, the cheater wants to cheat a bit to make sure that he can win regardless of the moves by the cheetah. From each pile, the cheater takes zero or one stone and eats it before the game. In case there are multiple ways to guarantee his winning, he wants to minimize the number of stones he eats.\n\nCompute the number of stones the cheater will eat. In case there is no way for the cheater to win the game even with the cheating, print `-1` instead.\n\nConstraints\n\n* 1 ≤ N ≤ 10^5\n* 2 ≤ a_i ≤ 10^9\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\na_1\n:\na_N\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3\n2\n3\n4\n\n\nOutput\n\n3\n\n\nInput\n\n3\n100\n100\n100\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "1380_C. Create The Teams", "description": "There are n programmers that you want to split into several non-empty teams. The skill of the i-th programmer is a_i. You want to assemble the maximum number of teams from them. There is a restriction for each team: the number of programmers in the team multiplied by the minimum skill among all programmers in the team must be at least x.\n\nEach programmer should belong to at most one team. Some programmers may be left without a team.\n\nCalculate the maximum number of teams that you can assemble.\n\nInput\n\nThe first line contains the integer t (1 ≤ t ≤ 1000) — the number of test cases.\n\nThe first line of each test case contains two integers n and x (1 ≤ n ≤ 10^5; 1 ≤ x ≤ 10^9) — the number of programmers and the restriction of team skill respectively.\n\nThe second line of each test case contains n integers a_1, a_2, ... , a_n (1 ≤ a_i ≤ 10^9), where a_i is the skill of the i-th programmer.\n\nThe sum of n over all inputs does not exceed 10^5.\n\nOutput\n\nFor each test case print one integer — the maximum number of teams that you can assemble. \n\nExample\n\nInput\n\n\n3\n5 10\n7 11 2 9 5\n4 8\n2 4 2 3\n4 11\n1 3 3 7\n\n\nOutput\n\n\n2\n1\n0", "grammar": {"answer": null}}
{"name": "p03577 CODE FESTIVAL 2017 qual B - XXFESTIVAL", "description": "Rng is going to a festival.\n\nThe name of the festival is given to you as a string S, which ends with `FESTIVAL`, from input. Answer the question: \"Rng is going to a festival of what?\" Output the answer.\n\nHere, assume that the name of \"a festival of s\" is a string obtained by appending `FESTIVAL` to the end of s. For example, `CODEFESTIVAL` is a festival of `CODE`.\n\nConstraints\n\n* 9 \\leq |S| \\leq 50\n* S consists of uppercase English letters.\n* S ends with `FESTIVAL`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the answer to the question: \"Rng is going to a festival of what?\"\n\nExamples\n\nInput\n\nCODEFESTIVAL\n\n\nOutput\n\nCODE\n\n\nInput\n\nCODEFESTIVALFESTIVAL\n\n\nOutput\n\nCODEFESTIVAL\n\n\nInput\n\nYAKINIKUFESTIVAL\n\n\nOutput\n\nYAKINIKU", "grammar": {"answer": null}}
{"name": "1034_B. Little C Loves 3 II", "description": "Little C loves number «3» very much. He loves all things about it.\n\nNow he is playing a game on a chessboard of size n × m. The cell in the x-th row and in the y-th column is called (x,y). Initially, The chessboard is empty. Each time, he places two chessmen on two different empty cells, the Manhattan distance between which is exactly 3. The Manhattan distance between two cells (x_i,y_i) and (x_j,y_j) is defined as |x_i-x_j|+|y_i-y_j|.\n\nHe want to place as many chessmen as possible on the chessboard. Please help him find the maximum number of chessmen he can place.\n\nInput\n\nA single line contains two integers n and m (1 ≤ n,m ≤ 10^9) — the number of rows and the number of columns of the chessboard.\n\nOutput\n\nPrint one integer — the maximum number of chessmen Little C can place.\n\nExamples\n\nInput\n\n2 2\n\n\nOutput\n\n0\n\nInput\n\n3 3\n\n\nOutput\n\n8\n\nNote\n\nIn the first example, the Manhattan distance between any two cells is smaller than 3, so the answer is 0.\n\nIn the second example, a possible solution is (1,1)(3,2), (1,2)(3,3), (2,1)(1,3), (3,1)(2,3).", "grammar": {"answer": null}}
{"name": "p02394 Circle in a Rectangle", "description": "Write a program which reads a rectangle and a circle, and determines whether the circle is arranged inside the rectangle. As shown in the following figures, the upper right coordinate $(W, H)$ of the rectangle and the central coordinate $(x, y)$ and radius $r$ of the circle are given.\n\n\nCircle inside a rectangle\n\n\nConstraints\n\n* $ -100 \\leq x, y \\leq 100$\n* $ 0 < W, H, r \\leq 100$\n\nInput\n\nFive integers $W$, $H$, $x$, $y$ and $r$ separated by a single space are given in a line.\n\nOutput\n\nPrint \"Yes\" if the circle is placed inside the rectangle, otherwise \"No\" in a line.\n\nExamples\n\nInput\n\n5 4 2 2 1\n\n\nOutput\n\nYes\n\n\nInput\n\n5 4 2 4 1\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "1217_C. The Number Of Good Substrings", "description": "You are given a binary string s (recall that a string is binary if each character is either 0 or 1).\n\nLet f(t) be the decimal representation of integer t written in binary form (possibly with leading zeroes). For example f(011) = 3, f(00101) = 5, f(00001) = 1, f(10) = 2, f(000) = 0 and f(000100) = 4.\n\nThe substring s_{l}, s_{l+1}, ... , s_{r} is good if r - l + 1 = f(s_l ... s_r).\n\nFor example string s = 1011 has 5 good substrings: s_1 ... s_1 = 1, s_3 ... s_3 = 1, s_4 ... s_4 = 1, s_1 ... s_2 = 10 and s_2 ... s_4 = 011. \n\nYour task is to calculate the number of good substrings of string s.\n\nYou have to answer t independent queries.\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 1000) — the number of queries.\n\nThe only line of each query contains string s (1 ≤ |s| ≤ 2 ⋅ 10^5), consisting of only digits 0 and 1.\n\nIt is guaranteed that ∑_{i=1}^{t} |s_i| ≤ 2 ⋅ 10^5.\n\nOutput\n\nFor each query print one integer — the number of good substrings of string s.\n\nExample\n\nInput\n\n\n4\n0110\n0101\n00001000\n0001000\n\n\nOutput\n\n\n4\n3\n4\n3", "grammar": {"answer": null}}
{"name": "p02935 AtCoder Beginner Contest 138 - Alchemist", "description": "You have a pot and N ingredients. Each ingredient has a real number parameter called value, and the value of the i-th ingredient (1 \\leq i \\leq N) is v_i.\n\nWhen you put two ingredients in the pot, they will vanish and result in the formation of a new ingredient. The value of the new ingredient will be (x + y) / 2 where x and y are the values of the ingredients consumed, and you can put this ingredient again in the pot.\n\nAfter you compose ingredients in this way N-1 times, you will end up with one ingredient. Find the maximum possible value of this ingredient.\n\nConstraints\n\n* 2 \\leq N \\leq 50\n* 1 \\leq v_i \\leq 1000\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nv_1 v_2 \\ldots v_N\n\n\nOutput\n\nPrint a decimal number (or an integer) representing the maximum possible value of the last ingredient remaining.\n\nYour output will be judged correct when its absolute or relative error from the judge's output is at most 10^{-5}.\n\nExamples\n\nInput\n\n2\n3 4\n\n\nOutput\n\n3.5\n\n\nInput\n\n3\n500 300 200\n\n\nOutput\n\n375\n\n\nInput\n\n5\n138 138 138 138 138\n\n\nOutput\n\n138", "grammar": {"answer": null}}
{"name": "456_B. Fedya and Maths", "description": "Fedya studies in a gymnasium. Fedya's maths hometask is to calculate the following expression:\n\n(1n + 2n + 3n + 4n) mod 5\n\nfor given value of n. Fedya managed to complete the task. Can you? Note that given number n can be extremely large (e.g. it can exceed any integer type of your programming language).\n\nInput\n\nThe single line contains a single integer n (0 ≤ n ≤ 10105). The number doesn't contain any leading zeroes.\n\nOutput\n\nPrint the value of the expression without leading zeros.\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n4\n\n\nInput\n\n124356983594583453458888889\n\n\nOutput\n\n0\n\nNote\n\nOperation x mod y means taking remainder after division x by y.\n\nNote to the first sample:\n\n<image>", "grammar": {"answer": null}}
{"name": "952_E. Cheese Board", "description": "Not to be confused with [chessboard](https://en.wikipedia.org/wiki/Chessboard).\n\n<image>\n\nInput\n\nThe first line of input contains a single integer N (1 ≤ N ≤ 100) — the number of cheeses you have.\n\nThe next N lines describe the cheeses you have. Each line contains two space-separated strings: the name of the cheese and its type. The name is a string of lowercase English letters between 1 and 10 characters long. The type is either \"soft\" or \"hard. All cheese names are distinct.\n\nOutput\n\nOutput a single number.\n\nExamples\n\nInput\n\n9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n\n\nOutput\n\n3\n\n\nInput\n\n6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "110_C. Lucky Sum of Digits", "description": "Petya loves lucky numbers. We all know that lucky numbers are the positive integers whose decimal representations contain only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.\n\nPetya wonders eagerly what minimum lucky number has the sum of digits equal to n. Help him cope with the task.\n\nInput\n\nThe single line contains an integer n (1 ≤ n ≤ 106) — the sum of digits of the required lucky number.\n\nOutput\n\nPrint on the single line the result — the minimum lucky number, whose sum of digits equals n. If such number does not exist, print -1.\n\nExamples\n\nInput\n\n11\n\n\nOutput\n\n47\n\n\nInput\n\n10\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "766_B. Mahmoud and a Triangle", "description": "Mahmoud has n line segments, the i-th of them has length ai. Ehab challenged him to use exactly 3 line segments to form a non-degenerate triangle. Mahmoud doesn't accept challenges unless he is sure he can win, so he asked you to tell him if he should accept the challenge. Given the lengths of the line segments, check if he can choose exactly 3 of them to form a non-degenerate triangle.\n\nMahmoud should use exactly 3 line segments, he can't concatenate two line segments or change any length. A non-degenerate triangle is a triangle with positive area.\n\nInput\n\nThe first line contains single integer n (3 ≤ n ≤ 105) — the number of line segments Mahmoud has.\n\nThe second line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 109) — the lengths of line segments Mahmoud has.\n\nOutput\n\nIn the only line print \"YES\" if he can choose exactly three line segments and form a non-degenerate triangle with them, and \"NO\" otherwise.\n\nExamples\n\nInput\n\n5\n1 5 3 2 4\n\n\nOutput\n\nYES\n\n\nInput\n\n3\n4 1 2\n\n\nOutput\n\nNO\n\nNote\n\nFor the first example, he can use line segments with lengths 2, 4 and 5 to form a non-degenerate triangle.", "grammar": {"answer": null}}
{"name": "392_C. Yet Another Number Sequence", "description": "Everyone knows what the Fibonacci sequence is. This sequence can be defined by the recurrence relation: \n\nF1 = 1, F2 = 2, Fi = Fi - 1 + Fi - 2 (i > 2).\n\nWe'll define a new number sequence Ai(k) by the formula: \n\nAi(k) = Fi × ik (i ≥ 1).\n\nIn this problem, your task is to calculate the following sum: A1(k) + A2(k) + ... + An(k). The answer can be very large, so print it modulo 1000000007 (109 + 7).\n\nInput\n\nThe first line contains two space-separated integers n, k (1 ≤ n ≤ 1017; 1 ≤ k ≤ 40).\n\nOutput\n\nPrint a single integer — the sum of the first n elements of the sequence Ai(k) modulo 1000000007 (109 + 7).\n\nExamples\n\nInput\n\n1 1\n\n\nOutput\n\n1\n\n\nInput\n\n4 1\n\n\nOutput\n\n34\n\n\nInput\n\n5 2\n\n\nOutput\n\n316\n\n\nInput\n\n7 4\n\n\nOutput\n\n73825", "grammar": {"answer": null}}
{"name": "802_G. Fake News (easy)", "description": "As it's the first of April, Heidi is suspecting that the news she reads today are fake, and she does not want to look silly in front of all the contestants. She knows that a newspiece is fake if it contains heidi as a subsequence. Help Heidi assess whether the given piece is true, but please be discreet about it...\n\nInput\n\nThe first and only line of input contains a single nonempty string s of length at most 1000 composed of lowercase letters (a-z).\n\nOutput\n\nOutput YES if the string s contains heidi as a subsequence and NO otherwise.\n\nExamples\n\nInput\n\nabcheaibcdi\n\n\nOutput\n\nYES\n\nInput\n\nhiedi\n\n\nOutput\n\nNO\n\nNote\n\nA string s contains another string p as a subsequence if it is possible to delete some characters from s and obtain p.", "grammar": {"answer": null}}
{"name": "p02405 Print a Chessboard", "description": "Draw a chessboard which has a height of H cm and a width of W cm. For example, the following figure shows a chessboard which has a height of 6 cm and a width of 10 cm.\n\n\n.#.#.#.#.\n.#.#.#.#.#\n.#.#.#.#.\n.#.#.#.#.#\n.#.#.#.#.\n.#.#.#.#.#\n\n\nNote that the top left corner should be drawn by '#'.\n\nConstraints\n\n* 1 ≤ H ≤ 300\n* 1 ≤ W ≤ 300\n\nInput\n\nThe input consists of multiple datasets. Each dataset consists of two integers H and W separated by a single space.\n\nThe input ends with two 0 (when both H and W are zero).\n\nOutput\n\nFor each dataset, print the chessboard made of '#' and '.'.\n\nPrint a blank line after each dataset.\n\nExample\n\nInput\n\n3 4\n5 6\n3 3\n2 2\n1 1\n0 0\n\n\nOutput\n\n#.#.\n.#.#\n#.#.\n\n#.#.#.\n.#.#.#\n#.#.#.\n.#.#.#\n#.#.#.\n\n#.#\n.#.\n#.#\n\n#.\n.#\n\n#", "grammar": {"answer": null}}
{"name": "p02568 AtCoder Library Practice Contest - Range Affine Range Sum", "description": "You are given an array a_0, a_1, ..., a_{N-1} of length N. Process Q queries of the following types.\n\n* `0 l r b c`: For each i = l, l+1, \\dots, {r - 1}, set a_i \\gets b \\times a_i + c.\n* `1 l r`: Print \\sum_{i = l}^{r - 1} a_i \\bmod 998244353.\n\nConstraints\n\n* 1 \\leq N, Q \\leq 500000\n* 0 \\leq a_i, c < 998244353\n* 1 \\leq b < 998244353\n* 0 \\leq l < r \\leq N\n* All values in Input are integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN Q\na_0 a_1 ... a_{N - 1}\n\\textrm{Query}_0\n\\textrm{Query}_1\n:\n\\textrm{Query}_{Q - 1}\n\n\nOutput\n\nFor each query of the latter type, print the answer.\n\nExample\n\nInput\n\n5 7\n1 2 3 4 5\n1 0 5\n0 2 4 100 101\n1 0 3\n0 1 3 102 103\n1 2 5\n0 2 5 104 105\n1 0 5\n\n\nOutput\n\n15\n404\n41511\n4317767", "grammar": {"answer": null}}
{"name": "803_F. Coprime Subsequences", "description": "Let's call a non-empty sequence of positive integers a1, a2... ak coprime if the greatest common divisor of all elements of this sequence is equal to 1.\n\nGiven an array a consisting of n positive integers, find the number of its coprime subsequences. Since the answer may be very large, print it modulo 109 + 7.\n\nNote that two subsequences are considered different if chosen indices are different. For example, in the array [1, 1] there are 3 different subsequences: [1], [1] and [1, 1].\n\nInput\n\nThe first line contains one integer number n (1 ≤ n ≤ 100000).\n\nThe second line contains n integer numbers a1, a2... an (1 ≤ ai ≤ 100000).\n\nOutput\n\nPrint the number of coprime subsequences of a modulo 109 + 7.\n\nExamples\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n5\n\n\nInput\n\n4\n1 1 1 1\n\n\nOutput\n\n15\n\n\nInput\n\n7\n1 3 5 15 3 105 35\n\n\nOutput\n\n100\n\nNote\n\nIn the first example coprime subsequences are: \n\n  1. 1\n  2. 1, 2\n  3. 1, 3\n  4. 1, 2, 3\n  5. 2, 3\n\n\n\nIn the second example all subsequences are coprime.", "grammar": {"answer": null}}
{"name": "893_E. Counting Arrays", "description": "You are given two positive integer numbers x and y. An array F is called an y-factorization of x iff the following conditions are met:\n\n  * There are y elements in F, and all of them are integer numbers; \n  * <image>. \n\n\n\nYou have to count the number of pairwise distinct arrays that are y-factorizations of x. Two arrays A and B are considered different iff there exists at least one index i (1 ≤ i ≤ y) such that Ai ≠ Bi. Since the answer can be very large, print it modulo 109 + 7.\n\nInput\n\nThe first line contains one integer q (1 ≤ q ≤ 105) — the number of testcases to solve.\n\nThen q lines follow, each containing two integers xi and yi (1 ≤ xi, yi ≤ 106). Each of these lines represents a testcase.\n\nOutput\n\nPrint q integers. i-th integer has to be equal to the number of yi-factorizations of xi modulo 109 + 7.\n\nExample\n\nInput\n\n2\n6 3\n4 2\n\n\nOutput\n\n36\n6\n\nNote\n\nIn the second testcase of the example there are six y-factorizations:\n\n  * { - 4, - 1}; \n  * { - 2, - 2}; \n  * { - 1, - 4}; \n  * {1, 4}; \n  * {2, 2}; \n  * {4, 1}. ", "grammar": {"answer": null}}
{"name": "609_E. Minimum spanning tree for each edge", "description": "Connected undirected weighted graph without self-loops and multiple edges is given. Graph contains n vertices and m edges.\n\nFor each edge (u, v) find the minimal possible weight of the spanning tree that contains the edge (u, v).\n\nThe weight of the spanning tree is the sum of weights of all edges included in spanning tree.\n\nInput\n\nFirst line contains two integers n and m (1 ≤ n ≤ 2·105, n - 1 ≤ m ≤ 2·105) — the number of vertices and edges in graph.\n\nEach of the next m lines contains three integers ui, vi, wi (1 ≤ ui, vi ≤ n, ui ≠ vi, 1 ≤ wi ≤ 109) — the endpoints of the i-th edge and its weight.\n\nOutput\n\nPrint m lines. i-th line should contain the minimal possible weight of the spanning tree that contains i-th edge.\n\nThe edges are numbered from 1 to m in order of their appearing in input.\n\nExamples\n\nInput\n\n5 7\n1 2 3\n1 3 1\n1 4 5\n2 3 2\n2 5 3\n3 4 2\n4 5 4\n\n\nOutput\n\n9\n8\n11\n8\n8\n8\n9", "grammar": {"answer": null}}
{"name": "431_D. Random Task", "description": "One day, after a difficult lecture a diligent student Sasha saw a graffitied desk in the classroom. She came closer and read: \"Find such positive integer n, that among numbers n + 1, n + 2, ..., 2·n there are exactly m numbers which binary representation contains exactly k digits one\".\n\nThe girl got interested in the task and she asked you to help her solve it. Sasha knows that you are afraid of large numbers, so she guaranteed that there is an answer that doesn't exceed 1018.\n\nInput\n\nThe first line contains two space-separated integers, m and k (0 ≤ m ≤ 1018; 1 ≤ k ≤ 64).\n\nOutput\n\nPrint the required number n (1 ≤ n ≤ 1018). If there are multiple answers, print any of them.\n\nExamples\n\nInput\n\n1 1\n\n\nOutput\n\n1\n\n\nInput\n\n3 2\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p01490 HullMarathon", "description": "Example\n\nInput\n\n4\n5\n8\n58\n85\n\n\nOutput\n\n2970.000000000", "grammar": {"answer": null}}
{"name": "p02016 Twins", "description": "B: Twins\n\nOne twin was angry that it was not well known which of them was the older brother and which was the younger brother.\n\nCreate a program that outputs \"square1001\" when \"ani\" is entered and \"e869120\" when \"otouto\" is entered.\n\ninput\n\nYou will be given either the string \"ani\" or \"otouto\" as input.\n\noutput\n\nPlease output \"e869120\" or \"square1001\" according to the problem statement. Don't forget the last line break.\n\nInput example 1\n\n\nani\n\n\nOutput example 1\n\n\nsquare1001\n\n\nInput example 2\n\n\notouto\n\n\nOutput example 2\n\n\ne869120\n\n\n\n\n\n\nExample\n\nInput\n\nani\n\n\nOutput\n\nsquare1001", "grammar": {"answer": null}}
{"name": "p03146 AtCoder Beginner Contest 116 - Collatz Problem", "description": "A sequence a=\\\\{a_1,a_2,a_3,......\\\\} is determined as follows:\n\n* The first term s is given as input.\n\n* Let f(n) be the following function: f(n) = n/2 if n is even, and f(n) = 3n+1 if n is odd.\n\n* a_i = s when i = 1, and a_i = f(a_{i-1}) when i > 1.\n\n\n\n\nFind the minimum integer m that satisfies the following condition:\n\n* There exists an integer n such that a_m = a_n (m > n).\n\nConstraints\n\n* 1 \\leq s \\leq 100\n* All values in input are integers.\n* It is guaranteed that all elements in a and the minimum m that satisfies the condition are at most 1000000.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\ns\n\n\nOutput\n\nPrint the minimum integer m that satisfies the condition.\n\nExamples\n\nInput\n\n8\n\n\nOutput\n\n5\n\n\nInput\n\n7\n\n\nOutput\n\n18\n\n\nInput\n\n54\n\n\nOutput\n\n114", "grammar": {"answer": null}}
{"name": "808_A. Lucky Year", "description": "Apart from having lots of holidays throughout the year, residents of Berland also have whole lucky years. Year is considered lucky if it has no more than 1 non-zero digit in its number. So years 100, 40000, 5 are lucky and 12, 3001 and 12345 are not.\n\nYou are given current year in Berland. Your task is to find how long will residents of Berland wait till the next lucky year.\n\nInput\n\nThe first line contains integer number n (1 ≤ n ≤ 109) — current year in Berland.\n\nOutput\n\nOutput amount of years from the current year to the next lucky one.\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n1\n\n\nInput\n\n201\n\n\nOutput\n\n99\n\n\nInput\n\n4000\n\n\nOutput\n\n1000\n\nNote\n\nIn the first example next lucky year is 5. In the second one — 300. In the third — 5000.", "grammar": {"answer": null}}
{"name": "p03879 CODE FESTIVAL 2016 Grand Final(Parallel) - Inscribed Bicycle", "description": "Snuke received a triangle as a birthday present. The coordinates of the three vertices were (x_1, y_1), (x_2, y_2), and (x_3, y_3).\n\nHe wants to draw two circles with the same radius inside the triangle such that the two circles do not overlap (but they may touch). Compute the maximum possible radius of the circles.\n\nConstraints\n\n* 0 ≤ x_i, y_i ≤ 1000\n* The coordinates are integers.\n* The three points are not on the same line.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nx_1 y_1\nx_2 y_2\nx_3 y_3\n\n\nOutput\n\nPrint the maximum possible radius of the circles. The absolute error or the relative error must be at most 10^{-9}.\n\nExamples\n\nInput\n\n0 0\n1 1\n2 0\n\n\nOutput\n\n0.292893218813\n\n\nInput\n\n3 1\n1 5\n4 9\n\n\nOutput\n\n0.889055514217", "grammar": {"answer": null}}
{"name": "224_E. Partial Sums", "description": "You've got an array a, consisting of n integers. The array elements are indexed from 1 to n. Let's determine a two step operation like that:\n\n  1. First we build by the array a an array s of partial sums, consisting of n elements. Element number i (1 ≤ i ≤ n) of array s equals <image>. The operation x mod y means that we take the remainder of the division of number x by number y. \n  2. Then we write the contents of the array s to the array a. Element number i (1 ≤ i ≤ n) of the array s becomes the i-th element of the array a (ai = si). \n\n\n\nYou task is to find array a after exactly k described operations are applied.\n\nInput\n\nThe first line contains two space-separated integers n and k (1 ≤ n ≤ 2000, 0 ≤ k ≤ 109). The next line contains n space-separated integers a1, a2, ..., an — elements of the array a (0 ≤ ai ≤ 109).\n\nOutput\n\nPrint n integers — elements of the array a after the operations are applied to it. Print the elements in the order of increasing of their indexes in the array a. Separate the printed numbers by spaces.\n\nExamples\n\nInput\n\n3 1\n1 2 3\n\n\nOutput\n\n1 3 6\n\n\nInput\n\n5 0\n3 14 15 92 6\n\n\nOutput\n\n3 14 15 92 6", "grammar": {"answer": null}}
{"name": "p03776 AtCoder Beginner Contest 057 - Maximum Average Sets", "description": "You are given N items.\nThe value of the i-th item (1 \\leq i \\leq N) is v_i.\nYour have to select at least A and at most B of these items.\nUnder this condition, find the maximum possible arithmetic mean of the values of selected items.\nAdditionally, find the number of ways to select items so that the mean of the values of selected items is maximized.\n\nConstraints\n\n* 1 \\leq N \\leq 50\n* 1 \\leq A,B \\leq N\n* 1 \\leq v_i \\leq 10^{15}\n* Each v_i is an integer.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN A B\nv_1\nv_2\n...\nv_N\n\n\nOutput\n\nPrint two lines.\nThe first line should contain the maximum possible arithmetic mean of the values of selected items. The output should be considered correct if the absolute or relative error is at most 10^{-6}.\nThe second line should contain the number of ways to select items so that the mean of the values of selected items is maximized.\n\nExamples\n\nInput\n\n5 2 2\n1 2 3 4 5\n\n\nOutput\n\n4.500000\n1\n\n\nInput\n\n4 2 3\n10 20 10 10\n\n\nOutput\n\n15.000000\n3\n\n\nInput\n\n5 1 5\n1000000000000000 999999999999999 999999999999998 999999999999997 999999999999996\n\n\nOutput\n\n1000000000000000.000000\n1", "grammar": {"answer": null}}
{"name": "p03089 AtCoder Grand Contest 032 - Limited Insertion", "description": "Snuke has an empty sequence a.\n\nHe will perform N operations on this sequence.\n\nIn the i-th operation, he chooses an integer j satisfying 1 \\leq j \\leq i, and insert j at position j in a (the beginning is position 1).\n\nYou are given a sequence b of length N. Determine if it is possible that a is equal to b after N operations. If it is, show one possible sequence of operations that achieves it.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 100\n* 1 \\leq b_i \\leq N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nb_1 \\dots b_N\n\n\nOutput\n\nIf there is no sequence of N operations after which a would be equal to b, print `-1`. If there is, print N lines. In the i-th line, the integer chosen in the i-th operation should be printed. If there are multiple solutions, any of them is accepted.\n\nExamples\n\nInput\n\n3\n1 2 1\n\n\nOutput\n\n1\n1\n2\n\n\nInput\n\n2\n2 2\n\n\nOutput\n\n-1\n\n\nInput\n\n9\n1 1 1 2 2 1 2 3 2\n\n\nOutput\n\n1\n2\n2\n3\n1\n2\n2\n1\n1", "grammar": {"answer": null}}
{"name": "1154_G. Minimum Possible LCM", "description": "You are given an array a consisting of n integers a_1, a_2, ..., a_n.\n\nYour problem is to find such pair of indices i, j (1 ≤ i < j ≤ n) that lcm(a_i, a_j) is minimum possible.\n\nlcm(x, y) is the least common multiple of x and y (minimum positive number such that both x and y are divisors of this number).\n\nInput\n\nThe first line of the input contains one integer n (2 ≤ n ≤ 10^6) — the number of elements in a.\n\nThe second line of the input contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ 10^7), where a_i is the i-th element of a.\n\nOutput\n\nPrint two integers i and j (1 ≤ i < j ≤ n) such that the value of lcm(a_i, a_j) is minimum among all valid pairs i, j. If there are multiple answers, you can print any.\n\nExamples\n\nInput\n\n\n5\n2 4 8 3 6\n\n\nOutput\n\n\n1 2\n\n\nInput\n\n\n5\n5 2 11 3 7\n\n\nOutput\n\n\n2 4\n\n\nInput\n\n\n6\n2 5 10 1 10 2\n\n\nOutput\n\n\n1 4", "grammar": {"answer": null}}
{"name": "1409_D. Decrease the Sum of Digits", "description": "You are given a positive integer n. In one move, you can increase n by one (i.e. make n := n + 1). Your task is to find the minimum number of moves you need to perform in order to make the sum of digits of n be less than or equal to s.\n\nYou have to answer t independent test cases.\n\nInput\n\nThe first line of the input contains one integer t (1 ≤ t ≤ 2 ⋅ 10^4) — the number of test cases. Then t test cases follow.\n\nThe only line of the test case contains two integers n and s (1 ≤ n ≤ 10^{18}; 1 ≤ s ≤ 162).\n\nOutput\n\nFor each test case, print the answer: the minimum number of moves you need to perform in order to make the sum of digits of n be less than or equal to s.\n\nExample\n\nInput\n\n\n5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n\n\nOutput\n\n\n8\n0\n500\n2128012501878\n899999999999999999", "grammar": {"answer": null}}
{"name": "p02693 AtCoder Beginner Contest 165 - We Love Golf", "description": "Takahashi the Jumbo will practice golf.\n\nHis objective is to get a carry distance that is a multiple of K, while he can only make a carry distance of between A and B (inclusive).\n\nIf he can achieve the objective, print `OK`; if he cannot, print `NG`.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq A \\leq B \\leq 1000\n* 1 \\leq K \\leq 1000\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK\nA B\n\n\nOutput\n\nIf he can achieve the objective, print `OK`; if he cannot, print `NG`.\n\nExamples\n\nInput\n\n7\n500 600\n\n\nOutput\n\nOK\n\n\nInput\n\n4\n5 7\n\n\nOutput\n\nNG\n\n\nInput\n\n1\n11 11\n\n\nOutput\n\nOK", "grammar": {"answer": null}}
{"name": "p03298 AtCoder Grand Contest 026 - String Coloring", "description": "You are given a string S of length 2N consisting of lowercase English letters.\n\nThere are 2^{2N} ways to color each character in S red or blue. Among these ways, how many satisfy the following condition?\n\n* The string obtained by reading the characters painted red from left to right is equal to the string obtained by reading the characters painted blue from right to left.\n\nConstraints\n\n* 1 \\leq N \\leq 18\n* The length of S is 2N.\n* S consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS\n\n\nOutput\n\nPrint the number of ways to paint the string that satisfy the condition.\n\nExamples\n\nInput\n\n4\ncabaacba\n\n\nOutput\n\n4\n\n\nInput\n\n11\nmippiisssisssiipsspiim\n\n\nOutput\n\n504\n\n\nInput\n\n4\nabcdefgh\n\n\nOutput\n\n0\n\n\nInput\n\n18\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\n\nOutput\n\n9075135300", "grammar": {"answer": null}}
{"name": "1228_A. Distinct Digits", "description": "You have two integers l and r. Find an integer x which satisfies the conditions below:\n\n  * l ≤ x ≤ r. \n  * All digits of x are different. \n\n\n\nIf there are multiple answers, print any of them.\n\nInput\n\nThe first line contains two integers l and r (1 ≤ l ≤ r ≤ 10^{5}).\n\nOutput\n\nIf an answer exists, print any of them. Otherwise, print -1.\n\nExamples\n\nInput\n\n\n121 130\n\n\nOutput\n\n\n123\n\n\nInput\n\n\n98766 100000\n\n\nOutput\n\n\n-1\n\nNote\n\nIn the first example, 123 is one of the possible answers. However, 121 can't be the answer, because there are multiple 1s on different digits.\n\nIn the second example, there is no valid answer.", "grammar": {"answer": null}}
{"name": "p00056 Goldbach's Conjecture", "description": "It is known that even numbers greater than or equal to 4 can be represented by the sum of two prime numbers. This is called the Goldbach's conjecture, and computer calculations have confirmed that it is correct up to a fairly large number. For example, 10 can be represented by the sum of two prime numbers, 7 + 3 and 5 + 5.\n\nWrite a program that inputs the integer n and outputs how many combinations of n are the sum of two prime numbers. However, n must be 4 or more and 50,000 or less. Also, the n entered is not always even.\n\n\n\nInput\n\nGiven multiple datasets. Each dataset is given n on one row. When n is 0, it is the last input. The number of datasets does not exceed 10,000.\n\nOutput\n\nFor each dataset, output the number of combinations in which n is the sum of two prime numbers on one line.\n\nExample\n\nInput\n\n10\n11\n0\n\n\nOutput\n\n2\n0", "grammar": {"answer": null}}
{"name": "1202_E. You Are Given Some Strings...", "description": "You are given a string t and n strings s_1, s_2, ..., s_n. All strings consist of lowercase Latin letters.\n\nLet f(t, s) be the number of occurences of string s in string t. For example, f('aaabacaa', 'aa') = 3, and f('ababa', 'aba') = 2.\n\nCalculate the value of ∑_{i=1}^{n} ∑_{j=1}^{n} f(t, s_i + s_j), where s + t is the concatenation of strings s and t. Note that if there are two pairs i_1, j_1 and i_2, j_2 such that s_{i_1} + s_{j_1} = s_{i_2} + s_{j_2}, you should include both f(t, s_{i_1} + s_{j_1}) and f(t, s_{i_2} + s_{j_2}) in answer.\n\nInput\n\nThe first line contains string t (1 ≤ |t| ≤ 2 ⋅ 10^5).\n\nThe second line contains integer n (1 ≤ n ≤ 2 ⋅ 10^5).\n\nEach of next n lines contains string s_i (1 ≤ |s_i| ≤ 2 ⋅ 10^5).\n\nIt is guaranteed that ∑_{i=1}^{n} |s_i| ≤ 2 ⋅ 10^5. All strings consist of lowercase English letters.\n\nOutput\n\nPrint one integer — the value of ∑_{i=1}^{n} ∑_{j=1}^{n} f(t, s_i + s_j).\n\nExamples\n\nInput\n\n\naaabacaa\n2\na\naa\n\n\nOutput\n\n\n5\n\n\nInput\n\n\naaabacaa\n4\na\na\na\nb\n\n\nOutput\n\n\n33", "grammar": {"answer": null}}
{"name": "301_D. Yaroslav and Divisors", "description": "Yaroslav has an array p = p1, p2, ..., pn (1 ≤ pi ≤ n), consisting of n distinct integers. Also, he has m queries:\n\n  * Query number i is represented as a pair of integers li, ri (1 ≤ li ≤ ri ≤ n). \n  * The answer to the query li, ri is the number of pairs of integers q, w (li ≤ q, w ≤ ri) such that pq is the divisor of pw. \n\n\n\nHelp Yaroslav, answer all his queries.\n\nInput\n\nThe first line contains the integers n and m (1 ≤ n, m ≤ 2·105). The second line contains n distinct integers p1, p2, ..., pn (1 ≤ pi ≤ n). The following m lines contain Yaroslav's queries. The i-th line contains integers li, ri (1 ≤ li ≤ ri ≤ n).\n\nOutput\n\nPrint m integers — the answers to Yaroslav's queries in the order they appear in the input.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nExamples\n\nInput\n\n1 1\n1\n1 1\n\n\nOutput\n\n1\n\n\nInput\n\n10 9\n1 2 3 4 5 6 7 8 9 10\n1 10\n2 9\n3 8\n4 7\n5 6\n2 2\n9 10\n5 10\n4 10\n\n\nOutput\n\n27\n14\n8\n4\n2\n1\n2\n7\n9", "grammar": {"answer": null}}
{"name": "p02539 ACL Beginner Contest - Heights and Pairs", "description": "There are 2N people numbered 1 through 2N. The height of Person i is h_i.\n\nHow many ways are there to make N pairs of people such that the following conditions are satisfied? Compute the answer modulo 998,244,353.\n\n* Each person is contained in exactly one pair.\n* For each pair, the heights of the two people in the pair are different.\n\n\n\nTwo ways are considered different if for some p and q, Person p and Person q are paired in one way and not in the other.\n\nConstraints\n\n* 1 \\leq N \\leq 50,000\n* 1 \\leq h_i \\leq 100,000\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nh_1\n:\nh_{2N}\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n2\n1\n1\n2\n3\n\n\nOutput\n\n2\n\n\nInput\n\n5\n30\n10\n20\n40\n20\n10\n10\n30\n50\n60\n\n\nOutput\n\n516", "grammar": {"answer": null}}
{"name": "p02637 AtCoder Grand Contest 046 - Permutation Cover", "description": "Given are an integer K and integers a_1,\\dots, a_K. Determine whether a sequence P satisfying below exists. If it exists, find the lexicographically smallest such sequence.\n\n* Every term in P is an integer between 1 and K (inclusive).\n* For each i=1,\\dots, K, P contains a_i occurrences of i.\n* For each term in P, there is a contiguous subsequence of length K that contains that term and is a permutation of 1,\\dots, K.\n\nConstraints\n\n* 1 \\leq K \\leq 100\n* 1 \\leq a_i \\leq 1000 \\quad (1\\leq i\\leq K)\n* a_1 + \\dots + a_K\\leq 1000\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK\na_1 a_2 \\dots a_K\n\n\nOutput\n\nIf there is no sequence satisfying the conditions, print `-1`. Otherwise, print the lexicographically smallest sequence satisfying the conditions.\n\nExamples\n\nInput\n\n3\n2 4 3\n\n\nOutput\n\n2 1 3 2 2 3 1 2 3\n\n\nInput\n\n4\n3 2 3 2\n\n\nOutput\n\n1 2 3 4 1 3 1 2 4 3\n\n\nInput\n\n5\n3 1 4 1 5\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "12_D. Ball", "description": "N ladies attend the ball in the King's palace. Every lady can be described with three values: beauty, intellect and richness. King's Master of Ceremonies knows that ladies are very special creatures. If some lady understands that there is other lady at the ball which is more beautiful, smarter and more rich, she can jump out of the window. He knows values of all ladies and wants to find out how many probable self-murderers will be on the ball. Lets denote beauty of the i-th lady by Bi, her intellect by Ii and her richness by Ri. Then i-th lady is a probable self-murderer if there is some j-th lady that Bi < Bj, Ii < Ij, Ri < Rj. Find the number of probable self-murderers.\n\nInput\n\nThe first line contains one integer N (1 ≤ N ≤ 500000). The second line contains N integer numbers Bi, separated by single spaces. The third and the fourth lines contain sequences Ii and Ri in the same format. It is guaranteed that 0 ≤ Bi, Ii, Ri ≤ 109.\n\nOutput\n\nOutput the answer to the problem.\n\nExamples\n\nInput\n\n3\n1 4 2\n4 3 2\n2 5 3\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p01560 Enumeration", "description": "Given n integers a1, a2,…, an and n integers p1, p2,…, pn, integer m. The operation of selecting the kth integer ak with a probability of pk [%] is performed for each k (1 ≤ k ≤ n), and 0 or more and n or less integers are selected. Find the expected number of integers between 1 and m that are divisible by at least one of the selected integers.\n\nConstraints\n\n* 1 ≤ n ≤ 20\n\n* 1 ≤ m ≤ 1018\n\n* 1 ≤ ak ≤ 1018 (1 ≤ k ≤ n)\n\n* 1 ≤ pk ≤ 99 (1 ≤ k ≤ n)\n\nInput\n\nThe input is given in the following format.\n\n> n m\n> a1 a2… an\n> p1 p2… pn\n>\n\nOutput\n\nPrint the solution to the problem on one line. The output must not have an absolute or relative error of more than 0.0000001 (= 10-7).\n\nExamples\n\nInput\n\n2 15\n3 5\n50 50\n\n\nOutput\n\n3.75\n\n\nInput\n\n4 100\n2 3 5 7\n80 60 40 20\n\n\nOutput\n\n57.352\n\n\nInput\n\n4 210\n2 3 5 7\n80 60 40 20\n\n\nOutput\n\n119.9136", "grammar": {"answer": null}}
{"name": "p03938 AtCoder Grand Contest 007 - Construct Sequences", "description": "You are given a permutation p of the set {1, 2, ..., N}. Please construct two sequences of positive integers a_1, a_2, ..., a_N and b_1, b_2, ..., b_N satisfying the following conditions:\n\n* 1 \\leq a_i, b_i \\leq 10^9 for all i\n* a_1 < a_2 < ... < a_N\n* b_1 > b_2 > ... > b_N\n* a_{p_1}+b_{p_1} < a_{p_2}+b_{p_2} < ... < a_{p_N}+b_{p_N}\n\nConstraints\n\n* 2 \\leq N \\leq 20,000\n* p is a permutation of the set {1, 2, ..., N}\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\np_1 p_2 ... p_N\n\n\nOutput\n\nThe output consists of two lines. The first line contains a_1, a_2, ..., a_N seperated by a space. The second line contains b_1, b_2, ..., b_N seperated by a space.\n\nIt can be shown that there always exists a solution for any input satisfying the constraints.\n\nExamples\n\nInput\n\n2\n1 2\n\n\nOutput\n\n1 4\n5 4\n\n\nInput\n\n3\n3 2 1\n\n\nOutput\n\n1 2 3\n5 3 1\n\n\nInput\n\n3\n2 3 1\n\n\nOutput\n\n5 10 100\n100 10 1", "grammar": {"answer": null}}
{"name": "p00134 Exit Survey", "description": "I conducted an exit poll of the shopping amount at a department store. Create a program that takes the shopping amount data as input, calculates the average shopping amount per person, and outputs it. The number of people surveyed shall be 100,000 or less, and the shopping amount per person shall not exceed 1 million yen.\n\n\n\nInput\n\nThe input is given in the following format:\n\n\nn\nv1\nv2\n::\nvn\n\n\nThe first line gives the number of people surveyed n, and the following n lines give the integer vi representing the purchase amount of the ith person.\n\nOutput\n\nPlease output the average shopping amount (integer: rounded down to the nearest whole number) on one line.\n\nExample\n\nInput\n\n6\n12300\n5600\n33800\n0\n26495\n52000\n\n\nOutput\n\n21699", "grammar": {"answer": null}}
{"name": "219_A. k-String", "description": "A string is called a k-string if it can be represented as k concatenated copies of some string. For example, the string \"aabaabaabaab\" is at the same time a 1-string, a 2-string and a 4-string, but it is not a 3-string, a 5-string, or a 6-string and so on. Obviously any string is a 1-string.\n\nYou are given a string s, consisting of lowercase English letters and a positive integer k. Your task is to reorder the letters in the string s in such a way that the resulting string is a k-string.\n\nInput\n\nThe first input line contains integer k (1 ≤ k ≤ 1000). The second line contains s, all characters in s are lowercase English letters. The string length s satisfies the inequality 1 ≤ |s| ≤ 1000, where |s| is the length of string s.\n\nOutput\n\nRearrange the letters in string s in such a way that the result is a k-string. Print the result on a single output line. If there are multiple solutions, print any of them.\n\nIf the solution doesn't exist, print \"-1\" (without quotes).\n\nExamples\n\nInput\n\n2\naazz\n\n\nOutput\n\nazaz\n\n\nInput\n\n3\nabcabcabz\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p02355 The Smallest Window II", "description": "For a given array $a_1, a_2, a_3, ... , a_N$ of $N$ elements and an integer $K$, find the smallest sub-array size (smallest window length) where the elements in the sub-array contains all integers in range [$1, 2, ..., K$]. If there is no such sub-array, report 0.\n\nConstraints\n\n* $1 \\leq N \\leq 10^5$\n* $1 \\leq K \\leq 10^5$\n* $1 \\leq a_i \\leq 10^5$\n\nInput\n\nThe input is given in the following format.\n\n$N$ $K$\n$a_1$ $a_2$ ... $a_N$\n\nOutput\n\nPrint the smallest sub-array size in a line.\n\nExamples\n\nInput\n\n6 2\n4 1 2 1 3 5\n\n\nOutput\n\n2\n\n\nInput\n\n6 3\n4 1 2 1 3 5\n\n\nOutput\n\n3\n\n\nInput\n\n3 4\n1 2 3\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03642 AtCoder Regular Contest 080 - Prime Flip", "description": "There are infinitely many cards, numbered 1, 2, 3, ... Initially, Cards x_1, x_2, ..., x_N are face up, and the others are face down.\n\nSnuke can perform the following operation repeatedly:\n\n* Select a prime p greater than or equal to 3. Then, select p consecutive cards and flip all of them.\n\n\n\nSnuke's objective is to have all the cards face down. Find the minimum number of operations required to achieve the objective.\n\nConstraints\n\n* 1 ≤ N ≤ 100\n* 1 ≤ x_1 < x_2 < ... < x_N ≤ 10^7\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nx_1 x_2 ... x_N\n\n\nOutput\n\nPrint the minimum number of operations required to achieve the objective.\n\nExamples\n\nInput\n\n2\n4 5\n\n\nOutput\n\n2\n\n\nInput\n\n9\n1 2 3 4 5 6 7 8 9\n\n\nOutput\n\n3\n\n\nInput\n\n2\n1 10000000\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p03913 CODE FESTIVAL 2016 Final - Cookies", "description": "Rng is baking cookies.\n\nInitially, he can bake one cookie per second.\n\nHe can also eat the cookies baked by himself. When there are x cookies not yet eaten, he can choose to eat all those cookies. After he finishes eating those cookies, the number of cookies he can bake per second becomes x. Note that a cookie always needs to be baked for 1 second, that is, he cannot bake a cookie in 1/x seconds when x > 1. When he choose to eat the cookies, he must eat all of them; he cannot choose to eat only part of them. It takes him A seconds to eat the cookies regardless of how many, during which no cookies can be baked.\n\nHe wants to give N cookies to Grandma. Find the shortest time needed to produce at least N cookies not yet eaten.\n\nConstraints\n\n* 1≦N≦10^{12}\n* 0≦A≦10^{12}\n* A is an integer.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN A\n\n\nOutput\n\nPrint the shortest time needed to produce at least N cookies not yet eaten.\n\nExamples\n\nInput\n\n8 1\n\n\nOutput\n\n7\n\n\nInput\n\n1000000000000 1000000000000\n\n\nOutput\n\n1000000000000", "grammar": {"answer": null}}
{"name": "1208_A. XORinacci", "description": "Cengiz recently learned Fibonacci numbers and now he is studying different algorithms to find them. After getting bored of reading them, he came with his own new type of numbers that he named XORinacci numbers. He defined them as follows: \n\n  * f(0) = a; \n  * f(1) = b; \n  * f(n) = f(n-1) ⊕ f(n-2) when n > 1, where ⊕ denotes the [bitwise XOR operation](https://en.wikipedia.org/wiki/Bitwise_operation#XOR). \n\n\n\nYou are given three integers a, b, and n, calculate f(n).\n\nYou have to answer for T independent test cases.\n\nInput\n\nThe input contains one or more independent test cases.\n\nThe first line of input contains a single integer T (1 ≤ T ≤ 10^3), the number of test cases.\n\nEach of the T following lines contains three space-separated integers a, b, and n (0 ≤ a, b, n ≤ 10^9) respectively.\n\nOutput\n\nFor each test case, output f(n).\n\nExample\n\nInput\n\n\n3\n3 4 2\n4 5 0\n325 265 1231232\n\n\nOutput\n\n\n7\n4\n76\n\nNote\n\nIn the first example, f(2) = f(0) ⊕ f(1) = 3 ⊕ 4 = 7.", "grammar": {"answer": null}}
{"name": "p02417 Counting Characters", "description": "Write a program which counts and reports the number of each alphabetical letter. Ignore the case of characters.\n\nConstraints\n\n* The number of characters in the sentence < 1200\n\nInput\n\nA sentence in English is given in several lines.\n\nOutput\n\nPrints the number of alphabetical letters in the following format:\n\n\na : The number of 'a'\nb : The number of 'b'\nc : The number of 'c'\n.\n.\nz : The number of 'z'\n\n\nExample\n\nInput\n\nThis is a pen.\n\n\nOutput\n\na : 1\nb : 0\nc : 0\nd : 0\ne : 1\nf : 0\ng : 0\nh : 1\ni : 2\nj : 0\nk : 0\nl : 0\nm : 0\nn : 1\no : 0\np : 1\nq : 0\nr : 0\ns : 2\nt : 1\nu : 0\nv : 0\nw : 0\nx : 0\ny : 0\nz : 0", "grammar": {"answer": null}}
{"name": "315_D. Sereja and Periods", "description": "Let's introduce the designation <image>, where x is a string, n is a positive integer and operation \" + \" is the string concatenation operation. For example, [abc, 2] = abcabc.\n\nWe'll say that string s can be obtained from string t, if we can remove some characters from string t and obtain string s. For example, strings ab and aсba can be obtained from string xacbac, and strings bx and aaa cannot be obtained from it.\n\nSereja has two strings, w = [a, b] and q = [c, d]. He wants to find such maximum integer p (p > 0), that [q, p] can be obtained from string w.\n\nInput\n\nThe first line contains two integers b, d (1 ≤ b, d ≤ 107). The second line contains string a. The third line contains string c. The given strings are not empty and consist of lowercase English letters. Their lengths do not exceed 100.\n\nOutput\n\nIn a single line print an integer — the largest number p. If the required value of p doesn't exist, print 0.\n\nExamples\n\nInput\n\n10 3\nabab\nbab\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p02957 AtCoder Beginner Contest 135 - Harmony", "description": "We have two distinct integers A and B.\n\nPrint the integer K such that |A - K| = |B - K|.\n\nIf such an integer does not exist, print `IMPOSSIBLE` instead.\n\nConstraints\n\n* All values in input are integers.\n* 0 \\leq A,\\ B \\leq 10^9\n* A and B are distinct.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nPrint the integer K satisfying the condition.\n\nIf such an integer does not exist, print `IMPOSSIBLE` instead.\n\nExamples\n\nInput\n\n2 16\n\n\nOutput\n\n9\n\n\nInput\n\n0 3\n\n\nOutput\n\nIMPOSSIBLE\n\n\nInput\n\n998244353 99824435\n\n\nOutput\n\n549034394", "grammar": {"answer": null}}
{"name": "1514_B. AND 0, Sum Big", "description": "Baby Badawy's first words were \"AND 0 SUM BIG\", so he decided to solve the following problem. Given two integers n and k, count the number of arrays of length n such that:\n\n  * all its elements are integers between 0 and 2^k-1 (inclusive); \n  * the [bitwise AND](https://en.wikipedia.org/wiki/Bitwise_operation#AND) of all its elements is 0; \n  * the sum of its elements is as large as possible. \n\n\n\nSince the answer can be very large, print its remainder when divided by 10^9+7.\n\nInput\n\nThe first line contains an integer t (1 ≤ t ≤ 10) — the number of test cases you need to solve.\n\nEach test case consists of a line containing two integers n and k (1 ≤ n ≤ 10^{5}, 1 ≤ k ≤ 20).\n\nOutput\n\nFor each test case, print the number of arrays satisfying the conditions. Since the answer can be very large, print its remainder when divided by 10^9+7.\n\nExample\n\nInput\n\n\n2\n2 2\n100000 20\n\n\nOutput\n\n\n4\n226732710\n\nNote\n\nIn the first example, the 4 arrays are:\n\n  * [3,0], \n  * [0,3], \n  * [1,2], \n  * [2,1]. ", "grammar": {"answer": null}}
{"name": "1129_D. Isolation", "description": "Find the number of ways to divide an array a of n integers into any number of disjoint non-empty segments so that, in each segment, there exist at most k distinct integers that appear exactly once.\n\nSince the answer can be large, find it modulo 998 244 353.\n\nInput\n\nThe first line contains two space-separated integers n and k (1 ≤ k ≤ n ≤ 10^5) — the number of elements in the array a and the restriction from the statement.\n\nThe following line contains n space-separated integers a_1, a_2, …, a_n (1 ≤ a_i ≤ n) — elements of the array a.\n\nOutput\n\nThe first and only line contains the number of ways to divide an array a modulo 998 244 353.\n\nExamples\n\nInput\n\n\n3 1\n1 1 2\n\n\nOutput\n\n\n3\n\n\nInput\n\n\n5 2\n1 1 2 1 3\n\n\nOutput\n\n\n14\n\n\nInput\n\n\n5 5\n1 2 3 4 5\n\n\nOutput\n\n\n16\n\nNote\n\nIn the first sample, the three possible divisions are as follows.\n\n  * [[1], [1], [2]] \n  * [[1, 1], [2]] \n  * [[1, 1, 2]] \n\n\n\nDivision [[1], [1, 2]] is not possible because two distinct integers appear exactly once in the second segment [1, 2].", "grammar": {"answer": null}}
{"name": "p00938 Wall Clocks", "description": "Example\n\nInput\n\n2 10 6\n4 4 E\n6 4 W\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "884_A. Book Reading", "description": "Recently Luba bought a very interesting book. She knows that it will take t seconds to read the book. Luba wants to finish reading as fast as she can.\n\nBut she has some work to do in each of n next days. The number of seconds that Luba has to spend working during i-th day is ai. If some free time remains, she can spend it on reading.\n\nHelp Luba to determine the minimum number of day when she finishes reading.\n\nIt is guaranteed that the answer doesn't exceed n.\n\nRemember that there are 86400 seconds in a day.\n\nInput\n\nThe first line contains two integers n and t (1 ≤ n ≤ 100, 1 ≤ t ≤ 106) — the number of days and the time required to read the book.\n\nThe second line contains n integers ai (0 ≤ ai ≤ 86400) — the time Luba has to spend on her work during i-th day.\n\nOutput\n\nPrint the minimum day Luba can finish reading the book.\n\nIt is guaranteed that answer doesn't exceed n.\n\nExamples\n\nInput\n\n2 2\n86400 86398\n\n\nOutput\n\n2\n\n\nInput\n\n2 86400\n0 86400\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p03422 AtCoder Regular Contest 091 - Strange Nim", "description": "Takahashi and Aoki are playing a stone-taking game. Initially, there are N piles of stones, and the i-th pile contains A_i stones and has an associated integer K_i.\n\nStarting from Takahashi, Takahashi and Aoki take alternate turns to perform the following operation:\n\n* Choose a pile. If the i-th pile is selected and there are X stones left in the pile, remove some number of stones between 1 and floor(X/K_i) (inclusive) from the pile.\n\n\n\nThe player who first becomes unable to perform the operation loses the game. Assuming that both players play optimally, determine the winner of the game. Here, floor(x) represents the largest integer not greater than x.\n\nConstraints\n\n* 1 \\leq N \\leq 200\n* 1 \\leq A_i,K_i \\leq 10^9\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 K_1\n:\nA_N K_N\n\n\nOutput\n\nIf Takahashi will win, print `Takahashi`; if Aoki will win, print `Aoki`.\n\nExamples\n\nInput\n\n2\n5 2\n3 3\n\n\nOutput\n\nAoki\n\n\nInput\n\n3\n3 2\n4 3\n5 1\n\n\nOutput\n\nTakahashi\n\n\nInput\n\n3\n28 3\n16 4\n19 2\n\n\nOutput\n\nAoki\n\n\nInput\n\n4\n3141 59\n26535 897\n93 23\n8462 64\n\n\nOutput\n\nTakahashi", "grammar": {"answer": null}}
{"name": "803_C. Maximal GCD", "description": "You are given positive integer number n. You should create such strictly increasing sequence of k positive numbers a1, a2, ..., ak, that their sum is equal to n and greatest common divisor is maximal.\n\nGreatest common divisor of sequence is maximum of such numbers that every element of sequence is divisible by them.\n\nIf there is no possible sequence then output -1.\n\nInput\n\nThe first line consists of two numbers n and k (1 ≤ n, k ≤ 1010).\n\nOutput\n\nIf the answer exists then output k numbers — resulting sequence. Otherwise output -1. If there are multiple answers, print any of them.\n\nExamples\n\nInput\n\n6 3\n\n\nOutput\n\n1 2 3\n\n\nInput\n\n8 2\n\n\nOutput\n\n2 6\n\n\nInput\n\n5 3\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "660_A. Co-prime Array", "description": "You are given an array of n elements, you must make it a co-prime array in as few moves as possible.\n\nIn each move you can insert any positive integral number you want not greater than 109 in any place in the array.\n\nAn array is co-prime if any two adjacent numbers of it are co-prime.\n\nIn the number theory, two integers a and b are said to be co-prime if the only positive integer that divides both of them is 1.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 1000) — the number of elements in the given array.\n\nThe second line contains n integers ai (1 ≤ ai ≤ 109) — the elements of the array a.\n\nOutput\n\nPrint integer k on the first line — the least number of elements needed to add to the array a to make it co-prime.\n\nThe second line should contain n + k integers aj — the elements of the array a after adding k elements to it. Note that the new array should be co-prime, so any two adjacent values should be co-prime. Also the new array should be got from the original array a by adding k elements to it.\n\nIf there are multiple answers you can print any one of them.\n\nExample\n\nInput\n\n3\n2 7 28\n\n\nOutput\n\n1\n2 7 9 28", "grammar": {"answer": null}}
{"name": "p03956 AtCoder Grand Contest 006 - Blackout", "description": "We have a grid with N rows and N columns. The cell at the i-th row and j-th column is denoted (i, j).\n\nInitially, M of the cells are painted black, and all other cells are white. Specifically, the cells (a_1, b_1), (a_2, b_2), ..., (a_M, b_M) are painted black.\n\nSnuke will try to paint as many white cells black as possible, according to the following rule:\n\n* If two cells (x, y) and (y, z) are both black and a cell (z, x) is white for integers 1≤x,y,z≤N, paint the cell (z, x) black.\n\n\n\nFind the number of black cells when no more white cells can be painted black.\n\nConstraints\n\n* 1≤N≤10^5\n* 1≤M≤10^5\n* 1≤a_i,b_i≤N\n* All pairs (a_i, b_i) are distinct.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN M\na_1 b_1\na_2 b_2\n:\na_M b_M\n\n\nOutput\n\nPrint the number of black cells when no more white cells can be painted black.\n\nExamples\n\nInput\n\n3 2\n1 2\n2 3\n\n\nOutput\n\n3\n\n\nInput\n\n2 2\n1 1\n1 2\n\n\nOutput\n\n4\n\n\nInput\n\n4 3\n1 2\n1 3\n4 4\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p03975 Kyoto University Programming Contest 2016 - A Barricade", "description": "Summer vacation ended at last and the second semester has begun. You, a Kyoto University student, came to university and heard a rumor that somebody will barricade the entrance of your classroom. The barricade will be built just before the start of the A-th class and removed by Kyoto University students just before the start of the B-th class. All the classes conducted when the barricade is blocking the entrance will be cancelled and you will not be able to attend them. Today you take N classes and class i is conducted in the t_i-th period. You take at most one class in each period. Find the number of classes you can attend.\n\nConstraints\n\n* 1 \\leq N \\leq 1000\n* 1 \\leq A < B \\leq 10^9\n* 1 \\leq t_i \\leq 10^9\n* All t_i values are distinct.\n\nInput\n\nN, A and B are given on the first line and t_i is given on the (i+1)-th line.\n\n\nN A B\nt1\n:\ntN\n\n\nOutput\n\nPrint the number of classes you can attend.\n\nExamples\n\nInput\n\n5 5 9\n4\n3\n6\n9\n1\n\n\nOutput\n\n4\n\n\nInput\n\n5 4 9\n5\n6\n7\n8\n9\n\n\nOutput\n\n1\n\n\nInput\n\n4 3 6\n9\n6\n8\n1\n\n\nOutput\n\n4\n\n\nInput\n\n2 1 2\n1\n2\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "1205_B. Shortest Cycle", "description": "You are given n integer numbers a_1, a_2, ..., a_n. Consider graph on n nodes, in which nodes i, j (i≠ j) are connected if and only if, a_i AND a_j≠ 0, where AND denotes the [bitwise AND operation](https://en.wikipedia.org/wiki/Bitwise_operation#AND).\n\nFind the length of the shortest cycle in this graph or determine that it doesn't have cycles at all.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 10^5) — number of numbers.\n\nThe second line contains n integer numbers a_1, a_2, ..., a_n (0 ≤ a_i ≤ 10^{18}).\n\nOutput\n\nIf the graph doesn't have any cycles, output -1. Else output the length of the shortest cycle.\n\nExamples\n\nInput\n\n\n4\n3 6 28 9\n\n\nOutput\n\n\n4\n\nInput\n\n\n5\n5 12 9 16 48\n\n\nOutput\n\n\n3\n\nInput\n\n\n4\n1 2 4 8\n\n\nOutput\n\n\n-1\n\nNote\n\nIn the first example, the shortest cycle is (9, 3, 6, 28).\n\nIn the second example, the shortest cycle is (5, 12, 9).\n\nThe graph has no cycles in the third example.", "grammar": {"answer": null}}
{"name": "p02468 Power", "description": "For given integers m and n, compute mn (mod 1,000,000,007). Here, A (mod M) is the remainder when A is divided by M.\n\nConstraints\n\n* 1 ≤ m ≤ 100\n* 1 ≤ n ≤ 109\n\nInput\n\n\nm n\n\n\nTwo integers m and n are given in a line.\n\nOutput\n\nPrint mn (mod 1,000,000,007) in a line.\n\nExamples\n\nInput\n\n2 3\n\n\nOutput\n\n8\n\n\nInput\n\n5 8\n\n\nOutput\n\n390625", "grammar": {"answer": null}}
{"name": "p03229 Tenka1 Programmer Beginner Contest - Align", "description": "You are given N integers; the i-th of them is A_i. Find the maximum possible sum of the absolute differences between the adjacent elements after arranging these integers in a row in any order you like.\n\nConstraints\n\n* 2 \\leq N \\leq 10^5\n* 1 \\leq A_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1\n:\nA_N\n\n\nOutput\n\nPrint the maximum possible sum of the absolute differences between the adjacent elements after arranging the given integers in a row in any order you like.\n\nExamples\n\nInput\n\n5\n6\n8\n1\n2\n3\n\n\nOutput\n\n21\n\n\nInput\n\n6\n3\n1\n4\n1\n5\n9\n\n\nOutput\n\n25\n\n\nInput\n\n3\n5\n5\n1\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "1065_G. Fibonacci Suffix", "description": "Let's denote (yet again) the sequence of Fibonacci strings:\n\nF(0) =  0, F(1) =  1, F(i) = F(i - 2) + F(i - 1), where the plus sign denotes the concatenation of two strings.\n\nLet's denote the lexicographically sorted sequence of suffixes of string F(i) as A(F(i)). For example, F(4) is 01101, and A(F(4)) is the following sequence: 01, 01101, 1, 101, 1101. Elements in this sequence are numbered from 1.\n\nYour task is to print m first characters of k-th element of A(F(n)). If there are less than m characters in this suffix, then output the whole suffix.\n\nInput\n\nThe only line of the input contains three numbers n, k and m (1 ≤ n, m ≤ 200, 1 ≤ k ≤ 10^{18}) denoting the index of the Fibonacci string you have to consider, the index of the element of A(F(n)) and the number of characters you have to output, respectively.\n\nIt is guaranteed that k does not exceed the length of F(n).\n\nOutput\n\nOutput m first characters of k-th element of A(F(n)), or the whole element if its length is less than m.\n\nExamples\n\nInput\n\n4 5 3\n\n\nOutput\n\n110\n\n\nInput\n\n4 3 3\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p03842 AtCoder Grand Contest 008 - Next or Nextnext", "description": "You are given an integer sequence a of length N. How many permutations p of the integers 1 through N satisfy the following condition?\n\n* For each 1 ≤ i ≤ N, at least one of the following holds: p_i = a_i and p_{p_i} = a_i.\n\n\n\nFind the count modulo 10^9 + 7.\n\nConstraints\n\n* 1 ≤ N ≤ 10^5\n* a_i is an integer.\n* 1 ≤ a_i ≤ N\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the number of the permutations p that satisfy the condition, modulo 10^9 + 7.\n\nExamples\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n4\n\n\nInput\n\n2\n1 1\n\n\nOutput\n\n1\n\n\nInput\n\n3\n2 1 1\n\n\nOutput\n\n2\n\n\nInput\n\n3\n1 1 1\n\n\nOutput\n\n0\n\n\nInput\n\n13\n2 1 4 3 6 7 5 9 10 8 8 9 11\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p00062 What is the Bottommost?", "description": "Consider creating the following number pattern.\n\n\n4 8 2 3 1 0 8 3 7 6\n2 0 5 4 1 8 1 0 3\n2 5 9 5 9 9 1 3\n7 4 4 4 8 0 4\n1 8 8 2 8 4\n9 6 0 0 2\n5 6 0 2\n1 6 2\n7 8\nFive\n\n\nThis pattern follows the rules below.\n\n\nA B\nC\n\n\nIn the sequence of numbers, C is the ones digit of A + B. For example\n\n\n9 5\nFour\n\n\nNow, the ones digit of 9 + 5 = 14, or 4 is placed diagonally below 9 and 5. Also,\n\n\ntwenty three\nFive\n\n\nNow, the ones digit of 2 + 3 = 5, that is, 5 is placed diagonally below 2 and 3.\n\nWrite a program that reads the 10 integers in the top line and outputs one number in the bottom line.\n\n\n\nInput\n\nThe input consists of multiple datasets. For each dataset, the top 10 numbers are given as strings on one line.\n\nThe number of datasets does not exceed 20.\n\nOutput\n\nOutputs the numbers in the bottom line to one line for each dataset.\n\nExample\n\nInput\n\n4823108376\n1234567890\n0123456789\n\n\nOutput\n\n5\n6\n4", "grammar": {"answer": null}}
{"name": "p00125 Day Count", "description": "Create a program that takes two dates as input and outputs the number of days between the two dates.\n\nDate 1 (y1, m1, d1) is the same as or earlier than date 2 (y2, m2, d2). Date 1 is included in the number of days, not date 2. Also, take the leap year into account when calculating. The leap year conditions are as follows.\n\n* The year is divisible by 4.\n* However, a year divisible by 100 is not a leap year.\n* However, a year divisible by 400 is a leap year.\n\n\n\nInput\n\nGiven multiple datasets. The format of each dataset is as follows:\n\n\ny1 m1 d1 y2 m2 d2\n\n\nWhen any of y1, m1, d1, y2, m2, and d2 is a negative number, the input ends.\n\nThe number of datasets does not exceed 50.\n\nOutput\n\nOutput the number of days on one line for each dataset.\n\nExample\n\nInput\n\n2006 9 2 2006 9 3\n2006 9 2 2006 11 11\n2004 1 1 2005 1 1\n2000 1 1 2006 1 1\n2000 1 1 2101 1 1\n-1 -1 -1 -1 -1 -1\n\n\nOutput\n\n1\n70\n366\n2192\n36890", "grammar": {"answer": null}}
{"name": "p03041 AtCoder Beginner Contest 126 - Changing a Character", "description": "You are given a string S of length N consisting of `A`, `B` and `C`, and an integer K which is between 1 and N (inclusive). Print the string S after lowercasing the K-th character in it.\n\nConstraints\n\n* 1 ≤ N ≤ 50\n* 1 ≤ K ≤ N\n* S is a string of length N consisting of `A`, `B` and `C`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nS\n\n\nOutput\n\nPrint the string S after lowercasing the K-th character in it.\n\nExamples\n\nInput\n\n3 1\nABC\n\n\nOutput\n\naBC\n\n\nInput\n\n4 3\nCABA\n\n\nOutput\n\nCAbA", "grammar": {"answer": null}}
{"name": "1031_A. Golden Plate", "description": "You have a plate and you want to add some gilding to it. The plate is a rectangle that we split into w× h cells. There should be k gilded rings, the first one should go along the edge of the plate, the second one — 2 cells away from the edge and so on. Each ring has a width of 1 cell. Formally, the i-th of these rings should consist of all bordering cells on the inner rectangle of size (w - 4(i - 1))×(h - 4(i - 1)).\n\n<image> The picture corresponds to the third example.\n\nYour task is to compute the number of cells to be gilded.\n\nInput\n\nThe only line contains three integers w, h and k (3 ≤ w, h ≤ 100, 1 ≤ k ≤ \\left⌊ (min(n, m) + 1)/(4)\\right⌋, where ⌊ x ⌋ denotes the number x rounded down) — the number of rows, columns and the number of rings, respectively.\n\nOutput\n\nPrint a single positive integer — the number of cells to be gilded.\n\nExamples\n\nInput\n\n3 3 1\n\n\nOutput\n\n8\n\n\nInput\n\n7 9 1\n\n\nOutput\n\n28\n\n\nInput\n\n7 9 2\n\n\nOutput\n\n40\n\nNote\n\nThe first example is shown on the picture below.\n\n<image>\n\nThe second example is shown on the picture below.\n\n<image>\n\nThe third example is shown in the problem description.", "grammar": {"answer": null}}
{"name": "p02419 Finding a Word", "description": "Write a program which reads a word W and a text T, and prints the number of word W which appears in text T\n\nT consists of string Ti separated by space characters and newlines. Count the number of Ti which equals to W. The word and text are case insensitive.\n\nConstraints\n\n* The length of W ≤ 10\n* W consists of lower case letters\n* The length of T in a line ≤ 1000\n\nInput\n\nIn the first line, the word W is given. In the following lines, the text T is given separated by space characters and newlines.\n\n\"END_OF_TEXT\" indicates the end of the text.\n\nOutput\n\nPrint the number of W in the text.\n\nExample\n\nInput\n\ncomputer\nNurtures computer scientists and highly-skilled computer engineers\nwho will create and exploit \"knowledge\" for the new era.\nProvides an outstanding computer environment.\nEND_OF_TEXT\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p03206 AtCoder Beginner Contest 115 - Christmas Eve Eve Eve", "description": "In some other world, today is December D-th.\n\nWrite a program that prints `Christmas` if D = 25, `Christmas Eve` if D = 24, `Christmas Eve Eve` if D = 23 and `Christmas Eve Eve Eve` if D = 22.\n\nConstraints\n\n* 22 \\leq D \\leq 25\n* D is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nD\n\n\nOutput\n\nPrint the specified string (case-sensitive).\n\nExamples\n\nInput\n\n25\n\n\nOutput\n\nChristmas\n\n\nInput\n\n22\n\n\nOutput\n\nChristmas Eve Eve Eve", "grammar": {"answer": null}}
{"name": "p02239 Breadth First Search", "description": "Write a program which reads an directed graph $G = (V, E)$, and finds the shortest distance from vertex $1$ to each vertex (the number of edges in the shortest path). Vertices are identified by IDs $1, 2, ... n$.\n\nConstraints\n\n* $1 \\leq n \\leq 100$\n\nInput\n\nIn the first line, an integer $n$ denoting the number of vertices, is given. In the next $n$ lines, adjacent lists of vertex $u$ are given in the following format:\n\n$u$ $k$ $v_1$ $v_2$ ... $v_k$\n\n$u$ is ID of the vertex and $k$ denotes its degree.$v_i$ are IDs of vertices adjacent to $u$.\n\nOutput\n\nFor each vertex $u$, print $id$ and $d$ in a line. $id$ is ID of vertex $u$ and $d$ is the distance from vertex $1$ to vertex $u$. If there are no path from vertex $1$ to vertex $u$, print -1 as the shortest distance. Print in order of IDs.\n\nExample\n\nInput\n\n4\n1 2 2 4\n2 1 4\n3 0\n4 1 3\n\n\nOutput\n\n1 0\n2 1\n3 2\n4 1", "grammar": {"answer": null}}
{"name": "p03323 AtCoder Beginner Contest 100 - Happy Birthday!", "description": "E869120's and square1001's 16-th birthday is coming soon.\nTakahashi from AtCoder Kingdom gave them a round cake cut into 16 equal fan-shaped pieces.\n\nE869120 and square1001 were just about to eat A and B of those pieces, respectively,\nwhen they found a note attached to the cake saying that \"the same person should not take two adjacent pieces of cake\".\n\nCan both of them obey the instruction in the note and take desired numbers of pieces of cake?\n\nConstraints\n\n* A and B are integers between 1 and 16 (inclusive).\n* A+B is at most 16.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nIf both E869120 and square1001 can obey the instruction in the note and take desired numbers of pieces of cake, print `Yay!`; otherwise, print `:(`.\n\nExamples\n\nInput\n\n5 4\n\n\nOutput\n\nYay!\n\n\nInput\n\n8 8\n\n\nOutput\n\nYay!\n\n\nInput\n\n11 4\n\n\nOutput\n\n:(", "grammar": {"answer": null}}
{"name": "p03568 CODE FESTIVAL 2017 qual C - Similar Arrays", "description": "We will say that two integer sequences of length N, x_1, x_2, ..., x_N and y_1, y_2, ..., y_N, are similar when |x_i - y_i| \\leq 1 holds for all i (1 \\leq i \\leq N).\n\nIn particular, any integer sequence is similar to itself.\n\nYou are given an integer N and an integer sequence of length N, A_1, A_2, ..., A_N.\n\nHow many integer sequences b_1, b_2, ..., b_N are there such that b_1, b_2, ..., b_N is similar to A and the product of all elements, b_1 b_2 ... b_N, is even?\n\nConstraints\n\n* 1 \\leq N \\leq 10\n* 1 \\leq A_i \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the number of integer sequences that satisfy the condition.\n\nExamples\n\nInput\n\n2\n2 3\n\n\nOutput\n\n7\n\n\nInput\n\n3\n3 3 3\n\n\nOutput\n\n26\n\n\nInput\n\n1\n100\n\n\nOutput\n\n1\n\n\nInput\n\n10\n90 52 56 71 44 8 13 30 57 84\n\n\nOutput\n\n58921", "grammar": {"answer": null}}
{"name": "460_D. Little Victor and Set", "description": "Little Victor adores the sets theory. Let us remind you that a set is a group of numbers where all numbers are pairwise distinct. Today Victor wants to find a set of integers S that has the following properties:\n\n  * for all x <image> the following inequality holds l ≤ x ≤ r; \n  * 1 ≤ |S| ≤ k; \n  * lets denote the i-th element of the set S as si; value <image> must be as small as possible. \n\n\n\nHelp Victor find the described set.\n\nInput\n\nThe first line contains three space-separated integers l, r, k (1 ≤ l ≤ r ≤ 1012; 1 ≤ k ≤ min(106, r - l + 1)).\n\nOutput\n\nPrint the minimum possible value of f(S). Then print the cardinality of set |S|. Then print the elements of the set in any order.\n\nIf there are multiple optimal sets, you can print any of them.\n\nExamples\n\nInput\n\n8 15 3\n\n\nOutput\n\n1\n2\n10 11\n\n\nInput\n\n8 30 7\n\n\nOutput\n\n0\n5\n14 9 28 11 16\n\nNote\n\nOperation <image> represents the operation of bitwise exclusive OR. In other words, it is the XOR operation.", "grammar": {"answer": null}}
{"name": "p04037 AtCoder Grand Contest 002 - Candy Piles", "description": "There are N piles of candies on the table. The piles are numbered 1 through N. At first, pile i contains a_i candies.\n\nSnuke and Ciel are playing a game. They take alternating turns. Snuke goes first. In each turn, the current player must perform one of the following two operations:\n\n1. Choose a pile with the largest number of candies remaining, then eat all candies of that pile.\n2. From each pile with one or more candies remaining, eat one candy.\n\n\n\nThe player who eats the last candy on the table, loses the game. Determine which player will win if both players play the game optimally.\n\nConstraints\n\n* 1≤N≤10^5\n* 1≤a_i≤10^9\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\na_1 a_2 … a_N\n\n\nOutput\n\nIf Snuke will win, print `First`. If Ciel will win, print `Second`.\n\nExamples\n\nInput\n\n2\n1 3\n\n\nOutput\n\nFirst\n\n\nInput\n\n3\n1 2 1\n\n\nOutput\n\nFirst\n\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\nSecond", "grammar": {"answer": null}}
{"name": "1220_B. Multiplication Table", "description": "Sasha grew up and went to first grade. To celebrate this event her mother bought her a multiplication table M with n rows and n columns such that M_{ij}=a_i ⋅ a_j where a_1, ..., a_n is some sequence of positive integers.\n\nOf course, the girl decided to take it to school with her. But while she was having lunch, hooligan Grisha erased numbers on the main diagonal and threw away the array a_1, ..., a_n. Help Sasha restore the array!\n\nInput\n\nThe first line contains a single integer n (3 ⩽ n ⩽ 10^3), the size of the table. \n\nThe next n lines contain n integers each. The j-th number of the i-th line contains the number M_{ij} (1 ≤ M_{ij} ≤ 10^9). The table has zeroes on the main diagonal, that is, M_{ii}=0.\n\nOutput\n\nIn a single line print n integers, the original array a_1, ..., a_n (1 ≤ a_i ≤ 10^9). It is guaranteed that an answer exists. If there are multiple answers, print any.\n\nExamples\n\nInput\n\n\n5\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0\n\n\nOutput\n\n\n2 2 3 1 2 \n\nInput\n\n\n3\n0 99990000 99970002\n99990000 0 99980000\n99970002 99980000 0\n\n\nOutput\n\n\n9999 10000 9998 ", "grammar": {"answer": null}}
{"name": "189_A. Cut Ribbon", "description": "Polycarpus has a ribbon, its length is n. He wants to cut the ribbon in a way that fulfils the following two conditions: \n\n  * After the cutting each ribbon piece should have length a, b or c. \n  * After the cutting the number of ribbon pieces should be maximum. \n\n\n\nHelp Polycarpus and find the number of ribbon pieces after the required cutting.\n\nInput\n\nThe first line contains four space-separated integers n, a, b and c (1 ≤ n, a, b, c ≤ 4000) — the length of the original ribbon and the acceptable lengths of the ribbon pieces after the cutting, correspondingly. The numbers a, b and c can coincide.\n\nOutput\n\nPrint a single number — the maximum possible number of ribbon pieces. It is guaranteed that at least one correct ribbon cutting exists.\n\nExamples\n\nInput\n\n5 5 3 2\n\n\nOutput\n\n2\n\n\nInput\n\n7 5 5 2\n\n\nOutput\n\n2\n\nNote\n\nIn the first example Polycarpus can cut the ribbon in such way: the first piece has length 2, the second piece has length 3.\n\nIn the second example Polycarpus can cut the ribbon in such way: the first piece has length 5, the second piece has length 2.", "grammar": {"answer": null}}
{"name": "p03820 AtCoder Regular Contest 068 - Solitaire", "description": "Snuke has decided to play with N cards and a deque (that is, a double-ended queue). Each card shows an integer from 1 through N, and the deque is initially empty.\n\nSnuke will insert the cards at the beginning or the end of the deque one at a time, in order from 1 to N. Then, he will perform the following action N times: take out the card from the beginning or the end of the deque and eat it.\n\nAfterwards, we will construct an integer sequence by arranging the integers written on the eaten cards, in the order they are eaten. Among the sequences that can be obtained in this way, find the number of the sequences such that the K-th element is 1. Print the answer modulo 10^{9} + 7.\n\nConstraints\n\n* 1 ≦ K ≦ N ≦ 2{,}000\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN K\n\n\nOutput\n\nPrint the answer modulo 10^{9} + 7.\n\nExamples\n\nInput\n\n2 1\n\n\nOutput\n\n1\n\n\nInput\n\n17 2\n\n\nOutput\n\n262144\n\n\nInput\n\n2000 1000\n\n\nOutput\n\n674286644", "grammar": {"answer": null}}
{"name": "888_C. K-Dominant Character", "description": "You are given a string s consisting of lowercase Latin letters. Character c is called k-dominant iff each substring of s with length at least k contains this character c.\n\nYou have to find minimum k such that there exists at least one k-dominant character.\n\nInput\n\nThe first line contains string s consisting of lowercase Latin letters (1 ≤ |s| ≤ 100000).\n\nOutput\n\nPrint one number — the minimum value of k such that there exists at least one k-dominant character.\n\nExamples\n\nInput\n\nabacaba\n\n\nOutput\n\n2\n\n\nInput\n\nzzzzz\n\n\nOutput\n\n1\n\n\nInput\n\nabcde\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "870_C. Maximum splitting", "description": "You are given several queries. In the i-th query you are given a single positive integer ni. You are to represent ni as a sum of maximum possible number of composite summands and print this maximum number, or print -1, if there are no such splittings.\n\nAn integer greater than 1 is composite, if it is not prime, i.e. if it has positive divisors not equal to 1 and the integer itself.\n\nInput\n\nThe first line contains single integer q (1 ≤ q ≤ 105) — the number of queries.\n\nq lines follow. The (i + 1)-th line contains single integer ni (1 ≤ ni ≤ 109) — the i-th query.\n\nOutput\n\nFor each query print the maximum possible number of summands in a valid splitting to composite summands, or -1, if there are no such splittings.\n\nExamples\n\nInput\n\n1\n12\n\n\nOutput\n\n3\n\n\nInput\n\n2\n6\n8\n\n\nOutput\n\n1\n2\n\n\nInput\n\n3\n1\n2\n3\n\n\nOutput\n\n-1\n-1\n-1\n\nNote\n\n12 = 4 + 4 + 4 = 4 + 8 = 6 + 6 = 12, but the first splitting has the maximum possible number of summands.\n\n8 = 4 + 4, 6 can't be split into several composite summands.\n\n1, 2, 3 are less than any composite number, so they do not have valid splittings.", "grammar": {"answer": null}}
{"name": "p02752 Social Infrastructure Information Systems Division  Hitachi Programming Contest 2020 - Preserve Diameter", "description": "We have a tree G with N vertices numbered 1 to N. The i-th edge of G connects Vertex a_i and Vertex b_i.\n\nConsider adding zero or more edges in G, and let H be the graph resulted.\n\nFind the number of graphs H that satisfy the following conditions, modulo 998244353.\n\n* H does not contain self-loops or multiple edges.\n* The diameters of G and H are equal.\n* For every pair of vertices in H that is not directly connected by an edge, the addition of an edge directly connecting them would reduce the diameter of the graph.\n\nConstraints\n\n* 3 \\le N \\le 2 \\times 10^5\n* 1 \\le a_i, b_i \\le N\n* The given graph is a tree.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 b_1\n\\vdots\na_{N-1} b_{N-1}\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n6\n1 6\n2 1\n5 2\n3 4\n2 3\n\n\nOutput\n\n3\n\n\nInput\n\n3\n1 2\n2 3\n\n\nOutput\n\n1\n\n\nInput\n\n9\n1 2\n2 3\n4 2\n1 7\n6 1\n2 5\n5 9\n6 8\n\n\nOutput\n\n27\n\n\nInput\n\n19\n2 4\n15 8\n1 16\n1 3\n12 19\n1 18\n7 11\n11 15\n12 9\n1 6\n7 14\n18 2\n13 12\n13 5\n16 13\n7 1\n11 10\n7 17\n\n\nOutput\n\n78732", "grammar": {"answer": null}}
{"name": "p03252 AtCoder Beginner Contest 110 - String Transformation", "description": "You are given strings S and T consisting of lowercase English letters.\n\nYou can perform the following operation on S any number of times:\n\nOperation: Choose two distinct lowercase English letters c_1 and c_2, then replace every occurrence of c_1 with c_2, and every occurrence of c_2 with c_1.\n\nDetermine if S and T can be made equal by performing the operation zero or more times.\n\nConstraints\n\n* 1 \\leq |S| \\leq 2 \\times 10^5\n* |S| = |T|\n* S and T consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\nT\n\n\nOutput\n\nIf S and T can be made equal, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\nazzel\napple\n\n\nOutput\n\nYes\n\n\nInput\n\nchokudai\nredcoder\n\n\nOutput\n\nNo\n\n\nInput\n\nabcdefghijklmnopqrstuvwxyz\nibyhqfrekavclxjstdwgpzmonu\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "285_A. Slightly Decreasing Permutations", "description": "Permutation p is an ordered set of integers p1, p2, ..., pn, consisting of n distinct positive integers, each of them doesn't exceed n. We'll denote the i-th element of permutation p as pi. We'll call number n the size or the length of permutation p1, p2, ..., pn.\n\nThe decreasing coefficient of permutation p1, p2, ..., pn is the number of such i (1 ≤ i < n), that pi > pi + 1.\n\nYou have numbers n and k. Your task is to print the permutation of length n with decreasing coefficient k.\n\nInput\n\nThe single line contains two space-separated integers: n, k (1 ≤ n ≤ 105, 0 ≤ k < n) — the permutation length and the decreasing coefficient.\n\nOutput\n\nIn a single line print n space-separated integers: p1, p2, ..., pn — the permutation of length n with decreasing coefficient k. \n\nIf there are several permutations that meet this condition, print any of them. It is guaranteed that the permutation with the sought parameters exists.\n\nExamples\n\nInput\n\n5 2\n\n\nOutput\n\n1 5 2 4 3\n\n\nInput\n\n3 0\n\n\nOutput\n\n1 2 3\n\n\nInput\n\n3 2\n\n\nOutput\n\n3 2 1", "grammar": {"answer": null}}
{"name": "p02951 AtCoder Beginner Contest 136 - Transfer", "description": "We have two bottles for holding water.\n\nBottle 1 can hold up to A milliliters of water, and now it contains B milliliters of water.\n\nBottle 2 contains C milliliters of water.\n\nWe will transfer water from Bottle 2 to Bottle 1 as much as possible.\n\nHow much amount of water will remain in Bottle 2?\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq B \\leq A \\leq 20\n* 1 \\leq C \\leq 20\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C\n\n\nOutput\n\nPrint the integer representing the amount of water, in milliliters, that will remain in Bottle 2.\n\nExamples\n\nInput\n\n6 4 3\n\n\nOutput\n\n1\n\n\nInput\n\n8 3 9\n\n\nOutput\n\n4\n\n\nInput\n\n12 3 7\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03228 Tenka1 Programmer Beginner Contest - Exchange", "description": "In the beginning, Takahashi has A cookies, and Aoki has B cookies. They will perform the following operation alternately, starting from Takahashi:\n\n* If the number of cookies in his hand is odd, eat one of those cookies; if the number is even, do nothing. Then, give one-half of the cookies in his hand to the other person.\n\n\n\nFind the numbers of cookies Takahashi and Aoki respectively have after performing K operations in total.\n\nConstraints\n\n* 1 \\leq A,B \\leq 10^9\n* 1 \\leq K \\leq 100\n* A,B and K are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B K\n\n\nOutput\n\nPrint the number of cookies Takahashi has, and the number of cookies Aoki has, in this order, after performing K operations in total.\n\nExamples\n\nInput\n\n5 4 2\n\n\nOutput\n\n5 3\n\n\nInput\n\n3 3 3\n\n\nOutput\n\n1 3\n\n\nInput\n\n314159265 358979323 84\n\n\nOutput\n\n448759046 224379523", "grammar": {"answer": null}}
{"name": "13_C. Sequence", "description": "Little Petya likes to play very much. And most of all he likes to play the following game:\n\nHe is given a sequence of N integer numbers. At each step it is allowed to increase the value of any number by 1 or to decrease it by 1. The goal of the game is to make the sequence non-decreasing with the smallest number of steps. Petya is not good at math, so he asks for your help.\n\nThe sequence a is called non-decreasing if a1 ≤ a2 ≤ ... ≤ aN holds, where N is the length of the sequence.\n\nInput\n\nThe first line of the input contains single integer N (1 ≤ N ≤ 5000) — the length of the initial sequence. The following N lines contain one integer each — elements of the sequence. These numbers do not exceed 109 by absolute value.\n\nOutput\n\nOutput one integer — minimum number of steps required to achieve the goal.\n\nExamples\n\nInput\n\n5\n3 2 -1 2 11\n\n\nOutput\n\n4\n\n\nInput\n\n5\n2 1 1 1 1\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p01287 Colored Octahedra", "description": "A young boy John is playing with eight triangular panels. These panels are all regular triangles of the same size, each painted in a single color; John is forming various octahedra with them.\n\nWhile he enjoys his playing, his father is wondering how many octahedra can be made of these panels since he is a pseudo-mathematician. Your task is to help his father: write a program that reports the number of possible octahedra for given panels. Here, a pair of octahedra should be considered identical when they have the same combination of the colors allowing rotation.\n\n\n\nInput\n\nThe input consists of multiple datasets. Each dataset has the following format:\n\nColor1 Color2 ... Color8\n\nEach Colori (1 ≤ i ≤ 8) is a string of up to 20 lowercase alphabets and represents the color of the i-th triangular panel.\n\nThe input ends with EOF.\n\nOutput\n\nFor each dataset, output the number of different octahedra that can be made of given panels.\n\nExample\n\nInput\n\nblue blue blue blue blue blue blue blue\nred blue blue blue blue blue blue blue\nred red blue blue blue blue blue blue\n\n\nOutput\n\n1\n1\n3", "grammar": {"answer": null}}
{"name": "21_D. Traveling Graph", "description": "You are given undirected weighted graph. Find the length of the shortest cycle which starts from the vertex 1 and passes throught all the edges at least once. Graph may contain multiply edges between a pair of vertices and loops (edges from the vertex to itself).\n\nInput\n\nThe first line of the input contains two integers n and m (1 ≤ n ≤ 15, 0 ≤ m ≤ 2000), n is the amount of vertices, and m is the amount of edges. Following m lines contain edges as a triples x, y, w (1 ≤ x, y ≤ n, 1 ≤ w ≤ 10000), x, y are edge endpoints, and w is the edge length.\n\nOutput\n\nOutput minimal cycle length or -1 if it doesn't exists.\n\nExamples\n\nInput\n\n3 3\n1 2 1\n2 3 1\n3 1 1\n\n\nOutput\n\n3\n\n\nInput\n\n3 2\n1 2 3\n2 3 4\n\n\nOutput\n\n14", "grammar": {"answer": null}}
{"name": "598_F. Cut Length", "description": "Given simple (without self-intersections) n-gon. It is not necessary convex. Also you are given m lines. For each line find the length of common part of the line and the n-gon.\n\nThe boundary of n-gon belongs to polygon. It is possible that n-gon contains 180-degree angles.\n\nInput\n\nThe first line contains integers n and m (3 ≤ n ≤ 1000;1 ≤ m ≤ 100). The following n lines contain coordinates of polygon vertices (in clockwise or counterclockwise direction). All vertices are distinct.\n\nThe following m lines contain line descriptions. Each of them contains two distict points of a line by their coordinates.\n\nAll given in the input coordinates are real numbers, given with at most two digits after decimal point. They do not exceed 105 by absolute values.\n\nOutput\n\nPrint m lines, the i-th line should contain the length of common part of the given n-gon and the i-th line. The answer will be considered correct if the absolute or relative error doesn't exceed 10 - 6.\n\nExamples\n\nInput\n\n4 3\n0 0\n1 0\n1 1\n0 1\n0 0 1 1\n0 0 0 1\n0 0 1 -1\n\n\nOutput\n\n1.41421356237309514547\n1.00000000000000000000\n0.00000000000000000000", "grammar": {"answer": null}}
{"name": "p01824 Surface Area of Cubes", "description": "Example\n\nInput\n\n2 2 2 1\n0 0 0\n\n\nOutput\n\n24", "grammar": {"answer": null}}
{"name": "p02189 Min Element", "description": "Min Element\n\nGiven the sequence a_1, a_2, .., a_N.\n\nFind the minimum number in this sequence.\n\nIf the minimum value is in more than one place, answer the one with the lowest number.\n\ninput\n\n\nN\na_1 a_2 ... a_N\n\n\noutput\n\nOutput the smallest i such that a_i is the minimum value in the sequence.\n\nConstraint\n\n* 1 \\ leq N \\ leq 10 ^ 5\n* 1 \\ leq a_i \\ leq 10 ^ 9\n\n\n\nInput example\n\n\n6\n8 6 9 1 2 1\n\n\nOutput example\n\n\nFour\n\n\n\n\n\n\nExample\n\nInput\n\n6\n8 6 9 1 2 1\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "656_C. Without Text", "description": "<image>\n\nYou can preview the image in better quality by the link: [http://assets.codeforces.com/files/656/without-text.png](//assets.codeforces.com/files/656/without-text.png)\n\nInput\n\nThe only line of the input is a string (between 1 and 50 characters long, inclusive). Each character will be an alphanumeric character or a full stop \".\".\n\nOutput\n\nOutput the required answer.\n\nExamples\n\nInput\n\nCodeforces\n\n\nOutput\n\n-87\n\n\nInput\n\nAPRIL.1st\n\n\nOutput\n\n17", "grammar": {"answer": null}}
{"name": "p03456 AtCoder Beginner Contest 086 - 1 21", "description": "AtCoDeer the deer has found two positive integers, a and b. Determine whether the concatenation of a and b in this order is a square number.\n\nConstraints\n\n* 1 ≤ a,b ≤ 100\n* a and b are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\na b\n\n\nOutput\n\nIf the concatenation of a and b in this order is a square number, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n1 21\n\n\nOutput\n\nYes\n\n\nInput\n\n100 100\n\n\nOutput\n\nNo\n\n\nInput\n\n12 10\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p03690 AtCoder Grand Contest 016 - XOR Replace", "description": "There is a sequence of length N: a = (a_1, a_2, ..., a_N). Here, each a_i is a non-negative integer.\n\nSnuke can repeatedly perform the following operation:\n\n* Let the XOR of all the elements in a be x. Select an integer i (1 ≤ i ≤ N) and replace a_i with x.\n\n\n\nSnuke's objective is to match a with another sequence b = (b_1, b_2, ..., b_N). Here, each b_i is a non-negative integer.\n\nDetermine whether the objective is achievable, and find the minimum necessary number of operations if the answer is positive.\n\nConstraints\n\n* 2 ≤ N ≤ 10^5\n* a_i and b_i are integers.\n* 0 ≤ a_i, b_i < 2^{30}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\nb_1 b_2 ... b_N\n\n\nOutput\n\nIf the objective is achievable, print the minimum necessary number of operations. Otherwise, print `-1` instead.\n\nExamples\n\nInput\n\n3\n0 1 2\n3 1 0\n\n\nOutput\n\n2\n\n\nInput\n\n3\n0 1 2\n0 1 2\n\n\nOutput\n\n0\n\n\nInput\n\n2\n1 1\n0 0\n\n\nOutput\n\n-1\n\n\nInput\n\n4\n0 1 2 3\n1 0 3 2\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p03425 AtCoder Beginner Contest 089 - March", "description": "There are N people. The name of the i-th person is S_i.\n\nWe would like to choose three people so that the following conditions are met:\n\n* The name of every chosen person begins with `M`, `A`, `R`, `C` or `H`.\n* There are no multiple people whose names begin with the same letter.\n\n\n\nHow many such ways are there to choose three people, disregarding order?\n\nNote that the answer may not fit into a 32-bit integer type.\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* S_i consists of uppercase English letters.\n* 1 \\leq |S_i| \\leq 10\n* S_i \\neq S_j (i \\neq j)\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS_1\n:\nS_N\n\n\nOutput\n\nIf there are x ways to choose three people so that the given conditions are met, print x.\n\nExamples\n\nInput\n\n5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n\n\nOutput\n\n2\n\n\nInput\n\n4\nZZ\nZZZ\nZ\nZZZZZZZZZZ\n\n\nOutput\n\n0\n\n\nInput\n\n5\nCHOKUDAI\nRNG\nMAKOTO\nAOKI\nRINGO\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "p03783 AtCoder Regular Contest 070 - NarrowRectangles", "description": "AtCoDeer the deer found N rectangle lying on the table, each with height 1. If we consider the surface of the desk as a two-dimensional plane, the i-th rectangle i(1≤i≤N) covers the vertical range of [i-1,i] and the horizontal range of [l_i,r_i], as shown in the following figure:\n\n<image>\n\nAtCoDeer will move these rectangles horizontally so that all the rectangles are connected. For each rectangle, the cost to move it horizontally by a distance of x, is x. Find the minimum cost to achieve connectivity. It can be proved that this value is always an integer under the constraints of the problem.\n\nConstraints\n\n* All input values are integers.\n* 1≤N≤10^5\n* 1≤l_i<r_i≤10^9\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nl_1 r_1\nl_2 r_2\n:\nl_N r_N\n\n\nOutput\n\nPrint the minimum cost to achieve connectivity.\n\nExamples\n\nInput\n\n3\n1 3\n5 7\n1 3\n\n\nOutput\n\n2\n\n\nInput\n\n3\n2 5\n4 6\n1 4\n\n\nOutput\n\n0\n\n\nInput\n\n5\n999999999 1000000000\n1 2\n314 315\n500000 500001\n999999999 1000000000\n\n\nOutput\n\n1999999680\n\n\nInput\n\n5\n123456 789012\n123 456\n12 345678901\n123456 789012\n1 23\n\n\nOutput\n\n246433\n\n\nInput\n\n1\n1 400\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "900_A. Find Extra One", "description": "You have n distinct points on a plane, none of them lie on OY axis. Check that there is a point after removal of which the remaining points are located on one side of the OY axis.\n\nInput\n\nThe first line contains a single positive integer n (2 ≤ n ≤ 105).\n\nThe following n lines contain coordinates of the points. The i-th of these lines contains two single integers xi and yi (|xi|, |yi| ≤ 109, xi ≠ 0). No two points coincide.\n\nOutput\n\nPrint \"Yes\" if there is such a point, \"No\" — otherwise.\n\nYou can print every letter in any case (upper or lower).\n\nExamples\n\nInput\n\n3\n1 1\n-1 -1\n2 -1\n\n\nOutput\n\nYes\n\nInput\n\n4\n1 1\n2 2\n-1 1\n-2 2\n\n\nOutput\n\nNo\n\nInput\n\n3\n1 2\n2 1\n4 60\n\n\nOutput\n\nYes\n\nNote\n\nIn the first example the second point can be removed.\n\nIn the second example there is no suitable for the condition point.\n\nIn the third example any point can be removed.", "grammar": {"answer": null}}
{"name": "p03415 AtCoder Beginner Contest 090 - Diagonal String", "description": "We have a 3×3 square grid, where each square contains a lowercase English letters. The letter in the square at the i-th row from the top and j-th column from the left is c_{ij}.\n\nPrint the string of length 3 that can be obtained by concatenating the letters in the squares on the diagonal connecting the top-left and bottom-right corner of the grid, from the top-left to bottom-right.\n\nConstraints\n\n* Input consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nc_{11}c_{12}c_{13}\nc_{21}c_{22}c_{23}\nc_{31}c_{32}c_{33}\n\n\nOutput\n\nPrint the string of length 3 that can be obtained by concatenating the letters on the diagonal connecting the top-left and bottom-right corner of the grid, from the top-left to bottom-right.\n\nExamples\n\nInput\n\nant\nobe\nrec\n\n\nOutput\n\nabc\n\n\nInput\n\nedu\ncat\nion\n\n\nOutput\n\nean", "grammar": {"answer": null}}
{"name": "p02247 Naive String Search", "description": "Find places where a string P is found within a text T. Print all indices of T where P found. The indices of T start with 0.\n\nConstraints\n\n* 1 ≤ length of T ≤ 1000\n* 1 ≤ length of P ≤ 1000\n* The input consists of alphabetical characters and digits\n\nInput\n\nIn the first line, a text T is given. In the second line, a string P is given.\n\nExamples\n\nInput\n\naabaaa\naa\n\n\nOutput\n\n0\n3\n4\n\n\nInput\n\nxyzz\nyz\n\n\nOutput\n\n1\n\n\nInput\n\nabc\nxyz\n\n\nOutput", "grammar": {"answer": null}}
{"name": "665_C. Simple Strings", "description": "zscoder loves simple strings! A string t is called simple if every pair of adjacent characters are distinct. For example ab, aba, zscoder are simple whereas aa, add are not simple.\n\nzscoder is given a string s. He wants to change a minimum number of characters so that the string s becomes simple. Help him with this task!\n\nInput\n\nThe only line contains the string s (1 ≤ |s| ≤ 2·105) — the string given to zscoder. The string s consists of only lowercase English letters.\n\nOutput\n\nPrint the simple string s' — the string s after the minimal number of changes. If there are multiple solutions, you may output any of them.\n\nNote that the string s' should also consist of only lowercase English letters.\n\nExamples\n\nInput\n\naab\n\n\nOutput\n\nbab\n\n\nInput\n\ncaaab\n\n\nOutput\n\ncabab\n\n\nInput\n\nzscoder\n\n\nOutput\n\nzscoder", "grammar": {"answer": null}}
{"name": "p03306 SoundHound Inc. Programming Contest 2018 -Masters Tournament- - + Graph", "description": "Kenkoooo found a simple connected graph. The vertices are numbered 1 through n. The i-th edge connects Vertex u_i and v_i, and has a fixed integer s_i.\n\nKenkoooo is trying to write a positive integer in each vertex so that the following condition is satisfied:\n\n* For every edge i, the sum of the positive integers written in Vertex u_i and v_i is equal to s_i.\n\n\n\nFind the number of such ways to write positive integers in the vertices.\n\nConstraints\n\n* 2 \\leq n \\leq 10^5\n* 1 \\leq m \\leq 10^5\n* 1 \\leq u_i < v_i \\leq n\n* 2 \\leq s_i \\leq 10^9\n* If i\\neq j, then u_i \\neq u_j  or v_i \\neq v_j.\n* The graph is connected.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nn m\nu_1 v_1 s_1\n:\nu_m v_m s_m\n\n\nOutput\n\nPrint the number of ways to write positive integers in the vertices so that the condition is satisfied.\n\nExamples\n\nInput\n\n3 3\n1 2 3\n2 3 5\n1 3 4\n\n\nOutput\n\n1\n\n\nInput\n\n4 3\n1 2 6\n2 3 7\n3 4 5\n\n\nOutput\n\n3\n\n\nInput\n\n8 7\n1 2 1000000000\n2 3 2\n3 4 1000000000\n4 5 2\n5 6 1000000000\n6 7 2\n7 8 1000000000\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p01793 Content Delivery", "description": "Example\n\nInput\n\n3 2\n1 2 1\n2 3 2\n1 10 100\n\n\nOutput\n\n320", "grammar": {"answer": null}}
{"name": "912_E. Prime Gift", "description": "Opposite to Grisha's nice behavior, Oleg, though he has an entire year at his disposal, didn't manage to learn how to solve number theory problems in the past year. That's why instead of Ded Moroz he was visited by his teammate Andrew, who solemnly presented him with a set of n distinct prime numbers alongside with a simple task: Oleg is to find the k-th smallest integer, such that all its prime divisors are in this set. \n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 16).\n\nThe next line lists n distinct prime numbers p1, p2, ..., pn (2 ≤ pi ≤ 100) in ascending order.\n\nThe last line gives a single integer k (1 ≤ k). It is guaranteed that the k-th smallest integer such that all its prime divisors are in this set does not exceed 1018.\n\nOutput\n\nPrint a single line featuring the k-th smallest integer. It's guaranteed that the answer doesn't exceed 1018.\n\nExamples\n\nInput\n\n3\n2 3 5\n7\n\n\nOutput\n\n8\n\n\nInput\n\n5\n3 7 11 13 31\n17\n\n\nOutput\n\n93\n\nNote\n\nThe list of numbers with all prime divisors inside {2, 3, 5} begins as follows:\n\n(1, 2, 3, 4, 5, 6, 8, ...)\n\nThe seventh number in this list (1-indexed) is eight.", "grammar": {"answer": null}}
{"name": "p03993 CODE FESTIVAL 2016 qual A - Friendly Rabbits", "description": "There are N rabbits, numbered 1 through N.\n\nThe i-th (1≤i≤N) rabbit likes rabbit a_i. Note that no rabbit can like itself, that is, a_i≠i.\n\nFor a pair of rabbits i and j (i＜j), we call the pair (i，j) a friendly pair if the following condition is met.\n\n* Rabbit i likes rabbit j and rabbit j likes rabbit i.\n\n\n\nCalculate the number of the friendly pairs.\n\nConstraints\n\n* 2≤N≤10^5\n* 1≤a_i≤N\n* a_i≠i\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the number of the friendly pairs.\n\nExamples\n\nInput\n\n4\n2 1 4 3\n\n\nOutput\n\n2\n\n\nInput\n\n3\n2 3 1\n\n\nOutput\n\n0\n\n\nInput\n\n5\n5 5 5 5 1\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "922_A. Cloning Toys", "description": "Imp likes his plush toy a lot.\n\n<image>\n\nRecently, he found a machine that can clone plush toys. Imp knows that if he applies the machine to an original toy, he additionally gets one more original toy and one copy, and if he applies the machine to a copied toy, he gets two additional copies.\n\nInitially, Imp has only one original toy. He wants to know if it is possible to use machine to get exactly x copied toys and y original toys? He can't throw toys away, and he can't apply the machine to a copy if he doesn't currently have any copies.\n\nInput\n\nThe only line contains two integers x and y (0 ≤ x, y ≤ 109) — the number of copies and the number of original toys Imp wants to get (including the initial one).\n\nOutput\n\nPrint \"Yes\", if the desired configuration is possible, and \"No\" otherwise.\n\nYou can print each letter in arbitrary case (upper or lower).\n\nExamples\n\nInput\n\n6 3\n\n\nOutput\n\nYes\n\n\nInput\n\n4 2\n\n\nOutput\n\nNo\n\n\nInput\n\n1000 1001\n\n\nOutput\n\nYes\n\nNote\n\nIn the first example, Imp has to apply the machine twice to original toys and then twice to copies.", "grammar": {"answer": null}}
{"name": "5_C. Longest Regular Bracket Sequence", "description": "This is yet another problem dealing with regular bracket sequences.\n\nWe should remind you that a bracket sequence is called regular, if by inserting «+» and «1» into it we can get a correct mathematical expression. For example, sequences «(())()», «()» and «(()(()))» are regular, while «)(», «(()» and «(()))(» are not. \n\nYou are given a string of «(» and «)» characters. You are to find its longest substring that is a regular bracket sequence. You are to find the number of such substrings as well.\n\nInput\n\nThe first line of the input file contains a non-empty string, consisting of «(» and «)» characters. Its length does not exceed 106.\n\nOutput\n\nPrint the length of the longest substring that is a regular bracket sequence, and the number of such substrings. If there are no such substrings, write the only line containing \"0 1\".\n\nExamples\n\nInput\n\n)((())))(()())\n\n\nOutput\n\n6 2\n\n\nInput\n\n))(\n\n\nOutput\n\n0 1", "grammar": {"answer": null}}
{"name": "469_E. Hack it!", "description": "Little X has met the following problem recently. \n\nLet's define f(x) as the sum of digits in decimal representation of number x (for example, f(1234) = 1 + 2 + 3 + 4). You are to calculate <image>\n\nOf course Little X has solved this problem quickly, has locked it, and then has tried to hack others. He has seen the following C++ code: \n    \n    \n      \n        ans = solve(l, r) % a;  \n        if (ans <= 0)  \n          ans += a;  \n      \n    \n\nThis code will fail only on the test with <image>. You are given number a, help Little X to find a proper test for hack.\n\nInput\n\nThe first line contains a single integer a (1 ≤ a ≤ 1018).\n\nOutput\n\nPrint two integers: l, r (1 ≤ l ≤ r < 10200) — the required test data. Leading zeros aren't allowed. It's guaranteed that the solution exists.\n\nExamples\n\nInput\n\n46\n\n\nOutput\n\n1 10\n\n\nInput\n\n126444381000032\n\n\nOutput\n\n2333333 2333333333333", "grammar": {"answer": null}}
{"name": "598_A. Tricky Sum", "description": "In this problem you are to calculate the sum of all integers from 1 to n, but you should take all powers of two with minus in the sum.\n\nFor example, for n = 4 the sum is equal to  - 1 - 2 + 3 - 4 = - 4, because 1, 2 and 4 are 20, 21 and 22 respectively.\n\nCalculate the answer for t values of n.\n\nInput\n\nThe first line of the input contains a single integer t (1 ≤ t ≤ 100) — the number of values of n to be processed.\n\nEach of next t lines contains a single integer n (1 ≤ n ≤ 109).\n\nOutput\n\nPrint the requested sum for each of t integers n given in the input.\n\nExamples\n\nInput\n\n2\n4\n1000000000\n\n\nOutput\n\n-4\n499999998352516354\n\nNote\n\nThe answer for the first sample is explained in the statement.", "grammar": {"answer": null}}
{"name": "600_F. Edge coloring of bipartite graph", "description": "You are given an undirected bipartite graph without multiple edges. You should paint the edges of graph to minimal number of colours, so that no two adjacent edges have the same colour.\n\nInput\n\nThe first line contains three integers a, b, m (1 ≤ a, b ≤ 1000, 0 ≤ m ≤ 105), a is the size of the first part, b is the size of the second part, m is the number of edges in the graph.\n\nEach of the next m lines contains two integers x, y (1 ≤ x ≤ a, 1 ≤ y ≤ b), where x is the number of the vertex in the first part and y is the number of the vertex in the second part. It is guaranteed that there are no multiple edges.\n\nOutput\n\nIn the first line print integer c — the minimal number of colours. The second line should contain m integers from 1 to c — the colours of the edges (in the order they appear in the input).\n\nIf there are several solutions, you can print any one of them.\n\nExamples\n\nInput\n\n4 3 5\n1 2\n2 2\n3 2\n4 1\n4 3\n\n\nOutput\n\n3\n1 2 3 1 2", "grammar": {"answer": null}}
{"name": "p00948 Distribution Center", "description": "Example\n\nInput\n\n4 3\n1000 1\n2000 2\n3000 3\n\n\nOutput\n\n2 3 4 4", "grammar": {"answer": null}}
{"name": "182_D. Common Divisors", "description": "Vasya has recently learned at school what a number's divisor is and decided to determine a string's divisor. Here is what he came up with.\n\nString a is the divisor of string b if and only if there exists a positive integer x such that if we write out string a consecutively x times, we get string b. For example, string \"abab\" has two divisors — \"ab\" and \"abab\".\n\nNow Vasya wants to write a program that calculates the number of common divisors of two strings. Please help him.\n\nInput\n\nThe first input line contains a non-empty string s1.\n\nThe second input line contains a non-empty string s2.\n\nLengths of strings s1 and s2 are positive and do not exceed 105. The strings only consist of lowercase Latin letters.\n\nOutput\n\nPrint the number of common divisors of strings s1 and s2. \n\nExamples\n\nInput\n\nabcdabcd\nabcdabcdabcdabcd\n\n\nOutput\n\n2\n\n\nInput\n\naaa\naa\n\n\nOutput\n\n1\n\nNote\n\nIn first sample the common divisors are strings \"abcd\" and \"abcdabcd\".\n\nIn the second sample the common divisor is a single string \"a\". String \"aa\" isn't included in the answer as it isn't a divisor of string \"aaa\".", "grammar": {"answer": null}}
{"name": "1400_D. Zigzags", "description": "You are given an array a_1, a_2 ... a_n. Calculate the number of tuples (i, j, k, l) such that: \n\n  * 1 ≤ i < j < k < l ≤ n; \n  * a_i = a_k and a_j = a_l; \n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 100) — the number of test cases.\n\nThe first line of each test case contains a single integer n (4 ≤ n ≤ 3000) — the size of the array a.\n\nThe second line of each test case contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ n) — the array a.\n\nIt's guaranteed that the sum of n in one test doesn't exceed 3000.\n\nOutput\n\nFor each test case, print the number of described tuples.\n\nExample\n\nInput\n\n\n2\n5\n2 2 2 2 2\n6\n1 3 3 1 2 3\n\n\nOutput\n\n\n5\n2\n\nNote\n\nIn the first test case, for any four indices i < j < k < l are valid, so the answer is the number of tuples.\n\nIn the second test case, there are 2 valid tuples: \n\n  * (1, 2, 4, 6): a_1 = a_4 and a_2 = a_6; \n  * (1, 3, 4, 6): a_1 = a_4 and a_3 = a_6. ", "grammar": {"answer": null}}
{"name": "p03997 AtCoder Beginner Contest 045 - Trapezoids", "description": "You are given a trapezoid. The lengths of its upper base, lower base, and height are a, b, and h, respectively.\n\n<image>\n\nAn example of a trapezoid\n\nFind the area of this trapezoid.\n\nConstraints\n\n* 1≦a≦100\n* 1≦b≦100\n* 1≦h≦100\n* All input values are integers.\n* h is even.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\na\nb\nh\n\n\nOutput\n\nPrint the area of the given trapezoid. It is guaranteed that the area is an integer.\n\nExamples\n\nInput\n\n3\n4\n2\n\n\nOutput\n\n7\n\n\nInput\n\n4\n4\n4\n\n\nOutput\n\n16", "grammar": {"answer": null}}
{"name": "53_C. Little Frog", "description": "Once upon a time a little frog whose name was Vasya decided to travel around his home swamp. Overall there are n mounds on the swamp, located on one line. The distance between the neighboring mounds is one meter. Vasya wants to visit all the mounds in one day; besides, he wants to visit each one exactly once. For that he makes a route plan, to decide the order in which to jump on the mounds. Vasya can pick any mound as the first one. He thinks it boring to jump two times at the same distance. That's why he wants any two jumps on his route to have different lengths. Help Vasya the Frog and make the plan for him.\n\nInput\n\nThe single line contains a number n (1 ≤ n ≤ 104) which is the number of mounds.\n\nOutput\n\nPrint n integers pi (1 ≤ pi ≤ n) which are the frog's route plan. \n\n  * All the pi's should be mutually different. \n  * All the |pi–pi + 1|'s should be mutually different (1 ≤ i ≤ n - 1). \n\n\n\nIf there are several solutions, output any.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n1 2 \n\nInput\n\n3\n\n\nOutput\n\n1 3 2 ", "grammar": {"answer": null}}
{"name": "492_A. Vanya and Cubes", "description": "Vanya got n cubes. He decided to build a pyramid from them. Vanya wants to build the pyramid as follows: the top level of the pyramid must consist of 1 cube, the second level must consist of 1 + 2 = 3 cubes, the third level must have 1 + 2 + 3 = 6 cubes, and so on. Thus, the i-th level of the pyramid must have 1 + 2 + ... + (i - 1) + i cubes.\n\nVanya wants to know what is the maximum height of the pyramid that he can make using the given cubes.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 104) — the number of cubes given to Vanya.\n\nOutput\n\nPrint the maximum possible height of the pyramid in the single line.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n1\n\n\nInput\n\n25\n\n\nOutput\n\n4\n\nNote\n\nIllustration to the second sample: \n\n<image>", "grammar": {"answer": null}}
{"name": "p03989 AtCoder Grand Contest 005 - ~K Perm Counting", "description": "Snuke loves permutations. He is making a permutation of length N.\n\nSince he hates the integer K, his permutation will satisfy the following:\n\n* Let the permutation be a_1, a_2, ..., a_N. For each i = 1,2,...,N, |a_i - i| \\neq K.\n\n\n\nAmong the N! permutations of length N, how many satisfies this condition?\n\nSince the answer may be extremely large, find the answer modulo 924844033(prime).\n\nConstraints\n\n* 2 ≦ N ≦ 2000\n* 1 ≦ K ≦ N-1\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN K\n\n\nOutput\n\nPrint the answer modulo 924844033.\n\nExamples\n\nInput\n\n3 1\n\n\nOutput\n\n2\n\n\nInput\n\n4 1\n\n\nOutput\n\n5\n\n\nInput\n\n4 2\n\n\nOutput\n\n9\n\n\nInput\n\n4 3\n\n\nOutput\n\n14\n\n\nInput\n\n425 48\n\n\nOutput\n\n756765083", "grammar": {"answer": null}}
{"name": "p03400 AtCoder Beginner Contest 092 - Chocolate", "description": "Some number of chocolate pieces were prepared for a training camp. The camp had N participants and lasted for D days. The i-th participant (1 \\leq i \\leq N) ate one chocolate piece on each of the following days in the camp: the 1-st day, the (A_i + 1)-th day, the (2A_i + 1)-th day, and so on. As a result, there were X chocolate pieces remaining at the end of the camp. During the camp, nobody except the participants ate chocolate pieces.\n\nFind the number of chocolate pieces prepared at the beginning of the camp.\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* 1 \\leq D \\leq 100\n* 1 \\leq X \\leq 100\n* 1 \\leq A_i \\leq 100 (1 \\leq i \\leq N)\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nD X\nA_1\nA_2\n:\nA_N\n\n\nOutput\n\nFind the number of chocolate pieces prepared at the beginning of the camp.\n\nExamples\n\nInput\n\n3\n7 1\n2\n5\n10\n\n\nOutput\n\n8\n\n\nInput\n\n2\n8 20\n1\n10\n\n\nOutput\n\n29\n\n\nInput\n\n5\n30 44\n26\n18\n81\n18\n6\n\n\nOutput\n\n56", "grammar": {"answer": null}}
{"name": "p02595 AtCoder Beginner Contest 174 - Distance", "description": "We have N points in the two-dimensional plane. The coordinates of the i-th point are (X_i,Y_i).\n\nAmong them, we are looking for the points such that the distance from the origin is at most D. How many such points are there?\n\nWe remind you that the distance between the origin and the point (p, q) can be represented as \\sqrt{p^2+q^2}.\n\nConstraints\n\n* 1 \\leq N \\leq 2\\times 10^5\n* 0 \\leq D \\leq 2\\times 10^5\n* |X_i|,|Y_i| \\leq 2\\times 10^5\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN D\nX_1 Y_1\n\\vdots\nX_N Y_N\n\n\nOutput\n\nPrint an integer representing the number of points such that the distance from the origin is at most D.\n\nExamples\n\nInput\n\n4 5\n0 5\n-2 4\n3 4\n4 -4\n\n\nOutput\n\n3\n\n\nInput\n\n12 3\n1 1\n1 1\n1 1\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3\n\n\nOutput\n\n7\n\n\nInput\n\n20 100000\n14309 -32939\n-56855 100340\n151364 25430\n103789 -113141\n147404 -136977\n-37006 -30929\n188810 -49557\n13419 70401\n-88280 165170\n-196399 137941\n-176527 -61904\n46659 115261\n-153551 114185\n98784 -6820\n94111 -86268\n-30401 61477\n-55056 7872\n5901 -163796\n138819 -185986\n-69848 -96669\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p03863 AtCoder Beginner Contest 048 - An Ordinary Game", "description": "There is a string s of length 3 or greater. No two neighboring characters in s are equal.\n\nTakahashi and Aoki will play a game against each other. The two players alternately performs the following operation, Takahashi going first:\n\n* Remove one of the characters in s, excluding both ends. However, a character cannot be removed if removal of the character would result in two neighboring equal characters in s.\n\n\n\nThe player who becomes unable to perform the operation, loses the game. Determine which player will win when the two play optimally.\n\nConstraints\n\n* 3 ≤ |s| ≤ 10^5\n* s consists of lowercase English letters.\n* No two neighboring characters in s are equal.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\ns\n\n\nOutput\n\nIf Takahashi will win, print `First`. If Aoki will win, print `Second`.\n\nExamples\n\nInput\n\naba\n\n\nOutput\n\nSecond\n\n\nInput\n\nabc\n\n\nOutput\n\nFirst\n\n\nInput\n\nabcab\n\n\nOutput\n\nFirst", "grammar": {"answer": null}}
{"name": "1067_A. Array Without Local Maximums ", "description": "Ivan unexpectedly saw a present from one of his previous birthdays. It is array of n numbers from 1 to 200. Array is old and some numbers are hard to read. Ivan remembers that for all elements at least one of its neighbours ls not less than it, more formally:\n\na_{1} ≤ a_{2},\n\na_{n} ≤ a_{n-1} and\n\na_{i} ≤ max(a_{i-1},    a_{i+1}) for all i from 2 to n-1.\n\nIvan does not remember the array and asks to find the number of ways to restore it. Restored elements also should be integers from 1 to 200. Since the number of ways can be big, print it modulo 998244353.\n\nInput\n\nFirst line of input contains one integer n (2 ≤ n ≤ 10^{5}) — size of the array.\n\nSecond line of input contains n integers a_{i} — elements of array. Either a_{i} = -1 or 1 ≤ a_{i} ≤ 200. a_{i} = -1 means that i-th element can't be read.\n\nOutput\n\nPrint number of ways to restore the array modulo 998244353.\n\nExamples\n\nInput\n\n3\n1 -1 2\n\n\nOutput\n\n1\n\n\nInput\n\n2\n-1 -1\n\n\nOutput\n\n200\n\nNote\n\nIn the first example, only possible value of a_{2} is 2.\n\nIn the second example, a_{1} = a_{2} so there are 200 different values because all restored elements should be integers between 1 and 200. ", "grammar": {"answer": null}}
{"name": "1474_B. Different Divisors", "description": "Positive integer x is called divisor of positive integer y, if y is divisible by x without remainder. For example, 1 is a divisor of 7 and 3 is not divisor of 8.\n\nWe gave you an integer d and asked you to find the smallest positive integer a, such that \n\n  * a has at least 4 divisors; \n  * difference between any two divisors of a is at least d.\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 3000) — the number of test cases.\n\nThe first line of each test case contains a single integer d (1 ≤ d ≤ 10000).\n\nOutput\n\nFor each test case print one integer a — the answer for this test case.\n\nExample\n\nInput\n\n\n2\n1\n2\n\n\nOutput\n\n\n6\n15\n\nNote\n\nIn the first test case, integer 6 have following divisors: [1, 2, 3, 6]. There are 4 of them and the difference between any two of them is at least 1. There is no smaller integer with at least 4 divisors.\n\nIn the second test case, integer 15 have following divisors: [1, 3, 5, 15]. There are 4 of them and the difference between any two of them is at least 2.\n\nThe answer 12 is INVALID because divisors are [1, 2, 3, 4, 6, 12]. And the difference between, for example, divisors 2 and 3 is less than d=2.", "grammar": {"answer": null}}
{"name": "1102_E. Monotonic Renumeration", "description": "You are given an array a consisting of n integers. Let's denote monotonic renumeration of array a as an array b consisting of n integers such that all of the following conditions are met:\n\n  * b_1 = 0; \n  * for every pair of indices i and j such that 1 ≤ i, j ≤ n, if a_i = a_j, then b_i = b_j (note that if a_i ≠ a_j, it is still possible that b_i = b_j); \n  * for every index i ∈ [1, n - 1] either b_i = b_{i + 1} or b_i + 1 = b_{i + 1}. \n\n\n\nFor example, if a = [1, 2, 1, 2, 3], then two possible monotonic renumerations of a are b = [0, 0, 0, 0, 0] and b = [0, 0, 0, 0, 1].\n\nYour task is to calculate the number of different monotonic renumerations of a. The answer may be large, so print it modulo 998244353.\n\nInput\n\nThe first line contains one integer n (2 ≤ n ≤ 2 ⋅ 10^5) — the number of elements in a.\n\nThe second line contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ 10^9).\n\nOutput\n\nPrint one integer — the number of different monotonic renumerations of a, taken modulo 998244353.\n\nExamples\n\nInput\n\n\n5\n1 2 1 2 3\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n2\n100 1\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n4\n1 3 3 7\n\n\nOutput\n\n\n4", "grammar": {"answer": null}}
{"name": "p02833 AtCoder Beginner Contest 148 - Double Factorial", "description": "For an integer n not less than 0, let us define f(n) as follows:\n\n* f(n) = 1 (if n < 2)\n* f(n) = n f(n-2) (if n \\geq 2)\n\n\n\nGiven is an integer N. Find the number of trailing zeros in the decimal notation of f(N).\n\nConstraints\n\n* 0 \\leq N \\leq 10^{18}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the number of trailing zeros in the decimal notation of f(N).\n\nExamples\n\nInput\n\n12\n\n\nOutput\n\n1\n\n\nInput\n\n5\n\n\nOutput\n\n0\n\n\nInput\n\n1000000000000000000\n\n\nOutput\n\n124999999999999995", "grammar": {"answer": null}}
{"name": "959_E. Mahmoud and Ehab and the xor-MST", "description": "Ehab is interested in the bitwise-xor operation and the special graphs. Mahmoud gave him a problem that combines both. He has a complete graph consisting of n vertices numbered from 0 to n - 1. For all 0 ≤ u < v < n, vertex u and vertex v are connected with an undirected edge that has weight <image> (where <image> is the [bitwise-xor operation](https://en.wikipedia.org/wiki/Bitwise_operation#XOR)). Can you find the weight of the minimum spanning tree of that graph?\n\nYou can read about complete graphs in <https://en.wikipedia.org/wiki/Complete_graph>\n\nYou can read about the minimum spanning tree in <https://en.wikipedia.org/wiki/Minimum_spanning_tree>\n\nThe weight of the minimum spanning tree is the sum of the weights on the edges included in it.\n\nInput\n\nThe only line contains an integer n (2 ≤ n ≤ 1012), the number of vertices in the graph.\n\nOutput\n\nThe only line contains an integer x, the weight of the graph's minimum spanning tree.\n\nExample\n\nInput\n\n4\n\n\nOutput\n\n4\n\nNote\n\nIn the first sample: <image> The weight of the minimum spanning tree is 1+2+1=4.", "grammar": {"answer": null}}
{"name": "364_E. Empty Rectangles", "description": "You've got an n × m table (n rows and m columns), each cell of the table contains a \"0\" or a \"1\".\n\nYour task is to calculate the number of rectangles with the sides that are parallel to the sides of the table and go along the cell borders, such that the number one occurs exactly k times in the rectangle. \n\nInput\n\nThe first line contains three space-separated integers n, m and k (1 ≤ n, m ≤ 2500, 0 ≤ k ≤ 6) — the sizes of the table and the required number of numbers one.\n\nNext n lines each contains m characters \"0\" or \"1\". The i-th character of the j-th line corresponds to the character that is in the j-th row and the i-th column of the table.\n\nOutput\n\nPrint a single number — the number of rectangles that contain exactly k numbers one.\n\nPlease, do not write the %lld specifier to read or write 64-bit integers in С++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nExamples\n\nInput\n\n3 3 2\n101\n000\n101\n\n\nOutput\n\n8\n\n\nInput\n\n5 5 1\n00000\n00000\n00100\n00000\n00000\n\n\nOutput\n\n81\n\n\nInput\n\n5 5 6\n01010\n10101\n01010\n10101\n01010\n\n\nOutput\n\n12\n\n\nInput\n\n3 3 0\n001\n010\n000\n\n\nOutput\n\n15\n\n\nInput\n\n4 4 0\n0000\n0101\n0000\n0000\n\n\nOutput\n\n52", "grammar": {"answer": null}}
{"name": "468_C. Hack it!", "description": "Little X has met the following problem recently. \n\nLet's define f(x) as the sum of digits in decimal representation of number x (for example, f(1234) = 1 + 2 + 3 + 4). You are to calculate <image>\n\nOf course Little X has solved this problem quickly, has locked it, and then has tried to hack others. He has seen the following C++ code: \n    \n    \n      \n        ans = solve(l, r) % a;  \n        if (ans <= 0)  \n          ans += a;  \n      \n    \n\nThis code will fail only on the test with <image>. You are given number a, help Little X to find a proper test for hack.\n\nInput\n\nThe first line contains a single integer a (1 ≤ a ≤ 1018).\n\nOutput\n\nPrint two integers: l, r (1 ≤ l ≤ r < 10200) — the required test data. Leading zeros aren't allowed. It's guaranteed that the solution exists.\n\nExamples\n\nInput\n\n46\n\n\nOutput\n\n1 10\n\n\nInput\n\n126444381000032\n\n\nOutput\n\n2333333 2333333333333", "grammar": {"answer": null}}
{"name": "58_A. Chat room", "description": "Vasya has recently learned to type and log on to the Internet. He immediately entered a chat room and decided to say hello to everybody. Vasya typed the word s. It is considered that Vasya managed to say hello if several letters can be deleted from the typed word so that it resulted in the word \"hello\". For example, if Vasya types the word \"ahhellllloou\", it will be considered that he said hello, and if he types \"hlelo\", it will be considered that Vasya got misunderstood and he didn't manage to say hello. Determine whether Vasya managed to say hello by the given word s.\n\nInput\n\nThe first and only line contains the word s, which Vasya typed. This word consisits of small Latin letters, its length is no less that 1 and no more than 100 letters.\n\nOutput\n\nIf Vasya managed to say hello, print \"YES\", otherwise print \"NO\".\n\nExamples\n\nInput\n\nahhellllloou\n\n\nOutput\n\nYES\n\n\nInput\n\nhlelo\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p02688 AtCoder Beginner Contest 166 - Trick or Treat", "description": "N Snukes called Snuke 1, Snuke 2, ..., Snuke N live in a town.\n\nThere are K kinds of snacks sold in this town, called Snack 1, Snack 2, ..., Snack K. The following d_i Snukes have Snack i: Snuke A_{i, 1}, A_{i, 2}, \\cdots, A_{i, {d_i}}.\n\nTakahashi will walk around this town and make mischief on the Snukes who have no snacks. How many Snukes will fall victim to Takahashi's mischief?\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 100\n* 1 \\leq K \\leq 100\n* 1 \\leq d_i \\leq N\n* 1 \\leq A_{i, 1} < \\cdots < A_{i, d_i} \\leq N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nd_1\nA_{1, 1} \\cdots A_{1, d_1}\n\\vdots\nd_K\nA_{K, 1} \\cdots A_{K, d_K}\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3 2\n2\n1 3\n1\n3\n\n\nOutput\n\n1\n\n\nInput\n\n3 3\n1\n3\n1\n3\n1\n3\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "285_C. Building Permutation", "description": "Permutation p is an ordered set of integers p1, p2, ..., pn, consisting of n distinct positive integers, each of them doesn't exceed n. We'll denote the i-th element of permutation p as pi. We'll call number n the size or the length of permutation p1, p2, ..., pn.\n\nYou have a sequence of integers a1, a2, ..., an. In one move, you are allowed to decrease or increase any number by one. Count the minimum number of moves, needed to build a permutation from this sequence.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 3·105) — the size of the sought permutation. The second line contains n integers a1, a2, ..., an ( - 109 ≤ ai ≤ 109).\n\nOutput\n\nPrint a single number — the minimum number of moves.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nExamples\n\nInput\n\n2\n3 0\n\n\nOutput\n\n2\n\n\nInput\n\n3\n-1 -1 2\n\n\nOutput\n\n6\n\nNote\n\nIn the first sample you should decrease the first number by one and then increase the second number by one. The resulting permutation is (2, 1).\n\nIn the second sample you need 6 moves to build permutation (1, 3, 2).", "grammar": {"answer": null}}
{"name": "1120_E. The very same Munchhausen", "description": "A positive integer a is given. Baron Munchausen claims that he knows such a positive integer n that if one multiplies n by a, the sum of its digits decreases a times. In other words, S(an) = S(n)/a, where S(x) denotes the sum of digits of the number x. \n\nFind out if what Baron told can be true.\n\nInput\n\nThe only line contains a single integer a (2 ≤ a ≤ 10^3).\n\nOutput\n\nIf there is no such number n, print -1.\n\nOtherwise print any appropriate positive integer n. Your number must not consist of more than 5⋅10^5 digits. We can show that under given constraints either there is no answer, or there is an answer no longer than 5⋅10^5 digits.\n\nExamples\n\nInput\n\n\n2\n\n\nOutput\n\n\n6\n\n\nInput\n\n\n3\n\n\nOutput\n\n\n6669\n\n\nInput\n\n\n10\n\n\nOutput\n\n\n-1", "grammar": {"answer": null}}
{"name": "789_C. Functions again", "description": "Something happened in Uzhlyandia again... There are riots on the streets... Famous Uzhlyandian superheroes Shean the Sheep and Stas the Giraffe were called in order to save the situation. Upon the arriving, they found that citizens are worried about maximum values of the Main Uzhlyandian Function f, which is defined as follows:\n\n<image>\n\nIn the above formula, 1 ≤ l < r ≤ n must hold, where n is the size of the Main Uzhlyandian Array a, and |x| means absolute value of x. But the heroes skipped their math lessons in school, so they asked you for help. Help them calculate the maximum value of f among all possible values of l and r for the given array a.\n\nInput\n\nThe first line contains single integer n (2 ≤ n ≤ 105) — the size of the array a.\n\nThe second line contains n integers a1, a2, ..., an (-109 ≤ ai ≤ 109) — the array elements.\n\nOutput\n\nPrint the only integer — the maximum value of f.\n\nExamples\n\nInput\n\n5\n1 4 2 3 1\n\n\nOutput\n\n3\n\nInput\n\n4\n1 5 4 7\n\n\nOutput\n\n6\n\nNote\n\nIn the first sample case, the optimal value of f is reached on intervals [1, 2] and [2, 5].\n\nIn the second case maximal value of f is reachable only on the whole array.", "grammar": {"answer": null}}
{"name": "p03802 AtCoder Regular Contest 069 - Flags", "description": "Snuke loves flags.\n\nSnuke is placing N flags on a line.\n\nThe i-th flag can be placed at either coordinate x_i or coordinate y_i.\n\nSnuke thinks that the flags look nicer when the smallest distance between two of them, d, is larger. Find the maximum possible value of d.\n\nConstraints\n\n* 2 ≤ N ≤ 10^{4}\n* 1 ≤ x_i, y_i ≤ 10^{9}\n* x_i and y_i are integers.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nx_1 y_1\n:\nx_N y_N\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3\n1 3\n2 5\n1 9\n\n\nOutput\n\n4\n\n\nInput\n\n5\n2 2\n2 2\n2 2\n2 2\n2 2\n\n\nOutput\n\n0\n\n\nInput\n\n22\n93 6440\n78 6647\n862 11\n8306 9689\n798 99\n801 521\n188 206\n6079 971\n4559 209\n50 94\n92 6270\n5403 560\n803 83\n1855 99\n42 504\n75 484\n629 11\n92 122\n3359 37\n28 16\n648 14\n11 269\n\n\nOutput\n\n17", "grammar": {"answer": null}}
{"name": "p03012 AtCoder Beginner Contest 129 - Balance", "description": "We have N weights indexed 1 to N. The \bmass of the weight indexed i is W_i.\n\nWe will divide these weights into two groups: the weights with indices not greater than T, and those with indices greater than T, for some integer 1 \\leq T < N. Let S_1 be the sum of the masses of the weights in the former group, and S_2 be the sum of the masses of the weights in the latter group.\n\nConsider all possible such divisions and find the minimum possible absolute difference of S_1 and S_2.\n\nConstraints\n\n* 2 \\leq N \\leq 100\n* 1 \\leq W_i \\leq 100\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nW_1 W_2 ... W_{N-1} W_N\n\n\nOutput\n\nPrint the minimum possible absolute difference of S_1 and S_2.\n\nExamples\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n0\n\n\nInput\n\n4\n1 3 1 1\n\n\nOutput\n\n2\n\n\nInput\n\n8\n27 23 76 2 3 5 62 52\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "1331_F. Elementary!", "description": "\n\nInput\n\nThe input consists of a single string of uppercase letters A-Z. The length of the string is between 1 and 10 characters, inclusive.\n\nOutput\n\nOutput \"YES\" or \"NO\".\n\nExamples\n\nInput\n\n\nGENIUS\n\n\nOutput\n\n\nYES\n\n\nInput\n\n\nDOCTOR\n\n\nOutput\n\n\nNO\n\n\nInput\n\n\nIRENE\n\n\nOutput\n\n\nYES\n\n\nInput\n\n\nMARY\n\n\nOutput\n\n\nNO\n\n\nInput\n\n\nSMARTPHONE\n\n\nOutput\n\n\nNO\n\n\nInput\n\n\nREVOLVER\n\n\nOutput\n\n\nYES\n\n\nInput\n\n\nHOLMES\n\n\nOutput\n\n\nNO\n\n\nInput\n\n\nWATSON\n\n\nOutput\n\n\nYES", "grammar": {"answer": null}}
{"name": "1436_F. Sum Over Subsets", "description": "You are given a multiset S. Over all pairs of subsets A and B, such that:\n\n  * B ⊂ A; \n  * |B| = |A| - 1; \n  * greatest common divisor of all elements in A is equal to one; \n\n\n\nfind the sum of ∑_{x ∈ A}{x} ⋅ ∑_{x ∈ B}{x}, modulo 998 244 353.\n\nInput\n\nThe first line contains one integer m (1 ≤ m ≤ 10^5): the number of different values in the multiset S.\n\nEach of the next m lines contains two integers a_i, freq_i (1 ≤ a_i ≤ 10^5, 1 ≤ freq_i ≤ 10^9). Element a_i appears in the multiset S freq_i times. All a_i are different.\n\nOutput\n\nPrint the required sum, modulo 998 244 353.\n\nExamples\n\nInput\n\n\n2\n1 1\n2 1\n\n\nOutput\n\n\n9\n\n\nInput\n\n\n4\n1 1\n2 1\n3 1\n6 1\n\n\nOutput\n\n\n1207\n\n\nInput\n\n\n1\n1 5\n\n\nOutput\n\n\n560\n\nNote\n\nA multiset is a set where elements are allowed to coincide. |X| is the cardinality of a set X, the number of elements in it.\n\nA ⊂ B: Set A is a subset of a set B.\n\nIn the first example B=\\{1\\}, A=\\{1,2\\} and B=\\{2\\}, A=\\{1, 2\\} have a product equal to 1⋅3 + 2⋅3=9. Other pairs of A and B don't satisfy the given constraints.", "grammar": {"answer": null}}
{"name": "368_B. Sereja and Suffixes", "description": "Sereja has an array a, consisting of n integers a1, a2, ..., an. The boy cannot sit and do nothing, he decided to study an array. Sereja took a piece of paper and wrote out m integers l1, l2, ..., lm (1 ≤ li ≤ n). For each number li he wants to know how many distinct numbers are staying on the positions li, li + 1, ..., n. Formally, he want to find the number of distinct numbers among ali, ali + 1, ..., an.?\n\nSereja wrote out the necessary array elements but the array was so large and the boy was so pressed for time. Help him, find the answer for the described question for each li.\n\nInput\n\nThe first line contains two integers n and m (1 ≤ n, m ≤ 105). The second line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 105) — the array elements.\n\nNext m lines contain integers l1, l2, ..., lm. The i-th line contains integer li (1 ≤ li ≤ n).\n\nOutput\n\nPrint m lines — on the i-th line print the answer to the number li.\n\nExamples\n\nInput\n\n10 10\n1 2 3 4 1 2 3 4 100000 99999\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\nOutput\n\n6\n6\n6\n6\n6\n5\n4\n3\n2\n1", "grammar": {"answer": null}}
{"name": "p02274 The Number of Inversions", "description": "For a given sequence $A = \\\\{a_0, a_1, ... a_{n-1}\\\\}$, the number of pairs $(i, j)$ where $a_i > a_j$ and $i < j$, is called the number of inversions. The number of inversions is equal to the number of swaps of Bubble Sort defined in the following program:\n\n\nbubbleSort(A)\ncnt = 0 // the number of inversions\nfor i = 0 to A.length-1\nfor j = A.length-1 downto i+1\nif A[j] < A[j-1]\n\tswap(A[j], A[j-1])\n\tcnt++\n\nreturn cnt\n\n\nFor the given sequence $A$, print the number of inversions of $A$. Note that you should not use the above program, which brings Time Limit Exceeded.\n\nConstraints\n\n* $ 1 \\leq n \\leq 200,000$\n* $ 0 \\leq a_i \\leq 10^9$\n* $a_i$ are all different\n\nInput\n\nIn the first line, an integer $n$, the number of elements in $A$, is given. In the second line, the elements $a_i$ ($i = 0, 1, .. n-1$) are given separated by space characters.\n\nExamples\n\nInput\n\n5\n3 5 2 1 4\n\n\nOutput\n\n6\n\n\nInput\n\n3\n3 1 2\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p03438 AtCoder Petrozavodsk Contest 001 - Two Arrays", "description": "You are given two integer sequences of length N: a_1,a_2,..,a_N and b_1,b_2,..,b_N. Determine if we can repeat the following operation zero or more times so that the sequences a and b become equal.\n\nOperation: Choose two integers i and j (possibly the same) between 1 and N (inclusive), then perform the following two actions simultaneously:\n\n* Add 2 to a_i.\n* Add 1 to b_j.\n\nConstraints\n\n* 1 ≤ N ≤ 10 000\n* 0 ≤ a_i,b_i ≤ 10^9 (1 ≤ i ≤ N)\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 .. a_N\nb_1 b_2 .. b_N\n\n\nOutput\n\nIf we can repeat the operation zero or more times so that the sequences a and b become equal, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n3\n1 2 3\n5 2 2\n\n\nOutput\n\nYes\n\n\nInput\n\n5\n3 1 4 1 5\n2 7 1 8 2\n\n\nOutput\n\nNo\n\n\nInput\n\n5\n2 7 1 8 2\n3 1 4 1 5\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p01783 LR", "description": "Example\n\nInput\n\nR?????,2?)\n\n\nOutput\n\n29", "grammar": {"answer": null}}
{"name": "22_D. Segments", "description": "You are given n segments on the Ox-axis. You can drive a nail in any integer point on the Ox-axis line nail so, that all segments containing this point, are considered nailed down. If the nail passes through endpoint of some segment, this segment is considered to be nailed too. What is the smallest number of nails needed to nail all the segments down?\n\nInput\n\nThe first line of the input contains single integer number n (1 ≤ n ≤ 1000) — amount of segments. Following n lines contain descriptions of the segments. Each description is a pair of integer numbers — endpoints coordinates. All the coordinates don't exceed 10000 by absolute value. Segments can degenarate to points.\n\nOutput\n\nThe first line should contain one integer number — the smallest number of nails needed to nail all the segments down. The second line should contain coordinates of driven nails separated by space in any order. If the answer is not unique, output any.\n\nExamples\n\nInput\n\n2\n0 2\n2 5\n\n\nOutput\n\n1\n2 \n\nInput\n\n5\n0 3\n4 2\n4 8\n8 10\n7 7\n\n\nOutput\n\n3\n7 10 3", "grammar": {"answer": null}}
{"name": "p03164 Educational DP Contest - Knapsack 2", "description": "There are N items, numbered 1, 2, \\ldots, N. For each i (1 \\leq i \\leq N), Item i has a weight of w_i and a value of v_i.\n\nTaro has decided to choose some of the N items and carry them home in a knapsack. The capacity of the knapsack is W, which means that the sum of the weights of items taken must be at most W.\n\nFind the maximum possible sum of the values of items that Taro takes home.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 100\n* 1 \\leq W \\leq 10^9\n* 1 \\leq w_i \\leq W\n* 1 \\leq v_i \\leq 10^3\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN W\nw_1 v_1\nw_2 v_2\n:\nw_N v_N\n\n\nOutput\n\nPrint the maximum possible sum of the values of items that Taro takes home.\n\nExamples\n\nInput\n\n3 8\n3 30\n4 50\n5 60\n\n\nOutput\n\n90\n\n\nInput\n\n1 1000000000\n1000000000 10\n\n\nOutput\n\n10\n\n\nInput\n\n6 15\n6 5\n5 6\n6 4\n6 6\n3 5\n7 2\n\n\nOutput\n\n17", "grammar": {"answer": null}}
{"name": "p02664 NOMURA Programming Competition 2020 - Postdocs", "description": "For a string S consisting of the uppercase English letters `P` and `D`, let the doctoral and postdoctoral quotient of S be the total number of occurrences of `D` and `PD` in S as contiguous substrings. For example, if S = `PPDDP`, it contains two occurrences of `D` and one occurrence of `PD` as contiguous substrings, so the doctoral and postdoctoral quotient of S is 3.\n\nWe have a string T consisting of `P`, `D`, and `?`.\n\nAmong the strings that can be obtained by replacing each `?` in T with `P` or `D`, find one with the maximum possible doctoral and postdoctoral quotient.\n\nConstraints\n\n* 1 \\leq |T| \\leq 2 \\times 10^5\n* T consists of `P`, `D`, and `?`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nT\n\n\nOutput\n\nPrint one string with the maximum possible doctoral and postdoctoral quotient among the strings that can be obtained by replacing each `?` in T with `P` or `D`. If there are multiple such strings, you may print any of them.\n\nExamples\n\nInput\n\nPD?D??P\n\n\nOutput\n\nPDPDPDP\n\n\nInput\n\nP?P?\n\n\nOutput\n\nPDPD", "grammar": {"answer": null}}
{"name": "734_F. Anton and School", "description": "Anton goes to school, his favorite lessons are arraystudying. He usually solves all the tasks pretty fast, but this time the teacher gave him a complicated one: given two arrays b and c of length n, find array a, such that:\n\n<image>\n\nwhere a and b means bitwise AND, while a or b means bitwise OR.\n\nUsually Anton is good in arraystudying, but this problem is too hard, so Anton asks you to help.\n\nInput\n\nThe first line of the input contains a single integers n (1 ≤ n ≤ 200 000) — the size of arrays b and c.\n\nThe second line contains n integers bi (0 ≤ bi ≤ 109) — elements of the array b.\n\nThird line contains n integers ci (0 ≤ ci ≤ 109) — elements of the array c.\n\nOutput\n\nIf there is no solution, print  - 1.\n\nOtherwise, the only line of the output should contain n non-negative integers ai — elements of the array a. If there are multiple possible solutions, you may print any of them.\n\nExamples\n\nInput\n\n4\n6 8 4 4\n16 22 10 10\n\n\nOutput\n\n3 5 1 1 \n\n\nInput\n\n5\n8 25 14 7 16\n19 6 9 4 25\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p02687 AtCoder Beginner Contest 166 - A?C", "description": "AtCoder Inc. holds a contest every Saturday.\n\nThere are two types of contests called ABC and ARC, and just one of them is held at a time.\n\nThe company holds these two types of contests alternately: an ARC follows an ABC and vice versa.\n\nGiven a string S representing the type of the contest held last week, print the string representing the type of the contest held this week.\n\nConstraints\n\n* S is `ABC` or `ARC`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the string representing the type of the contest held this week.\n\nExample\n\nInput\n\nABC\n\n\nOutput\n\nARC", "grammar": {"answer": null}}
{"name": "742_A. Arpa’s hard exam and Mehrdad’s naive cheat", "description": "There exists an island called Arpa’s land, some beautiful girls live there, as ugly ones do.\n\nMehrdad wants to become minister of Arpa’s land. Arpa has prepared an exam. Exam has only one question, given n, print the last digit of 1378n. \n\n<image>\n\nMehrdad has become quite confused and wants you to help him. Please help, although it's a naive cheat.\n\nInput\n\nThe single line of input contains one integer n (0 ≤ n ≤ 109).\n\nOutput\n\nPrint single integer — the last digit of 1378n.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n8\n\nInput\n\n2\n\n\nOutput\n\n4\n\nNote\n\nIn the first example, last digit of 13781 = 1378 is 8.\n\nIn the second example, last digit of 13782 = 1378·1378 = 1898884 is 4.", "grammar": {"answer": null}}
{"name": "982_C. Cut 'em all!", "description": "You're given a tree with n vertices.\n\nYour task is to determine the maximum possible number of edges that can be removed in such a way that all the remaining connected components will have even size.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 10^5) denoting the size of the tree. \n\nThe next n - 1 lines contain two integers u, v (1 ≤ u, v ≤ n) each, describing the vertices connected by the i-th edge.\n\nIt's guaranteed that the given edges form a tree.\n\nOutput\n\nOutput a single integer k — the maximum number of edges that can be removed to leave all connected components with even size, or -1 if it is impossible to remove edges in order to satisfy this property.\n\nExamples\n\nInput\n\n4\n2 4\n4 1\n3 1\n\n\nOutput\n\n1\n\nInput\n\n3\n1 2\n1 3\n\n\nOutput\n\n-1\n\nInput\n\n10\n7 1\n8 4\n8 10\n4 7\n6 5\n9 3\n3 5\n2 10\n2 5\n\n\nOutput\n\n4\n\nInput\n\n2\n1 2\n\n\nOutput\n\n0\n\nNote\n\nIn the first example you can remove the edge between vertices 1 and 4. The graph after that will have two connected components with two vertices in each.\n\nIn the second example you can't remove edges in such a way that all components have even number of vertices, so the answer is -1.", "grammar": {"answer": null}}
{"name": "550_C. Divisibility by Eight", "description": "You are given a non-negative integer n, its decimal representation consists of at most 100 digits and doesn't contain leading zeroes.\n\nYour task is to determine if it is possible in this case to remove some of the digits (possibly not remove any digit at all) so that the result contains at least one digit, forms a non-negative integer, doesn't have leading zeroes and is divisible by 8. After the removing, it is forbidden to rearrange the digits.\n\nIf a solution exists, you should print it.\n\nInput\n\nThe single line of the input contains a non-negative integer n. The representation of number n doesn't contain any leading zeroes and its length doesn't exceed 100 digits. \n\nOutput\n\nPrint \"NO\" (without quotes), if there is no such way to remove some digits from number n. \n\nOtherwise, print \"YES\" in the first line and the resulting number after removing digits from number n in the second line. The printed number must be divisible by 8.\n\nIf there are multiple possible answers, you may print any of them.\n\nExamples\n\nInput\n\n3454\n\n\nOutput\n\nYES\n344\n\n\nInput\n\n10\n\n\nOutput\n\nYES\n0\n\n\nInput\n\n111111\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p03474 AtCoder Beginner Contest 084 - Postal Code", "description": "The postal code in Atcoder Kingdom is A+B+1 characters long, its (A+1)-th character is a hyphen `-`, and the other characters are digits from `0` through `9`.\n\nYou are given a string S. Determine whether it follows the postal code format in Atcoder Kingdom.\n\nConstraints\n\n* 1≤A,B≤5\n* |S|=A+B+1\n* S consists of `-` and digits from `0` through `9`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\nS\n\n\nOutput\n\nPrint `Yes` if S follows the postal code format in AtCoder Kingdom; print `No` otherwise.\n\nExamples\n\nInput\n\n3 4\n269-6650\n\n\nOutput\n\nYes\n\n\nInput\n\n1 1\n---\n\n\nOutput\n\nNo\n\n\nInput\n\n1 2\n7444\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p03996 CODE FESTIVAL 2016 qual A - LRU Puzzle", "description": "There are N arrays. The length of each array is M and initially each array contains integers (1，2，...，M) in this order.\n\nMr. Takahashi has decided to perform Q operations on those N arrays. For the i-th (1≤i≤Q) time, he performs the following operation.\n\n* Choose an arbitrary array from the N arrays and move the integer a_i (1≤a_i≤M) to the front of that array. For example, after performing the operation on a_i=2 and the array (5，4，3，2，1), this array becomes (2，5，4，3，1).\n\n\n\nMr. Takahashi wants to make N arrays exactly the same after performing the Q operations. Determine if it is possible or not.\n\nConstraints\n\n* 2≤N≤10^5\n* 2≤M≤10^5\n* 1≤Q≤10^5\n* 1≤a_i≤M\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN M\nQ\na_1 a_2 ... a_Q\n\n\nOutput\n\nPrint `Yes` if it is possible to make N arrays exactly the same after performing the Q operations. Otherwise, print `No`.\n\nExamples\n\nInput\n\n2 2\n3\n2 1 2\n\n\nOutput\n\nYes\n\n\nInput\n\n3 2\n3\n2 1 2\n\n\nOutput\n\nNo\n\n\nInput\n\n2 3\n3\n3 2 1\n\n\nOutput\n\nYes\n\n\nInput\n\n3 3\n6\n1 2 2 3 3 3\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p01557 ReverseSort", "description": "A permutation of N numbers from 1 to N A1, A2, ……, AN is given. You can perform the operation reverse (i, j) to reverse the order of the numbers in the interval [i, j] (1 ≤ i ≤ j ≤ N) for this permutation. For example, if reverse (2, 4) is applied to [1, 2, 3, 4, 5], it becomes [1, 4, 3, 2, 5]. Calculate how many operations you need to do at a minimum to get the permutation sorted in ascending order.\n\nConstraints\n\n* N is an integer\n\n* 2 ≤ N ≤ 10\n\nInput\n\nThe input is given in the following format.\n\n> N\n> A1 A2 …… AN\n>\n\nOutput\n\nPrint the solution to the problem on one line.\n\nExamples\n\nInput\n\n5\n1 4 3 5 2\n\n\nOutput\n\n2\n\n\nInput\n\n5\n3 1 5 2 4\n\n\nOutput\n\n4\n\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n0\n\n\nInput\n\n10\n3 1 5 2 7 4 9 6 10 8\n\n\nOutput\n\n9", "grammar": {"answer": null}}
{"name": "616_E. Sum of Remainders", "description": "Calculate the value of the sum: n mod 1 + n mod 2 + n mod 3 + ... + n mod m. As the result can be very large, you should print the value modulo 109 + 7 (the remainder when divided by 109 + 7).\n\nThe modulo operator a mod b stands for the remainder after dividing a by b. For example 10 mod 3 = 1.\n\nInput\n\nThe only line contains two integers n, m (1 ≤ n, m ≤ 1013) — the parameters of the sum.\n\nOutput\n\nPrint integer s — the value of the required sum modulo 109 + 7.\n\nExamples\n\nInput\n\n3 4\n\n\nOutput\n\n4\n\n\nInput\n\n4 4\n\n\nOutput\n\n1\n\n\nInput\n\n1 1\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "515_C. Drazil and Factorial", "description": "Drazil is playing a math game with Varda.\n\nLet's define <image> for positive integer x as a product of factorials of its digits. For example, <image>.\n\nFirst, they choose a decimal number a consisting of n digits that contains at least one digit larger than 1. This number may possibly start with leading zeroes. Then they should find maximum positive number x satisfying following two conditions:\n\n1. x doesn't contain neither digit 0 nor digit 1.\n\n2. <image> = <image>.\n\nHelp friends find such number.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 15) — the number of digits in a.\n\nThe second line contains n digits of a. There is at least one digit in a that is larger than 1. Number a may possibly contain leading zeroes.\n\nOutput\n\nOutput a maximum possible integer satisfying the conditions above. There should be no zeroes and ones in this number decimal representation.\n\nExamples\n\nInput\n\n4\n1234\n\n\nOutput\n\n33222\n\n\nInput\n\n3\n555\n\n\nOutput\n\n555\n\nNote\n\nIn the first case, <image>", "grammar": {"answer": null}}
{"name": "1514_C. Product 1 Modulo N", "description": "Now you get Baby Ehab's first words: \"Given an integer n, find the longest subsequence of [1,2, …, n-1] whose product is 1 modulo n.\" Please solve the problem.\n\nA sequence b is a subsequence of an array a if b can be obtained from a by deleting some (possibly all) elements. The product of an empty subsequence is equal to 1.\n\nInput\n\nThe only line contains the integer n (2 ≤ n ≤ 10^5).\n\nOutput\n\nThe first line should contain a single integer, the length of the longest subsequence.\n\nThe second line should contain the elements of the subsequence, in increasing order.\n\nIf there are multiple solutions, you can print any.\n\nExamples\n\nInput\n\n\n5\n\n\nOutput\n\n\n3\n1 2 3 \n\nInput\n\n\n8\n\n\nOutput\n\n\n4\n1 3 5 7 \n\nNote\n\nIn the first example, the product of the elements is 6 which is congruent to 1 modulo 5. The only longer subsequence is [1,2,3,4]. Its product is 24 which is congruent to 4 modulo 5. Hence, the answer is [1,2,3].", "grammar": {"answer": null}}
{"name": "p03578 CODE FESTIVAL 2017 qual B - Problem Set", "description": "Rng is preparing a problem set for a qualification round of CODEFESTIVAL.\n\nHe has N candidates of problems. The difficulty of the i-th candidate is D_i.\n\nThere must be M problems in the problem set, and the difficulty of the i-th problem must be T_i. Here, one candidate of a problem cannot be used as multiple problems.\n\nDetermine whether Rng can complete the problem set without creating new candidates of problems.\n\nConstraints\n\n* 1 \\leq N \\leq 200,000\n* 1 \\leq D_i \\leq 10^9\n* 1 \\leq M \\leq 200,000\n* 1 \\leq T_i \\leq 10^9\n* All numbers in the input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nD_1 D_2 ... D_N\nM\nT_1 T_2 ... T_M\n\n\nOutput\n\nPrint `YES` if Rng can complete the problem set without creating new candidates of problems; print `NO` if he cannot.\n\nExamples\n\nInput\n\n5\n3 1 4 1 5\n3\n5 4 3\n\n\nOutput\n\nYES\n\n\nInput\n\n7\n100 200 500 700 1200 1600 2000\n6\n100 200 500 700 1600 1600\n\n\nOutput\n\nNO\n\n\nInput\n\n1\n800\n5\n100 100 100 100 100\n\n\nOutput\n\nNO\n\n\nInput\n\n15\n1 2 2 3 3 3 4 4 4 4 5 5 5 5 5\n9\n5 4 3 2 1 2 3 4 5\n\n\nOutput\n\nYES", "grammar": {"answer": null}}
{"name": "p00001 List of Top 3 Hills", "description": "There is a data which provides heights (in meter) of mountains. The data is only for ten mountains.\n\nWrite a program which prints heights of the top three mountains in descending order.\n\nConstraints\n\n0 ≤ height of mountain (integer) ≤ 10,000\n\nInput\n\n\nHeight of mountain 1\nHeight of mountain 2\nHeight of mountain 3\n.\n.\nHeight of mountain 10\n\n\nOutput\n\n\nHeight of the 1st mountain\nHeight of the 2nd mountain\nHeight of the 3rd mountain\n\n\nExamples\n\nInput\n\n1819\n2003\n876\n2840\n1723\n1673\n3776\n2848\n1592\n922\n\n\nOutput\n\n3776\n2848\n2840\n\n\nInput\n\n100\n200\n300\n400\n500\n600\n700\n800\n900\n900\n\n\nOutput\n\n900\n900\n800", "grammar": {"answer": null}}
{"name": "p02306 Incircle of a Triangle", "description": "Write a program which prints the central coordinate ($cx$,$cy$) and the radius $r$ of a incircle of a triangle which is constructed by three points ($x_1$, $y_1$), ($x_2$, $y_2$) and ($x_3$, $y_3$) on the plane surface.\n\nConstraints\n\n* $-10000 \\leq x_i, y_i \\leq 10000$\n* The three points are not on the same straight line\n\nInput\n\nThe input is given in the following format\n\n\n$x_1$ $y_1$\n$x_2$ $y_2$\n$x_3$ $y_3$\n\n\nAll the input are integers.\n\nOutput\n\nPrint $cx$, $cy$ and $r$ separated by a single space in a line. The output values should be in a decimal fraction with an error less than 0.000001.\n\nExamples\n\nInput\n\n1 -2\n3 2\n-2 0\n\n\nOutput\n\n0.53907943898209422325 -0.26437392711448356856 1.18845545916395465278\n\n\nInput\n\n0 3\n4 0\n0 0\n\n\nOutput\n\n1.00000000000000000000 1.00000000000000000000 1.00000000000000000000", "grammar": {"answer": null}}
{"name": "p02743 Panasonic Programming Contest 2020 - Sqrt Inequality", "description": "Does \\sqrt{a} + \\sqrt{b} < \\sqrt{c} hold?\n\nConstraints\n\n* 1 \\leq a, b, c \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\na \\ b \\ c\n\n\nOutput\n\nIf \\sqrt{a} + \\sqrt{b} < \\sqrt{c}, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n2 3 9\n\n\nOutput\n\nNo\n\n\nInput\n\n2 3 10\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "1095_A. Repeating Cipher", "description": "Polycarp loves ciphers. He has invented his own cipher called repeating.\n\nRepeating cipher is used for strings. To encrypt the string s=s_{1}s_{2} ... s_{m} (1 ≤ m ≤ 10), Polycarp uses the following algorithm:\n\n  * he writes down s_1 ones, \n  * he writes down s_2 twice, \n  * he writes down s_3 three times, \n  * ... \n  * he writes down s_m m times. \n\n\n\nFor example, if s=\"bab\" the process is: \"b\" → \"baa\" → \"baabbb\". So the encrypted s=\"bab\" is \"baabbb\".\n\nGiven string t — the result of encryption of some string s. Your task is to decrypt it, i. e. find the string s.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 55) — the length of the encrypted string. The second line of the input contains t — the result of encryption of some string s. It contains only lowercase Latin letters. The length of t is exactly n.\n\nIt is guaranteed that the answer to the test exists.\n\nOutput\n\nPrint such string s that after encryption it equals t.\n\nExamples\n\nInput\n\n\n6\nbaabbb\n\n\nOutput\n\n\nbab\n\nInput\n\n\n10\nooopppssss\n\n\nOutput\n\n\noops\n\nInput\n\n\n1\nz\n\n\nOutput\n\n\nz", "grammar": {"answer": null}}
{"name": "p03992 CODE FESTIVAL 2016 qual A - CODEFESTIVAL 2016", "description": "This contest is `CODE FESTIVAL`. However, Mr. Takahashi always writes it `CODEFESTIVAL`, omitting the single space between `CODE` and `FESTIVAL`.\n\nSo he has decided to make a program that puts the single space he omitted.\n\nYou are given a string s with 12 letters. Output the string putting a single space between the first 4 letters and last 8 letters in the string s.\n\nConstraints\n\n* s contains exactly 12 letters.\n* All letters in s are uppercase English letters.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\ns\n\n\nOutput\n\nPrint the string putting a single space between the first 4 letters and last 8 letters in the string s. Put a line break at the end.\n\nExamples\n\nInput\n\nCODEFESTIVAL\n\n\nOutput\n\nCODE FESTIVAL\n\n\nInput\n\nPOSTGRADUATE\n\n\nOutput\n\nPOST GRADUATE\n\n\nInput\n\nABCDEFGHIJKL\n\n\nOutput\n\nABCD EFGHIJKL", "grammar": {"answer": null}}
{"name": "578_A. A Problem about Polyline", "description": "There is a polyline going through points (0, 0) – (x, x) – (2x, 0) – (3x, x) – (4x, 0) – ... - (2kx, 0) – (2kx + x, x) – .... \n\nWe know that the polyline passes through the point (a, b). Find minimum positive value x such that it is true or determine that there is no such x.\n\nInput\n\nOnly one line containing two positive integers a and b (1 ≤ a, b ≤ 109).\n\nOutput\n\nOutput the only line containing the answer. Your answer will be considered correct if its relative or absolute error doesn't exceed 10 - 9. If there is no such x then output  - 1 as the answer.\n\nExamples\n\nInput\n\n3 1\n\n\nOutput\n\n1.000000000000\n\n\nInput\n\n1 3\n\n\nOutput\n\n-1\n\n\nInput\n\n4 1\n\n\nOutput\n\n1.250000000000\n\nNote\n\nYou can see following graphs for sample 1 and sample 3. \n\n<image> <image>", "grammar": {"answer": null}}
{"name": "1397_C. Multiples of Length", "description": "You are given an array a of n integers.\n\nYou want to make all elements of a equal to zero by doing the following operation exactly three times:\n\n  * Select a segment, for each number in this segment we can add a multiple of len to it, where len is the length of this segment (added integers can be different). \n\n\n\nIt can be proven that it is always possible to make all elements of a equal to zero.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 100 000): the number of elements of the array.\n\nThe second line contains n elements of an array a separated by spaces: a_1, a_2, ..., a_n (-10^9 ≤ a_i ≤ 10^9).\n\nOutput\n\nThe output should contain six lines representing three operations.\n\nFor each operation, print two lines:\n\n  * The first line contains two integers l, r (1 ≤ l ≤ r ≤ n): the bounds of the selected segment.\n\n  * The second line contains r-l+1 integers b_l, b_{l+1}, ..., b_r (-10^{18} ≤ b_i ≤ 10^{18}): the numbers to add to a_l, a_{l+1}, …, a_r, respectively; b_i should be divisible by r - l + 1.\n\nExample\n\nInput\n\n\n4\n1 3 2 4\n\n\nOutput\n\n\n1 1 \n-1\n3 4\n4 2\n2 4\n-3 -6 -6", "grammar": {"answer": null}}
{"name": "1208_G. Polygons", "description": "You are given two integers n and k.\n\nYou need to construct k regular polygons having same [circumcircle](https://en.wikipedia.org/wiki/Circumscribed_circle), with distinct number of sides l between 3 and n. \n\n<image> Illustration for the first example.\n\nYou can rotate them to minimize the total number of distinct points on the circle. Find the minimum number of such points.\n\nInput\n\nThe only line of input contains two integers n and k (3 ≤ n ≤ 10^{6}, 1 ≤ k ≤ n-2), the maximum number of sides of a polygon and the number of polygons to construct, respectively.\n\nOutput\n\nPrint a single integer — the minimum number of points required for k polygons.\n\nExamples\n\nInput\n\n\n6 2\n\n\nOutput\n\n\n6\n\n\nInput\n\n\n200 50\n\n\nOutput\n\n\n708\n\nNote\n\nIn the first example, we have n = 6 and k = 2. So, we have 4 polygons with number of sides 3, 4, 5 and 6 to choose from and if we choose the triangle and the hexagon, then we can arrange them as shown in the picture in the statement.\n\nHence, the minimum number of points required on the circle is 6, which is also the minimum overall possible sets.", "grammar": {"answer": null}}
{"name": "276_B. Little Girl and Game", "description": "The Little Girl loves problems on games very much. Here's one of them.\n\nTwo players have got a string s, consisting of lowercase English letters. They play a game that is described by the following rules:\n\n  * The players move in turns; In one move the player can remove an arbitrary letter from string s. \n  * If the player before his turn can reorder the letters in string s so as to get a palindrome, this player wins. A palindrome is a string that reads the same both ways (from left to right, and vice versa). For example, string \"abba\" is a palindrome and string \"abc\" isn't. \n\n\n\nDetermine which player will win, provided that both sides play optimally well — the one who moves first or the one who moves second.\n\nInput\n\nThe input contains a single line, containing string s (1 ≤ |s| ≤ 103). String s consists of lowercase English letters.\n\nOutput\n\nIn a single line print word \"First\" if the first player wins (provided that both players play optimally well). Otherwise, print word \"Second\". Print the words without the quotes.\n\nExamples\n\nInput\n\naba\n\n\nOutput\n\nFirst\n\n\nInput\n\nabca\n\n\nOutput\n\nSecond", "grammar": {"answer": null}}
{"name": "1194_A. Remove a Progression", "description": "You have a list of numbers from 1 to n written from left to right on the blackboard.\n\nYou perform an algorithm consisting of several steps (steps are 1-indexed). On the i-th step you wipe the i-th number (considering only remaining numbers). You wipe the whole number (not one digit).\n\n<image>\n\nWhen there are less than i numbers remaining, you stop your algorithm. \n\nNow you wonder: what is the value of the x-th remaining number after the algorithm is stopped?\n\nInput\n\nThe first line contains one integer T (1 ≤ T ≤ 100) — the number of queries. The next T lines contain queries — one per line. All queries are independent.\n\nEach line contains two space-separated integers n and x (1 ≤ x < n ≤ 10^{9}) — the length of the list and the position we wonder about. It's guaranteed that after the algorithm ends, the list will still contain at least x numbers.\n\nOutput\n\nPrint T integers (one per query) — the values of the x-th number after performing the algorithm for the corresponding queries.\n\nExample\n\nInput\n\n\n3\n3 1\n4 2\n69 6\n\n\nOutput\n\n\n2\n4\n12", "grammar": {"answer": null}}
{"name": "p01059 Gossip", "description": "Problem\n\nN idols, numbered from 1 to n in order, are lined up in a row.\nIdle i can transmit information to idle i-1 and idle i + 1 in a unit time. However, idol 1 can transmit information only to idol 2, and idol n can transmit information only to idol n-1.\n\nAt time 0, m idols with numbers a1, a2, ..., am have secret information. Find the minimum amount of time all idols can get confidential information.\n\nConstraints\n\n* 2 ≤ n ≤ 105\n* 1 ≤ m ≤ n\n* 1 ≤ ai ≤ n\n* All ai values ​​are different\n* ai are given in ascending order\n\nInput\n\nThe input is given in the following format.\n\n\nn m\na1 a2 ... am\n\n\nTwo integers n and m are given on the first line, separated by blanks.\nOn the second line, m integers a1, a2, ..., am are given, separated by blanks.\n\nOutput\n\nOutputs the minimum time that information is transmitted to all idles on one line.\n\nExamples\n\nInput\n\n3 2\n1 3\n\n\nOutput\n\n1\n\n\nInput\n\n10 3\n2 5 7\n\n\nOutput\n\n3\n\n\nInput\n\n10 5\n2 5 6 8 10\n\n\nOutput\n\n1\n\n\nInput\n\n100000 1\n1\n\n\nOutput\n\n99999", "grammar": {"answer": null}}
{"name": "p00096 Sum of 4 Integers II", "description": "Enter a positive integer n of 4,000 or less, with a pair of integers a, b, c, d in the range 0-1000.\n\n\na + b + c + d = n\n\n\nCreate a program that outputs the number of combinations that satisfy the conditions.\n\n\n\nInput\n\nGiven multiple datasets. Each dataset is given n on one row. Please process until the end of the input.\n\nThe number of datasets does not exceed 50.\n\nOutput\n\nFor each data set, output the number of combinations of a, b, c, and d on one line.\n\nExample\n\nInput\n\n2\n3\n35\n\n\nOutput\n\n10\n20\n8436", "grammar": {"answer": null}}
{"name": "p03166 Educational DP Contest - Longest Path", "description": "There is a directed graph G with N vertices and M edges. The vertices are numbered 1, 2, \\ldots, N, and for each i (1 \\leq i \\leq M), the i-th directed edge goes from Vertex x_i to y_i. G does not contain directed cycles.\n\nFind the length of the longest directed path in G. Here, the length of a directed path is the number of edges in it.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 10^5\n* 1 \\leq x_i, y_i \\leq N\n* All pairs (x_i, y_i) are distinct.\n* G does not contain directed cycles.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nx_1 y_1\nx_2 y_2\n:\nx_M y_M\n\n\nOutput\n\nPrint the length of the longest directed path in G.\n\nExamples\n\nInput\n\n4 5\n1 2\n1 3\n3 2\n2 4\n3 4\n\n\nOutput\n\n3\n\n\nInput\n\n6 3\n2 3\n4 5\n5 6\n\n\nOutput\n\n2\n\n\nInput\n\n5 8\n5 3\n2 3\n2 4\n5 2\n5 1\n1 4\n4 3\n1 3\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "221_A. Little Elephant and Function", "description": "The Little Elephant enjoys recursive functions.\n\nThis time he enjoys the sorting function. Let a is a permutation of an integers from 1 to n, inclusive, and ai denotes the i-th element of the permutation. The Little Elephant's recursive function f(x), that sorts the first x permutation's elements, works as follows:\n\n  * If x = 1, exit the function. \n  * Otherwise, call f(x - 1), and then make swap(ax - 1, ax) (swap the x-th and (x - 1)-th elements of a). \n\n\n\nThe Little Elephant's teacher believes that this function does not work correctly. But that-be do not get an F, the Little Elephant wants to show the performance of its function. Help him, find a permutation of numbers from 1 to n, such that after performing the Little Elephant's function (that is call f(n)), the permutation will be sorted in ascending order.\n\nInput\n\nA single line contains integer n (1 ≤ n ≤ 1000) — the size of permutation.\n\nOutput\n\nIn a single line print n distinct integers from 1 to n — the required permutation. Numbers in a line should be separated by spaces.\n\nIt is guaranteed that the answer exists.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n1 \n\nInput\n\n2\n\n\nOutput\n\n2 1 ", "grammar": {"answer": null}}
{"name": "p02661 AtCoder Beginner Contest 169 - Count Median", "description": "There are N integers X_1, X_2, \\cdots, X_N, and we know that A_i \\leq X_i \\leq B_i. Find the number of different values that the median of X_1, X_2, \\cdots, X_N can take.\n\nConstraints\n\n* 2 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq A_i \\leq B_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 B_1\nA_2 B_2\n:\nA_N B_N\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n2\n1 2\n2 3\n\n\nOutput\n\n3\n\n\nInput\n\n3\n100 100\n10 10000\n1 1000000000\n\n\nOutput\n\n9991", "grammar": {"answer": null}}
{"name": "582_A. GCD Table", "description": "The GCD table G of size n × n for an array of positive integers a of length n is defined by formula \n\n<image>\n\nLet us remind you that the greatest common divisor (GCD) of two positive integers x and y is the greatest integer that is divisor of both x and y, it is denoted as <image>. For example, for array a = {4, 3, 6, 2} of length 4 the GCD table will look as follows:\n\n<image>\n\nGiven all the numbers of the GCD table G, restore array a.\n\nInput\n\nThe first line contains number n (1 ≤ n ≤ 500) — the length of array a. The second line contains n2 space-separated numbers — the elements of the GCD table of G for array a. \n\nAll the numbers in the table are positive integers, not exceeding 109. Note that the elements are given in an arbitrary order. It is guaranteed that the set of the input data corresponds to some array a.\n\nOutput\n\nIn the single line print n positive integers — the elements of array a. If there are multiple possible solutions, you are allowed to print any of them.\n\nExamples\n\nInput\n\n4\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\n\n\nOutput\n\n4 3 6 2\n\nInput\n\n1\n42\n\n\nOutput\n\n42 \n\nInput\n\n2\n1 1 1 1\n\n\nOutput\n\n1 1 ", "grammar": {"answer": null}}
{"name": "p02837 AtCoder Beginner Contest 147 - HonestOrUnkind2", "description": "There are N people numbered 1 to N. Each of them is either an honest person whose testimonies are always correct or an unkind person whose testimonies may be correct or not.\n\nPerson i gives A_i testimonies. The j-th testimony by Person i is represented by two integers x_{ij} and y_{ij}. If y_{ij} = 1, the testimony says Person x_{ij} is honest; if y_{ij} = 0, it says Person x_{ij} is unkind.\n\nHow many honest persons can be among those N people at most?\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 15\n* 0 \\leq A_i \\leq N - 1\n* 1 \\leq x_{ij} \\leq N\n* x_{ij} \\neq i\n* x_{ij_1} \\neq x_{ij_2} (j_1 \\neq j_2)\n* y_{ij} = 0, 1\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1\nx_{11} y_{11}\nx_{12} y_{12}\n:\nx_{1A_1} y_{1A_1}\nA_2\nx_{21} y_{21}\nx_{22} y_{22}\n:\nx_{2A_2} y_{2A_2}\n:\nA_N\nx_{N1} y_{N1}\nx_{N2} y_{N2}\n:\nx_{NA_N} y_{NA_N}\n\n\nOutput\n\nPrint the maximum possible number of honest persons among the N people.\n\nExamples\n\nInput\n\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\n\nOutput\n\n2\n\n\nInput\n\n3\n2\n2 1\n3 0\n2\n3 1\n1 0\n2\n1 1\n2 0\n\n\nOutput\n\n0\n\n\nInput\n\n2\n1\n2 0\n1\n1 0\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p01502 Sightseeing Tour", "description": "Example\n\nInput\n\n3\n0 2 7\n2 0 4\n5 8 0\n\n\nOutput\n\n11", "grammar": {"answer": null}}
{"name": "p02263 Stack", "description": "Notes\n\nTemplate in C\n\nConstraints\n\n2 ≤ the number of operands in the expression ≤ 100\n1 ≤ the number of operators in the expression ≤ 99\n-1 × 109 ≤ values in the stack ≤ 109\n\nInput\n\nAn expression is given in a line. Two consequtive symbols (operand or operator) are separated by a space character.\n\nYou can assume that +, - and * are given as the operator and an operand is a positive integer less than 106\n\nOutput\n\nPrint the computational result in a line.\n\nExamples\n\nInput\n\n1 2 +\n\n\nOutput\n\n3\n\n\nInput\n\n1 2 + 3 4 - *\n\n\nOutput\n\n-3", "grammar": {"answer": null}}
{"name": "p02442 Lexicographical Comparison", "description": "Compare given two sequence $A = \\\\{a_0, a_1, ..., a_{n-1}\\\\}$ and $B = \\\\{b_0, b_1, ..., b_{m-1}$ lexicographically.\n\nConstraints\n\n* $1 \\leq n, m \\leq 1,000$\n* $0 \\leq a_i, b_i \\leq 1,000$\n\nInput\n\nThe input is given in the following format.\n\n\n$n$\n$a_0 \\; a_1, ..., \\; a_{n-1}$\n$m$\n$b_0 \\; b_1, ..., \\; b_{m-1}$\n\n\nThe number of elements in $A$ and its elements $a_i$ are given in the first and second lines respectively. The number of elements in $B$ and its elements $b_i$ are given in the third and fourth lines respectively. All input are given in integers.\n\nOutput\n\nPrint 1 $B$ is greater than $A$, otherwise 0.\n\nExamples\n\nInput\n\n3\n1 2 3\n2\n2 4\n\n\nOutput\n\n1\n\n\nInput\n\n4\n5 4 7 0\n5\n1 2 3 4 5\n\n\nOutput\n\n0\n\n\nInput\n\n3\n1 1 2\n4\n1 1 2 2\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "1177_B. Digits Sequence (Hard Edition)", "description": "Let's write all the positive integer numbers one after another from 1 without any delimiters (i.e. as a single string). It will be the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536...\n\nYour task is to print the k-th digit of this sequence.\n\nInput\n\nThe first and only line contains integer k (1 ≤ k ≤ 10^{12}) — the position to process (1-based index).\n\nOutput\n\nPrint the k-th digit of the resulting infinite sequence.\n\nExamples\n\nInput\n\n\n7\n\n\nOutput\n\n\n7\n\n\nInput\n\n\n21\n\n\nOutput\n\n\n5", "grammar": {"answer": null}}
{"name": "p03770 AtCoder Grand Contest 012 - Colorful Balls", "description": "Snuke arranged N colorful balls in a row. The i-th ball from the left has color c_i and weight w_i.\n\nHe can rearrange the balls by performing the following two operations any number of times, in any order:\n\n* Operation 1: Select two balls with the same color. If the total weight of these balls is at most X, swap the positions of these balls.\n* Operation 2: Select two balls with different colors. If the total weight of these balls is at most Y, swap the positions of these balls.\n\n\n\nHow many different sequences of colors of balls can be obtained? Find the count modulo 10^9 + 7.\n\nConstraints\n\n* 1 ≤ N ≤ 2 × 10^5\n* 1 ≤ X, Y ≤ 10^9\n* 1 ≤ c_i ≤ N\n* 1 ≤ w_i ≤ 10^9\n* X, Y, c_i, w_i are all integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN X Y\nc_1 w_1\n:\nc_N w_N\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n4 7 3\n3 2\n4 3\n2 1\n4 4\n\n\nOutput\n\n2\n\n\nInput\n\n1 1 1\n1 1\n\n\nOutput\n\n1\n\n\nInput\n\n21 77 68\n16 73\n16 99\n19 66\n2 87\n2 16\n7 17\n10 36\n10 68\n2 38\n10 74\n13 55\n21 21\n3 7\n12 41\n13 88\n18 6\n2 12\n13 87\n1 9\n2 27\n13 15\n\n\nOutput\n\n129729600", "grammar": {"answer": null}}
{"name": "1133_D. Zero Quantity Maximization", "description": "You are given two arrays a and b, each contains n integers.\n\nYou want to create a new array c as follows: choose some real (i.e. not necessarily integer) number d, and then for every i ∈ [1, n] let c_i := d ⋅ a_i + b_i.\n\nYour goal is to maximize the number of zeroes in array c. What is the largest possible answer, if you choose d optimally?\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 2 ⋅ 10^5) — the number of elements in both arrays.\n\nThe second line contains n integers a_1, a_2, ..., a_n (-10^9 ≤ a_i ≤ 10^9).\n\nThe third line contains n integers b_1, b_2, ..., b_n (-10^9 ≤ b_i ≤ 10^9).\n\nOutput\n\nPrint one integer — the maximum number of zeroes in array c, if you choose d optimally.\n\nExamples\n\nInput\n\n\n5\n1 2 3 4 5\n2 4 7 11 3\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n3\n13 37 39\n1 2 3\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n4\n0 0 0 0\n1 2 3 4\n\n\nOutput\n\n\n0\n\n\nInput\n\n\n3\n1 2 -1\n-6 -12 6\n\n\nOutput\n\n\n3\n\nNote\n\nIn the first example, we may choose d = -2.\n\nIn the second example, we may choose d = -1/13.\n\nIn the third example, we cannot obtain any zero in array c, no matter which d we choose.\n\nIn the fourth example, we may choose d = 6.", "grammar": {"answer": null}}
{"name": "323_A. Black-and-White Cube", "description": "You are given a cube of size k × k × k, which consists of unit cubes. Two unit cubes are considered neighbouring, if they have common face.\n\nYour task is to paint each of k3 unit cubes one of two colours (black or white), so that the following conditions must be satisfied:\n\n  * each white cube has exactly 2 neighbouring cubes of white color; \n  * each black cube has exactly 2 neighbouring cubes of black color. \n\nInput\n\nThe first line contains integer k (1 ≤ k ≤ 100), which is size of the cube.\n\nOutput\n\nPrint -1 if there is no solution. Otherwise, print the required painting of the cube consequently by layers. Print a k × k matrix in the first k lines, showing how the first layer of the cube should be painted. In the following k lines print a k × k matrix — the way the second layer should be painted. And so on to the last k-th layer. Note that orientation of the cube in the space does not matter.\n\nMark a white unit cube with symbol \"w\" and a black one with \"b\". Use the format of output data, given in the test samples. You may print extra empty lines, they will be ignored.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n-1\n\n\nInput\n\n2\n\n\nOutput\n\nbb\nww\n\nbb\nww", "grammar": {"answer": null}}
{"name": "p01782 Decoding Ancient Messages", "description": "Example\n\nInput\n\n3\naab\nczc\nbaa\n\n\nOutput\n\naac", "grammar": {"answer": null}}
{"name": "p02974 AtCoder Beginner Contest 134 - Permutation Oddness", "description": "Let us define the oddness of a permutation p = {p_1,\\ p_2,\\ ...,\\ p_n} of {1,\\ 2,\\ ...,\\ n} as \\sum_{i = 1}^n |i - p_i|.\n\nFind the number of permutations of {1,\\ 2,\\ ...,\\ n} of oddness k, modulo 10^9+7.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq n \\leq 50\n* 0 \\leq k \\leq n^2\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nn k\n\n\nOutput\n\nPrint the number of permutations of {1,\\ 2,\\ ...,\\ n} of oddness k, modulo 10^9+7.\n\nExamples\n\nInput\n\n3 2\n\n\nOutput\n\n2\n\n\nInput\n\n39 14\n\n\nOutput\n\n74764168", "grammar": {"answer": null}}
{"name": "117_C. Cycle", "description": "A tournament is a directed graph without self-loops in which every pair of vertexes is connected by exactly one directed edge. That is, for any two vertexes u and v (u ≠ v) exists either an edge going from u to v, or an edge from v to u.\n\nYou are given a tournament consisting of n vertexes. Your task is to find there a cycle of length three.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 5000). Next n lines contain the adjacency matrix A of the graph (without spaces). Ai, j = 1 if the graph has an edge going from vertex i to vertex j, otherwise Ai, j = 0. Ai, j stands for the j-th character in the i-th line.\n\nIt is guaranteed that the given graph is a tournament, that is, Ai, i = 0, Ai, j ≠ Aj, i (1 ≤ i, j ≤ n, i ≠ j).\n\nOutput\n\nPrint three distinct vertexes of the graph a1, a2, a3 (1 ≤ ai ≤ n), such that Aa1, a2 = Aa2, a3 = Aa3, a1 = 1, or \"-1\", if a cycle whose length equals three does not exist. \n\nIf there are several solutions, print any of them.\n\nExamples\n\nInput\n\n5\n00100\n10000\n01001\n11101\n11000\n\n\nOutput\n\n1 3 2 \n\nInput\n\n5\n01111\n00000\n01000\n01100\n01110\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "520_A. Pangram", "description": "A word or a sentence in some language is called a pangram if all the characters of the alphabet of this language appear in it at least once. Pangrams are often used to demonstrate fonts in printing or test the output devices.\n\nYou are given a string consisting of lowercase and uppercase Latin letters. Check whether this string is a pangram. We say that the string contains a letter of the Latin alphabet if this letter occurs in the string in uppercase or lowercase.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 100) — the number of characters in the string.\n\nThe second line contains the string. The string consists only of uppercase and lowercase Latin letters.\n\nOutput\n\nOutput \"YES\", if the string is a pangram and \"NO\" otherwise.\n\nExamples\n\nInput\n\n12\ntoosmallword\n\n\nOutput\n\nNO\n\n\nInput\n\n35\nTheQuickBrownFoxJumpsOverTheLazyDog\n\n\nOutput\n\nYES", "grammar": {"answer": null}}
{"name": "p02931 Japanese Student Championship 2019 Qualification - Card Collector", "description": "There are N cards placed on a grid with H rows and W columns of squares.\n\nThe i-th card has an integer A_i written on it, and it is placed on the square at the R_i-th row from the top and the C_i-th column from the left.\n\nMultiple cards may be placed on the same square.\n\nYou will first pick up at most one card from each row.\n\nThen, you will pick up at most one card from each column.\n\nFind the maximum possible sum of the integers written on the picked cards.\n\nConstraints\n\n* All values are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq H, W \\leq 10^5\n* 1 \\leq A_i \\leq 10^5\n* 1 \\leq R_i \\leq H\n* 1 \\leq C_i \\leq W\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN H W\nR_1 C_1 A_1\nR_2 C_2 A_2\n\\vdots\nR_N C_N A_N\n\n\nOutput\n\nPrint the maximum possible sum of the integers written on the picked cards.\n\nExamples\n\nInput\n\n6 2 2\n2 2 2\n1 1 8\n1 1 5\n1 2 9\n1 2 7\n2 1 4\n\n\nOutput\n\n28\n\n\nInput\n\n13 5 6\n1 3 35902\n4 6 19698\n4 6 73389\n3 6 3031\n3 1 4771\n1 4 4784\n2 1 36357\n2 1 24830\n5 6 50219\n4 6 22645\n1 2 30739\n1 4 68417\n1 5 78537\n\n\nOutput\n\n430590\n\n\nInput\n\n1 100000 100000\n1 1 1\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "300_C. Beautiful Numbers", "description": "Vitaly is a very weird man. He's got two favorite digits a and b. Vitaly calls a positive integer good, if the decimal representation of this integer only contains digits a and b. Vitaly calls a good number excellent, if the sum of its digits is a good number.\n\nFor example, let's say that Vitaly's favourite digits are 1 and 3, then number 12 isn't good and numbers 13 or 311 are. Also, number 111 is excellent and number 11 isn't. \n\nNow Vitaly is wondering, how many excellent numbers of length exactly n are there. As this number can be rather large, he asks you to count the remainder after dividing it by 1000000007 (109 + 7).\n\nA number's length is the number of digits in its decimal representation without leading zeroes.\n\nInput\n\nThe first line contains three integers: a, b, n (1 ≤ a < b ≤ 9, 1 ≤ n ≤ 106).\n\nOutput\n\nPrint a single integer — the answer to the problem modulo 1000000007 (109 + 7).\n\nExamples\n\nInput\n\n1 3 3\n\n\nOutput\n\n1\n\n\nInput\n\n2 3 10\n\n\nOutput\n\n165", "grammar": {"answer": null}}
{"name": "p02540 ACL Contest 1 - Reachable Towns", "description": "There are N cities on a 2D plane. The coordinate of the i-th city is (x_i, y_i). Here (x_1, x_2, \\dots, x_N) and (y_1, y_2, \\dots, y_N) are both permuations of (1, 2, \\dots, N).\n\nFor each k = 1,2,\\dots,N, find the answer to the following question:\n\nRng is in City k. Rng can perform the following move arbitrarily many times:\n\n* move to another city that has a smaller x-coordinate and a smaller y-coordinate, or a larger x-coordinate and a larger y-coordinate, than the city he is currently in.\n\n\n\nHow many cities (including City k) are reachable from City k?\n\nConstraints\n\n* 1 \\leq N \\leq 200,000\n* (x_1, x_2, \\dots, x_N) is a permutation of (1, 2, \\dots, N).\n* (y_1, y_2, \\dots, y_N) is a permutation of (1, 2, \\dots, N).\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nx_1 y_1\nx_2 y_2\n:\nx_N y_N\n\n\nOutput\n\nPrint N lines. In i-th line print the answer to the question when k = i.\n\nExamples\n\nInput\n\n4\n1 4\n2 3\n3 1\n4 2\n\n\nOutput\n\n1\n1\n2\n2\n\n\nInput\n\n7\n6 4\n4 3\n3 5\n7 1\n2 7\n5 2\n1 6\n\n\nOutput\n\n3\n3\n1\n1\n2\n3\n2", "grammar": {"answer": null}}
{"name": "260_A. Adding Digits", "description": "Vasya has got two number: a and b. However, Vasya finds number a too short. So he decided to repeat the operation of lengthening number a n times.\n\nOne operation of lengthening a number means adding exactly one digit to the number (in the decimal notation) to the right provided that the resulting number is divisible by Vasya's number b. If it is impossible to obtain the number which is divisible by b, then the lengthening operation cannot be performed.\n\nYour task is to help Vasya and print the number he can get after applying the lengthening operation to number a n times.\n\nInput\n\nThe first line contains three integers: a, b, n (1 ≤ a, b, n ≤ 105).\n\nOutput\n\nIn a single line print the integer without leading zeros, which Vasya can get when he applies the lengthening operations to number a n times. If no such number exists, then print number -1. If there are multiple possible answers, print any of them.\n\nExamples\n\nInput\n\n5 4 5\n\n\nOutput\n\n524848\n\n\nInput\n\n12 11 1\n\n\nOutput\n\n121\n\n\nInput\n\n260 150 10\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p03033 AtCoder Beginner Contest 128 - Roadwork", "description": "There is an infinitely long street that runs west to east, which we consider as a number line.\n\nThere are N roadworks scheduled on this street. The i-th roadwork blocks the point at coordinate X_i from time S_i - 0.5 to time T_i - 0.5.\n\nQ people are standing at coordinate 0. The i-th person will start the coordinate 0 at time D_i, continue to walk with speed 1 in the positive direction and stop walking when reaching a blocked point.\n\nFind the distance each of the Q people will walk.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N, Q \\leq 2 \\times 10^5\n* 0 \\leq S_i < T_i \\leq 10^9\n* 1 \\leq X_i \\leq 10^9\n* 0 \\leq D_1 < D_2 < ... < D_Q \\leq 10^9\n* If i \\neq j and X_i = X_j, the intervals [S_i, T_i) and [S_j, T_j) do not overlap.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN Q\nS_1 T_1 X_1\n:\nS_N T_N X_N\nD_1\n:\nD_Q\n\n\nOutput\n\nPrint Q lines. The i-th line should contain the distance the i-th person will walk or -1 if that person walks forever.\n\nExample\n\nInput\n\n4 6\n1 3 2\n7 13 10\n18 20 13\n3 4 2\n0\n1\n2\n3\n5\n8\n\n\nOutput\n\n2\n2\n10\n-1\n13\n-1", "grammar": {"answer": null}}
{"name": "p04019 AtCoder Grand Contest 003 - Wanna go back home", "description": "Snuke lives on an infinite two-dimensional plane. He is going on an N-day trip. At the beginning of Day 1, he is at home. His plan is described in a string S of length N. On Day i(1 ≦ i ≦ N), he will travel a positive distance in the following direction:\n\n* North if the i-th letter of S is `N`\n* West if the i-th letter of S is `W`\n* South if the i-th letter of S is `S`\n* East if the i-th letter of S is `E`\n\n\n\nHe has not decided each day's travel distance. Determine whether it is possible to set each day's travel distance so that he will be back at home at the end of Day N.\n\nConstraints\n\n* 1 ≦ | S | ≦ 1000\n* S consists of the letters `N`, `W`, `S`, `E`.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint `Yes` if it is possible to set each day's travel distance so that he will be back at home at the end of Day N. Otherwise, print `No`.\n\nExamples\n\nInput\n\nSENW\n\n\nOutput\n\nYes\n\n\nInput\n\nNSNNSNSN\n\n\nOutput\n\nYes\n\n\nInput\n\nNNEW\n\n\nOutput\n\nNo\n\n\nInput\n\nW\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "965_A. Paper Airplanes", "description": "To make a paper airplane, one has to use a rectangular piece of paper. From a sheet of standard size you can make s airplanes.\n\nA group of k people decided to make n airplanes each. They are going to buy several packs of paper, each of them containing p sheets, and then distribute the sheets between the people. Each person should have enough sheets to make n airplanes. How many packs should they buy?\n\nInput\n\nThe only line contains four integers k, n, s, p (1 ≤ k, n, s, p ≤ 10^4) — the number of people, the number of airplanes each should make, the number of airplanes that can be made using one sheet and the number of sheets in one pack, respectively.\n\nOutput\n\nPrint a single integer — the minimum number of packs they should buy.\n\nExamples\n\nInput\n\n5 3 2 3\n\n\nOutput\n\n4\n\n\nInput\n\n5 3 100 1\n\n\nOutput\n\n5\n\nNote\n\nIn the first sample they have to buy 4 packs of paper: there will be 12 sheets in total, and giving 2 sheets to each person is enough to suit everyone's needs.\n\nIn the second sample they have to buy a pack for each person as they can't share sheets.", "grammar": {"answer": null}}
{"name": "485_C. Bits", "description": "Let's denote as <image> the number of bits set ('1' bits) in the binary representation of the non-negative integer x.\n\nYou are given multiple queries consisting of pairs of integers l and r. For each query, find the x, such that l ≤ x ≤ r, and <image> is maximum possible. If there are multiple such numbers find the smallest of them.\n\nInput\n\nThe first line contains integer n — the number of queries (1 ≤ n ≤ 10000).\n\nEach of the following n lines contain two integers li, ri — the arguments for the corresponding query (0 ≤ li ≤ ri ≤ 1018).\n\nOutput\n\nFor each query print the answer in a separate line.\n\nExamples\n\nInput\n\n3\n1 2\n2 4\n1 10\n\n\nOutput\n\n1\n3\n7\n\nNote\n\nThe binary representations of numbers from 1 to 10 are listed below:\n\n110 = 12\n\n210 = 102\n\n310 = 112\n\n410 = 1002\n\n510 = 1012\n\n610 = 1102\n\n710 = 1112\n\n810 = 10002\n\n910 = 10012\n\n1010 = 10102", "grammar": {"answer": null}}
{"name": "p03442 AtCoder Petrozavodsk Contest 001 - XOR Tree", "description": "You are given a tree with N vertices. The vertices are numbered 0 through N-1, and the edges are numbered 1 through N-1. Edge i connects Vertex x_i and y_i, and has a value a_i. You can perform the following operation any number of times:\n\n* Choose a simple path and a non-negative integer x, then for each edge e that belongs to the path, change a_e by executing a_e ← a_e ⊕ x (⊕ denotes XOR).\n\n\n\nYour objective is to have a_e = 0 for all edges e. Find the minimum number of operations required to achieve it.\n\nConstraints\n\n* 2 ≤ N ≤ 10^5\n* 0 ≤ x_i,y_i ≤ N-1\n* 0 ≤ a_i ≤ 15\n* The given graph is a tree.\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nx_1 y_1 a_1\nx_2 y_2 a_2\n:\nx_{N-1} y_{N-1} a_{N-1}\n\n\nOutput\n\nFind the minimum number of operations required to achieve the objective.\n\nExamples\n\nInput\n\n5\n0 1 1\n0 2 3\n0 3 6\n3 4 4\n\n\nOutput\n\n3\n\n\nInput\n\n2\n1 0 0\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "55_D. Beautiful numbers", "description": "Volodya is an odd boy and his taste is strange as well. It seems to him that a positive integer number is beautiful if and only if it is divisible by each of its nonzero digits. We will not argue with this and just count the quantity of beautiful numbers in given ranges.\n\nInput\n\nThe first line of the input contains the number of cases t (1 ≤ t ≤ 10). Each of the next t lines contains two natural numbers li and ri (1 ≤ li ≤ ri ≤ 9 ·1018).\n\nPlease, do not use %lld specificator to read or write 64-bit integers in C++. It is preffered to use cin (also you may use %I64d).\n\nOutput\n\nOutput should contain t numbers — answers to the queries, one number per line — quantities of beautiful numbers in given intervals (from li to ri, inclusively).\n\nExamples\n\nInput\n\n1\n1 9\n\n\nOutput\n\n9\n\n\nInput\n\n1\n12 15\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02882 AtCoder Beginner Contest 144 - Water Bottle", "description": "Takahashi has a water bottle with the shape of a rectangular prism whose base is a square of side a~\\mathrm{cm} and whose height is b~\\mathrm{cm}. (The thickness of the bottle can be ignored.)\n\nWe will pour x~\\mathrm{cm}^3 of water into the bottle, and gradually tilt the bottle around one of the sides of the base.\n\nWhen will the water be spilled? More formally, find the maximum angle in which we can tilt the bottle without spilling any water.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq a \\leq 100\n* 1 \\leq b \\leq 100\n* 1 \\leq x \\leq a^2b\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\na b x\n\n\nOutput\n\nPrint the maximum angle in which we can tilt the bottle without spilling any water, in degrees. Your output will be judged as correct when the absolute or relative error from the judge's output is at most 10^{-6}.\n\nExamples\n\nInput\n\n2 2 4\n\n\nOutput\n\n45.0000000000\n\n\nInput\n\n12 21 10\n\n\nOutput\n\n89.7834636934\n\n\nInput\n\n3 1 8\n\n\nOutput\n\n4.2363947991", "grammar": {"answer": null}}
{"name": "p03852 AtCoder Beginner Contest 049 - UOIAUAI", "description": "Given a lowercase English letter c, determine whether it is a vowel. Here, there are five vowels in the English alphabet: `a`, `e`, `i`, `o` and `u`.\n\nConstraints\n\n* c is a lowercase English letter.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nc\n\n\nOutput\n\nIf c is a vowel, print `vowel`. Otherwise, print `consonant`.\n\nExamples\n\nInput\n\na\n\n\nOutput\n\nvowel\n\n\nInput\n\nz\n\n\nOutput\n\nconsonant\n\n\nInput\n\ns\n\n\nOutput\n\nconsonant", "grammar": {"answer": null}}
{"name": "302_C. Yaroslav and Sequence", "description": "Yaroslav has an array, consisting of (2·n - 1) integers. In a single operation Yaroslav can change the sign of exactly n elements in the array. In other words, in one operation Yaroslav can select exactly n array elements, and multiply each of them by -1.\n\nYaroslav is now wondering: what maximum sum of array elements can be obtained if it is allowed to perform any number of described operations?\n\nHelp Yaroslav.\n\nInput\n\nThe first line contains an integer n (2 ≤ n ≤ 100). The second line contains (2·n - 1) integers — the array elements. The array elements do not exceed 1000 in their absolute value.\n\nOutput\n\nIn a single line print the answer to the problem — the maximum sum that Yaroslav can get.\n\nExamples\n\nInput\n\n2\n50 50 50\n\n\nOutput\n\n150\n\n\nInput\n\n2\n-1 -100 -1\n\n\nOutput\n\n100\n\nNote\n\nIn the first sample you do not need to change anything. The sum of elements equals 150.\n\nIn the second sample you need to change the sign of the first two elements. Then we get the sum of the elements equal to 100.", "grammar": {"answer": null}}
{"name": "1499_D. The Number of Pairs", "description": "You are given three positive (greater than zero) integers c, d and x. \n\nYou have to find the number of pairs of positive integers (a, b) such that equality c ⋅ lcm(a, b) - d ⋅ gcd(a, b) = x holds. Where lcm(a, b) is the least common multiple of a and b and gcd(a, b) is the greatest common divisor of a and b.\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 10^4) — the number of test cases.\n\nEach test case consists of one line containing three integer c, d and x (1 ≤ c, d, x ≤ 10^7).\n\nOutput\n\nFor each test case, print one integer — the number of pairs (a, b) such that the above equality holds.\n\nExample\n\nInput\n\n\n4\n1 1 3\n4 2 6\n3 3 7\n2 7 25\n\n\nOutput\n\n\n4\n3\n0\n8\n\nNote\n\nIn the first example, the correct pairs are: (1, 4), (4,1), (3, 6), (6, 3).\n\nIn the second example, the correct pairs are: (1, 2), (2, 1), (3, 3).", "grammar": {"answer": null}}
{"name": "p02421 Card Game", "description": "Taro and Hanako are playing card games. They have n cards each, and they compete n turns. At each turn Taro and Hanako respectively puts out a card. The name of the animal consisting of alphabetical letters is written on each card, and the bigger one in lexicographical order becomes the winner of that turn. The winner obtains 3 points. In the case of a draw, they obtain 1 point each.\n\nWrite a program which reads a sequence of cards Taro and Hanako have and reports the final scores of the game.\n\nConstraints\n\n* n ≤ 1000\n* The length of the string ≤ 100\n\nInput\n\nIn the first line, the number of cards n is given. In the following n lines, the cards for n turns are given respectively. For each line, the first string represents the Taro's card and the second one represents Hanako's card.\n\nOutput\n\nPrint the final scores of Taro and Hanako respectively. Put a single space character between them.\n\nExample\n\nInput\n\n3\ncat dog\nfish fish\nlion tiger\n\n\nOutput\n\n1 7", "grammar": {"answer": null}}
{"name": "1231_B. Ania and Minimizing", "description": "Ania has a large integer S. Its decimal representation has length n and doesn't contain any leading zeroes. Ania is allowed to change at most k digits of S. She wants to do it in such a way that S still won't contain any leading zeroes and it'll be minimal possible. What integer will Ania finish with?\n\nInput\n\nThe first line contains two integers n and k (1 ≤ n ≤ 200 000, 0 ≤ k ≤ n) — the number of digits in the decimal representation of S and the maximum allowed number of changed digits.\n\nThe second line contains the integer S. It's guaranteed that S has exactly n digits and doesn't contain any leading zeroes.\n\nOutput\n\nOutput the minimal possible value of S which Ania can end with. Note that the resulting integer should also have n digits.\n\nExamples\n\nInput\n\n\n5 3\n51528\n\n\nOutput\n\n\n10028\n\n\nInput\n\n\n3 2\n102\n\n\nOutput\n\n\n100\n\n\nInput\n\n\n1 1\n1\n\n\nOutput\n\n\n0\n\nNote\n\nA number has leading zeroes if it consists of at least two digits and its first digit is 0. For example, numbers 00, 00069 and 0101 have leading zeroes, while 0, 3000 and 1010 don't have leading zeroes.", "grammar": {"answer": null}}
{"name": "888_D. Almost Identity Permutations", "description": "A permutation p of size n is an array such that every integer from 1 to n occurs exactly once in this array.\n\nLet's call a permutation an almost identity permutation iff there exist at least n - k indices i (1 ≤ i ≤ n) such that pi = i.\n\nYour task is to count the number of almost identity permutations for given numbers n and k.\n\nInput\n\nThe first line contains two integers n and k (4 ≤ n ≤ 1000, 1 ≤ k ≤ 4).\n\nOutput\n\nPrint the number of almost identity permutations for given n and k.\n\nExamples\n\nInput\n\n4 1\n\n\nOutput\n\n1\n\n\nInput\n\n4 2\n\n\nOutput\n\n7\n\n\nInput\n\n5 3\n\n\nOutput\n\n31\n\n\nInput\n\n5 4\n\n\nOutput\n\n76", "grammar": {"answer": null}}
{"name": "1230_B. Ania and Minimizing", "description": "Ania has a large integer S. Its decimal representation has length n and doesn't contain any leading zeroes. Ania is allowed to change at most k digits of S. She wants to do it in such a way that S still won't contain any leading zeroes and it'll be minimal possible. What integer will Ania finish with?\n\nInput\n\nThe first line contains two integers n and k (1 ≤ n ≤ 200 000, 0 ≤ k ≤ n) — the number of digits in the decimal representation of S and the maximum allowed number of changed digits.\n\nThe second line contains the integer S. It's guaranteed that S has exactly n digits and doesn't contain any leading zeroes.\n\nOutput\n\nOutput the minimal possible value of S which Ania can end with. Note that the resulting integer should also have n digits.\n\nExamples\n\nInput\n\n\n5 3\n51528\n\n\nOutput\n\n\n10028\n\n\nInput\n\n\n3 2\n102\n\n\nOutput\n\n\n100\n\n\nInput\n\n\n1 1\n1\n\n\nOutput\n\n\n0\n\nNote\n\nA number has leading zeroes if it consists of at least two digits and its first digit is 0. For example, numbers 00, 00069 and 0101 have leading zeroes, while 0, 3000 and 1010 don't have leading zeroes.", "grammar": {"answer": null}}
{"name": "p02599 AtCoder Beginner Contest 174 - Range Set Query", "description": "We have N colored balls arranged in a row from left to right; the color of the i-th ball from the left is c_i.\n\nYou are given Q queries. The i-th query is as follows: how many different colors do the l_i-th through r_i-th balls from the left have?\n\nConstraints\n\n* 1\\leq N,Q \\leq 5 \\times 10^5\n* 1\\leq c_i \\leq N\n* 1\\leq l_i \\leq r_i \\leq N\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN Q\nc_1 c_2 \\cdots c_N\nl_1 r_1\nl_2 r_2\n:\nl_Q r_Q\n\n\nOutput\n\nPrint Q lines. The i-th line should contain the response to the i-th query.\n\nExamples\n\nInput\n\n4 3\n1 2 1 3\n1 3\n2 4\n3 3\n\n\nOutput\n\n2\n3\n1\n\n\nInput\n\n10 10\n2 5 6 5 2 1 7 9 7 2\n5 5\n2 4\n6 7\n2 2\n7 8\n7 9\n1 8\n6 9\n8 10\n6 8\n\n\nOutput\n\n1\n2\n2\n1\n2\n2\n6\n3\n3\n3", "grammar": {"answer": null}}
{"name": "p03272 AtCoder Beginner Contest 107 - Train", "description": "There is an N-car train.\n\nYou are given an integer i. Find the value of j such that the following statement is true: \"the i-th car from the front of the train is the j-th car from the back.\"\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* 1 \\leq i \\leq N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN i\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n4 2\n\n\nOutput\n\n3\n\n\nInput\n\n1 1\n\n\nOutput\n\n1\n\n\nInput\n\n15 11\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p03324 AtCoder Beginner Contest 100 - Ringo's Favorite Numbers", "description": "Today, the memorable AtCoder Beginner Contest 100 takes place. On this occasion, Takahashi would like to give an integer to Ringo.\nAs the name of the contest is AtCoder Beginner Contest 100, Ringo would be happy if he is given a positive integer that can be divided by 100 exactly D times.\n\nFind the N-th smallest integer that would make Ringo happy.\n\nConstraints\n\n* D is 0, 1 or 2.\n* N is an integer between 1 and 100 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nD N\n\n\nOutput\n\nPrint the N-th smallest integer that can be divided by 100 exactly D times.\n\nExamples\n\nInput\n\n0 5\n\n\nOutput\n\n5\n\n\nInput\n\n1 11\n\n\nOutput\n\n1100\n\n\nInput\n\n2 85\n\n\nOutput\n\n850000", "grammar": {"answer": null}}
{"name": "p00052 Factorial II", "description": "n! = n × (n − 1) × (n − 2) × ... × 3 × 2 × 1\n\nIs called the factorial of n. For example, the factorial of 12\n\n12! = 12 x 11 x 10 x 9 x 8 x 7 x 6 x 5 x 4 x 3 x 2 x 1 = 479001600\n\nAnd there are two consecutive 0s at the end.\n\nWrite a program that inputs the integer n and outputs the number of consecutive 0s at the end of n !. However, n is a positive integer less than or equal to 20000.\n\n\n\nInput\n\nMultiple data are given. Each piece of data is given n (n ≤ 20000) on one line. When n is 0, it is the last input.\n\nThe number of data does not exceed 20.\n\nOutput\n\nFor each data, output the number of 0s that are consecutively arranged at the end of n! On one line.\n\nExample\n\nInput\n\n2\n12\n10000\n0\n\n\nOutput\n\n0\n2\n2499", "grammar": {"answer": null}}
{"name": "p03570 CODE FESTIVAL 2017 qual C - Yet Another Palindrome Partitioning", "description": "We have a string s consisting of lowercase English letters. Snuke is partitioning s into some number of non-empty substrings. Let the subtrings obtained be s_1, s_2, ..., s_N from left to right. (Here, s = s_1 + s_2 + ... + s_N holds.) Snuke wants to satisfy the following condition:\n\n* For each i (1 \\leq i \\leq N), it is possible to permute the characters in s_i and obtain a palindrome.\n\n\n\nFind the minimum possible value of N when the partition satisfies the condition.\n\nConstraints\n\n* 1 \\leq |s| \\leq 2 \\times 10^5\n* s consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\ns\n\n\nOutput\n\nPrint the minimum possible value of N when the partition satisfies the condition.\n\nExamples\n\nInput\n\naabxyyzz\n\n\nOutput\n\n2\n\n\nInput\n\nbyebye\n\n\nOutput\n\n1\n\n\nInput\n\nabcdefghijklmnopqrstuvwxyz\n\n\nOutput\n\n26\n\n\nInput\n\nabcabcxabcx\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p03811 AtCoder Grand Contest 010 - Rearranging", "description": "There are N integers written on a blackboard. The i-th integer is A_i.\n\nTakahashi and Aoki will arrange these integers in a row, as follows:\n\n* First, Takahashi will arrange the integers as he wishes.\n* Then, Aoki will repeatedly swap two adjacent integers that are coprime, as many times as he wishes.\n\n\n\nWe will assume that Takahashi acts optimally so that the eventual sequence will be lexicographically as small as possible, and we will also assume that Aoki acts optimally so that the eventual sequence will be lexicographically as large as possible. Find the eventual sequence that will be produced.\n\nConstraints\n\n* 1 ≦ N ≦ 2000\n* 1 ≦ A_i ≦ 10^8\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 … A_N\n\n\nOutput\n\nPrint the eventual sequence that will be produced, in a line.\n\nExamples\n\nInput\n\n5\n1 2 3 4 5\n\n\nOutput\n\n5 3 2 4 1\n\n\nInput\n\n4\n2 3 4 6\n\n\nOutput\n\n2 4 6 3", "grammar": {"answer": null}}
{"name": "1180_A. Alex and a Rhombus", "description": "While playing with geometric figures Alex has accidentally invented a concept of a n-th order rhombus in a cell grid.\n\nA 1-st order rhombus is just a square 1 × 1 (i.e just a cell).\n\nA n-th order rhombus for all n ≥ 2 one obtains from a n-1-th order rhombus adding all cells which have a common side with it to it (look at the picture to understand it better).\n\n<image>\n\nAlex asks you to compute the number of cells in a n-th order rhombus.\n\nInput\n\nThe first and only input line contains integer n (1 ≤ n ≤ 100) — order of a rhombus whose numbers of cells should be computed.\n\nOutput\n\nPrint exactly one integer — the number of cells in a n-th order rhombus.\n\nExamples\n\nInput\n\n\n1\n\n\nOutput\n\n\n1\n\nInput\n\n\n2\n\n\nOutput\n\n\n5\n\nInput\n\n\n3\n\n\nOutput\n\n\n13\n\nNote\n\nImages of rhombus corresponding to the examples are given in the statement.", "grammar": {"answer": null}}
{"name": "817_F. MEX Queries", "description": "You are given a set of integer numbers, initially it is empty. You should perform n queries.\n\nThere are three different types of queries: \n\n  * 1 l r — Add all missing numbers from the interval [l, r]\n  * 2 l r — Remove all present numbers from the interval [l, r]\n  * 3 l r — Invert the interval [l, r] — add all missing and remove all present numbers from the interval [l, r]\n\n\n\nAfter each query you should output MEX of the set — the smallest positive (MEX ≥ 1) integer number which is not presented in the set.\n\nInput\n\nThe first line contains one integer number n (1 ≤ n ≤ 105).\n\nNext n lines contain three integer numbers t, l, r (1 ≤ t ≤ 3, 1 ≤ l ≤ r ≤ 1018) — type of the query, left and right bounds.\n\nOutput\n\nPrint MEX of the set after each query.\n\nExamples\n\nInput\n\n3\n1 3 4\n3 1 6\n2 1 3\n\n\nOutput\n\n1\n3\n1\n\n\nInput\n\n4\n1 1 3\n3 5 6\n2 4 4\n3 1 6\n\n\nOutput\n\n4\n4\n4\n1\n\nNote\n\nHere are contents of the set after each query in the first example:\n\n  1. {3, 4} — the interval [3, 4] is added \n  2. {1, 2, 5, 6} — numbers {3, 4} from the interval [1, 6] got deleted and all the others are added \n  3. {5, 6} — numbers {1, 2} got deleted ", "grammar": {"answer": null}}
{"name": "1096_A. Find Divisible", "description": "You are given a range of positive integers from l to r.\n\nFind such a pair of integers (x, y) that l ≤ x, y ≤ r, x ≠ y and x divides y.\n\nIf there are multiple answers, print any of them.\n\nYou are also asked to answer T independent queries.\n\nInput\n\nThe first line contains a single integer T (1 ≤ T ≤ 1000) — the number of queries.\n\nEach of the next T lines contains two integers l and r (1 ≤ l ≤ r ≤ 998244353) — inclusive borders of the range.\n\nIt is guaranteed that testset only includes queries, which have at least one suitable pair.\n\nOutput\n\nPrint T lines, each line should contain the answer — two integers x and y such that l ≤ x, y ≤ r, x ≠ y and x divides y. The answer in the i-th line should correspond to the i-th query from the input.\n\nIf there are multiple answers, print any of them.\n\nExample\n\nInput\n\n\n3\n1 10\n3 14\n1 10\n\n\nOutput\n\n\n1 7\n3 9\n5 10", "grammar": {"answer": null}}
{"name": "272_B. Dima and Sequence", "description": "Dima got into number sequences. Now he's got sequence a1, a2, ..., an, consisting of n positive integers. Also, Dima has got a function f(x), which can be defined with the following recurrence:\n\n  * f(0) = 0; \n  * f(2·x) = f(x); \n  * f(2·x + 1) = f(x) + 1. \n\n\n\nDima wonders, how many pairs of indexes (i, j) (1 ≤ i < j ≤ n) are there, such that f(ai) = f(aj). Help him, count the number of such pairs. \n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 105). The second line contains n positive integers a1, a2, ..., an (1 ≤ ai ≤ 109).\n\nThe numbers in the lines are separated by single spaces.\n\nOutput\n\nIn a single line print the answer to the problem.\n\nPlease, don't use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nExamples\n\nInput\n\n3\n1 2 4\n\n\nOutput\n\n3\n\n\nInput\n\n3\n5 3 1\n\n\nOutput\n\n1\n\nNote\n\nIn the first sample any pair (i, j) will do, so the answer is 3.\n\nIn the second sample only pair (1, 2) will do.", "grammar": {"answer": null}}
{"name": "224_A. Parallelepiped", "description": "You've got a rectangular parallelepiped with integer edge lengths. You know the areas of its three faces that have a common vertex. Your task is to find the sum of lengths of all 12 edges of this parallelepiped.\n\nInput\n\nThe first and the single line contains three space-separated integers — the areas of the parallelepiped's faces. The area's values are positive ( > 0) and do not exceed 104. It is guaranteed that there exists at least one parallelepiped that satisfies the problem statement.\n\nOutput\n\nPrint a single number — the sum of all edges of the parallelepiped.\n\nExamples\n\nInput\n\n1 1 1\n\n\nOutput\n\n12\n\n\nInput\n\n4 6 6\n\n\nOutput\n\n28\n\nNote\n\nIn the first sample the parallelepiped has sizes 1 × 1 × 1, in the second one — 2 × 2 × 3.", "grammar": {"answer": null}}
{"name": "1117_A. Best Subsegment", "description": "You are given array a_1, a_2, ..., a_n. Find the subsegment a_l, a_{l+1}, ..., a_r (1 ≤ l ≤ r ≤ n) with maximum arithmetic mean (1)/(r - l + 1)∑_{i=l}^{r}{a_i} (in floating-point numbers, i.e. without any rounding).\n\nIf there are many such subsegments find the longest one.\n\nInput\n\nThe first line contains single integer n (1 ≤ n ≤ 10^5) — length of the array a.\n\nThe second line contains n integers a_1, a_2, ..., a_n (0 ≤ a_i ≤ 10^9) — the array a.\n\nOutput\n\nPrint the single integer — the length of the longest subsegment with maximum possible arithmetic mean.\n\nExample\n\nInput\n\n\n5\n6 1 6 6 0\n\n\nOutput\n\n\n2\n\nNote\n\nThe subsegment [3, 4] is the longest among all subsegments with maximum arithmetic mean.", "grammar": {"answer": null}}
{"name": "p02330 Coin Combination Problem II", "description": "You have N coins each of which has a value ai. Find the number of combinations that result when you choose K different coins in such a way that the total value of the coins is greater than or equal to L and less than or equal to R.\n\nConstraints\n\n* 1 ≤ K ≤ N ≤ 40\n* 1 ≤ ai ≤ 1016\n* 1 ≤ L ≤ R ≤ 1016\n* All input values are given in integers\n\nInput\n\nThe input is given in the following format.\n\n\nN K L R\na1 a2 ... aN\n\n\nOutput\n\nPrint the number of combinations in a line.\n\nExamples\n\nInput\n\n2 2 1 9\n5 1\n\n\nOutput\n\n1\n\n\nInput\n\n5 2 7 19\n3 5 4 2 2\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "797_C. Minimal string", "description": "Petya recieved a gift of a string s with length up to 105 characters for his birthday. He took two more empty strings t and u and decided to play a game. This game has two possible moves:\n\n  * Extract the first character of s and append t with this character. \n  * Extract the last character of t and append u with this character. \n\n\n\nPetya wants to get strings s and t empty and string u lexicographically minimal.\n\nYou should write a program that will help Petya win the game.\n\nInput\n\nFirst line contains non-empty string s (1 ≤ |s| ≤ 105), consisting of lowercase English letters.\n\nOutput\n\nPrint resulting string u.\n\nExamples\n\nInput\n\ncab\n\n\nOutput\n\nabc\n\n\nInput\n\nacdb\n\n\nOutput\n\nabdc", "grammar": {"answer": null}}
{"name": "223_C. Partial Sums", "description": "You've got an array a, consisting of n integers. The array elements are indexed from 1 to n. Let's determine a two step operation like that:\n\n  1. First we build by the array a an array s of partial sums, consisting of n elements. Element number i (1 ≤ i ≤ n) of array s equals <image>. The operation x mod y means that we take the remainder of the division of number x by number y. \n  2. Then we write the contents of the array s to the array a. Element number i (1 ≤ i ≤ n) of the array s becomes the i-th element of the array a (ai = si). \n\n\n\nYou task is to find array a after exactly k described operations are applied.\n\nInput\n\nThe first line contains two space-separated integers n and k (1 ≤ n ≤ 2000, 0 ≤ k ≤ 109). The next line contains n space-separated integers a1, a2, ..., an — elements of the array a (0 ≤ ai ≤ 109).\n\nOutput\n\nPrint n integers — elements of the array a after the operations are applied to it. Print the elements in the order of increasing of their indexes in the array a. Separate the printed numbers by spaces.\n\nExamples\n\nInput\n\n3 1\n1 2 3\n\n\nOutput\n\n1 3 6\n\n\nInput\n\n5 0\n3 14 15 92 6\n\n\nOutput\n\n3 14 15 92 6", "grammar": {"answer": null}}
{"name": "p02353 RSQ and RUQ", "description": "Write a program which manipulates a sequence $A$ = {$a_0, a_1, ..., a_{n-1}$} with the following operations:\n\n* $update(s, t, x)$: change $a_s, a_{s+1}, ..., a_t$ to $x$.\n* $getSum(s, t)$: print the sum of $a_s, a_{s+1}, ..., a_t$.\n\n\n\nNote that the initial values of $a_i ( i = 0, 1, ..., n-1 )$ are 0.\n\nConstraints\n\n* $1 ≤ n ≤ 100000$\n* $1 ≤ q ≤ 100000$\n* $0 ≤ s ≤ t < n$\n* $-1000 ≤ x ≤ 1000$\n\nInput\n\n\n$n$ $q$\n$query_1$\n$query_2$\n:\n$query_q$\n\n\nIn the first line, $n$ (the number of elements in $A$) and $q$ (the number of queries) are given. Then, $i$-th query $query_i$ is given in the following format:\n\n\n0 $s$ $t$ $x$\n\n\nor\n\n\n1 $s$ $t$\n\n\nThe first digit represents the type of the query. '0' denotes $update(s, t, x)$ and '1' denotes $find(s, t)$.\n\nOutput\n\nFor each $getSum$ query, print the sum in a line.\n\nExample\n\nInput\n\n6 7\n0 1 3 1\n0 2 4 -2\n1 0 5\n1 0 1\n0 3 5 3\n1 3 4\n1 0 5\n\n\nOutput\n\n-5\n1\n6\n8", "grammar": {"answer": null}}
{"name": "197_C. Lexicographically Maximum Subsequence", "description": "You've got string s, consisting of only lowercase English letters. Find its lexicographically maximum subsequence.\n\nWe'll call a non-empty string s[p1p2... pk] = sp1sp2... spk(1 ≤ p1 < p2 < ... < pk ≤ |s|) a subsequence of string s = s1s2... s|s|.\n\nString x = x1x2... x|x| is lexicographically larger than string y = y1y2... y|y|, if either |x| > |y| and x1 = y1, x2 = y2, ... , x|y| = y|y|, or exists such number r (r < |x|, r < |y|), that x1 = y1, x2 = y2, ... , xr = yr and xr + 1 > yr + 1. Characters in lines are compared like their ASCII codes.\n\nInput\n\nThe single line contains a non-empty string s, consisting only of lowercase English letters. The string's length doesn't exceed 105.\n\nOutput\n\nPrint the lexicographically maximum subsequence of string s.\n\nExamples\n\nInput\n\nababba\n\n\nOutput\n\nbbba\n\n\nInput\n\nabbcbccacbbcbaaba\n\n\nOutput\n\ncccccbba\n\nNote\n\nLet's look at samples and see what the sought subsequences look like (they are marked with uppercase bold letters).\n\nThe first sample: aBaBBA\n\nThe second sample: abbCbCCaCbbCBaaBA", "grammar": {"answer": null}}
{"name": "235_E. Number Challenge", "description": "Let's denote d(n) as the number of divisors of a positive integer n. You are given three integers a, b and c. Your task is to calculate the following sum:\n\n<image>\n\nFind the sum modulo 1073741824 (230).\n\nInput\n\nThe first line contains three space-separated integers a, b and c (1 ≤ a, b, c ≤ 2000).\n\nOutput\n\nPrint a single integer — the required sum modulo 1073741824 (230).\n\nExamples\n\nInput\n\n2 2 2\n\n\nOutput\n\n20\n\n\nInput\n\n4 4 4\n\n\nOutput\n\n328\n\n\nInput\n\n10 10 10\n\n\nOutput\n\n11536\n\nNote\n\nFor the first example.\n\n  * d(1·1·1) = d(1) = 1; \n  * d(1·1·2) = d(2) = 2; \n  * d(1·2·1) = d(2) = 2; \n  * d(1·2·2) = d(4) = 3; \n  * d(2·1·1) = d(2) = 2; \n  * d(2·1·2) = d(4) = 3; \n  * d(2·2·1) = d(4) = 3; \n  * d(2·2·2) = d(8) = 4. \n\n\n\nSo the result is 1 + 2 + 2 + 3 + 2 + 3 + 3 + 4 = 20.", "grammar": {"answer": null}}
{"name": "583_D. Once Again...", "description": "You are given an array of positive integers a1, a2, ..., an × T of length n × T. We know that for any i > n it is true that ai = ai - n. Find the length of the longest non-decreasing sequence of the given array.\n\nInput\n\nThe first line contains two space-separated integers: n, T (1 ≤ n ≤ 100, 1 ≤ T ≤ 107). The second line contains n space-separated integers a1, a2, ..., an (1 ≤ ai ≤ 300).\n\nOutput\n\nPrint a single number — the length of a sought sequence.\n\nExamples\n\nInput\n\n4 3\n3 1 4 2\n\n\nOutput\n\n5\n\nNote\n\nThe array given in the sample looks like that: 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2. The elements in bold form the largest non-decreasing subsequence. ", "grammar": {"answer": null}}
{"name": "p02470 Euler's Phi Function", "description": "For given integer n, count the totatives of n, that is, the positive integers less than or equal to n that are relatively prime to n.\n\n\n\nInput\n\n\nn\n\n\nAn integer n (1 ≤ n ≤ 1000000000).\n\nOutput\n\nThe number of totatives in a line.\n\nExamples\n\nInput\n\n6\n\n\nOutput\n\n2\n\n\nInput\n\n1000000\n\n\nOutput\n\n400000", "grammar": {"answer": null}}
{"name": "p02428 Enumeration of Subsets II", "description": "You are given a set $T$, which is a subset of $U$. The set $U$ consists of $0, 1, ... n-1$. Print all sets, each of which is a subset of $U$ and includes $T$ as a subset. Note that we represent $0, 1, ... n-1$ as 00...0001, 00...0010, 00...0100, ..., 10...0000 in binary respectively and the integer representation of a subset is calculated by bitwise OR of existing elements.\n\nConstraints\n\n* $1 \\leq n \\leq 18$\n* $0 \\leq k \\leq n$\n* $0 \\leq b_i < n$\n\nInput\n\nThe input is given in the following format.\n\n\n$n$\n$k \\; b_0 \\; b_1 \\; ... \\; b_{k-1}$\n\n\n$k$ is the number of elements in $T$, and $b_i$ represents elements in $T$.\n\nOutput\n\nPrint the subsets ordered by their decimal integers. Print a subset in the following format.\n\n\n$d$: $e_0$ $e_1$ ...\n\n\nPrint ':' after the integer value $d$, then print elements $e_i$ in the subset in ascending order. Separate two adjacency elements by a space character.\n\nExample\n\nInput\n\n4\n2 0 2\n\n\nOutput\n\n5: 0 2\n7: 0 1 2\n13: 0 2 3\n15: 0 1 2 3", "grammar": {"answer": null}}
{"name": "p04015 AtCoder Regular Contest 060 - Tak and Cards", "description": "Tak has N cards. On the i-th (1 \\leq i \\leq N) card is written an integer x_i. He is selecting one or more cards from these N cards, so that the average of the integers written on the selected cards is exactly A. In how many ways can he make his selection?\n\nConstraints\n\n* 1 \\leq N \\leq 50\n* 1 \\leq A \\leq 50\n* 1 \\leq x_i \\leq 50\n* N,\\,A,\\,x_i are integers.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN A\nx_1 x_2 ... x_N\n\n\nOutput\n\nPrint the number of ways to select cards such that the average of the written integers is exactly A.\n\nExamples\n\nInput\n\n4 8\n7 9 8 9\n\n\nOutput\n\n5\n\n\nInput\n\n3 8\n6 6 9\n\n\nOutput\n\n0\n\n\nInput\n\n8 5\n3 6 2 8 7 6 5 9\n\n\nOutput\n\n19\n\n\nInput\n\n33 3\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n\n\nOutput\n\n8589934591", "grammar": {"answer": null}}
{"name": "p02465 Set Difference", "description": "Find the difference of two sets $A = \\\\{a_0, a_1, ..., a_{n-1}\\\\}$ and $B = \\\\{b_0, b_1, ..., b_{m-1}\\\\}$, $A - B$.\n\nConstraints\n\n* $1 \\leq n, m \\leq 200,000$\n* $0 \\leq a_0 < a_1 < ... < a_{n-1} \\leq 10^9$\n* $0 \\leq b_0 < b_1 < ... < b_{m-1} \\leq 10^9$\n\nInput\n\nThe input is given in the following format.\n\n\n$n$\n$a_0 \\; a_1 \\; ... \\; a_{n-1}$\n$m$\n$b_0 \\; b_1 \\; ... \\; b_{m-1}$\n\n\nElements in $A$ and $B$ are given in ascending order. There are no duplicate elements in each set.\n\nOutput\n\nPrint elements in the difference in ascending order. Print an element in a line.\n\nExample\n\nInput\n\n5\n1 2 3 5 8\n2\n2 5\n\n\nOutput\n\n1\n3\n8", "grammar": {"answer": null}}
{"name": "p02641 AtCoder Beginner Contest 170 - Forbidden List", "description": "Given are an integer X and an integer sequence of length N: p_1, \\ldots, p_N.\n\nAmong the integers not contained in the sequence p_1, \\ldots, p_N (not necessarily positive), find the integer nearest to X, that is, find the integer whose absolute difference with X is the minimum. If there are multiple such integers, report the smallest such integer.\n\nConstraints\n\n* 1 \\leq X \\leq 100\n* 0 \\leq N \\leq 100\n* 1 \\leq p_i \\leq 100\n* p_1, \\ldots, p_N are all distinct.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX N\np_1 ... p_N\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n6 5\n4 7 10 6 5\n\n\nOutput\n\n8\n\n\nInput\n\n10 5\n4 7 10 6 5\n\n\nOutput\n\n9\n\n\nInput\n\n100 0\n\n\nOutput\n\n100", "grammar": {"answer": null}}
{"name": "p03191 AtCoder Grand Contest 030 - Permutation and Minimum", "description": "There is a sequence of length 2N: A_1, A_2, ..., A_{2N}. Each A_i is either -1 or an integer between 1 and 2N (inclusive). Any integer other than -1 appears at most once in {A_i}.\n\nFor each i such that A_i = -1, Snuke replaces A_i with an integer between 1 and 2N (inclusive), so that {A_i} will be a permutation of 1, 2, ..., 2N. Then, he finds a sequence of length N, B_1, B_2, ..., B_N, as B_i = min(A_{2i-1}, A_{2i}).\n\nFind the number of different sequences that B_1, B_2, ..., B_N can be, modulo 10^9 + 7.\n\nConstraints\n\n* 1 \\leq N \\leq 300\n* A_i = -1 or 1 \\leq A_i \\leq 2N.\n* If A_i \\neq -1, A_j \\neq -1, then A_i \\neq A_j. (i \\neq j)\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_{2N}\n\n\nOutput\n\nPrint the number of different sequences that B_1, B_2, ..., B_N can be, modulo 10^9 + 7.\n\nExamples\n\nInput\n\n3\n1 -1 -1 3 6 -1\n\n\nOutput\n\n5\n\n\nInput\n\n4\n7 1 8 3 5 2 6 4\n\n\nOutput\n\n1\n\n\nInput\n\n10\n7 -1 -1 -1 -1 -1 -1 6 14 12 13 -1 15 -1 -1 -1 -1 20 -1 -1\n\n\nOutput\n\n9540576\n\n\nInput\n\n20\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 6 -1 -1 -1 -1 -1 7 -1 -1 -1 -1 -1 -1 -1 -1 -1 34 -1 -1 -1 -1 31 -1 -1 -1 -1 -1 -1 -1 -1\n\n\nOutput\n\n374984201", "grammar": {"answer": null}}
{"name": "p01933 Displayed tweets", "description": "problem\n\nIn Ikatta, the SNS used by AOR Ika-chan, posts are called tweets.\n\nAnd in squid, there is a concern that visibility will deteriorate if there are many replies to tweets, so when a tweet meets any of the following rules, the tweet will be displayed on the screen. ing.\n\n* Rule 1. No reply to any tweet\n* Rule 2. No reply from any tweet\n* Rule 3. When you follow the reply destinations in order from the tweet to which Rule 2 is applied, you can reach it in less than $ K $ times.\n\n\n\nThe same tweet will not be displayed more than once.\n\nNow, when there are $ N $ tweets and $ A_i $ is $ 0 $, the $ i $ th tweet is a non-reply tweet, and when $ A_i $ is not $ 0 $, the $ i $ th tweet is the $ A_i $ th tweet. It is a tweet of the reply to the tweet of.\n\nAnswer the number of tweets displayed on the screen.\n\n\n\noutput\n\nOutput the number of tweets displayed on the screen. Also, output a line break at the end.\n\nExample\n\nInput\n\n6 3\n0\n0\n2\n3\n4\n5\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p01801 Wall Making Game", "description": "Example\n\nInput\n\n2 2\n..\n..\n\n\nOutput\n\nSecond", "grammar": {"answer": null}}
{"name": "475_D. CGCDSSQ", "description": "Given a sequence of integers a1, ..., an and q queries x1, ..., xq on it. For each query xi you have to count the number of pairs (l, r) such that 1 ≤ l ≤ r ≤ n and gcd(al, al + 1, ..., ar) = xi.\n\n<image> is a greatest common divisor of v1, v2, ..., vn, that is equal to a largest positive integer that divides all vi.\n\nInput\n\nThe first line of the input contains integer n, (1 ≤ n ≤ 105), denoting the length of the sequence. The next line contains n space separated integers a1, ..., an, (1 ≤ ai ≤ 109).\n\nThe third line of the input contains integer q, (1 ≤ q ≤ 3 × 105), denoting the number of queries. Then follows q lines, each contain an integer xi, (1 ≤ xi ≤ 109).\n\nOutput\n\nFor each query print the result in a separate line.\n\nExamples\n\nInput\n\n3\n2 6 3\n5\n1\n2\n3\n4\n6\n\n\nOutput\n\n1\n2\n2\n0\n1\n\n\nInput\n\n7\n10 20 3 15 1000 60 16\n10\n1\n2\n3\n4\n5\n6\n10\n20\n60\n1000\n\n\nOutput\n\n14\n0\n2\n2\n2\n0\n2\n2\n1\n1", "grammar": {"answer": null}}
{"name": "p02971 AtCoder Beginner Contest 134 - Exception Handling", "description": "You are given a sequence of length N: A_1, A_2, ..., A_N. For each integer i between 1 and N (inclusive), answer the following question:\n\n* Find the maximum value among the N-1 elements other than A_i in the sequence.\n\nConstraints\n\n* 2 \\leq N \\leq 200000\n* 1 \\leq A_i \\leq 200000\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1\n:\nA_N\n\n\nOutput\n\nPrint N lines. The i-th line (1 \\leq i \\leq N) should contain the maximum value among the N-1 elements other than A_i in the sequence.\n\nExamples\n\nInput\n\n3\n1\n4\n3\n\n\nOutput\n\n4\n3\n4\n\n\nInput\n\n2\n5\n5\n\n\nOutput\n\n5\n5", "grammar": {"answer": null}}
{"name": "p03126 AtCoder Beginner Contest 118 - Foods Loved by Everyone", "description": "Katsusando loves omelette rice.\n\nBesides, he loves crème brûlée, tenderloin steak and so on, and believes that these foods are all loved by everyone.\n\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\n\nThe i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th, ..., A_{iK_i}-th food.\n\nFind the number of the foods liked by all the N people.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N, M \\leq 30\n* 1 \\leq K_i \\leq M\n* 1 \\leq A_{ij} \\leq M\n* For each i (1 \\leq i \\leq N), A_{i1}, A_{i2}, ..., A_{iK_i} are distinct.\n\nConstraints\n\nInput is given from Standard Input in the following format:\n\n\nN M\nK_1 A_{11} A_{12} ... A_{1K_1}\nK_2 A_{21} A_{22} ... A_{2K_2}\n:\nK_N A_{N1} A_{N2} ... A_{NK_N}\n\nOutput\n\nPrint the number of the foods liked by all the N people.\n\nExamples\n\nInput\n\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n\n\nOutput\n\n1\n\n\nInput\n\n5 5\n4 2 3 4 5\n4 1 3 4 5\n4 1 2 4 5\n4 1 2 3 5\n4 1 2 3 4\n\n\nOutput\n\n0\n\n\nInput\n\n1 30\n3 5 10 30\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p02463 Set Union", "description": "Find the union of two sets $A = \\\\{a_0, a_1, ..., a_{n-1}\\\\}$ and $B = \\\\{b_0, b_1, ..., b_{m-1}\\\\}$.\n\nConstraints\n\n* $1 \\leq n, m \\leq 200,000$\n* $0 \\leq a_0 < a_1 < ... < a_{n-1} \\leq 10^9$\n* $0 \\leq b_0 < b_1 < ... < b_{m-1} \\leq 10^9$\n\nInput\n\nThe input is given in the following format.\n\n\n$n$\n$a_0 \\; a_1 \\; ... \\; a_{n-1}$\n$m$\n$b_0 \\; b_1 \\; ... \\; b_{m-1}$\n\n\nElements of $A$ and $B$ are given in ascending order respectively. There are no duplicate elements in each set.\n\nOutput\n\nPrint elements in the union in ascending order. Print an element in a line.\n\nExample\n\nInput\n\n3\n1 5 8\n2\n5 9\n\n\nOutput\n\n1\n5\n8\n9", "grammar": {"answer": null}}
{"name": "220_B. Little Elephant and Array", "description": "The Little Elephant loves playing with arrays. He has array a, consisting of n positive integers, indexed from 1 to n. Let's denote the number with index i as ai. \n\nAdditionally the Little Elephant has m queries to the array, each query is characterised by a pair of integers lj and rj (1 ≤ lj ≤ rj ≤ n). For each query lj, rj the Little Elephant has to count, how many numbers x exist, such that number x occurs exactly x times among numbers alj, alj + 1, ..., arj.\n\nHelp the Little Elephant to count the answers to all queries.\n\nInput\n\nThe first line contains two space-separated integers n and m (1 ≤ n, m ≤ 105) — the size of array a and the number of queries to it. The next line contains n space-separated positive integers a1, a2, ..., an (1 ≤ ai ≤ 109). Next m lines contain descriptions of queries, one per line. The j-th of these lines contains the description of the j-th query as two space-separated integers lj and rj (1 ≤ lj ≤ rj ≤ n).\n\nOutput\n\nIn m lines print m integers — the answers to the queries. The j-th line should contain the answer to the j-th query.\n\nExamples\n\nInput\n\n7 2\n3 1 2 2 3 3 7\n1 7\n3 4\n\n\nOutput\n\n3\n1", "grammar": {"answer": null}}
{"name": "p03561 AtCoder Regular Contest 084 - Finite Encyclopedia of Integer Sequences", "description": "In Finite Encyclopedia of Integer Sequences (FEIS), all integer sequences of lengths between 1 and N (inclusive) consisting of integers between 1 and K (inclusive) are listed.\n\nLet the total number of sequences listed in FEIS be X. Among those sequences, find the (X/2)-th (rounded up to the nearest integer) lexicographically smallest one.\n\nConstraints\n\n* 1 \\leq N,K \\leq 3 × 10^5\n* N and K are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK N\n\n\nOutput\n\nPrint the (X/2)-th (rounded up to the nearest integer) lexicographically smallest sequence listed in FEIS, with spaces in between, where X is the total number of sequences listed in FEIS.\n\nExamples\n\nInput\n\n3 2\n\n\nOutput\n\n2 1\n\n\nInput\n\n2 4\n\n\nOutput\n\n1 2 2 2\n\n\nInput\n\n5 14\n\n\nOutput\n\n3 3 3 3 3 3 3 3 3 3 3 3 2 2", "grammar": {"answer": null}}
{"name": "p02600 M-SOLUTIONS Programming Contest 2020 - Kyu in AtCoder", "description": "M-kun is a competitor in AtCoder, whose highest rating is X.\nIn this site, a competitor is given a kyu (class) according to his/her highest rating. For ratings from 400 through 1999, the following kyus are given:\n\n* From 400 through 599: 8-kyu\n* From 600 through 799: 7-kyu\n* From 800 through 999: 6-kyu\n* From 1000 through 1199: 5-kyu\n* From 1200 through 1399: 4-kyu\n* From 1400 through 1599: 3-kyu\n* From 1600 through 1799: 2-kyu\n* From 1800 through 1999: 1-kyu\n\n\n\nWhat kyu does M-kun have?\n\nConstraints\n\n* 400 \\leq X \\leq 1999\n* X is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX\n\n\nOutput\n\nPrint the kyu M-kun has, as an integer. For example, if he has 8-kyu, print `8`.\n\nExamples\n\nInput\n\n725\n\n\nOutput\n\n7\n\n\nInput\n\n1600\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "27_C. Unordered Subsequence", "description": "The sequence is called ordered if it is non-decreasing or non-increasing. For example, sequnces [3, 1, 1, 0] and [1, 2, 3, 100] are ordered, but the sequence [1, 3, 3, 1] is not. You are given a sequence of numbers. You are to find it's shortest subsequence which is not ordered.\n\nA subsequence is a sequence that can be derived from the given sequence by deleting zero or more elements without changing the order of the remaining elements.\n\nInput\n\nThe first line of the input contains one integer n (1 ≤ n ≤ 105). The second line contains n space-separated integers — the given sequence. All numbers in this sequence do not exceed 106 by absolute value.\n\nOutput\n\nIf the given sequence does not contain any unordered subsequences, output 0. Otherwise, output the length k of the shortest such subsequence. Then output k integers from the range [1..n] — indexes of the elements of this subsequence. If there are several solutions, output any of them.\n\nExamples\n\nInput\n\n5\n67 499 600 42 23\n\n\nOutput\n\n3\n1 3 5\n\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n0\n\n\nInput\n\n3\n2 3 1\n\n\nOutput\n\n3\n1 2 3", "grammar": {"answer": null}}
{"name": "19_B. Checkout Assistant", "description": "Bob came to a cash & carry store, put n items into his trolley, and went to the checkout counter to pay. Each item is described by its price ci and time ti in seconds that a checkout assistant spends on this item. While the checkout assistant is occupied with some item, Bob can steal some other items from his trolley. To steal one item Bob needs exactly 1 second. What is the minimum amount of money that Bob will have to pay to the checkout assistant? Remember, please, that it is Bob, who determines the order of items for the checkout assistant.\n\nInput\n\nThe first input line contains number n (1 ≤ n ≤ 2000). In each of the following n lines each item is described by a pair of numbers ti, ci (0 ≤ ti ≤ 2000, 1 ≤ ci ≤ 109). If ti is 0, Bob won't be able to steal anything, while the checkout assistant is occupied with item i.\n\nOutput\n\nOutput one number — answer to the problem: what is the minimum amount of money that Bob will have to pay.\n\nExamples\n\nInput\n\n4\n2 10\n0 20\n1 5\n1 3\n\n\nOutput\n\n8\n\n\nInput\n\n3\n0 1\n0 10\n0 100\n\n\nOutput\n\n111", "grammar": {"answer": null}}
{"name": "p02423 Bit Operation I", "description": "Given a non-negative decimal integer $x$, convert it to binary representation $b$ of 32 bits. Then, print the result of the following operations to $b$ respecitvely.\n\n* Inversion: change the state of each bit to the opposite state\n* Logical left shift: shift left by 1\n* Logical right shift: shift right by 1\n\nConstraints\n\n* $0 \\leq x \\leq 2^{32} - 1$\n\nInput\n\nThe input is given in the following format.\n\n\n$x$\n\n\nOutput\n\nPrint the given bits, results of inversion, left shift and right shift in a line respectively.\n\nExamples\n\nInput\n\n8\n\n\nOutput\n\n00000000000000000000000000001000\n11111111111111111111111111110111\n00000000000000000000000000010000\n00000000000000000000000000000100\n\n\nInput\n\n13\n\n\nOutput\n\n00000000000000000000000000001101\n11111111111111111111111111110010\n00000000000000000000000000011010\n00000000000000000000000000000110", "grammar": {"answer": null}}
{"name": "275_C. k-Multiple Free Set", "description": "A k-multiple free set is a set of integers where there is no pair of integers where one is equal to another integer multiplied by k. That is, there are no two integers x and y (x < y) from the set, such that y = x·k.\n\nYou're given a set of n distinct positive integers. Your task is to find the size of it's largest k-multiple free subset.\n\nInput\n\nThe first line of the input contains two integers n and k (1 ≤ n ≤ 105, 1 ≤ k ≤ 109). The next line contains a list of n distinct positive integers a1, a2, ..., an (1 ≤ ai ≤ 109).\n\nAll the numbers in the lines are separated by single spaces.\n\nOutput\n\nOn the only line of the output print the size of the largest k-multiple free subset of {a1, a2, ..., an}.\n\nExamples\n\nInput\n\n6 2\n2 3 6 5 4 10\n\n\nOutput\n\n3\n\nNote\n\nIn the sample input one of the possible maximum 2-multiple free subsets is {4, 5, 6}.", "grammar": {"answer": null}}
{"name": "p03337 AtCoder Beginner Contest 098 - Add Sub Mul", "description": "You are given two integers A and B. Find the largest value among A+B, A-B and A \\times B.\n\nConstraints\n\n* -1000 \\leq A,B \\leq 1000\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nPrint the largest value among A+B, A-B and A \\times B.\n\nExamples\n\nInput\n\n3 1\n\n\nOutput\n\n4\n\n\nInput\n\n4 -2\n\n\nOutput\n\n6\n\n\nInput\n\n0 0\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02357 Sliding Minimum Elements", "description": "For a given array $a_1, a_2, a_3, ... , a_N$ of $N$ elements and an integer $L$, find the minimum of each possible sub-arrays with size $L$ and print them from the beginning. For example, for an array $\\\\{1, 7, 7, 4, 8, 1, 6\\\\}$ and $L = 3$, the possible sub-arrays with size $L = 3$ includes $\\\\{1, 7, 7\\\\}$, $\\\\{7, 7, 4\\\\}$, $\\\\{7, 4, 8\\\\}$, $\\\\{4, 8, 1\\\\}$, $\\\\{8, 1, 6\\\\}$ and the minimum of each sub-array is 1, 4, 4, 1, 1 respectively.\n\nConstraints\n\n* $1 \\leq N \\leq 10^6$\n* $1 \\leq L \\leq 10^6$\n* $1 \\leq a_i \\leq 10^9$\n* $L \\leq N$\n\nInput\n\nThe input is given in the following format.\n\n$N$ $L$\n$a_1$ $a_2$ ... $a_N$\n\nOutput\n\nPrint a sequence of the minimum in a line. Print a space character between adjacent elements.\n\nExample\n\nInput\n\n7 3\n1 7 7 4 8 1 6\n\n\nOutput\n\n1 4 4 1 1", "grammar": {"answer": null}}
{"name": "457_C. Elections", "description": "You are running for a governor in a small city in Russia. You ran some polls and did some research, and for every person in the city you know whom he will vote for, and how much it will cost to bribe that person to vote for you instead of whomever he wants to vote for right now. You are curious, what is the smallest amount of money you need to spend on bribing to win the elections. To win elections you need to have strictly more votes than any other candidate.\n\nInput\n\nFirst line contains one integer n (1 ≤ n ≤ 105) — number of voters in the city. Each of the next n lines describes one voter and contains two integers ai and bi (0 ≤ ai ≤ 105; 0 ≤ bi ≤ 104) — number of the candidate that voter is going to vote for and amount of money you need to pay him to change his mind. You are the candidate 0 (so if a voter wants to vote for you, ai is equal to zero, in which case bi will also be equal to zero).\n\nOutput\n\nPrint one integer — smallest amount of money you need to spend to win the elections.\n\nExamples\n\nInput\n\n5\n1 2\n1 2\n1 2\n2 1\n0 0\n\n\nOutput\n\n3\n\n\nInput\n\n4\n1 2\n1 2\n2 1\n0 0\n\n\nOutput\n\n2\n\n\nInput\n\n1\n100000 0\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03689 AtCoder Grand Contest 016 - +/- Rectangle", "description": "You are given four integers: H, W, h and w (1 ≤ h ≤ H, 1 ≤ w ≤ W). Determine whether there exists a matrix such that all of the following conditions are held, and construct one such matrix if the answer is positive:\n\n* The matrix has H rows and W columns.\n* Each element of the matrix is an integer between -10^9 and 10^9 (inclusive).\n* The sum of all the elements of the matrix is positive.\n* The sum of all the elements within every subrectangle with h rows and w columns in the matrix is negative.\n\nConstraints\n\n* 1 ≤ h ≤ H ≤ 500\n* 1 ≤ w ≤ W ≤ 500\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH W h w\n\n\nOutput\n\nIf there does not exist a matrix that satisfies all of the conditions, print `No`.\n\nOtherwise, print `Yes` in the first line, and print a matrix in the subsequent lines in the following format:\n\n\na_{11} ... a_{1W}\n:\na_{H1} ... a_{HW}\n\n\nHere, a_{ij} represents the (i,\\ j) element of the matrix.\n\nExamples\n\nInput\n\n3 3 2 2\n\n\nOutput\n\nYes\n1 1 1\n1 -4 1\n1 1 1\n\n\nInput\n\n2 4 1 2\n\n\nOutput\n\nNo\n\n\nInput\n\n3 4 2 3\n\n\nOutput\n\nYes\n2 -5 8 7\n3 -5 -4 -5\n2 1 -1 7", "grammar": {"answer": null}}
{"name": "p04012 AtCoder Beginner Contest 044 - Beautiful Strings", "description": "Let w be a string consisting of lowercase letters. We will call w beautiful if the following condition is satisfied:\n\n* Each lowercase letter of the English alphabet occurs even number of times in w.\n\n\n\nYou are given the string w. Determine if w is beautiful.\n\nConstraints\n\n* 1 \\leq |w| \\leq 100\n* w consists of lowercase letters (`a`-`z`).\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nw\n\n\nOutput\n\nPrint `Yes` if w is beautiful. Print `No` otherwise.\n\nExamples\n\nInput\n\nabaccaba\n\n\nOutput\n\nYes\n\n\nInput\n\nhthth\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "513_B2. Permutations", "description": "You are given a permutation p of numbers 1, 2, ..., n. Let's define f(p) as the following sum:\n\n<image>\n\nFind the lexicographically m-th permutation of length n in the set of permutations having the maximum possible value of f(p).\n\nInput\n\nThe single line of input contains two integers n and m (1 ≤ m ≤ cntn), where cntn is the number of permutations of length n with maximum possible value of f(p).\n\nThe problem consists of two subproblems. The subproblems have different constraints on the input. You will get some score for the correct submission of the subproblem. The description of the subproblems follows.\n\n  * In subproblem B1 (3 points), the constraint 1 ≤ n ≤ 8 will hold. \n  * In subproblem B2 (4 points), the constraint 1 ≤ n ≤ 50 will hold. \n\nOutput\n\nOutput n number forming the required permutation.\n\nExamples\n\nInput\n\n2 2\n\n\nOutput\n\n2 1 \n\n\nInput\n\n3 2\n\n\nOutput\n\n1 3 2 \n\nNote\n\nIn the first example, both permutations of numbers {1, 2} yield maximum possible f(p) which is equal to 4. Among them, (2, 1) comes second in lexicographical order.", "grammar": {"answer": null}}
{"name": "p02307 Circumscribed Circle of a Triangle", "description": "Write a program which prints the central coordinate ($cx$,$cy$) and the radius $r$ of a circumscribed circle of a triangle which is constructed by three points ($x_1$, $y_1$), ($x_2$, $y_2$) and ($x_3$, $y_3$) on the plane surface.\n\nConstraints\n\n* $-10000 \\leq x_i, y_i \\leq 10000$\n* The three points are not on the same straight line\n\nInput\n\nThe input is given in the following format\n\n\n$x_1$ $y_1$\n$x_2$ $y_2$\n$x_3$ $y_3$\n\n\nAll the input are integers.\n\nOutput\n\nPrint $cx$, $cy$ and $r$ separated by a single space in a line. The output val ues should be in a decimal fraction with an error less than 0.000001.\n\nExamples\n\nInput\n\n1 -2\n3 2\n-2 0\n\n\nOutput\n\n0.62500000000000000000 0.68750000000000000000 2.71353666826155124291\n\n\nInput\n\n0 3\n4 0\n0 0\n\n\nOutput\n\n2.00000000000000000000 1.50000000000000000000 2.50000000000000000000", "grammar": {"answer": null}}
{"name": "p03672 AtCoder Beginner Contest 066 - ss", "description": "We will call a string that can be obtained by concatenating two equal strings an even string. For example, `xyzxyz` and `aaaaaa` are even, while `ababab` and `xyzxy` are not.\n\nYou are given an even string S consisting of lowercase English letters. Find the length of the longest even string that can be obtained by deleting one or more characters from the end of S. It is guaranteed that such a non-empty string exists for a given input.\n\nConstraints\n\n* 2 \\leq |S| \\leq 200\n* S is an even string consisting of lowercase English letters.\n* There exists a non-empty even string that can be obtained by deleting one or more characters from the end of S.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the length of the longest even string that can be obtained.\n\nExamples\n\nInput\n\nabaababaab\n\n\nOutput\n\n6\n\n\nInput\n\nxxxx\n\n\nOutput\n\n2\n\n\nInput\n\nabcabcabcabc\n\n\nOutput\n\n6\n\n\nInput\n\nakasakaakasakasakaakas\n\n\nOutput\n\n14", "grammar": {"answer": null}}
{"name": "p02982 AtCoder Beginner Contest 133 - Good Distance", "description": "There are N points in a D-dimensional space.\n\nThe coordinates of the i-th point are (X_{i1}, X_{i2}, ..., X_{iD}).\n\nThe distance between two points with coordinates (y_1, y_2, ..., y_D) and (z_1, z_2, ..., z_D) is \\sqrt{(y_1 - z_1)^2 + (y_2 - z_2)^2 + ... + (y_D - z_D)^2}.\n\nHow many pairs (i, j) (i < j) are there such that the distance between the i-th point and the j-th point is an integer?\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 10\n* 1 \\leq D \\leq 10\n* -20 \\leq X_{ij} \\leq 20\n* No two given points have the same coordinates. That is, if i \\neq j, there exists k such that X_{ik} \\neq X_{jk}.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN D\nX_{11} X_{12} ... X_{1D}\nX_{21} X_{22} ... X_{2D}\n\\vdots\nX_{N1} X_{N2} ... X_{ND}\n\n\nOutput\n\nPrint the number of pairs (i, j) (i < j) such that the distance between the i-th point and the j-th point is an integer.\n\nExamples\n\nInput\n\n3 2\n1 2\n5 5\n-2 8\n\n\nOutput\n\n1\n\n\nInput\n\n3 4\n-3 7 8 2\n-12 1 10 2\n-2 8 9 3\n\n\nOutput\n\n2\n\n\nInput\n\n5 1\n1\n2\n3\n4\n5\n\n\nOutput\n\n10", "grammar": {"answer": null}}
{"name": "p02198 Oranges on Cans", "description": "Oranges on Cans\n\nsquare1001 You put a $ N $ can of aluminum on the table.\n\nE869120 You put $ M $ of oranges on each aluminum can on the table.\n\nHow many oranges are on the aluminum can?\n\ninput\n\nInput is given from standard input in the following format.\n\n\n$ N $ $ M $\n\n\noutput\n\nOutput the number of oranges on the aluminum can in one line.\n\nHowever, insert a line break at the end.\n\nConstraint\n\n* $ 1 \\ leq N \\ leq 9 $\n* $ 1 \\ leq M \\ leq 9 $\n* All inputs are integers.\n\n\n\nInput example 1\n\n\n3 4\n\n\nOutput example 1\n\n\n12\n\n\nInput example 2\n\n\n7 7\n\n\nOutput example 2\n\n\n49\n\n\n\n\n\n\nExample\n\nInput\n\n3 4\n\n\nOutput\n\n12", "grammar": {"answer": null}}
{"name": "p03271 AtCoder Regular Contest 102 - Revenge of BBuBBBlesort!", "description": "You are given a permutation of 1,2,...,N: p_1,p_2,...,p_N. Determine if the state where p_i=i for every i can be reached by performing the following operation any number of times:\n\n* Choose three elements p_{i-1},p_{i},p_{i+1} (2\\leq i\\leq N-1) such that p_{i-1}>p_{i}>p_{i+1} and reverse the order of these three.\n\nConstraints\n\n* 3 \\leq N \\leq 3 × 10^5\n* p_1,p_2,...,p_N is a permutation of 1,2,...,N.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\np_1\n:\np_N\n\n\nOutput\n\nIf the state where p_i=i for every i can be reached by performing the operation, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n5\n5\n2\n1\n4\n3\n\n\nOutput\n\nYes\n\n\nInput\n\n4\n3\n2\n4\n1\n\n\nOutput\n\nNo\n\n\nInput\n\n7\n3\n2\n1\n6\n5\n4\n7\n\n\nOutput\n\nYes\n\n\nInput\n\n6\n5\n3\n4\n1\n2\n6\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "339_A. Helpful Maths", "description": "Xenia the beginner mathematician is a third year student at elementary school. She is now learning the addition operation.\n\nThe teacher has written down the sum of multiple numbers. Pupils should calculate the sum. To make the calculation easier, the sum only contains numbers 1, 2 and 3. Still, that isn't enough for Xenia. She is only beginning to count, so she can calculate a sum only if the summands follow in non-decreasing order. For example, she can't calculate sum 1+3+2+1 but she can calculate sums 1+1+2 and 3+3.\n\nYou've got the sum that was written on the board. Rearrange the summans and print the sum in such a way that Xenia can calculate the sum.\n\nInput\n\nThe first line contains a non-empty string s — the sum Xenia needs to count. String s contains no spaces. It only contains digits and characters \"+\". Besides, string s is a correct sum of numbers 1, 2 and 3. String s is at most 100 characters long.\n\nOutput\n\nPrint the new sum that Xenia can count.\n\nExamples\n\nInput\n\n3+2+1\n\n\nOutput\n\n1+2+3\n\n\nInput\n\n1+1+3+1+3\n\n\nOutput\n\n1+1+1+3+3\n\n\nInput\n\n2\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02722 AtCoder Beginner Contest 161 - Division or Subtraction", "description": "Given is a positive integer N.\n\nWe will choose an integer K between 2 and N (inclusive), then we will repeat the operation below until N becomes less than K.\n\n* Operation: if K divides N, replace N with N/K; otherwise, replace N with N-K.\n\n\n\nIn how many choices of K will N become 1 in the end?\n\nConstraints\n\n* 2 \\leq N \\leq 10^{12}\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the number of choices of K in which N becomes 1 in the end.\n\nExamples\n\nInput\n\n6\n\n\nOutput\n\n3\n\n\nInput\n\n3141\n\n\nOutput\n\n13\n\n\nInput\n\n314159265358\n\n\nOutput\n\n9", "grammar": {"answer": null}}
{"name": "p01499 Rabbit Game Playing", "description": "Honestly, a rabbit does not matter.\n\nThere is a rabbit playing a stage system action game. In this game, every stage has a difficulty level. The rabbit, which always needs challenges, basically wants to play more difficult stages than he has ever played. However, he sometimes needs rest too. So, to compromise, he admitted to play T or less levels easier stages than the preceding one.\n\nHow many ways are there to play all the stages at once, while honoring the convention above? Maybe the answer will be a large number. So, let me know the answer modulo 1,000,000,007.\n\n\n\nInput\n\nThe first line of input contains two integers N and T (1 ≤ N ≤ 100,000, 1 ≤ T ≤ 10,000). N is the number of stages, and T is the compromise level.\n\nThe following N lines describe the difficulty levels of each stage. The i-th line contains one integer Di (1 ≤ Di ≤ 100,000), which is the difficulty level of the i-th stage.\n\nOutput\n\nCalculate how many ways to play all the stages at once there are. Print the answer modulo 1,000,000,007 in a line.\n\nExamples\n\nInput\n\n3 1\n1\n2\n3\n\n\nOutput\n\n4\n\n\nInput\n\n5 3\n9\n2\n6\n8\n8\n\n\nOutput\n\n24\n\n\nInput\n\n5 7\n9\n9\n9\n1\n5\n\n\nOutput\n\n48", "grammar": {"answer": null}}
{"name": "1215_B. The Number of Products", "description": "You are given a sequence a_1, a_2, ..., a_n consisting of n non-zero integers (i.e. a_i ≠ 0). \n\nYou have to calculate two following values:\n\n  1. the number of pairs of indices (l, r) (l ≤ r) such that a_l ⋅ a_{l + 1} ... a_{r - 1} ⋅ a_r is negative; \n  2. the number of pairs of indices (l, r) (l ≤ r) such that a_l ⋅ a_{l + 1} ... a_{r - 1} ⋅ a_r is positive; \n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 2 ⋅ 10^{5}) — the number of elements in the sequence.\n\nThe second line contains n integers a_1, a_2, ..., a_n (-10^{9} ≤ a_i ≤ 10^{9}; a_i ≠ 0) — the elements of the sequence.\n\nOutput\n\nPrint two integers — the number of subsegments with negative product and the number of subsegments with positive product, respectively.\n\nExamples\n\nInput\n\n\n5\n5 -3 3 -1 1\n\n\nOutput\n\n\n8 7\n\n\nInput\n\n\n10\n4 2 -4 3 1 2 -4 3 2 3\n\n\nOutput\n\n\n28 27\n\n\nInput\n\n\n5\n-1 -2 -3 -4 -5\n\n\nOutput\n\n\n9 6", "grammar": {"answer": null}}
{"name": "p00050 Apple and Peach", "description": "Fukushima Prefecture is also famous for producing fruits, and among them, peaches and apples boast one of the highest production volumes in Japan. By the way, when I made a print manuscript of an English pamphlet for sale, I mistakenly wrote the description about apples and the description about peaches in reverse.\n\nYou've been tasked with fixing apple and peach, but it's kind of annoying. Enter a single line of English text and create a program that outputs the English text with all the character strings apple in it replaced with peach and all the character strings peach replaced with apple.\n\n\n\nInput\n\nEnglish text (including half-width alphanumeric characters, spaces, and symbols) is given on one line. The length of the string entered is 1000 or less.\n\nOutput\n\nOutputs English sentences with the character strings apple and peach exchanged on one line.\n\nExample\n\nInput\n\nthe cost of one peach is higher than that of one apple.\n\n\nOutput\n\nthe cost of one apple is higher than that of one peach.", "grammar": {"answer": null}}
{"name": "p02309 Cross Points of Circles", "description": "For given two circles $c1$ and $c2$, print the coordinates of the cross points of them.\n\nConstraints\n\n* The given circle have at least one cross point and have different center coordinates.\n* $-10,000 \\leq c1x, c1y, c2x, c2y \\leq 10,000$\n* $1 \\leq c1r, c2r \\leq 10,000$\n\nInput\n\nThe input is given in the following format.\n\n$c1x\\; c1y\\; c1r$\n$c2x\\; c2y\\; c2r$\n\n\n$c1x$, $c1y$ and $c1r$ represent the coordinate and radius of the first circle. $c2x$, $c2y$ and $c2r$ represent the coordinate and radius of the second circle. All input values are given in integers.\n\nOutput\n\nPrint the coordinates ($x1$, $y1$) and ($x2$, $y2$) of the cross points $p1$ and $p2$ respectively in the following rules.\n\n* If there is one cross point, print two coordinates with the same values.\n* Print the coordinate with smaller $x$ first. In case of a tie, print the coordinate with smaller $y$ first.\n\n\n\nThe output values should be in a decimal fraction with an error less than 0.000001.\n\nExamples\n\nInput\n\n0 0 2\n2 0 2\n\n\nOutput\n\n1.00000000 -1.73205080 1.00000000 1.73205080\n\n\nInput\n\n0 0 2\n0 3 1\n\n\nOutput\n\n0.00000000 2.00000000 0.00000000 2.00000000", "grammar": {"answer": null}}
{"name": "p02801 AtCoder Beginner Contest 151 - Next Alphabet", "description": "Given is a lowercase English letter C that is not `z`. Print the letter that follows C in alphabetical order.\n\nConstraints\n\n* C is a lowercase English letter that is not `z`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nC\n\n\nOutput\n\nPrint the letter that follows C in alphabetical order.\n\nExamples\n\nInput\n\na\n\n\nOutput\n\nb\n\n\nInput\n\ny\n\n\nOutput\n\nz", "grammar": {"answer": null}}
{"name": "893_B. Beautiful Divisors", "description": "Recently Luba learned about a special kind of numbers that she calls beautiful numbers. The number is called beautiful iff its binary representation consists of k + 1 consecutive ones, and then k consecutive zeroes.\n\nSome examples of beautiful numbers: \n\n  * 12 (110); \n  * 1102 (610); \n  * 11110002 (12010); \n  * 1111100002 (49610). \n\n\n\nMore formally, the number is beautiful iff there exists some positive integer k such that the number is equal to (2k - 1) * (2k - 1).\n\nLuba has got an integer number n, and she wants to find its greatest beautiful divisor. Help her to find it!\n\nInput\n\nThe only line of input contains one number n (1 ≤ n ≤ 105) — the number Luba has got.\n\nOutput\n\nOutput one number — the greatest beautiful divisor of Luba's number. It is obvious that the answer always exists.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n1\n\n\nInput\n\n992\n\n\nOutput\n\n496", "grammar": {"answer": null}}
{"name": "p02778 AtCoder Beginner Contest 154 - I miss you...", "description": "Given is a string S. Replace every character in S with `x` and print the result.\n\nConstraints\n\n* S is a string consisting of lowercase English letters.\n* The length of S is between 1 and 100 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nReplace every character in S with `x` and print the result.\n\nExamples\n\nInput\n\nsardine\n\n\nOutput\n\nxxxxxxx\n\n\nInput\n\nxxxx\n\n\nOutput\n\nxxxx\n\n\nInput\n\ngone\n\n\nOutput\n\nxxxx", "grammar": {"answer": null}}
{"name": "p03962 AtCoder Beginner Contest 046 - AtCoDeer and Paint Cans", "description": "AtCoDeer the deer recently bought three paint cans. The color of the one he bought two days ago is a, the color of the one he bought yesterday is b, and the color of the one he bought today is c. Here, the color of each paint can is represented by an integer between 1 and 100, inclusive.\n\nSince he is forgetful, he might have bought more than one paint can in the same color. Count the number of different kinds of colors of these paint cans and tell him.\n\nConstraints\n\n* 1≦a,b,c≦100\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\na b c\n\n\nOutput\n\nPrint the number of different kinds of colors of the paint cans.\n\nExamples\n\nInput\n\n3 1 4\n\n\nOutput\n\n3\n\n\nInput\n\n3 3 33\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02149 Lunch", "description": "Problem\n\nOne day, Kawabayashi is about to have lunch at the school cafeteria. There are three types of daily lunch menus for school cafeterias: A lunch, B lunch, and C lunch.\nKawabayashi is a glutton, so I would like to eat all three types of daily lunch menus one by one.\nHowever, Kawabayashi decided to put up with one type of lunch menu and eat two different types of lunch menus so as to minimize the total calorie intake with care for his health.\nAsk for a lunch menu that Kawabayashi will endure when given the calories of A, B, and C lunches one day.\n\nConstraints\n\nThe input satisfies the following conditions.\n\n* $ 1 \\ leq a, b, c \\ leq 5000 $\n* $ a \\ neq b, b \\ neq c, c \\ neq a $\n\nInput\n\nThe input is given in the following format.\n\n\n$ a $ $ b $ $ c $\n\n\nThree integers $ a $, $ b $, $ c $ are given, separated by spaces. Each represents the calories of A lunch, B lunch, and C lunch one day.\n\nOutput\n\nOutput the menu name that Kawabayashi will endure on one line.\n\"A\" to put up with A lunch\n\"B\" to put up with B lunch\n\"C\" to put up with C lunch\nOutput.\n\nExamples\n\nInput\n\n1000 900 850\n\n\nOutput\n\nA\n\n\nInput\n\n1000 800 1200\n\n\nOutput\n\nC", "grammar": {"answer": null}}
{"name": "p03724 AtCoder Grand Contest 014 - Unplanned Queries", "description": "Takahashi is not good at problems about trees in programming contests, and Aoki is helping him practice.\n\nFirst, Takahashi created a tree with N vertices numbered 1 through N, and wrote 0 at each edge.\n\nThen, Aoki gave him M queries. The i-th of them is as follows:\n\n* Increment the number written at each edge along the path connecting vertices a_i and b_i, by one.\n\n\n\nAfter Takahashi executed all of the queries, he told Aoki that, for every edge, the written number became an even number. However, Aoki forgot to confirm that the graph Takahashi created was actually a tree, and it is possible that Takahashi made a mistake in creating a tree or executing queries.\n\nDetermine whether there exists a tree that has the property mentioned by Takahashi.\n\nConstraints\n\n* 2 ≤ N ≤ 10^5\n* 1 ≤ M ≤ 10^5\n* 1 ≤ a_i,b_i ≤ N\n* a_i ≠ b_i\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\na_1 b_1\n:\na_M b_M\n\n\nOutput\n\nPrint `YES` if there exists a tree that has the property mentioned by Takahashi; print `NO` otherwise.\n\nExamples\n\nInput\n\n4 4\n1 2\n2 4\n1 3\n3 4\n\n\nOutput\n\nYES\n\n\nInput\n\n5 5\n1 2\n3 5\n5 1\n3 4\n2 3\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p03328 AtCoder Beginner Contest 099 - Stone Monument", "description": "In some village, there are 999 towers that are 1,(1+2),(1+2+3),...,(1+2+3+...+999) meters high from west to east, at intervals of 1 meter.\n\nIt had been snowing for a while before it finally stopped. For some two adjacent towers located 1 meter apart, we measured the lengths of the parts of those towers that are not covered with snow, and the results are a meters for the west tower, and b meters for the east tower.\n\nAssuming that the depth of snow cover and the altitude are the same everywhere in the village, find the amount of the snow cover.\n\nAssume also that the depth of the snow cover is always at least 1 meter.\n\nConstraints\n\n* 1 \\leq a < b < 499500(=1+2+3+...+999)\n* All values in input are integers.\n* There is no input that contradicts the assumption.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\na b\n\n\nOutput\n\nIf the depth of the snow cover is x meters, print x as an integer.\n\nExamples\n\nInput\n\n8 13\n\n\nOutput\n\n2\n\n\nInput\n\n54 65\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "118_A. String Task", "description": "Petya started to attend programming lessons. On the first lesson his task was to write a simple program. The program was supposed to do the following: in the given string, consisting if uppercase and lowercase Latin letters, it: \n\n  * deletes all the vowels, \n  * inserts a character \".\" before each consonant, \n  * replaces all uppercase consonants with corresponding lowercase ones. \n\n\n\nVowels are letters \"A\", \"O\", \"Y\", \"E\", \"U\", \"I\", and the rest are consonants. The program's input is exactly one string, it should return the output as a single string, resulting after the program's processing the initial string.\n\nHelp Petya cope with this easy task.\n\nInput\n\nThe first line represents input string of Petya's program. This string only consists of uppercase and lowercase Latin letters and its length is from 1 to 100, inclusive.\n\nOutput\n\nPrint the resulting string. It is guaranteed that this string is not empty.\n\nExamples\n\nInput\n\ntour\n\n\nOutput\n\n.t.r\n\n\nInput\n\nCodeforces\n\n\nOutput\n\n.c.d.f.r.c.s\n\n\nInput\n\naBAcAba\n\n\nOutput\n\n.b.c.b", "grammar": {"answer": null}}
{"name": "p03254 AtCoder Grand Contest 027 - Candy Distribution Again", "description": "There are N children, numbered 1, 2, ..., N.\n\nSnuke has decided to distribute x sweets among them. He needs to give out all the x sweets, but some of the children may get zero sweets.\n\nFor each i (1 \\leq i \\leq N), Child i will be happy if he/she gets exactly a_i sweets. Snuke is trying to maximize the number of happy children by optimally distributing the sweets. Find the maximum possible number of happy children.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 100\n* 1 \\leq x \\leq 10^9\n* 1 \\leq a_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN x\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the maximum possible number of happy children.\n\nExamples\n\nInput\n\n3 70\n20 30 10\n\n\nOutput\n\n2\n\n\nInput\n\n3 10\n20 30 10\n\n\nOutput\n\n1\n\n\nInput\n\n4 1111\n1 10 100 1000\n\n\nOutput\n\n4\n\n\nInput\n\n2 10\n20 20\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02962 AtCoder Beginner Contest 135 - Strings of Eternity", "description": "Given are two strings s and t consisting of lowercase English letters. Determine if the number of non-negative integers i satisfying the following condition is finite, and find the maximum value of such i if the number is finite.\n\n* There exists a non-negative integer j such that the concatenation of i copies of t is a substring of the concatenation of j copies of s.\n\nConstraints\n\n* 1 \\leq |s| \\leq 5 \\times 10^5\n* 1 \\leq |t| \\leq 5 \\times 10^5\n* s and t consist of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\ns\nt\n\n\nOutput\n\nIf the number of non-negative integers i satisfying the following condition is finite, print the maximum value of such i; if the number is infinite, print `-1`.\n\nExamples\n\nInput\n\nabcabab\nab\n\n\nOutput\n\n3\n\n\nInput\n\naa\naaaaaaa\n\n\nOutput\n\n-1\n\n\nInput\n\naba\nbaaab\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03808 AtCoder Grand Contest 010 - Boxes", "description": "There are N boxes arranged in a circle. The i-th box contains A_i stones.\n\nDetermine whether it is possible to remove all the stones from the boxes by repeatedly performing the following operation:\n\n* Select one box. Let the box be the i-th box. Then, for each j from 1 through N, remove exactly j stones from the (i+j)-th box. Here, the (N+k)-th box is identified with the k-th box.\n\n\n\nNote that the operation cannot be performed if there is a box that does not contain enough number of stones to be removed.\n\nConstraints\n\n* 1 ≦ N ≦ 10^5\n* 1 ≦ A_i ≦ 10^9\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 … A_N\n\n\nOutput\n\nIf it is possible to remove all the stones from the boxes, print `YES`. Otherwise, print `NO`.\n\nExamples\n\nInput\n\n5\n4 5 1 2 3\n\n\nOutput\n\nYES\n\n\nInput\n\n5\n6 9 12 10 8\n\n\nOutput\n\nYES\n\n\nInput\n\n4\n1 2 3 1\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p00488 Lunch", "description": "problem\n\nAt the JOI pasta shop, the recommended pasta for lunch and the set menu of freshly squeezed juice are popular. When ordering this set menu, choose one from each of the three pasta and two juices of the day. The price is the total price of pasta and juice minus 50 yen.\n\nGiven the price of pasta and juice for a day, create a program to find the minimum price for the set menu for that day.\n\n\n\noutput\n\nOutput the minimum price of the set menu for the day in one line.\n\nExample\n\nInput\n\n800\n700\n900\n198\n330\n\n\nOutput\n\n848", "grammar": {"answer": null}}
{"name": "633_B. A Trivial Problem", "description": "Mr. Santa asks all the great programmers of the world to solve a trivial problem. He gives them an integer m and asks for the number of positive integers n, such that the factorial of n ends with exactly m zeroes. Are you among those great programmers who can solve this problem?\n\nInput\n\nThe only line of input contains an integer m (1 ≤ m ≤ 100 000) — the required number of trailing zeroes in factorial.\n\nOutput\n\nFirst print k — the number of values of n such that the factorial of n ends with m zeroes. Then print these k integers in increasing order.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n5\n5 6 7 8 9 \n\nInput\n\n5\n\n\nOutput\n\n0\n\nNote\n\nThe factorial of n is equal to the product of all integers from 1 to n inclusive, that is n! = 1·2·3·...·n.\n\nIn the first sample, 5! = 120, 6! = 720, 7! = 5040, 8! = 40320 and 9! = 362880.", "grammar": {"answer": null}}
{"name": "1294_C. Product of Three Numbers", "description": "You are given one integer number n. Find three distinct integers a, b, c such that 2 ≤ a, b, c and a ⋅ b ⋅ c = n or say that it is impossible to do it.\n\nIf there are several answers, you can print any.\n\nYou have to answer t independent test cases.\n\nInput\n\nThe first line of the input contains one integer t (1 ≤ t ≤ 100) — the number of test cases.\n\nThe next n lines describe test cases. The i-th test case is given on a new line as one integer n (2 ≤ n ≤ 10^9).\n\nOutput\n\nFor each test case, print the answer on it. Print \"NO\" if it is impossible to represent n as a ⋅ b ⋅ c for some distinct integers a, b, c such that 2 ≤ a, b, c.\n\nOtherwise, print \"YES\" and any possible such representation.\n\nExample\n\nInput\n\n\n5\n64\n32\n97\n2\n12345\n\n\nOutput\n\n\nYES\n2 4 8 \nNO\nNO\nNO\nYES\n3 5 823 ", "grammar": {"answer": null}}
{"name": "p00924 Bit String Reordering", "description": "Example\n\nInput\n\n6 3\n1 0 0 1 0 1\n1 3 2\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "448_E. Divisors", "description": "Bizon the Champion isn't just friendly, he also is a rigorous coder.\n\nLet's define function f(a), where a is a sequence of integers. Function f(a) returns the following sequence: first all divisors of a1 go in the increasing order, then all divisors of a2 go in the increasing order, and so on till the last element of sequence a. For example, f([2, 9, 1]) = [1, 2, 1, 3, 9, 1].\n\nLet's determine the sequence Xi, for integer i (i ≥ 0): X0 = [X] ([X] is a sequence consisting of a single number X), Xi = f(Xi - 1) (i > 0). For example, at X = 6 we get X0 = [6], X1 = [1, 2, 3, 6], X2 = [1, 1, 2, 1, 3, 1, 2, 3, 6].\n\nGiven the numbers X and k, find the sequence Xk. As the answer can be rather large, find only the first 105 elements of this sequence.\n\nInput\n\nA single line contains two space-separated integers — X (1 ≤ X ≤ 1012) and k (0 ≤ k ≤ 1018).\n\nOutput\n\nPrint the elements of the sequence Xk in a single line, separated by a space. If the number of elements exceeds 105, then print only the first 105 elements.\n\nExamples\n\nInput\n\n6 1\n\n\nOutput\n\n1 2 3 6 \n\n\nInput\n\n4 2\n\n\nOutput\n\n1 1 2 1 2 4 \n\n\nInput\n\n10 3\n\n\nOutput\n\n1 1 1 2 1 1 5 1 1 2 1 5 1 2 5 10 ", "grammar": {"answer": null}}
{"name": "31_A. Worms Evolution", "description": "Professor Vasechkin is studying evolution of worms. Recently he put forward hypotheses that all worms evolve by division. There are n forms of worms. Worms of these forms have lengths a1, a2, ..., an. To prove his theory, professor needs to find 3 different forms that the length of the first form is equal to sum of lengths of the other two forms. Help him to do this.\n\nInput\n\nThe first line contains integer n (3 ≤ n ≤ 100) — amount of worm's forms. The second line contains n space-separated integers ai (1 ≤ ai ≤ 1000) — lengths of worms of each form.\n\nOutput\n\nOutput 3 distinct integers i j k (1 ≤ i, j, k ≤ n) — such indexes of worm's forms that ai = aj + ak. If there is no such triple, output -1. If there are several solutions, output any of them. It possible that aj = ak.\n\nExamples\n\nInput\n\n5\n1 2 3 5 7\n\n\nOutput\n\n3 2 1\n\n\nInput\n\n5\n1 8 1 5 1\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p02808 Dwango Programming Contest 6th - Cookie Distribution", "description": "There are N children, numbered 1,2,\\ldots,N. In the next K days, we will give them some cookies. In the i-th day, we will choose a_i children among the N with equal probability, and give one cookie to each child chosen. (We make these K choices independently.)\n\nLet us define the happiness of the children as c_1 \\times c_2 \\times \\ldots \\times c_N, where c_i is the number of cookies received by Child i in the K days. Find the expected happiness multiplied by \\binom{N}{a_1} \\times \\binom{N}{a_2} \\times \\ldots \\times \\binom{N}{a_K} (we can show that this value is an integer), modulo (10^{9}+7).\n\nConstraints\n\n* 1 \\leq N \\leq 1000\n* 1 \\leq K \\leq 20\n* 1 \\leq a_i \\leq N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\na_1 a_2 \\ldots a_K\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3 2\n3 2\n\n\nOutput\n\n12\n\n\nInput\n\n856 16\n399 263 665 432 206 61 784 548 422 313 848 478 827 26 398 63\n\n\nOutput\n\n337587117", "grammar": {"answer": null}}
{"name": "76_E. Points", "description": "You are given N points on a plane. Write a program which will find the sum of squares of distances between all pairs of points.\n\nInput\n\nThe first line of input contains one integer number N (1 ≤ N ≤ 100 000) — the number of points. Each of the following N lines contain two integer numbers X and Y ( - 10 000 ≤ X, Y ≤ 10 000) — the coordinates of points. Two or more points may coincide.\n\nOutput\n\nThe only line of output should contain the required sum of squares of distances between all pairs of points.\n\nExamples\n\nInput\n\n4\n1 1\n-1 -1\n1 -1\n-1 1\n\n\nOutput\n\n32", "grammar": {"answer": null}}
{"name": "467_A. George and Accommodation", "description": "George has recently entered the BSUCP (Berland State University for Cool Programmers). George has a friend Alex who has also entered the university. Now they are moving into a dormitory. \n\nGeorge and Alex want to live in the same room. The dormitory has n rooms in total. At the moment the i-th room has pi people living in it and the room can accommodate qi people in total (pi ≤ qi). Your task is to count how many rooms has free place for both George and Alex.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 100) — the number of rooms.\n\nThe i-th of the next n lines contains two integers pi and qi (0 ≤ pi ≤ qi ≤ 100) — the number of people who already live in the i-th room and the room's capacity.\n\nOutput\n\nPrint a single integer — the number of rooms where George and Alex can move in.\n\nExamples\n\nInput\n\n3\n1 1\n2 2\n3 3\n\n\nOutput\n\n0\n\n\nInput\n\n3\n1 10\n0 10\n10 10\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "469_D. Two Sets", "description": "Little X has n distinct integers: p1, p2, ..., pn. He wants to divide all of them into two sets A and B. The following two conditions must be satisfied:\n\n  * If number x belongs to set A, then number a - x must also belong to set A. \n  * If number x belongs to set B, then number b - x must also belong to set B. \n\n\n\nHelp Little X divide the numbers into two sets or determine that it's impossible.\n\nInput\n\nThe first line contains three space-separated integers n, a, b (1 ≤ n ≤ 105; 1 ≤ a, b ≤ 109). The next line contains n space-separated distinct integers p1, p2, ..., pn (1 ≤ pi ≤ 109).\n\nOutput\n\nIf there is a way to divide the numbers into two sets, then print \"YES\" in the first line. Then print n integers: b1, b2, ..., bn (bi equals either 0, or 1), describing the division. If bi equals to 0, then pi belongs to set A, otherwise it belongs to set B.\n\nIf it's impossible, print \"NO\" (without the quotes).\n\nExamples\n\nInput\n\n4 5 9\n2 3 4 5\n\n\nOutput\n\nYES\n0 0 1 1\n\n\nInput\n\n3 3 4\n1 2 4\n\n\nOutput\n\nNO\n\nNote\n\nIt's OK if all the numbers are in the same set, and the other one is empty.", "grammar": {"answer": null}}
{"name": "p02597 AtCoder Beginner Contest 174 - Alter Altar", "description": "An altar enshrines N stones arranged in a row from left to right. The color of the i-th stone from the left (1 \\leq i \\leq N) is given to you as a character c_i; `R` stands for red and `W` stands for white.\n\nYou can do the following two kinds of operations any number of times in any order:\n\n* Choose two stones (not necessarily adjacent) and swap them.\n* Choose one stone and change its color (from red to white and vice versa).\n\n\n\nAccording to a fortune-teller, a white stone placed to the immediate left of a red stone will bring a disaster. At least how many operations are needed to reach a situation without such a white stone?\n\nConstraints\n\n* 2 \\leq N \\leq 200000\n* c_i is `R` or `W`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nc_{1}c_{2}...c_{N}\n\n\nOutput\n\nPrint an integer representing the minimum number of operations needed.\n\nExamples\n\nInput\n\n4\nWWRR\n\n\nOutput\n\n2\n\n\nInput\n\n2\nRR\n\n\nOutput\n\n0\n\n\nInput\n\n8\nWRWWRWRR\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "632_C. The Smallest String Concatenation", "description": "You're given a list of n strings a1, a2, ..., an. You'd like to concatenate them together in some order such that the resulting string would be lexicographically smallest.\n\nGiven the list of strings, output the lexicographically smallest concatenation.\n\nInput\n\nThe first line contains integer n — the number of strings (1 ≤ n ≤ 5·104).\n\nEach of the next n lines contains one string ai (1 ≤ |ai| ≤ 50) consisting of only lowercase English letters. The sum of string lengths will not exceed 5·104.\n\nOutput\n\nPrint the only string a — the lexicographically smallest string concatenation.\n\nExamples\n\nInput\n\n4\nabba\nabacaba\nbcd\ner\n\n\nOutput\n\nabacabaabbabcder\n\n\nInput\n\n5\nx\nxx\nxxa\nxxaa\nxxaaa\n\n\nOutput\n\nxxaaaxxaaxxaxxx\n\n\nInput\n\n3\nc\ncb\ncba\n\n\nOutput\n\ncbacbc", "grammar": {"answer": null}}
{"name": "p03287 AtCoder Beginner Contest 105 - Candy Distribution", "description": "There are N boxes arranged in a row from left to right. The i-th box from the left contains A_i candies.\n\nYou will take out the candies from some consecutive boxes and distribute them evenly to M children.\n\nSuch being the case, find the number of the pairs (l, r) that satisfy the following:\n\n* l and r are both integers and satisfy 1 \\leq l \\leq r \\leq N.\n* A_l + A_{l+1} + ... + A_r is a multiple of M.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 2 \\leq M \\leq 10^9\n* 1 \\leq A_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the number of the pairs (l, r) that satisfy the conditions.\n\nNote that the number may not fit into a 32-bit integer type.\n\nExamples\n\nInput\n\n3 2\n4 1 5\n\n\nOutput\n\n3\n\n\nInput\n\n13 17\n29 7 5 7 9 51 7 13 8 55 42 9 81\n\n\nOutput\n\n6\n\n\nInput\n\n10 400000000\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n\n\nOutput\n\n25", "grammar": {"answer": null}}
{"name": "p01070 String in String", "description": "Problem\n\nGiven the strings S and Q queries.\nThe i-th query (0 ≤ i ≤ Q-1) is given the closed interval [li, ri] and the string Mi. Output how many character strings Mi exist in the substring from the li character to the ri character of S.\n\nConstraints\n\n* 1 ≤ | S | ≤ 100000\n* 1 ≤ Q ≤ 100000\n* 1 ≤ | Mi | ≤ 100000 (0 ≤ i ≤ Q-1)\n* 0 ≤ li ≤ ri <| S | (0 ≤ i ≤ Q-1)\n* All characters are lowercase\n* The total number of characters in string M does not exceed 2000000\n\nInput\n\nThe input is given in the following format.\n\n\nS Q\nl0 r0 M0\nl1 r1 M1\n..\n..\n..\nlQ−1 rQ−1 MQ−1\n\n\nThe string S and the number of queries Q are given on the first line, separated by blanks.\nThe following Q lines are given the integers li, ri, Mi, separated by blanks.\n\nOutput\n\nThe output consists of Q lines. Print the answer to each query on one line in turn.\n\nExamples\n\nInput\n\nrupcrupc 5\n0 3 rupc\n0 7 rupc\n2 7 ru\n2 7 pc\n1 5 u\n\n\nOutput\n\n1\n2\n1\n2\n2\n\n\nInput\n\nabatagaadbura 8\n0 6 a\n6 12 a\n0 6 aa\n0 3 a\n3 5 a\n5 9 a\n1 8 b\n1 12 b\n\n\nOutput\n\n4\n3\n0\n2\n1\n2\n1\n2\n\n\nInput\n\naaaaaaaaaa 5\n0 9 aaa\n0 9 aa\n5 9 aaaa\n2 8 aa\n1 2 a\n\n\nOutput\n\n8\n9\n2\n6\n2", "grammar": {"answer": null}}
{"name": "545_D. Queue", "description": "Little girl Susie went shopping with her mom and she wondered how to improve service quality. \n\nThere are n people in the queue. For each person we know time ti needed to serve him. A person will be disappointed if the time he waits is more than the time needed to serve him. The time a person waits is the total time when all the people who stand in the queue in front of him are served. Susie thought that if we swap some people in the queue, then we can decrease the number of people who are disappointed. \n\nHelp Susie find out what is the maximum number of not disappointed people can be achieved by swapping people in the queue.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 105).\n\nThe next line contains n integers ti (1 ≤ ti ≤ 109), separated by spaces.\n\nOutput\n\nPrint a single number — the maximum number of not disappointed people in the queue.\n\nExamples\n\nInput\n\n5\n15 2 1 5 3\n\n\nOutput\n\n4\n\nNote\n\nValue 4 is achieved at such an arrangement, for example: 1, 2, 3, 5, 15. Thus, you can make everything feel not disappointed except for the person with time 5.", "grammar": {"answer": null}}
{"name": "447_B. DZY Loves Strings", "description": "DZY loves collecting special strings which only contain lowercase letters. For each lowercase letter c DZY knows its value wc. For each special string s = s1s2... s|s| (|s| is the length of the string) he represents its value with a function f(s), where \n\n<image>\n\nNow DZY has a string s. He wants to insert k lowercase letters into this string in order to get the largest possible value of the resulting string. Can you help him calculate the largest possible value he could get? \n\nInput\n\nThe first line contains a single string s (1 ≤ |s| ≤ 103).\n\nThe second line contains a single integer k (0 ≤ k ≤ 103).\n\nThe third line contains twenty-six integers from wa to wz. Each such number is non-negative and doesn't exceed 1000.\n\nOutput\n\nPrint a single integer — the largest possible value of the resulting string DZY could get.\n\nExamples\n\nInput\n\nabc\n3\n1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n\n\nOutput\n\n41\n\nNote\n\nIn the test sample DZY can obtain \"abcbbc\", value = 1·1 + 2·2 + 3·2 + 4·2 + 5·2 + 6·2 = 41.", "grammar": {"answer": null}}
{"name": "36_D. New Game with a Chess Piece", "description": "Petya and Vasya are inventing a new game that requires a rectangular board and one chess piece. At the beginning of the game the piece stands in the upper-left corner of the board. Two players move the piece in turns. Each turn the chess piece can be moved either one square to the right or one square down or jump k squares diagonally down and to the right. The player who can’t move the piece loses. \n\n<image>\n\nThe guys haven’t yet thought what to call the game or the best size of the board for it. Your task is to write a program that can determine the outcome of the game depending on the board size.\n\nInput\n\nThe first input line contains two integers t and k (1 ≤ t ≤ 20, 1 ≤ k ≤ 109). Each of the following t lines contains two numbers n, m — the board’s length and width (1 ≤ n, m ≤ 109).\n\nOutput\n\nOutput t lines that can determine the outcomes of the game on every board. Write «+» if the first player is a winner, and «-» otherwise.\n\nExamples\n\nInput\n\n10 2\n1 1\n1 2\n2 1\n2 2\n1 3\n2 3\n3 1\n3 2\n3 3\n4 3\n\n\nOutput\n\n-\n+\n+\n-\n-\n+\n-\n+\n+\n+", "grammar": {"answer": null}}
{"name": "p00387 Party Dress", "description": "Yae joins a journey plan, in which parties will be held several times during the itinerary. She wants to participate in all of them and will carry several dresses with her. But the number of dresses she can carry with her may be smaller than that of the party opportunities. In that case, she has to wear some of her dresses more than once.\n\nFashion-conscious Yae wants to avoid that. At least, she wants to reduce the maximum number of times she has to wear the same dress as far as possible.\n\nGiven the number of dresses and frequency of parties, make a program to determine how she can reduce the maximum frequency of wearing the most reused dress.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\n$A$ $B$\n\n\nThe input line provides the number of dresses $A$ ($1 \\leq A \\leq 10^5$) and frequency of parties $B$ ($1 \\leq B \\leq 10^5$).\n\nOutput\n\nOutput the frequency she has to wear the most reused dress.\n\nExamples\n\nInput\n\n3 5\n\n\nOutput\n\n2\n\n\nInput\n\n25 10\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "1485_A. Add and Divide", "description": "You have two positive integers a and b.\n\nYou can perform two kinds of operations:\n\n  * a = ⌊ a/b ⌋ (replace a with the integer part of the division between a and b) \n  * b=b+1 (increase b by 1) \n\n\n\nFind the minimum number of operations required to make a=0.\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 100) — the number of test cases.\n\nThe only line of the description of each test case contains two integers a, b (1 ≤ a,b ≤ 10^9).\n\nOutput\n\nFor each test case, print a single integer: the minimum number of operations required to make a=0.\n\nExample\n\nInput\n\n\n6\n9 2\n1337 1\n1 1\n50000000 4\n991026972 997\n1234 5678\n\n\nOutput\n\n\n4\n9\n2\n12\n3\n1\n\nNote\n\nIn the first test case, one of the optimal solutions is:\n\n  1. Divide a by b. After this operation a = 4 and b = 2. \n  2. Divide a by b. After this operation a = 2 and b = 2. \n  3. Increase b. After this operation a = 2 and b = 3. \n  4. Divide a by b. After this operation a = 0 and b = 3. ", "grammar": {"answer": null}}
{"name": "580_A. Kefa and First Steps", "description": "Kefa decided to make some money doing business on the Internet for exactly n days. He knows that on the i-th day (1 ≤ i ≤ n) he makes ai money. Kefa loves progress, that's why he wants to know the length of the maximum non-decreasing subsegment in sequence ai. Let us remind you that the subsegment of the sequence is its continuous fragment. A subsegment of numbers is called non-decreasing if all numbers in it follow in the non-decreasing order.\n\nHelp Kefa cope with this task!\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 105).\n\nThe second line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 109).\n\nOutput\n\nPrint a single integer — the length of the maximum non-decreasing subsegment of sequence a.\n\nExamples\n\nInput\n\n6\n2 2 1 3 4 1\n\n\nOutput\n\n3\n\nInput\n\n3\n2 2 9\n\n\nOutput\n\n3\n\nNote\n\nIn the first test the maximum non-decreasing subsegment is the numbers from the third to the fifth one.\n\nIn the second test the maximum non-decreasing subsegment is the numbers from the first to the third one.", "grammar": {"answer": null}}
{"name": "605_A. Sorting Railway Cars", "description": "An infinitely long railway has a train consisting of n cars, numbered from 1 to n (the numbers of all the cars are distinct) and positioned in arbitrary order. David Blaine wants to sort the railway cars in the order of increasing numbers. In one move he can make one of the cars disappear from its place and teleport it either to the beginning of the train, or to the end of the train, at his desire. What is the minimum number of actions David Blaine needs to perform in order to sort the train?\n\nInput\n\nThe first line of the input contains integer n (1 ≤ n ≤ 100 000) — the number of cars in the train. \n\nThe second line contains n integers pi (1 ≤ pi ≤ n, pi ≠ pj if i ≠ j) — the sequence of the numbers of the cars in the train.\n\nOutput\n\nPrint a single integer — the minimum number of actions needed to sort the railway cars.\n\nExamples\n\nInput\n\n5\n4 1 2 5 3\n\n\nOutput\n\n2\n\n\nInput\n\n4\n4 1 3 2\n\n\nOutput\n\n2\n\nNote\n\nIn the first sample you need first to teleport the 4-th car, and then the 5-th car to the end of the train.", "grammar": {"answer": null}}
{"name": "p03051 diverta 2019 Programming Contest - XOR Partitioning", "description": "The beauty of a sequence a of length n is defined as a_1 \\oplus \\cdots \\oplus a_n, where \\oplus denotes the bitwise exclusive or (XOR).\n\nYou are given a sequence A of length N. Snuke will insert zero or more partitions in A to divide it into some number of non-empty contiguous subsequences.\n\nThere are 2^{N-1} possible ways to insert partitions. How many of them divide A into sequences whose beauties are all equal? Find this count modulo 10^{9}+7.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 5 \\times 10^5\n* 0 \\leq A_i < 2^{20}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 \\ldots A_{N}\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n3\n\n\nInput\n\n3\n1 2 2\n\n\nOutput\n\n1\n\n\nInput\n\n32\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n\n\nOutput\n\n147483634\n\n\nInput\n\n24\n1 2 5 3 3 6 1 1 8 8 0 3 3 4 6 6 4 0 7 2 5 4 6 2\n\n\nOutput\n\n292", "grammar": {"answer": null}}
{"name": "579_D. \"Or\" Game", "description": "You are given n numbers a1, a2, ..., an. You can perform at most k operations. For each operation you can multiply one of the numbers by x. We want to make <image> as large as possible, where <image> denotes the bitwise OR. \n\nFind the maximum possible value of <image> after performing at most k operations optimally.\n\nInput\n\nThe first line contains three integers n, k and x (1 ≤ n ≤ 200 000, 1 ≤ k ≤ 10, 2 ≤ x ≤ 8).\n\nThe second line contains n integers a1, a2, ..., an (0 ≤ ai ≤ 109).\n\nOutput\n\nOutput the maximum value of a bitwise OR of sequence elements after performing operations.\n\nExamples\n\nInput\n\n3 1 2\n1 1 1\n\n\nOutput\n\n3\n\n\nInput\n\n4 2 3\n1 2 4 8\n\n\nOutput\n\n79\n\nNote\n\nFor the first sample, any possible choice of doing one operation will result the same three numbers 1, 1, 2 so the result is <image>. \n\nFor the second sample if we multiply 8 by 3 two times we'll get 72. In this case the numbers will become 1, 2, 4, 72 so the OR value will be 79 and is the largest possible result.", "grammar": {"answer": null}}
{"name": "p01741 Manhattan", "description": "In Manhattan, roads run where the x or y coordinate is an integer. Both Sunuke-kun's house and Sumeke-kun's house are on the road, and the straight line distance (Euclidean distance) is just d. Find the maximum value that can be considered as the shortest distance when traveling along the road from Sunuke-kun's house to Sumek-kun's house.\n\nConstraints\n\n* 0 <d ≤ 10\n* d is given up to exactly three decimal places\n\nInput\n\n\nd\n\n\nOutput\n\nPrint the answer on one line. If the absolute error or relative error is 10-9 or less, the answer is judged to be correct.\n\nExamples\n\nInput\n\n1.000\n\n\nOutput\n\n2.000000000000\n\n\nInput\n\n2.345\n\n\nOutput\n\n3.316330803765", "grammar": {"answer": null}}
{"name": "474_E. Pillars", "description": "Marmot found a row with n pillars. The i-th pillar has the height of hi meters. Starting from one pillar i1, Marmot wants to jump on the pillars i2, ..., ik. (1 ≤ i1 < i2 < ... < ik ≤ n). From a pillar i Marmot can jump on a pillar j only if i < j and |hi - hj| ≥ d, where |x| is the absolute value of the number x.\n\nNow Marmot is asking you find out a jump sequence with maximal length and print it.\n\nInput\n\nThe first line contains two integers n and d (1 ≤ n ≤ 105, 0 ≤ d ≤ 109).\n\nThe second line contains n numbers h1, h2, ..., hn (1 ≤ hi ≤ 1015).\n\nOutput\n\nThe first line should contain one integer k, the maximal length of a jump sequence.\n\nThe second line should contain k integers i1, i2, ..., ik (1 ≤ i1 < i2 < ... < ik ≤ n), representing the pillars' indices from the maximal length jump sequence.\n\nIf there is more than one maximal length jump sequence, print any.\n\nExamples\n\nInput\n\n5 2\n1 3 6 7 4\n\n\nOutput\n\n4\n1 2 3 5 \n\n\nInput\n\n10 3\n2 1 3 6 9 11 7 3 20 18\n\n\nOutput\n\n6\n1 4 6 7 8 9 \n\nNote\n\nIn the first example Marmot chooses the pillars 1, 2, 3, 5 with the heights 1, 3, 6, 4. Another jump sequence of length 4 is 1, 2, 4, 5.", "grammar": {"answer": null}}
{"name": "204_A. Little Elephant and Interval", "description": "The Little Elephant very much loves sums on intervals.\n\nThis time he has a pair of integers l and r (l ≤ r). The Little Elephant has to find the number of such integers x (l ≤ x ≤ r), that the first digit of integer x equals the last one (in decimal notation). For example, such numbers as 101, 477474 or 9 will be included in the answer and 47, 253 or 1020 will not.\n\nHelp him and count the number of described numbers x for a given pair l and r.\n\nInput\n\nThe single line contains a pair of integers l and r (1 ≤ l ≤ r ≤ 1018) — the boundaries of the interval.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in С++. It is preferred to use cin, cout streams or the %I64d specifier.\n\nOutput\n\nOn a single line print a single integer — the answer to the problem.\n\nExamples\n\nInput\n\n2 47\n\n\nOutput\n\n12\n\n\nInput\n\n47 1024\n\n\nOutput\n\n98\n\nNote\n\nIn the first sample the answer includes integers 2, 3, 4, 5, 6, 7, 8, 9, 11, 22, 33, 44. ", "grammar": {"answer": null}}
{"name": "p02204 Contest T-shirts", "description": "Contest T-shirts\n\nSegtree has $ M $ contest T-shirts.\n\nHe decided to spend $ N $ days on the contest T-shirt alone, and told $ i = 1, 2, 3, \\ dots, N $ \"$ A_i $ T-shirt on the $ i $ day.\" I made a plan for $ N $ to wear.\n\nHowever, if you keep the current plan, you may not be able to do the laundry in time, so I would like to change the plan if necessary so that I will not wear the same clothes for two consecutive days.\n\nFind the minimum number of plans that need to be changed. It can be proved that the conditions can always be met by changing the plan under the given constraints.\n\ninput\n\nInput is given from standard input in the following format.\n\n\n$ M $ $ N $\n$ A_1 $ $ A_2 $ $ \\ ldots $ $ A_N $\n\n\noutput\n\nOutput the minimum number of plans that need to be changed.\n\nHowever, insert a line break at the end.\n\nConstraint\n\n* $ 2 \\ leq M \\ leq 10 ^ 9 $\n* $ 1 \\ leq N \\ leq 10 ^ 5 $\n* $ 1 \\ leq A_i \\ leq M $\n* All inputs are integers.\n\n\n\nInput example 1\n\n\ntwenty three\n2 2 1\n\n\nOutput example 1\n\n\n1\n\n\nInput example 2\n\n\n3 6\n1 1 1 2 2 3\n\n\nOutput example 2\n\n\n2\n\n\n\n\n\n\nExample\n\nInput\n\n2 3\n2 2 1\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p03547 AtCoder Beginner Contest 078 - HEX", "description": "In programming, hexadecimal notation is often used.\n\nIn hexadecimal notation, besides the ten digits 0, 1, ..., 9, the six letters `A`, `B`, `C`, `D`, `E` and `F` are used to represent the values 10, 11, 12, 13, 14 and 15, respectively.\n\nIn this problem, you are given two letters X and Y. Each X and Y is `A`, `B`, `C`, `D`, `E` or `F`.\n\nWhen X and Y are seen as hexadecimal numbers, which is larger?\n\nConstraints\n\n* Each X and Y is `A`, `B`, `C`, `D`, `E` or `F`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX Y\n\n\nOutput\n\nIf X is smaller, print `<`; if Y is smaller, print `>`; if they are equal, print `=`.\n\nExamples\n\nInput\n\nA B\n\n\nOutput\n\n<\n\n\nInput\n\nE C\n\n\nOutput\n\n>\n\n\nInput\n\nF F\n\n\nOutput\n\n=", "grammar": {"answer": null}}
{"name": "714_E. Sonya and Problem Wihtout a Legend", "description": "Sonya was unable to think of a story for this problem, so here comes the formal description.\n\nYou are given the array containing n positive integers. At one turn you can pick any element and increase or decrease it by 1. The goal is the make the array strictly increasing by making the minimum possible number of operations. You are allowed to change elements in any way, they can become negative or equal to 0.\n\nInput\n\nThe first line of the input contains a single integer n (1 ≤ n ≤ 3000) — the length of the array.\n\nNext line contains n integer ai (1 ≤ ai ≤ 109).\n\nOutput\n\nPrint the minimum number of operation required to make the array strictly increasing.\n\nExamples\n\nInput\n\n7\n2 1 5 11 5 9 11\n\n\nOutput\n\n9\n\n\nInput\n\n5\n5 4 3 2 1\n\n\nOutput\n\n12\n\nNote\n\nIn the first sample, the array is going to look as follows:\n\n2 3 5 6 7 9 11\n\n|2 - 2| + |1 - 3| + |5 - 5| + |11 - 6| + |5 - 7| + |9 - 9| + |11 - 11| = 9\n\nAnd for the second sample:\n\n1 2 3 4 5\n\n|5 - 1| + |4 - 2| + |3 - 3| + |2 - 4| + |1 - 5| = 12", "grammar": {"answer": null}}
{"name": "1505_A. Is it rated - 2", "description": "\n\nInteraction\n\nThis is an interactive problem. You need to read participants' queries from standard input and print your responses to standard output. You don't know the number of queries upfront, so you'll need to process them as you get them; you'll know you're done once you reach the end of the file.\n\nIn each query, you will be asked the question, written in one line. You have to answer it correctly, patiently and without any display of emotions. Your response is case-insensitive.\n\nPlease make sure to use the stream flushing operation after each response in order not to leave part of your output in some buffer.\n\nExample\n\nInput\n\n\nIs it rated?\nIs it rated?\nIs it rated?\n\n\nOutput\n\n\nNO\nNO\nNO", "grammar": {"answer": null}}
{"name": "p03343 AtCoder Regular Contest 098 - Range Minimum Queries", "description": "You are given an integer sequence A of length N and an integer K. You will perform the following operation on this sequence Q times:\n\n* Choose a contiguous subsequence of length K, then remove the smallest element among the K elements contained in the chosen subsequence (if there are multiple such elements, choose one of them as you like).\n\n\n\nLet X and Y be the values of the largest and smallest element removed in the Q operations. You would like X-Y to be as small as possible. Find the smallest possible value of X-Y when the Q operations are performed optimally.\n\nConstraints\n\n* 1 \\leq N \\leq 2000\n* 1 \\leq K \\leq N\n* 1 \\leq Q \\leq N-K+1\n* 1 \\leq A_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K Q\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the smallest possible value of X-Y.\n\nExamples\n\nInput\n\n5 3 2\n4 3 1 5 2\n\n\nOutput\n\n1\n\n\nInput\n\n10 1 6\n1 1 2 3 5 8 13 21 34 55\n\n\nOutput\n\n7\n\n\nInput\n\n11 7 5\n24979445 861648772 623690081 433933447 476190629 262703497 211047202 971407775 628894325 731963982 822804784\n\n\nOutput\n\n451211184", "grammar": {"answer": null}}
{"name": "p03066 Tenka1 Programmer Contest 2019 - Banned X", "description": "Find the number, modulo 998244353, of sequences of length N consisting of 0, 1 and 2 such that none of their contiguous subsequences totals to X.\n\nConstraints\n\n* 1 \\leq N \\leq 3000\n* 1 \\leq X \\leq 2N\n* N and X are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN X\n\n\nOutput\n\nPrint the number, modulo 998244353, of sequences that satisfy the condition.\n\nExamples\n\nInput\n\n3 3\n\n\nOutput\n\n14\n\n\nInput\n\n8 6\n\n\nOutput\n\n1179\n\n\nInput\n\n10 1\n\n\nOutput\n\n1024\n\n\nInput\n\n9 13\n\n\nOutput\n\n18402\n\n\nInput\n\n314 159\n\n\nOutput\n\n459765451", "grammar": {"answer": null}}
{"name": "1541_B. Pleasant Pairs", "description": "You are given an array a_1, a_2, ..., a_n consisting of n distinct integers. Count the number of pairs of indices (i, j) such that i < j and a_i ⋅ a_j = i + j.\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 10^4) — the number of test cases. Then t cases follow.\n\nThe first line of each test case contains one integer n (2 ≤ n ≤ 10^5) — the length of array a.\n\nThe second line of each test case contains n space separated integers a_1, a_2, …, a_n (1 ≤ a_i ≤ 2 ⋅ n) — the array a. It is guaranteed that all elements are distinct.\n\nIt is guaranteed that the sum of n over all test cases does not exceed 2 ⋅ 10^5.\n\nOutput\n\nFor each test case, output the number of pairs of indices (i, j) such that i < j and a_i ⋅ a_j = i + j.\n\nExample\n\nInput\n\n\n3\n2\n3 1\n3\n6 1 5\n5\n3 1 5 9 2\n\n\nOutput\n\n\n1\n1\n3\n\nNote\n\nFor the first test case, the only pair that satisfies the constraints is (1, 2), as a_1 ⋅ a_2 = 1 + 2 = 3\n\nFor the second test case, the only pair that satisfies the constraints is (2, 3).\n\nFor the third test case, the pairs that satisfy the constraints are (1, 2), (1, 5), and (2, 3).", "grammar": {"answer": null}}
{"name": "p01827 Black Company", "description": "Example\n\nInput\n\n3\n1 3 3\n2\n1 2\n1 3\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "627_A. XOR Equation", "description": "Two positive integers a and b have a sum of s and a bitwise XOR of x. How many possible values are there for the ordered pair (a, b)?\n\nInput\n\nThe first line of the input contains two integers s and x (2 ≤ s ≤ 1012, 0 ≤ x ≤ 1012), the sum and bitwise xor of the pair of positive integers, respectively.\n\nOutput\n\nPrint a single integer, the number of solutions to the given conditions. If no solutions exist, print 0.\n\nExamples\n\nInput\n\n9 5\n\n\nOutput\n\n4\n\n\nInput\n\n3 3\n\n\nOutput\n\n2\n\n\nInput\n\n5 2\n\n\nOutput\n\n0\n\nNote\n\nIn the first sample, we have the following solutions: (2, 7), (3, 6), (6, 3), (7, 2).\n\nIn the second sample, the only solutions are (1, 2) and (2, 1).", "grammar": {"answer": null}}
{"name": "p02018 Surmise", "description": "D: Sontaku (Surmise)\n\nSome twins like even numbers.\n\nCount how many even numbers are in $ N $ integers $ A_1, A_2, A_3, \\ dots, A_N $.\n\ninput\n\nThe integer $ N $ is given on the first line.\n\nOn the second line, $ N $ integers $ A_1, A_2, A_3, \\ dots, A_N $ are given, separated by blanks.\n\noutput\n\nOutput an even number. However, insert a line break at the end.\n\nConstraint\n\n* $ N $ is an integer greater than or equal to $ 1 $ and less than or equal to $ 100 $\n* $ A_1, A_2, A_3, \\ dots, A_N $ are integers between $ 1 $ and $ 100 $\n\n\n\nInput example 1\n\n\nFive\n4 3 5 2 6\n\n\nOutput example 1\n\n\n3\n\n\n$ A_1 = 4 $, $ A_4 = 2 $ and $ A_5 = 6 $ are even numbers. Therefore, the even number is $ 3 $.\n\nInput example 2\n\n\n3\n2 2 2\n\n\nOutput example 2\n\n\n3\n\n\nEven if the numbers are the same, if the positions in $ A_1, A_2, A_3, \\ dots, A_N $ are different, they are counted as different numbers.\n\n\n\n\n\nExample\n\nInput\n\n5\n4 3 5 2 6\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "1325_D. Ehab the Xorcist", "description": "Given 2 integers u and v, find the shortest array such that [bitwise-xor](https://en.wikipedia.org/wiki/Bitwise_operation#XOR) of its elements is u, and the sum of its elements is v.\n\nInput\n\nThe only line contains 2 integers u and v (0 ≤ u,v ≤ 10^{18}).\n\nOutput\n\nIf there's no array that satisfies the condition, print \"-1\". Otherwise:\n\nThe first line should contain one integer, n, representing the length of the desired array. The next line should contain n positive integers, the array itself. If there are multiple possible answers, print any.\n\nExamples\n\nInput\n\n\n2 4\n\n\nOutput\n\n\n2\n3 1\n\nInput\n\n\n1 3\n\n\nOutput\n\n\n3\n1 1 1\n\nInput\n\n\n8 5\n\n\nOutput\n\n\n-1\n\nInput\n\n\n0 0\n\n\nOutput\n\n\n0\n\nNote\n\nIn the first sample, 3⊕ 1 = 2 and 3 + 1 = 4. There is no valid array of smaller length.\n\nNotice that in the fourth sample the array is empty.", "grammar": {"answer": null}}
{"name": "p03786 AtCoder Grand Contest 011 - Colorful Creatures", "description": "Snuke found N strange creatures. Each creature has a fixed color and size. The color and size of the i-th creature are represented by i and A_i, respectively.\n\nEvery creature can absorb another creature whose size is at most twice the size of itself. When a creature of size A and color B absorbs another creature of size C and color D (C \\leq 2 \\times A), they will merge into one creature of size A+C and color B. Here, depending on the sizes of two creatures, it is possible that both of them can absorb the other.\n\nSnuke has been watching these creatures merge over and over and ultimately become one creature. Find the number of the possible colors of this creature.\n\nConstraints\n\n* 2 \\leq N \\leq 100000\n* 1 \\leq A_i \\leq 10^9\n* A_i is an integer.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 … A_N\n\n\nOutput\n\nPrint the number of the possible colors of the last remaining creature after the N creatures repeatedly merge and ultimately become one creature.\n\nExamples\n\nInput\n\n3\n3 1 4\n\n\nOutput\n\n2\n\n\nInput\n\n5\n1 1 1 1 1\n\n\nOutput\n\n5\n\n\nInput\n\n6\n40 1 30 2 7 20\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p03837 AtCoder Beginner Contest 051 - Candidates of No Shortest Paths", "description": "You are given an undirected connected weighted graph with N vertices and M edges that contains neither self-loops nor double edges.\nThe i-th (1≤i≤M) edge connects vertex a_i and vertex b_i with a distance of c_i.\nHere, a self-loop is an edge where a_i = b_i (1≤i≤M), and double edges are two edges where (a_i,b_i)=(a_j,b_j) or (a_i,b_i)=(b_j,a_j) (1≤i<j≤M).\nA connected graph is a graph where there is a path between every pair of different vertices.\nFind the number of the edges that are not contained in any shortest path between any pair of different vertices.\n\nConstraints\n\n* 2≤N≤100\n* N-1≤M≤min(N(N-1)/2,1000)\n* 1≤a_i,b_i≤N\n* 1≤c_i≤1000\n* c_i is an integer.\n* The given graph contains neither self-loops nor double edges.\n* The given graph is connected.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN M\na_1 b_1 c_1\na_2 b_2 c_2\n:\na_M b_M c_M\n\n\nOutput\n\nPrint the number of the edges in the graph that are not contained in any shortest path between any pair of different vertices.\n\nExamples\n\nInput\n\n3 3\n1 2 1\n1 3 1\n2 3 3\n\n\nOutput\n\n1\n\n\nInput\n\n3 2\n1 2 1\n2 3 1\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "1082_E. Increasing Frequency", "description": "You are given array a of length n. You can choose one segment [l, r] (1 ≤ l ≤ r ≤ n) and integer value k (positive, negative or even zero) and change a_l, a_{l + 1}, ..., a_r by k each (i.e. a_i := a_i + k for each l ≤ i ≤ r).\n\nWhat is the maximum possible number of elements with value c that can be obtained after one such operation?\n\nInput\n\nThe first line contains two integers n and c (1 ≤ n ≤ 5 ⋅ 10^5, 1 ≤ c ≤ 5 ⋅ 10^5) — the length of array and the value c to obtain.\n\nThe second line contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ 5 ⋅ 10^5) — array a.\n\nOutput\n\nPrint one integer — the maximum possible number of elements with value c which can be obtained after performing operation described above.\n\nExamples\n\nInput\n\n\n6 9\n9 9 9 9 9 9\n\n\nOutput\n\n\n6\n\n\nInput\n\n\n3 2\n6 2 6\n\n\nOutput\n\n\n2\n\nNote\n\nIn the first example we can choose any segment and k = 0. The array will stay same.\n\nIn the second example we can choose segment [1, 3] and k = -4. The array will become [2, -2, 2].", "grammar": {"answer": null}}
{"name": "1174_A. Ehab Fails to Be Thanos", "description": "You're given an array a of length 2n. Is it possible to reorder it in such way so that the sum of the first n elements isn't equal to the sum of the last n elements?\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 1000), where 2n is the number of elements in the array a.\n\nThe second line contains 2n space-separated integers a_1, a_2, …, a_{2n} (1 ≤ a_i ≤ 10^6) — the elements of the array a.\n\nOutput\n\nIf there's no solution, print \"-1\" (without quotes). Otherwise, print a single line containing 2n space-separated integers. They must form a reordering of a. You are allowed to not change the order.\n\nExamples\n\nInput\n\n\n3\n1 2 2 1 3 1\n\n\nOutput\n\n\n2 1 3 1 1 2\n\nInput\n\n\n1\n1 1\n\n\nOutput\n\n\n-1\n\nNote\n\nIn the first example, the first n elements have sum 2+1+3=6 while the last n elements have sum 1+1+2=4. The sums aren't equal.\n\nIn the second example, there's no solution.", "grammar": {"answer": null}}
{"name": "p02736 AtCoder Grand Contest 043 - 123 Triangle", "description": "Given is a sequence of N digits a_1a_2\\ldots a_N, where each element is 1, 2, or 3. Let x_{i,j} defined as follows:\n\n* x_{1,j} := a_j \\quad (1 \\leq j \\leq N)\n* x_{i,j} := | x_{i-1,j} - x_{i-1,j+1} | \\quad (2 \\leq i \\leq N and 1 \\leq j \\leq N+1-i)\n\n\n\nFind x_{N,1}.\n\nConstraints\n\n* 2 \\leq N \\leq 10^6\n* a_i = 1,2,3 (1 \\leq i \\leq N)\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1a_2\\ldotsa_N\n\n\nOutput\n\nPrint x_{N,1}.\n\nExamples\n\nInput\n\n4\n1231\n\n\nOutput\n\n1\n\n\nInput\n\n10\n2311312312\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02404 Print a Frame", "description": "Draw a frame which has a height of H cm and a width of W cm. For example, the following figure shows a frame which has a height of 6 cm and a width of 10 cm.\n\n\n\n........#\n........#\n........#\n........#\n\n\n\nConstraints\n\n* 3 ≤ H ≤ 300\n* 3 ≤ W ≤ 300\n\nInput\n\nThe input consists of multiple datasets. Each dataset consists of two integers H and W separated by a single space.\n\nThe input ends with two 0 (when both H and W are zero).\n\nOutput\n\nFor each dataset, print the frame made of '#' and '.'.\n\nPrint a blank line after each dataset.\n\nExample\n\nInput\n\n3 4\n5 6\n3 3\n0 0\n\n\nOutput\n\n####\n#..#\n####\n\n######\n#....#\n#....#\n#....#\n######\n\n###\n#.#\n###", "grammar": {"answer": null}}
{"name": "p02576 AtCoder Beginner Contest 176 - Takoyaki", "description": "Takahashi loves takoyaki - a ball-shaped snack.\n\nWith a takoyaki machine, he can make at most X pieces of takoyaki at a time, taking T minutes regardless of the number of pieces to make.\n\nHow long does it take to make N takoyaki?\n\nConstraints\n\n* 1 \\leq N,X,T \\leq 1000\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN X T\n\n\nOutput\n\nPrint an integer representing the minimum number of minutes needed to make N pieces of takoyaki.\n\nExamples\n\nInput\n\n20 12 6\n\n\nOutput\n\n12\n\n\nInput\n\n1000 1 1000\n\n\nOutput\n\n1000000", "grammar": {"answer": null}}
{"name": "p03658 AtCoder Beginner Contest 067 - Snake Toy", "description": "Snuke has N sticks. The length of the i-th stick is l_i.\n\nSnuke is making a snake toy by joining K of the sticks together.\n\nThe length of the toy is represented by the sum of the individual sticks that compose it. Find the maximum possible length of the toy.\n\nConstraints\n\n* 1 \\leq K \\leq N \\leq 50\n* 1 \\leq l_i \\leq 50\n* l_i is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nl_1 l_2 l_3 ... l_{N}\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n5 3\n1 2 3 4 5\n\n\nOutput\n\n12\n\n\nInput\n\n15 14\n50 26 27 21 41 7 42 35 7 5 5 36 39 1 45\n\n\nOutput\n\n386", "grammar": {"answer": null}}
{"name": "1132_E. Knapsack", "description": "You have a set of items, each having some integer weight not greater than 8. You denote that a subset of items is good if total weight of items in the subset does not exceed W.\n\nYou want to calculate the maximum possible weight of a good subset of items. Note that you have to consider the empty set and the original set when calculating the answer.\n\nInput\n\nThe first line contains one integer W (0 ≤ W ≤ 10^{18}) — the maximum total weight of a good subset.\n\nThe second line denotes the set of items you have. It contains 8 integers cnt_1, cnt_2, ..., cnt_8 (0 ≤ cnt_i ≤ 10^{16}), where cnt_i is the number of items having weight i in the set.\n\nOutput\n\nPrint one integer — the maximum possible weight of a good subset of items.\n\nExamples\n\nInput\n\n\n10\n1 2 3 4 5 6 7 8\n\n\nOutput\n\n\n10\n\n\nInput\n\n\n0\n0 0 0 0 0 0 0 0\n\n\nOutput\n\n\n0\n\n\nInput\n\n\n3\n0 4 1 0 0 9 8 3\n\n\nOutput\n\n\n3", "grammar": {"answer": null}}
{"name": "624_B. Making a String", "description": "You are given an alphabet consisting of n letters, your task is to make a string of the maximum possible length so that the following conditions are satisfied: \n\n  * the i-th letter occurs in the string no more than ai times; \n  * the number of occurrences of each letter in the string must be distinct for all the letters that occurred in the string at least once. \n\nInput\n\nThe first line of the input contains a single integer n (2 ≤ n ≤ 26) — the number of letters in the alphabet.\n\nThe next line contains n integers ai (1 ≤ ai ≤ 109) — i-th of these integers gives the limitation on the number of occurrences of the i-th character in the string.\n\nOutput\n\nPrint a single integer — the maximum length of the string that meets all the requirements.\n\nExamples\n\nInput\n\n3\n2 5 5\n\n\nOutput\n\n11\n\n\nInput\n\n3\n1 1 2\n\n\nOutput\n\n3\n\nNote\n\nFor convenience let's consider an alphabet consisting of three letters: \"a\", \"b\", \"c\". In the first sample, some of the optimal strings are: \"cccaabbccbb\", \"aabcbcbcbcb\". In the second sample some of the optimal strings are: \"acc\", \"cbc\".", "grammar": {"answer": null}}
{"name": "p03730 AtCoder Beginner Contest 060 - Choose Integers", "description": "We ask you to select some number of positive integers, and calculate the sum of them.\n\nIt is allowed to select as many integers as you like, and as large integers as you wish. You have to follow these, however: each selected integer needs to be a multiple of A, and you need to select at least one integer.\n\nYour objective is to make the sum congruent to C modulo B. Determine whether this is possible.\n\nIf the objective is achievable, print `YES`. Otherwise, print `NO`.\n\nConstraints\n\n* 1 ≤ A ≤ 100\n* 1 ≤ B ≤ 100\n* 0 ≤ C < B\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C\n\n\nOutput\n\nPrint `YES` or `NO`.\n\nExamples\n\nInput\n\n7 5 1\n\n\nOutput\n\nYES\n\n\nInput\n\n2 2 1\n\n\nOutput\n\nNO\n\n\nInput\n\n1 100 97\n\n\nOutput\n\nYES\n\n\nInput\n\n40 98 58\n\n\nOutput\n\nYES\n\n\nInput\n\n77 42 36\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p02760 AtCoder Beginner Contest 157 - Bingo", "description": "We have a bingo card with a 3\\times3 grid. The square at the i-th row from the top and the j-th column from the left contains the number A_{i, j}.\n\nThe MC will choose N numbers, b_1, b_2, \\cdots, b_N. If our bingo sheet contains some of those numbers, we will mark them on our sheet.\n\nDetermine whether we will have a bingo when the N numbers are chosen, that is, the sheet will contain three marked numbers in a row, column, or diagonal.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq A_{i, j} \\leq 100\n* A_{i_1, j_1} \\neq A_{i_2, j_2} ((i_1, j_1) \\neq (i_2, j_2))\n* 1 \\leq N \\leq 10\n* 1 \\leq b_i \\leq 100\n* b_i \\neq b_j (i \\neq j)\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA_{1, 1} A_{1, 2} A_{1, 3}\nA_{2, 1} A_{2, 2} A_{2, 3}\nA_{3, 1} A_{3, 2} A_{3, 3}\nN\nb_1\n\\vdots\nb_N\n\n\nOutput\n\nIf we will have a bingo, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30\n\n\nOutput\n\nYes\n\n\nInput\n\n41 7 46\n26 89 2\n78 92 8\n5\n6\n45\n16\n57\n17\n\n\nOutput\n\nNo\n\n\nInput\n\n60 88 34\n92 41 43\n65 73 48\n10\n60\n43\n88\n11\n48\n73\n65\n41\n92\n34\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "p00046 Differential", "description": "There is data that records the altitude of mountains that have been climbed so far. Create a program that reads this data and outputs the elevation difference between the highest and lowest mountains.\n\n\n\nInput\n\nThe input is given in the following format:\n\n\nMountain height\n...\n...\n\n\nThe height of the mountain is given over multiple lines. All values ​​entered are real numbers greater than or equal to 0 and less than or equal to 1,000,000. The number of mountain heights entered is 50 or less.\n\nOutput\n\nThe elevation difference between the highest mountain and the lowest mountain is output as a real number. The output may contain an error of 0.01 or less.\n\nExample\n\nInput\n\n3776.0\n1819.0\n645.2\n2004.1\n1208.6\n\n\nOutput\n\n3130.8", "grammar": {"answer": null}}
{"name": "p03760 AtCoder Beginner Contest 058 - ∵∴∵", "description": "Snuke signed up for a new website which holds programming competitions. He worried that he might forget his password, and he took notes of it. Since directly recording his password would cause him trouble if stolen, he took two notes: one contains the characters at the odd-numbered positions, and the other contains the characters at the even-numbered positions.\n\nYou are given two strings O and E. O contains the characters at the odd-numbered positions retaining their relative order, and E contains the characters at the even-numbered positions retaining their relative order. Restore the original password.\n\nConstraints\n\n* O and E consists of lowercase English letters (`a` - `z`).\n* 1 \\leq |O|,|E| \\leq 50\n* |O| - |E| is either 0 or 1.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nO\nE\n\n\nOutput\n\nPrint the original password.\n\nExamples\n\nInput\n\nxyz\nabc\n\n\nOutput\n\nxaybzc\n\n\nInput\n\natcoderbeginnercontest\natcoderregularcontest\n\n\nOutput\n\naattccooddeerrbreeggiunlnaerrccoonntteesstt", "grammar": {"answer": null}}
{"name": "p03526 CODE FESTIVAL 2017 Final - Zabuton", "description": "In the final of CODE FESTIVAL in some year, there are N participants. The height and power of Participant i is H_i and P_i, respectively.\n\nRingo is hosting a game of stacking zabuton (cushions).\n\nThe participants will line up in a row in some order, and they will in turn try to add zabuton to the stack of zabuton. Initially, the stack is empty. When it is Participant i's turn, if there are H_i or less zabuton already stacked, he/she will add exactly P_i zabuton to the stack. Otherwise, he/she will give up and do nothing.\n\nRingo wants to maximize the number of participants who can add zabuton to the stack. How many participants can add zabuton to the stack in the optimal order of participants?\n\nConstraints\n\n* 1 \\leq N \\leq 5000\n* 0 \\leq H_i \\leq 10^9\n* 1 \\leq P_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nH_1 P_1\nH_2 P_2\n:\nH_N P_N\n\n\nOutput\n\nPrint the maximum number of participants who can add zabuton to the stack.\n\nExamples\n\nInput\n\n3\n0 2\n1 3\n3 4\n\n\nOutput\n\n2\n\n\nInput\n\n3\n2 4\n3 1\n4 1\n\n\nOutput\n\n3\n\n\nInput\n\n10\n1 3\n8 4\n8 3\n9 1\n6 4\n2 3\n4 2\n9 2\n8 3\n0 1\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p02569 AtCoder Library Practice Contest - Lazy Segment Tree", "description": "You are given a binary array A=(A_1,A_2,\\cdots,A_N) of length N.\n\nProcess Q queries of the following types. The i-th query is represented by three integers T_i,L_i,R_i.\n\n* T_i=1: Replace the value of A_j with 1-A_j for each L_i \\leq j \\leq R_i.\n* T_i=2: Calculate the inversion(*) of the array A_{L_i},A_{L_i+1},\\cdots,A_{R_i}．\n\n\n\nNote：The inversion of the array x_1,x_2,\\cdots,x_k is the number of the pair of integers i,j with 1 \\leq i < j \\leq k, x_i > x_j.\n\nConstraints\n\n* 1 \\leq N \\leq 2 \\times 10^5\n* 0 \\leq A_i \\leq 1\n* 1 \\leq Q \\leq 2 \\times 10^5\n* 1 \\leq T_i \\leq 2\n* 1 \\leq L_i \\leq R_i \\leq N\n* All values in Input are integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN Q\nA_1 A_2 \\cdots A_N\nT_1 L_1 R_1\nT_2 L_2 R_2\n\\vdots\nT_Q L_Q R_Q\n\n\nOutput\n\nFor each query with T_i=2, print the answer.\n\nExample\n\nInput\n\n5 5\n0 1 0 0 1\n2 1 5\n1 3 4\n2 2 5\n1 1 3\n2 1 2\n\n\nOutput\n\n2\n0\n1", "grammar": {"answer": null}}
{"name": "p02709 AtCoder Beginner Contest 163 - Active Infants", "description": "There are N children standing in a line from left to right. The activeness of the i-th child from the left is A_i.\n\nYou can rearrange these children just one time in any order you like.\n\nWhen a child who originally occupies the x-th position from the left in the line moves to the y-th position from the left, that child earns A_x \\times |x-y| happiness points.\n\nFind the maximum total happiness points the children can earn.\n\nConstraints\n\n* 2 \\leq N \\leq 2000\n* 1 \\leq A_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the maximum total happiness points the children can earn.\n\nExamples\n\nInput\n\n4\n1 3 4 2\n\n\nOutput\n\n20\n\n\nInput\n\n6\n5 5 6 1 1 1\n\n\nOutput\n\n58\n\n\nInput\n\n6\n8 6 9 1 2 1\n\n\nOutput\n\n85", "grammar": {"answer": null}}
{"name": "922_B. Magic Forest", "description": "Imp is in a magic forest, where xorangles grow (wut?)\n\n<image>\n\nA xorangle of order n is such a non-degenerate triangle, that lengths of its sides are integers not exceeding n, and the xor-sum of the lengths is equal to zero. Imp has to count the number of distinct xorangles of order n to get out of the forest. \n\nFormally, for a given integer n you have to find the number of such triples (a, b, c), that:\n\n  * 1 ≤ a ≤ b ≤ c ≤ n; \n  * <image>, where <image> denotes the [bitwise xor](https://en.wikipedia.org/wiki/Bitwise_operation#XOR) of integers x and y. \n  * (a, b, c) form a non-degenerate (with strictly positive area) triangle. \n\nInput\n\nThe only line contains a single integer n (1 ≤ n ≤ 2500).\n\nOutput\n\nPrint the number of xorangles of order n.\n\nExamples\n\nInput\n\n6\n\n\nOutput\n\n1\n\n\nInput\n\n10\n\n\nOutput\n\n2\n\nNote\n\nThe only xorangle in the first sample is (3, 5, 6).", "grammar": {"answer": null}}
{"name": "550_A. Two Substrings", "description": "You are given string s. Your task is to determine if the given string s contains two non-overlapping substrings \"AB\" and \"BA\" (the substrings can go in any order).\n\nInput\n\nThe only line of input contains a string s of length between 1 and 105 consisting of uppercase Latin letters.\n\nOutput\n\nPrint \"YES\" (without the quotes), if string s contains two non-overlapping substrings \"AB\" and \"BA\", and \"NO\" otherwise.\n\nExamples\n\nInput\n\nABA\n\n\nOutput\n\nNO\n\n\nInput\n\nBACFAB\n\n\nOutput\n\nYES\n\n\nInput\n\nAXBYBXA\n\n\nOutput\n\nNO\n\nNote\n\nIn the first sample test, despite the fact that there are substrings \"AB\" and \"BA\", their occurrences overlap, so the answer is \"NO\".\n\nIn the second sample test there are the following occurrences of the substrings: BACFAB.\n\nIn the third sample test there is no substring \"AB\" nor substring \"BA\".", "grammar": {"answer": null}}
{"name": "p03470 AtCoder Beginner Contest 085 - Kagami Mochi", "description": "An X-layered kagami mochi (X ≥ 1) is a pile of X round mochi (rice cake) stacked vertically where each mochi (except the bottom one) has a smaller diameter than that of the mochi directly below it. For example, if you stack three mochi with diameters of 10, 8 and 6 centimeters from bottom to top in this order, you have a 3-layered kagami mochi; if you put just one mochi, you have a 1-layered kagami mochi.\n\nLunlun the dachshund has N round mochi, and the diameter of the i-th mochi is d_i centimeters. When we make a kagami mochi using some or all of them, at most how many layers can our kagami mochi have?\n\nConstraints\n\n* 1 ≤ N ≤ 100\n* 1 ≤ d_i ≤ 100\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nd_1\n:\nd_N\n\n\nOutput\n\nPrint the maximum number of layers in a kagami mochi that can be made.\n\nExamples\n\nInput\n\n4\n10\n8\n8\n6\n\n\nOutput\n\n3\n\n\nInput\n\n3\n15\n15\n15\n\n\nOutput\n\n1\n\n\nInput\n\n7\n50\n30\n50\n100\n50\n80\n30\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "32_B. Borze", "description": "Ternary numeric notation is quite popular in Berland. To telegraph the ternary number the Borze alphabet is used. Digit 0 is transmitted as «.», 1 as «-.» and 2 as «--». You are to decode the Borze code, i.e. to find out the ternary number given its representation in Borze alphabet.\n\nInput\n\nThe first line contains a number in Borze code. The length of the string is between 1 and 200 characters. It's guaranteed that the given string is a valid Borze code of some ternary number (this number can have leading zeroes).\n\nOutput\n\nOutput the decoded ternary number. It can have leading zeroes.\n\nExamples\n\nInput\n\n.-.--\n\n\nOutput\n\n012\n\nInput\n\n--.\n\n\nOutput\n\n20\n\nInput\n\n-..-.--\n\n\nOutput\n\n1012", "grammar": {"answer": null}}
{"name": "p01886 Share the Ruins Preservation", "description": "Example\n\nInput\n\n8\n-10 0\n-10 5\n-5 5\n-5 0\n10 0\n10 -5\n5 -5\n5 0\n\n\nOutput\n\n50", "grammar": {"answer": null}}
{"name": "1103_A. Grid game", "description": "You are given a 4x4 grid. You play a game — there is a sequence of tiles, each of them is either 2x1 or 1x2. Your task is to consequently place all tiles from the given sequence in the grid. When tile is placed, each cell which is located in fully occupied row or column is deleted (cells are deleted at the same time independently). You can place tile in the grid at any position, the only condition is that tiles (and tile parts) should not overlap. Your goal is to proceed all given figures and avoid crossing at any time.\n\nInput\n\nThe only line contains a string s consisting of zeroes and ones (1 ≤ |s| ≤ 1000). Zero describes vertical tile, one describes horizontal tile.\n\nOutput\n\nOutput |s| lines — for each tile you should output two positive integers r,c, not exceeding 4, representing numbers of smallest row and column intersecting with it.\n\nIf there exist multiple solutions, print any of them.\n\nExample\n\nInput\n\n\n010\n\n\nOutput\n\n\n1 1\n1 2\n1 4\n\nNote\n\nFollowing image illustrates the example after placing all three tiles: \n\n<image> Then the first row is deleted:  <image>", "grammar": {"answer": null}}
{"name": "1101_A. Minimum Integer", "description": "You are given q queries in the following form:\n\nGiven three integers l_i, r_i and d_i, find minimum positive integer x_i such that it is divisible by d_i and it does not belong to the segment [l_i, r_i].\n\nCan you answer all the queries?\n\nRecall that a number x belongs to segment [l, r] if l ≤ x ≤ r.\n\nInput\n\nThe first line contains one integer q (1 ≤ q ≤ 500) — the number of queries.\n\nThen q lines follow, each containing a query given in the format l_i r_i d_i (1 ≤ l_i ≤ r_i ≤ 10^9, 1 ≤ d_i ≤ 10^9). l_i, r_i and d_i are integers.\n\nOutput\n\nFor each query print one integer: the answer to this query.\n\nExample\n\nInput\n\n\n5\n2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5\n\n\nOutput\n\n\n6\n4\n1\n3\n10", "grammar": {"answer": null}}
{"name": "p03727 AtCoder Grand Contest 014 - Blue and Red Tree", "description": "There is a tree with N vertices numbered 1 through N. The i-th of the N-1 edges connects vertices a_i and b_i.\n\nInitially, each edge is painted blue. Takahashi will convert this blue tree into a red tree, by performing the following operation N-1 times:\n\n* Select a simple path that consists of only blue edges, and remove one of those edges.\n* Then, span a new red edge between the two endpoints of the selected path.\n\n\n\nHis objective is to obtain a tree that has a red edge connecting vertices c_i and d_i, for each i.\n\nDetermine whether this is achievable.\n\nConstraints\n\n* 2 ≤ N ≤ 10^5\n* 1 ≤ a_i,b_i,c_i,d_i ≤ N\n* a_i ≠ b_i\n* c_i ≠ d_i\n* Both input graphs are trees.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 b_1\n:\na_{N-1} b_{N-1}\nc_1 d_1\n:\nc_{N-1} d_{N-1}\n\n\nOutput\n\nPrint `YES` if the objective is achievable; print `NO` otherwise.\n\nExamples\n\nInput\n\n3\n1 2\n2 3\n1 3\n3 2\n\n\nOutput\n\nYES\n\n\nInput\n\n5\n1 2\n2 3\n3 4\n4 5\n3 4\n2 4\n1 4\n1 5\n\n\nOutput\n\nYES\n\n\nInput\n\n6\n1 2\n3 5\n4 6\n1 6\n5 1\n5 3\n1 4\n2 6\n4 3\n5 6\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p00105 Book Index", "description": "Books are indexed. Write a program which reads a list of pairs of a word and a page number, and prints the word and a list of the corresponding page numbers.\n\nYou can assume that a word consists of at most 30 characters, and the page number is less than or equal to 1000. The number of pairs of a word and a page number is less than or equal to 100. A word never appear in a page more than once.\n\nThe words should be printed in alphabetical order and the page numbers should be printed in ascending order.\n\n\n\nInput\n\n\nword page_number\n::\n::\n\n\nOutput\n\n\nword\na_list_of_the_page_number\nword\na_list_of_the_Page_number\n::\n::\n\n\nExample\n\nInput\n\nstyle 12\neven 25\nintroduction 3\neasy 9\nstyle 7\ndocument 13\nstyle 21\neven 18\n\n\nOutput\n\ndocument\n13\neasy\n9\neven\n18 25\nintroduction\n3\nstyle\n7 12 21", "grammar": {"answer": null}}
{"name": "p03215 Dwango Programming Contest V - Sum AND Subarrays", "description": "One day, Niwango-kun, an employee of Dwango Co., Ltd., found an integer sequence (a_1, ..., a_N) of length N. He is interested in properties of the sequence a.\n\nFor a nonempty contiguous subsequence a_l, ..., a_r (1 \\leq l \\leq r \\leq N) of the sequence a, its beauty is defined as a_l + ... + a_r. Niwango-kun wants to know the maximum possible value of the bitwise AND of the beauties of K nonempty contiguous subsequences among all N(N+1)/2 nonempty contiguous subsequences. (Subsequences may share elements.)\n\nFind the maximum possible value for him.\n\nConstraints\n\n* 2 \\leq N \\leq 1000\n* 1 \\leq a_i \\leq 10^9\n* 1 \\leq K \\leq N(N+1)/2\n* All numbers given in input are integers\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n4 2\n2 5 2 5\n\n\nOutput\n\n12\n\n\nInput\n\n8 4\n9 1 8 2 7 5 6 4\n\n\nOutput\n\n32", "grammar": {"answer": null}}
{"name": "p02601 M-SOLUTIONS Programming Contest 2020 - Magic 2", "description": "M-kun has the following three cards:\n\n* A red card with the integer A.\n* A green card with the integer B.\n* A blue card with the integer C.\n\n\n\nHe is a genius magician who can do the following operation at most K times:\n\n* Choose one of the three cards and multiply the written integer by 2.\n\n\n\nHis magic is successful if both of the following conditions are satisfied after the operations:\n\n* The integer on the green card is strictly greater than the integer on the red card.\n* The integer on the blue card is strictly greater than the integer on the green card.\n\n\n\nDetermine whether the magic can be successful.\n\nConstraints\n\n* 1 \\leq A, B, C \\leq 7\n* 1 \\leq K \\leq 7\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C\nK\n\n\nOutput\n\nIf the magic can be successful, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n7 2 5\n3\n\n\nOutput\n\nYes\n\n\nInput\n\n7 4 2\n3\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p00095 Surf Smelt Fishing Contest", "description": "A smelt fishing tournament was held at Lake Hibara. The winner is the one who wins the most smelt.\n\nCreate a program that reads the list of participant numbers and the number of fish caught and outputs the number of winners and the number of fish caught. If there are multiple winners, output the one with the lowest participant number.\n\n\n\ninput\n\nThe input is given in the following format.\n\n\nn\na1 v1\na2 v2\n::\nan vn\n\n\nn (1 ≤ n ≤ 20) represents the number of participants and ai represents the participant number. Participant numbers are different integers between 1 and n. vi (0 ≤ vi ≤ 100) is the number of animals acquired by the participant ai.\n\noutput\n\nOutput the winner's participant number and the number of fish caught on one line separated by blanks.\n\nExample\n\nInput\n\n6\n1 14\n2 25\n3 42\n4 11\n5 40\n6 37\n\n\nOutput\n\n3 42", "grammar": {"answer": null}}
{"name": "938_E. Max History", "description": "You are given an array a of length n. We define fa the following way:\n\n  * Initially fa = 0, M = 1; \n  * for every 2 ≤ i ≤ n if aM < ai then we set fa = fa + aM and then set M = i. \n\n\n\nCalculate the sum of fa over all n! permutations of the array a modulo 109 + 7.\n\nNote: two elements are considered different if their indices differ, so for every array a there are exactly n! permutations.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 1 000 000) — the size of array a.\n\nSecond line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 109).\n\nOutput\n\nPrint the only integer, the sum of fa over all n! permutations of the array a modulo 109 + 7.\n\nExamples\n\nInput\n\n2\n1 3\n\n\nOutput\n\n1\n\nInput\n\n3\n1 1 2\n\n\nOutput\n\n4\n\nNote\n\nFor the second example all the permutations are:\n\n  * p = [1, 2, 3] : fa is equal to 1; \n  * p = [1, 3, 2] : fa is equal to 1; \n  * p = [2, 1, 3] : fa is equal to 1; \n  * p = [2, 3, 1] : fa is equal to 1; \n  * p = [3, 1, 2] : fa is equal to 0; \n  * p = [3, 2, 1] : fa is equal to 0. \n\n\n\nWhere p is the array of the indices of initial array a. The sum of fa is equal to 4.", "grammar": {"answer": null}}
{"name": "p01410 Dangerous Tower", "description": "Training is indispensable for achieving good results at ICPC. Rabbit wants to win at ICPC, so he decided to practice today as well.\n\nToday's training is to gain dexterity that never mistypes by carefully stacking blocks. Since there are many building blocks, let's build a tall tower.\n\nThere are N blocks, and the i-th (1 ≤ i ≤ N) building blocks are in the shape of a rectangular parallelepiped of 1 x Ai x Bi. The side of length 1 is used in the depth direction, and the sides of lengths Ai and Bi are assigned one by one in the horizontal direction and one in the height direction. When building blocks, the upper building blocks must be exactly shorter in width than the lower building blocks. The blocks can be used in any order, and some blocks may not be used. Under these restrictions, I want to make the tallest tower that can be built.\n\n\n\nInput\n\n\nN\nA1 B1\n...\nAN BN\n\n\nSatisfy 1 ≤ N ≤ 1,000, 1 ≤ Ai, Bi ≤ 1,000,000. All input values ​​are integers.\n\nOutput\n\nOutput the maximum height of the tower on one line.\n\nExamples\n\nInput\n\n3\n10 40\n10 40\n20 30\n\n\nOutput\n\n80\n\n\nInput\n\n4\n1 2\n2 3\n3 4\n4 1\n\n\nOutput\n\n11", "grammar": {"answer": null}}
{"name": "p02384 Dice II", "description": "Construct a dice from a given sequence of integers in the same way as Dice I.\n\nYou are given integers on the top face and the front face after the dice was rolled in the same way as Dice I. Write a program to print an integer on the right side face.\n\n\n<image>\n\n\nConstraints\n\n* $0 \\leq $ the integer assigned to a face $ \\leq 100$\n* The integers are all different\n* $1 \\leq q \\leq 24$\n\nInput\n\nIn the first line, six integers assigned to faces are given in ascending order of their corresponding labels. In the second line, the number of questions $q$ is given.\n\nIn the following $q$ lines, $q$ questions are given. Each question consists of two integers on the top face and the front face respectively.\n\nOutput\n\nFor each question, print the integer on the right side face.\n\nExample\n\nInput\n\n1 2 3 4 5 6\n3\n6 5\n1 3\n3 2\n\n\nOutput\n\n3\n5\n6", "grammar": {"answer": null}}
{"name": "192_A. Funky Numbers", "description": "As you very well know, this year's funkiest numbers are so called triangular numbers (that is, integers that are representable as <image>, where k is some positive integer), and the coolest numbers are those that are representable as a sum of two triangular numbers.\n\nA well-known hipster Andrew adores everything funky and cool but unfortunately, he isn't good at maths. Given number n, help him define whether this number can be represented by a sum of two triangular numbers (not necessarily different)!\n\nInput\n\nThe first input line contains an integer n (1 ≤ n ≤ 109).\n\nOutput\n\nPrint \"YES\" (without the quotes), if n can be represented as a sum of two triangular numbers, otherwise print \"NO\" (without the quotes).\n\nExamples\n\nInput\n\n256\n\n\nOutput\n\nYES\n\n\nInput\n\n512\n\n\nOutput\n\nNO\n\nNote\n\nIn the first sample number <image>.\n\nIn the second sample number 512 can not be represented as a sum of two triangular numbers.", "grammar": {"answer": null}}
{"name": "p03068 Tenka1 Programmer Beginner Contest 2019 - *e**** ********e* *e****e* ****e**", "description": "You are given a string S of length N consisting of lowercase English letters, and an integer K. Print the string obtained by replacing every character in S that differs from the K-th character of S, with `*`.\n\nConstraints\n\n* 1 \\leq K \\leq N\\leq 10\n* S is a string of length N consisting of lowercase English letters.\n* N and K are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS\nK\n\n\nOutput\n\nPrint the string obtained by replacing every character in S that differs from the K-th character of S, with `*`.\n\nExamples\n\nInput\n\n5\nerror\n2\n\n\nOutput\n\n*rr*r\n\n\nInput\n\n6\neleven\n5\n\n\nOutput\n\ne*e*e*\n\n\nInput\n\n9\neducation\n7\n\n\nOutput\n\n******i**", "grammar": {"answer": null}}
{"name": "p00070 Combination of Number Sequences", "description": "Consider a sequence of n numbers using integers from 0 to 9 k1, k2, ..., kn. Read the positive integers n and s,\n\nk1 + 2 x k2 + 3 x k3 + ... + n x kn = s\n\nCreate a program that outputs how many rows of n numbers such as. However, the same number does not appear more than once in one \"n sequence of numbers\".\n\n\n\nInput\n\nThe input consists of multiple datasets. For each dataset, n (1 ≤ n ≤ 10) and s (0 ≤ s ≤ 10,000) are given on one line, separated by blanks.\n\nThe number of datasets does not exceed 100.\n\nOutput\n\nFor each dataset, print the number of combinations in which the sum of n integers is s on one line.\n\nExample\n\nInput\n\n3 10\n3 1\n\n\nOutput\n\n8\n0", "grammar": {"answer": null}}
{"name": "660_C. Hard Process", "description": "You are given an array a with n elements. Each element of a is either 0 or 1.\n\nLet's denote the length of the longest subsegment of consecutive elements in a, consisting of only numbers one, as f(a). You can change no more than k zeroes to ones to maximize f(a).\n\nInput\n\nThe first line contains two integers n and k (1 ≤ n ≤ 3·105, 0 ≤ k ≤ n) — the number of elements in a and the parameter k.\n\nThe second line contains n integers ai (0 ≤ ai ≤ 1) — the elements of a.\n\nOutput\n\nOn the first line print a non-negative integer z — the maximal value of f(a) after no more than k changes of zeroes to ones.\n\nOn the second line print n integers aj — the elements of the array a after the changes.\n\nIf there are multiple answers, you can print any one of them.\n\nExamples\n\nInput\n\n7 1\n1 0 0 1 1 0 1\n\n\nOutput\n\n4\n1 0 0 1 1 1 1\n\n\nInput\n\n10 2\n1 0 0 1 0 1 0 1 0 1\n\n\nOutput\n\n5\n1 0 0 1 1 1 1 1 0 1", "grammar": {"answer": null}}
{"name": "p02377 Minimum Cost Flow", "description": "Examples\n\nInput\n\n4 5 2\n0 1 2 1\n0 2 1 2\n1 2 1 1\n1 3 1 3\n2 3 2 1\n\n\nOutput\n\n6\n\n\nInput\n\n\n\n\nOutput", "grammar": {"answer": null}}
{"name": "p03824 AtCoder Grand Contest 009 - Uninity", "description": "We will recursively define uninity of a tree, as follows: (Uni is a Japanese word for sea urchins.)\n\n* A tree consisting of one vertex is a tree of uninity 0.\n* Suppose there are zero or more trees of uninity k, and a vertex v. If a vertex is selected from each tree of uninity k and connected to v with an edge, the resulting tree is a tree of uninity k+1.\n\n\n\nIt can be shown that a tree of uninity k is also a tree of uninity k+1,k+2,..., and so forth.\n\nYou are given a tree consisting of N vertices. The vertices of the tree are numbered 1 through N, and the i-th of the N-1 edges connects vertices a_i and b_i.\n\nFind the minimum k such that the given tree is a tree of uninity k.\n\nConstraints\n\n* 2 ≦ N ≦ 10^5\n* 1 ≦ a_i, b_i ≦ N(1 ≦ i ≦ N-1)\n* The given graph is a tree.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\na_1 b_1\n:\na_{N-1} b_{N-1}\n\n\nOutput\n\nPrint the minimum k such that the given tree is a tree of uninity k.\n\nExamples\n\nInput\n\n7\n1 2\n2 3\n2 4\n4 6\n6 7\n7 5\n\n\nOutput\n\n2\n\n\nInput\n\n12\n1 2\n2 3\n2 4\n4 5\n5 6\n6 7\n7 8\n5 9\n9 10\n10 11\n11 12\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p02718 AtCoder Beginner Contest 161 - Popular Vote", "description": "We have held a popularity poll for N items on sale. Item i received A_i votes.\n\nFrom these N items, we will select M as popular items. However, we cannot select an item with less than \\dfrac{1}{4M} of the total number of votes.\n\nIf M popular items can be selected, print `Yes`; otherwise, print `No`.\n\nConstraints\n\n* 1 \\leq M \\leq N \\leq 100\n* 1 \\leq A_i \\leq 1000\n* A_i are distinct.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nA_1 ... A_N\n\n\nOutput\n\nIf M popular items can be selected, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n4 1\n5 4 2 1\n\n\nOutput\n\nYes\n\n\nInput\n\n3 2\n380 19 1\n\n\nOutput\n\nNo\n\n\nInput\n\n12 3\n4 56 78 901 2 345 67 890 123 45 6 789\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "p03712 AtCoder Beginner Contest 062 - Picture Frame", "description": "You are given a image with a height of H pixels and a width of W pixels. Each pixel is represented by a lowercase English letter. The pixel at the i-th row from the top and j-th column from the left is a_{ij}.\n\nPut a box around this image and output the result. The box should consist of `#` and have a thickness of 1.\n\nConstraints\n\n* 1 ≤ H, W ≤ 100\n* a_{ij} is a lowercase English letter.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH W\na_{11} ... a_{1W}\n:\na_{H1} ... a_{HW}\n\n\nOutput\n\nPrint the image surrounded by a box that consists of `#` and has a thickness of 1.\n\nExamples\n\nInput\n\n2 3\nabc\narc\n\n\nOutput\n\n#####\n#abc#\n#arc#\n#####\n\n\nInput\n\n1 1\nz\n\n\nOutput\n\nz#", "grammar": {"answer": null}}
{"name": "p02292 Counter-Clockwise", "description": "<image>\n\nFor given three points p0, p1, p2, print\n\n\nCOUNTER_CLOCKWISE\n\n\nif p0, p1, p2 make a counterclockwise turn (1),\n\n\nCLOCKWISE\n\n\nif p0, p1, p2 make a clockwise turn (2),\n\n\nONLINE_BACK\n\n\nif p2 is on a line p2, p0, p1 in this order (3),\n\n\nONLINE_FRONT\n\n\nif p2 is on a line p0, p1, p2 in this order (4),\n\n\nON_SEGMENT\n\n\nif p2 is on a segment p0p1 (5).\n\nConstraints\n\n* 1 ≤ q ≤ 1000\n* -10000 ≤ xi, yi ≤ 10000\n* p0 and p1 are not identical.\n\nInput\n\n\nxp0 yp0 xp1 yp1\nq\nxp20 yp20\nxp21 yp21\n...\nxp2q-1 yp2q-1\n\n\nIn the first line, integer coordinates of p0 and p1 are given. Then, q queries are given for integer coordinates of p2.\n\nOutput\n\nFor each query, print the above mentioned status.\n\nExamples\n\nInput\n\n0 0 2 0\n2\n-1 1\n-1 -1\n\n\nOutput\n\nCOUNTER_CLOCKWISE\nCLOCKWISE\n\n\nInput\n\n0 0 2 0\n3\n-1 0\n0 0\n3 0\n\n\nOutput\n\nONLINE_BACK\nON_SEGMENT\nONLINE_FRONT", "grammar": {"answer": null}}
{"name": "p02950 AtCoder Beginner Contest 137 - Polynomial Construction", "description": "Given are a prime number p and a sequence of p integers a_0, \\ldots, a_{p-1} consisting of zeros and ones.\n\nFind a polynomial of degree at most p-1, f(x) = b_{p-1} x^{p-1} + b_{p-2} x^{p-2} + \\ldots + b_0, satisfying the following conditions:\n\n* For each i (0 \\leq i \\leq p-1), b_i is an integer such that 0 \\leq b_i \\leq p-1.\n* For each i (0 \\leq i \\leq p-1), f(i) \\equiv a_i \\pmod p.\n\nConstraints\n\n* 2 \\leq p \\leq 2999\n* p is a prime number.\n* 0 \\leq a_i \\leq 1\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\np\na_0 a_1 \\ldots a_{p-1}\n\n\nOutput\n\nPrint b_0, b_1, \\ldots, b_{p-1} of a polynomial f(x) satisfying the conditions, in this order, with spaces in between.\n\nIt can be proved that a solution always exists. If multiple solutions exist, any of them will be accepted.\n\nExamples\n\nInput\n\n2\n1 0\n\n\nOutput\n\n1 1\n\n\nInput\n\n3\n0 0 0\n\n\nOutput\n\n0 0 0\n\n\nInput\n\n5\n0 1 0 1 0\n\n\nOutput\n\n0 2 0 1 3", "grammar": {"answer": null}}
{"name": "p03516 CODE FESTIVAL 2017 Elimination Tournament Round 3 (Parallel) - Unicyclic Graph Counting", "description": "Snuke has come up with the following problem.\n\n> You are given a sequence d of length N. Find the number of the undirected graphs with N vertices labeled 1,2,...,N satisfying the following conditions, modulo 10^{9} + 7:\n>\n>   * The graph is simple and connected.\n>   * The degree of Vertex i is d_i.\n>\n\n\nWhen 2 \\leq N, 1 \\leq d_i \\leq N-1, {\\rm Σ} d_i = 2(N-1), it can be proved that the answer to the problem is \\frac{(N-2)!}{(d_{1} -1)!(d_{2} - 1)! ... (d_{N}-1)!}.\n\nSnuke is wondering what the answer is when 3 \\leq N, 1 \\leq d_i \\leq N-1, { \\rm Σ} d_i = 2N. Solve the problem under this condition for him.\n\nConstraints\n\n* 3 \\leq N \\leq 300\n* 1 \\leq d_i \\leq N-1\n* { \\rm Σ} d_i = 2N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nd_1 d_2 ... d_{N}\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n5\n1 2 2 3 2\n\n\nOutput\n\n6\n\n\nInput\n\n16\n2 1 3 1 2 1 4 1 1 2 1 1 3 2 4 3\n\n\nOutput\n\n555275958", "grammar": {"answer": null}}
{"name": "16_B. Burglar and Matches", "description": "A burglar got into a matches warehouse and wants to steal as many matches as possible. In the warehouse there are m containers, in the i-th container there are ai matchboxes, and each matchbox contains bi matches. All the matchboxes are of the same size. The burglar's rucksack can hold n matchboxes exactly. Your task is to find out the maximum amount of matches that a burglar can carry away. He has no time to rearrange matches in the matchboxes, that's why he just chooses not more than n matchboxes so that the total amount of matches in them is maximal.\n\nInput\n\nThe first line of the input contains integer n (1 ≤ n ≤ 2·108) and integer m (1 ≤ m ≤ 20). The i + 1-th line contains a pair of numbers ai and bi (1 ≤ ai ≤ 108, 1 ≤ bi ≤ 10). All the input numbers are integer.\n\nOutput\n\nOutput the only number — answer to the problem.\n\nExamples\n\nInput\n\n7 3\n5 10\n2 5\n3 6\n\n\nOutput\n\n62\n\n\nInput\n\n3 3\n1 3\n2 2\n3 1\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "634_B. XOR Equation", "description": "Two positive integers a and b have a sum of s and a bitwise XOR of x. How many possible values are there for the ordered pair (a, b)?\n\nInput\n\nThe first line of the input contains two integers s and x (2 ≤ s ≤ 1012, 0 ≤ x ≤ 1012), the sum and bitwise xor of the pair of positive integers, respectively.\n\nOutput\n\nPrint a single integer, the number of solutions to the given conditions. If no solutions exist, print 0.\n\nExamples\n\nInput\n\n9 5\n\n\nOutput\n\n4\n\n\nInput\n\n3 3\n\n\nOutput\n\n2\n\n\nInput\n\n5 2\n\n\nOutput\n\n0\n\nNote\n\nIn the first sample, we have the following solutions: (2, 7), (3, 6), (6, 3), (7, 2).\n\nIn the second sample, the only solutions are (1, 2) and (2, 1).", "grammar": {"answer": null}}
{"name": "p03810 AtCoder Grand Contest 010 - Decrementing", "description": "There are N integers written on a blackboard. The i-th integer is A_i, and the greatest common divisor of these integers is 1.\n\nTakahashi and Aoki will play a game using these integers. In this game, starting from Takahashi the two player alternately perform the following operation:\n\n* Select one integer on the blackboard that is not less than 2, and subtract 1 from the integer.\n* Then, divide all the integers on the black board by g, where g is the greatest common divisor of the integers written on the blackboard.\n\n\n\nThe player who is left with only 1s on the blackboard and thus cannot perform the operation, loses the game. Assuming that both players play optimally, determine the winner of the game.\n\nConstraints\n\n* 1 ≦ N ≦ 10^5\n* 1 ≦ A_i ≦ 10^9\n* The greatest common divisor of the integers from A_1 through A_N is 1.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 … A_N\n\n\nOutput\n\nIf Takahashi will win, print `First`. If Aoki will win, print `Second`.\n\nExamples\n\nInput\n\n3\n3 6 7\n\n\nOutput\n\nFirst\n\n\nInput\n\n4\n1 2 4 8\n\n\nOutput\n\nFirst\n\n\nInput\n\n5\n7 8 8 8 8\n\n\nOutput\n\nSecond", "grammar": {"answer": null}}
{"name": "454_A. Little Pony and Crystal Mine", "description": "Twilight Sparkle once got a crystal from the Crystal Mine. A crystal of size n (n is odd; n > 1) is an n × n matrix with a diamond inscribed into it.\n\nYou are given an odd integer n. You need to draw a crystal of size n. The diamond cells of the matrix should be represented by character \"D\". All other cells of the matrix should be represented by character \"*\". Look at the examples to understand what you need to draw.\n\nInput\n\nThe only line contains an integer n (3 ≤ n ≤ 101; n is odd). \n\nOutput\n\nOutput a crystal of size n.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n*D*\nDDD\n*D*\n\n\nInput\n\n5\n\n\nOutput\n\n**D**\n*DDD*\nDDDDD\n*DDD*\n**D**\n\n\nInput\n\n7\n\n\nOutput\n\n***D***\n**DDD**\n*DDDDD*\nDDDDDDD\n*DDDDD*\n**DDD**\n***D***", "grammar": {"answer": null}}
{"name": "710_C. Magic Odd Square", "description": "Find an n × n matrix with different numbers from 1 to n2, so the sum in each row, column and both main diagonals are odd.\n\nInput\n\nThe only line contains odd integer n (1 ≤ n ≤ 49).\n\nOutput\n\nPrint n lines with n integers. All the integers should be different and from 1 to n2. The sum in each row, column and both main diagonals should be odd.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n1\n\n\nInput\n\n3\n\n\nOutput\n\n2 1 4\n3 5 7\n6 9 8", "grammar": {"answer": null}}
{"name": "p03809 AtCoder Grand Contest 010 - Cleaning", "description": "There is a tree with N vertices, numbered 1 through N. The i-th of the N-1 edges connects vertices a_i and b_i.\n\nCurrently, there are A_i stones placed on vertex i. Determine whether it is possible to remove all the stones from the vertices by repeatedly performing the following operation:\n\n* Select a pair of different leaves. Then, remove exactly one stone from every vertex on the path between those two vertices. Here, a leaf is a vertex of the tree whose degree is 1, and the selected leaves themselves are also considered as vertices on the path connecting them.\n\n\n\nNote that the operation cannot be performed if there is a vertex with no stone on the path.\n\nConstraints\n\n* 2 ≦ N ≦ 10^5\n* 1 ≦ a_i,b_i ≦ N\n* 0 ≦ A_i ≦ 10^9\n* The given graph is a tree.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 … A_N\na_1 b_1\n:\na_{N-1} b_{N-1}\n\n\nOutput\n\nIf it is possible to remove all the stones from the vertices, print `YES`. Otherwise, print `NO`.\n\nExamples\n\nInput\n\n5\n1 2 1 1 2\n2 4\n5 2\n3 2\n1 3\n\n\nOutput\n\nYES\n\n\nInput\n\n3\n1 2 1\n1 2\n2 3\n\n\nOutput\n\nNO\n\n\nInput\n\n6\n3 2 2 2 2 2\n1 2\n2 3\n1 4\n1 5\n4 6\n\n\nOutput\n\nYES", "grammar": {"answer": null}}
{"name": "p03752 square869120Contest #4 - Buildings are Colorful!", "description": "Input Format\n\n\nN K\na_1 a_2 a_3 ... a_N\n\n\nOutput Format\n\nPrint the minimum cost in one line. In the end put a line break.\n\n\nConstraints\n\n* 1 ≤ K ≤ N ≤ 15\n* 1 ≤ a_i ≤ 10^9\n\n\n\nScoring\n\nSubtask 1 [120 points]\n\n\n* N = K\n\nSubtask 2 [90 points]\n\n\n* N ≤ 5\n* a_i ≤ 7\n\nSubtask 3 [140 points]\n\n\n* There are no additional constraints.\n\nOutput Format\n\nPrint the minimum cost in one line. In the end put a line break.\n\n\nConstraints\n\n* 1 ≤ K ≤ N ≤ 15\n* 1 ≤ a_i ≤ 10^9\n\n\n\nScoring\n\nSubtask 1 [120 points]\n\n\n* N = K\n\nSubtask 2 [90 points]\n\n\n* N ≤ 5\n* a_i ≤ 7\n\nSubtask 3 [140 points]\n\n\n* There are no additional constraints.\n\nInput Format\n\n\nN K\na_1 a_2 a_3 ... a_N\n\nExample\n\nInput\n\n5 5\n3949 3774 3598 3469 3424\n\n\nOutput\n\n1541", "grammar": {"answer": null}}
{"name": "1156_C. Match Points", "description": "You are given a set of points x_1, x_2, ..., x_n on the number line.\n\nTwo points i and j can be matched with each other if the following conditions hold:\n\n  * neither i nor j is matched with any other point; \n  * |x_i - x_j| ≥ z. \n\n\n\nWhat is the maximum number of pairs of points you can match with each other?\n\nInput\n\nThe first line contains two integers n and z (2 ≤ n ≤ 2 ⋅ 10^5, 1 ≤ z ≤ 10^9) — the number of points and the constraint on the distance between matched points, respectively.\n\nThe second line contains n integers x_1, x_2, ..., x_n (1 ≤ x_i ≤ 10^9).\n\nOutput\n\nPrint one integer — the maximum number of pairs of points you can match with each other.\n\nExamples\n\nInput\n\n\n4 2\n1 3 3 7\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n5 5\n10 9 5 8 7\n\n\nOutput\n\n\n1\n\nNote\n\nIn the first example, you may match point 1 with point 2 (|3 - 1| ≥ 2), and point 3 with point 4 (|7 - 3| ≥ 2).\n\nIn the second example, you may match point 1 with point 3 (|5 - 10| ≥ 5).", "grammar": {"answer": null}}
{"name": "p02368 Strongly Connected Components", "description": "A direced graph is strongly connected if every two nodes are reachable from each other. In a strongly connected component of a directed graph, every two nodes of the component are mutually reachable.\n\nConstraints\n\n* 1 ≤ |V| ≤ 10,000\n* 0 ≤ |E| ≤ 30,000\n* 1 ≤ Q ≤ 100,000\n\nInput\n\nA directed graph G(V, E) and a sequence of queries where each query contains a pair of nodes u and v.\n\n\n|V| |E|\ns0 t0\ns1 t1\n:\ns|E|-1 t|E|-1\nQ\nu0 v0\nu1 v1\n:\nuQ-1 vQ-1\n\n\n|V| is the number of nodes and |E| is the number of edges in the graph. The graph nodes are named with the numbers 0, 1,..., |V|-1 respectively.\n\nsi and ti represent source and target nodes of i-th edge (directed).\n\nui and vi represent a pair of nodes given as the i-th query.\n\nOutput\n\nFor each query, pinrt \"1\" if the given nodes belong to the same strongly connected component, \"0\" otherwise.\n\nExample\n\nInput\n\n5 6\n0 1\n1 0\n1 2\n2 4\n4 3\n3 2\n4\n0 1\n0 3\n2 3\n3 4\n\n\nOutput\n\n1\n0\n1\n1", "grammar": {"answer": null}}
{"name": "935_F. Fafa and Array", "description": "Fafa has an array A of n positive integers, the function f(A) is defined as <image>. He wants to do q queries of two types:\n\n  * 1 l r x — find the maximum possible value of f(A), if x is to be added to one element in the range [l, r]. You can choose to which element to add x. \n  * 2 l r x — increase all the elements in the range [l, r] by value x. \n\n\n\nNote that queries of type 1 don't affect the array elements.\n\nInput\n\nThe first line contains one integer n (3 ≤ n ≤ 105) — the length of the array.\n\nThe second line contains n positive integers a1, a2, ..., an (0 < ai ≤ 109) — the array elements.\n\nThe third line contains an integer q (1 ≤ q ≤ 105) — the number of queries. \n\nThen q lines follow, line i describes the i-th query and contains four integers ti li ri xi <image>. \n\nIt is guaranteed that at least one of the queries is of type 1.\n\nOutput\n\nFor each query of type 1, print the answer to the query.\n\nExamples\n\nInput\n\n5\n1 1 1 1 1\n5\n1 2 4 1\n2 2 3 1\n2 4 4 2\n2 3 4 1\n1 3 3 2\n\n\nOutput\n\n2\n8\n\n\nInput\n\n5\n1 2 3 4 5\n4\n1 2 4 2\n2 2 4 1\n2 3 4 1\n1 2 4 2\n\n\nOutput\n\n6\n10", "grammar": {"answer": null}}
{"name": "28_C. Bath Queue", "description": "There are n students living in the campus. Every morning all students wake up at the same time and go to wash. There are m rooms with wash basins. The i-th of these rooms contains ai wash basins. Every student independently select one the rooms with equal probability and goes to it. After all students selected their rooms, students in each room divide into queues by the number of wash basins so that the size of the largest queue is the least possible. Calculate the expected value of the size of the largest queue among all rooms.\n\nInput\n\nThe first line contains two positive integers n and m (1 ≤ n, m ≤ 50) — the amount of students and the amount of rooms. The second line contains m integers a1, a2, ... , am (1 ≤ ai ≤ 50). ai means the amount of wash basins in the i-th room.\n\nOutput\n\nOutput single number: the expected value of the size of the largest queue. Your answer must have an absolute or relative error less than 10 - 9.\n\nExamples\n\nInput\n\n1 1\n2\n\n\nOutput\n\n1.00000000000000000000\n\n\nInput\n\n2 2\n1 1\n\n\nOutput\n\n1.50000000000000000000\n\n\nInput\n\n2 3\n1 1 1\n\n\nOutput\n\n1.33333333333333350000\n\n\nInput\n\n7 5\n1 1 2 3 1\n\n\nOutput\n\n2.50216960000000070000", "grammar": {"answer": null}}
{"name": "p03024 M-SOLUTIONS Programming Contest - Sumo", "description": "Takahashi is competing in a sumo tournament. The tournament lasts for 15 days, during which he performs in one match per day. If he wins 8 or more matches, he can also participate in the next tournament.\n\nThe matches for the first k days have finished. You are given the results of Takahashi's matches as a string S consisting of `o` and `x`. If the i-th character in S is `o`, it means that Takahashi won the match on the i-th day; if that character is `x`, it means that Takahashi lost the match on the i-th day.\n\nPrint `YES` if there is a possibility that Takahashi can participate in the next tournament, and print `NO` if there is no such possibility.\n\nConstraints\n\n* 1 \\leq k \\leq 15\n* S is a string of length k consisting of `o` and `x`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint `YES` if there is a possibility that Takahashi can participate in the next tournament, and print `NO` otherwise.\n\nExamples\n\nInput\n\noxoxoxoxoxoxox\n\n\nOutput\n\nYES\n\n\nInput\n\nxxxxxxxx\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p02734 AtCoder Beginner Contest 159 - Knapsack for All Segments", "description": "Given are a sequence of N integers A_1, A_2, \\ldots, A_N and a positive integer S.\nFor a pair of integers (L, R) such that 1\\leq L \\leq R \\leq N, let us define f(L, R) as follows:\n\n\n* f(L, R) is the number of sequences of integers (x_1, x_2, \\ldots , x_k) such that L \\leq x_1 < x_2 < \\cdots < x_k \\leq R and A_{x_1}+A_{x_2}+\\cdots +A_{x_k} = S.\n\n\n\nFind the sum of f(L, R) over all pairs of integers (L, R) such that 1\\leq L \\leq R\\leq N. Since this sum can be enormous, print it modulo 998244353.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 3000\n* 1 \\leq S \\leq 3000\n* 1 \\leq A_i \\leq 3000\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN S\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the sum of f(L, R), modulo 998244353.\n\nExamples\n\nInput\n\n3 4\n2 2 4\n\n\nOutput\n\n5\n\n\nInput\n\n5 8\n9 9 9 9 9\n\n\nOutput\n\n0\n\n\nInput\n\n10 10\n3 1 4 1 5 9 2 6 5 3\n\n\nOutput\n\n152", "grammar": {"answer": null}}
{"name": "691_D. Swaps in Permutation", "description": "You are given a permutation of the numbers 1, 2, ..., n and m pairs of positions (aj, bj).\n\nAt each step you can choose a pair from the given positions and swap the numbers in that positions. What is the lexicographically maximal permutation one can get?\n\nLet p and q be two permutations of the numbers 1, 2, ..., n. p is lexicographically smaller than the q if a number 1 ≤ i ≤ n exists, so pk = qk for 1 ≤ k < i and pi < qi.\n\nInput\n\nThe first line contains two integers n and m (1 ≤ n, m ≤ 106) — the length of the permutation p and the number of pairs of positions.\n\nThe second line contains n distinct integers pi (1 ≤ pi ≤ n) — the elements of the permutation p.\n\nEach of the last m lines contains two integers (aj, bj) (1 ≤ aj, bj ≤ n) — the pairs of positions to swap. Note that you are given a positions, not the values to swap.\n\nOutput\n\nPrint the only line with n distinct integers p'i (1 ≤ p'i ≤ n) — the lexicographically maximal permutation one can get.\n\nExample\n\nInput\n\n9 6\n1 2 3 4 5 6 7 8 9\n1 4\n4 7\n2 5\n5 8\n3 6\n6 9\n\n\nOutput\n\n7 8 9 4 5 6 1 2 3", "grammar": {"answer": null}}
{"name": "909_F. AND-permutations", "description": "Given an integer N, find two permutations:\n\n  1. Permutation p of numbers from 1 to N such that pi ≠ i and pi & i = 0 for all i = 1, 2, ..., N. \n  2. Permutation q of numbers from 1 to N such that qi ≠ i and qi & i ≠ 0 for all i = 1, 2, ..., N. \n\n\n\n& is the [bitwise AND operation](https://en.wikipedia.org/wiki/Bitwise_operation#AND).\n\nInput\n\nThe input consists of one line containing a single integer N (1 ≤ N ≤ 105).\n\nOutput\n\nFor each subtask, if the required permutation doesn't exist, output a single line containing the word \"NO\"; otherwise output the word \"YES\" in the first line and N elements of the permutation, separated by spaces, in the second line. If there are several possible permutations in a subtask, output any of them.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\nNO\nNO\n\n\nInput\n\n6\n\n\nOutput\n\nYES\n6 5 4 3 2 1 \nYES\n3 6 2 5 1 4", "grammar": {"answer": null}}
{"name": "p01489 IkaNumber", "description": "Example\n\nInput\n\n5\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "166_E. Tetrahedron", "description": "You are given a tetrahedron. Let's mark its vertices with letters A, B, C and D correspondingly.\n\n<image>\n\nAn ant is standing in the vertex D of the tetrahedron. The ant is quite active and he wouldn't stay idle. At each moment of time he makes a step from one vertex to another one along some edge of the tetrahedron. The ant just can't stand on one place.\n\nYou do not have to do much to solve the problem: your task is to count the number of ways in which the ant can go from the initial vertex D to itself in exactly n steps. In other words, you are asked to find out the number of different cyclic paths with the length of n from vertex D to itself. As the number can be quite large, you should print it modulo 1000000007 (109 + 7). \n\nInput\n\nThe first line contains the only integer n (1 ≤ n ≤ 107) — the required length of the cyclic path.\n\nOutput\n\nPrint the only integer — the required number of ways modulo 1000000007 (109 + 7).\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n3\n\n\nInput\n\n4\n\n\nOutput\n\n21\n\nNote\n\nThe required paths in the first sample are: \n\n  * D - A - D\n  * D - B - D\n  * D - C - D", "grammar": {"answer": null}}
{"name": "755_A. PolandBall and Hypothesis", "description": "PolandBall is a young, clever Ball. He is interested in prime numbers. He has stated a following hypothesis: \"There exists such a positive integer n that for each positive integer m number n·m + 1 is a prime number\".\n\nUnfortunately, PolandBall is not experienced yet and doesn't know that his hypothesis is incorrect. Could you prove it wrong? Write a program that finds a counterexample for any n.\n\nInput\n\nThe only number in the input is n (1 ≤ n ≤ 1000) — number from the PolandBall's hypothesis. \n\nOutput\n\nOutput such m that n·m + 1 is not a prime number. Your answer will be considered correct if you output any suitable m such that 1 ≤ m ≤ 103. It is guaranteed the the answer exists.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n1\n\nInput\n\n4\n\n\nOutput\n\n2\n\nNote\n\nA prime number (or a prime) is a natural number greater than 1 that has no positive divisors other than 1 and itself.\n\nFor the first sample testcase, 3·1 + 1 = 4. We can output 1.\n\nIn the second sample testcase, 4·1 + 1 = 5. We cannot output 1 because 5 is prime. However, m = 2 is okay since 4·2 + 1 = 9, which is not a prime number.", "grammar": {"answer": null}}
{"name": "p00991 Grid", "description": "Two coordinates (a1, a2) and (b1, b2) on a two-dimensional grid of r × c are given. The cost of moving from a cell (e, f) to one of the cells (e + 1, f), (e-1, f), (e, f + 1), (e, f-1) is 1. And. You can also move between (e, c-1) and (e, 0), and between (r-1, f) and (0, f) at a cost of 1. At this time, find the number of routes that can be moved from the first coordinate to the second coordinate at the shortest cost.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\nr c a1 a2 b1 b2\n\n\nInput meets the following constraints\n1 ≤ r, c ≤ 1,000\n0 ≤ a1, b1 <r\n0 ≤ a2, b2 <c\n\nOutput\n\nOutput the remainder of the answer value divided by 100,000,007.\n\nExamples\n\nInput\n\n4 4 0 0 3 3\n\n\nOutput\n\n2\n\n\nInput\n\n4 4 0 0 1 1\n\n\nOutput\n\n2\n\n\nInput\n\n2 3 0 0 1 2\n\n\nOutput\n\n4\n\n\nInput\n\n500 500 0 0 200 200\n\n\nOutput\n\n34807775", "grammar": {"answer": null}}
{"name": "p02364 Minimum Spanning Tree", "description": "Find the sum of weights of edges of the Minimum Spanning Tree for a given weighted undirected graph G = (V, E).\n\nConstraints\n\n* 1 ≤ |V| ≤ 10,000\n* 0 ≤ |E| ≤ 100,000\n* 0 ≤ wi ≤ 10,000\n* The graph is connected\n* There are no parallel edges\n* There are no self-loops\n\nInput\n\n\n|V| |E|\ns0 t0 w0\ns1 t1 w1\n:\ns|E|-1 t|E|-1 w|E|-1\n\n\n, where |V| is the number of vertices and |E| is the number of edges in the graph. The graph vertices are named with the numbers 0, 1,..., |V|-1 respectively.\n\nsi and ti represent source and target verticess of i-th edge (undirected) and wi represents the weight of the i-th edge.\n\nOutput\n\nPrint the sum of the weights of the Minimum Spanning Tree.\n\nExamples\n\nInput\n\n4 6\n0 1 2\n1 2 1\n2 3 1\n3 0 1\n0 2 3\n1 3 5\n\n\nOutput\n\n3\n\n\nInput\n\n6 9\n0 1 1\n0 2 3\n1 2 1\n1 3 7\n2 4 1\n1 4 3\n3 4 1\n3 5 1\n4 5 6\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p01998 Prime Number", "description": "problem\n\nOne day, Sosusa, who loves prime numbers, was playing with the pair $ (p, q) $, where $ p + q $ is a prime number. Suddenly, Sosusa wondered how many of these pairs were prime numbers with $ p $ and $ q $ both less than or equal to $ N $. Find the number on your behalf.\n\n\n\noutput\n\nOutput the number of pairs. Also, output a line break at the end.\n\nExample\n\nInput\n\n3\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p03037 AtCoder Beginner Contest 127 - Prison", "description": "We have N ID cards, and there are M gates.\n\nWe can pass the i-th gate if we have one of the following ID cards: the L_i-th, (L_i+1)-th, ..., and R_i-th ID cards.\n\nHow many of the ID cards allow us to pass all the gates alone?\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 10^5\n* 1 \\leq L_i \\leq R_i \\leq N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nL_1 R_1\nL_2 R_2\n\\vdots\nL_M R_M\n\n\nOutput\n\nPrint the number of ID cards that allow us to pass all the gates alone.\n\nExamples\n\nInput\n\n4 2\n1 3\n2 4\n\n\nOutput\n\n2\n\n\nInput\n\n10 3\n3 6\n5 7\n6 9\n\n\nOutput\n\n1\n\n\nInput\n\n100000 1\n1 100000\n\n\nOutput\n\n100000", "grammar": {"answer": null}}
{"name": "p02414 Matrix Multiplication", "description": "Write a program which reads a $n \\times m$ matrix $A$ and a $m \\times l$ matrix $B$, and prints their product, a $n \\times l$ matrix $C$. An element of matrix $C$ is obtained by the following formula:\n\n\\\\[ c_{ij} = \\sum_{k=1}^m a_{ik}b_{kj} \\\\]\n\nwhere $a_{ij}$, $b_{ij}$ and $c_{ij}$ are elements of $A$, $B$ and $C$ respectively.\n\nNote\n\n解説\n\nConstraints\n\n* $1 \\leq n, m, l \\leq 100$\n* $0 \\leq a_{ij}, b_{ij} \\leq 10000$\n\nInput\n\nIn the first line, three integers $n$, $m$ and $l$ are given separated by space characters\n\nIn the following lines, the $n \\times m$ matrix $A$ and the $m \\times l$ matrix $B$ are given.\n\nOutput\n\nPrint elements of the $n \\times l$ matrix $C$ ($c_{ij}$). Print a single space character between adjacent elements.\n\nExample\n\nInput\n\n3 2 3\n1 2\n0 3\n4 5\n1 2 1\n0 3 2\n\n\nOutput\n\n1 8 5\n0 9 6\n4 23 14", "grammar": {"answer": null}}
{"name": "1359_E. Modular Stability", "description": "We define x mod y as the remainder of division of x by y (\\% operator in C++ or Java, mod operator in Pascal).\n\nLet's call an array of positive integers [a_1, a_2, ..., a_k] stable if for every permutation p of integers from 1 to k, and for every non-negative integer x, the following condition is met:\n\n (((x mod a_1) mod a_2) ... mod a_{k - 1}) mod a_k = (((x mod a_{p_1}) mod a_{p_2}) ... mod a_{p_{k - 1}}) mod a_{p_k}  \n\nThat is, for each non-negative integer x, the value of (((x mod a_1) mod a_2) ... mod a_{k - 1}) mod a_k does not change if we reorder the elements of the array a.\n\nFor two given integers n and k, calculate the number of stable arrays [a_1, a_2, ..., a_k] such that 1 ≤ a_1 < a_2 < ... < a_k ≤ n.\n\nInput\n\nThe only line contains two integers n and k (1 ≤ n, k ≤ 5 ⋅ 10^5).\n\nOutput\n\nPrint one integer — the number of stable arrays [a_1, a_2, ..., a_k] such that 1 ≤ a_1 < a_2 < ... < a_k ≤ n. Since the answer may be large, print it modulo 998244353.\n\nExamples\n\nInput\n\n\n7 3\n\n\nOutput\n\n\n16\n\n\nInput\n\n\n3 7\n\n\nOutput\n\n\n0\n\n\nInput\n\n\n1337 42\n\n\nOutput\n\n\n95147305\n\n\nInput\n\n\n1 1\n\n\nOutput\n\n\n1\n\n\nInput\n\n\n500000 1\n\n\nOutput\n\n\n500000", "grammar": {"answer": null}}
{"name": "440_C. One-Based Arithmetic", "description": "Prof. Vasechkin wants to represent positive integer n as a sum of addends, where each addends is an integer number containing only 1s. For example, he can represent 121 as 121=111+11+–1. Help him to find the least number of digits 1 in such sum.\n\nInput\n\nThe first line of the input contains integer n (1 ≤ n < 1015).\n\nOutput\n\nPrint expected minimal number of digits 1.\n\nExamples\n\nInput\n\n121\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p01722 Fast Division", "description": "Ikta loves fast programs. Recently, I'm trying to speed up the division program. However, it doesn't get much faster, so I thought it would be better to make it faster only for \"common sense and typical\" inputs. The problem Ikta is trying to solve is as follows.\n\nFor a given non-negative integer n, divide p (n) − 1-digit positive integer 11 ... 1 by p (n) in decimal notation. However, p (n) represents the smallest prime number larger than 22 {... 2} (n 2). Let p (0) = 2.\n\nYour job is to complete the program faster than Ikta.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\nn\n\n\nGiven the non-negative integer n of the input in question.\n\nConstraints\n\nEach variable being input satisfies the following constraints.\n\n* 0 ≤ n <1000\n\nOutput\n\nPrint the solution to the problem on one line.\n\nExamples\n\nInput\n\n0\n\n\nOutput\n\n1\n\n\nInput\n\n1\n\n\nOutput\n\n2\n\n\nInput\n\n2\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p00333 New Town", "description": "In Aizu prefecture, we decided to create a new town to increase the population. To that end, we decided to cultivate a new rectangular land and divide this land into squares of the same size. The cost of developing this land is proportional to the number of plots, but the prefecture wants to minimize this cost.\n\nCreate a program to find the minimum maintenance cost for all plots, given the east-west and north-south lengths of the newly cultivated land and the maintenance cost per plot.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\nW H C\n\n\nThe input is one line, the length W (1 ≤ W ≤ 1000) in the east-west direction and the length H (1 ≤ H ≤ 1000) in the north-south direction of the newly cultivated land, and the maintenance cost per plot C (1 ≤ 1000). C ≤ 1000) is given as an integer.\n\nOutput\n\nOutput the minimum cost required to maintain the land in one line.\n\nExamples\n\nInput\n\n10 20 5\n\n\nOutput\n\n10\n\n\nInput\n\n27 6 1\n\n\nOutput\n\n18", "grammar": {"answer": null}}
{"name": "p03371 AtCoder Beginner Contest 095 - Half and Half", "description": "\"Pizza At\", a fast food chain, offers three kinds of pizza: \"A-pizza\", \"B-pizza\" and \"AB-pizza\". A-pizza and B-pizza are completely different pizzas, and AB-pizza is one half of A-pizza and one half of B-pizza combined together. The prices of one A-pizza, B-pizza and AB-pizza are A yen, B yen and C yen (yen is the currency of Japan), respectively.\n\nNakahashi needs to prepare X A-pizzas and Y B-pizzas for a party tonight. He can only obtain these pizzas by directly buying A-pizzas and B-pizzas, or buying two AB-pizzas and then rearrange them into one A-pizza and one B-pizza. At least how much money does he need for this? It is fine to have more pizzas than necessary by rearranging pizzas.\n\nConstraints\n\n* 1 ≤ A, B, C ≤ 5000\n* 1 ≤ X, Y ≤ 10^5\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C X Y\n\n\nOutput\n\nPrint the minimum amount of money required to prepare X A-pizzas and Y B-pizzas.\n\nExamples\n\nInput\n\n1500 2000 1600 3 2\n\n\nOutput\n\n7900\n\n\nInput\n\n1500 2000 1900 3 2\n\n\nOutput\n\n8500\n\n\nInput\n\n1500 2000 500 90000 100000\n\n\nOutput\n\n100000000", "grammar": {"answer": null}}
{"name": "429_C. Guess the Tree", "description": "Iahub and Iahubina went to a picnic in a forest full of trees. Less than 5 minutes passed before Iahub remembered of trees from programming. Moreover, he invented a new problem and Iahubina has to solve it, otherwise Iahub won't give her the food. \n\nIahub asks Iahubina: can you build a rooted tree, such that\n\n  * each internal node (a node with at least one son) has at least two sons; \n  * node i has ci nodes in its subtree? \n\n\n\nIahubina has to guess the tree. Being a smart girl, she realized that it's possible no tree can follow Iahub's restrictions. In this way, Iahub will eat all the food. You need to help Iahubina: determine if there's at least one tree following Iahub's restrictions. The required tree must contain n nodes.\n\nInput\n\nThe first line of the input contains integer n (1 ≤ n ≤ 24). Next line contains n positive integers: the i-th number represents ci (1 ≤ ci ≤ n).\n\nOutput\n\nOutput on the first line \"YES\" (without quotes) if there exist at least one tree following Iahub's restrictions, otherwise output \"NO\" (without quotes). \n\nExamples\n\nInput\n\n4\n1 1 1 4\n\n\nOutput\n\nYES\n\nInput\n\n5\n1 1 5 2 1\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p02434 Vector II", "description": "For $n$ dynamic arrays $A_i$ ($i = 0, 1, ..., n-1$), perform a sequence of the following operations:\n\n* pushBack($t$, $x$): Add element $x$ at the end of $A_t$.\n* dump($t$): Print all elements in $A_t$.\n* clear($t$): Clear $A_t$. If $A_t$ is empty, do nothing.\n\n\n\n$A_i$ is a 0-origin array and it is empty in the initial state.\n\nConstraints\n\n* $1 \\leq n \\leq 1,000$\n* $1 \\leq q \\leq 500,000$\n* $-1,000,000,000 \\leq x \\leq 1,000,000,000$\n* The total number of elements printed by dump operations do not exceed 500,000\n\nInput\n\nThe input is given in the following format.\n\n\n$n$ $q$\n$query_1$\n$query_2$\n:\n$query_q$\n\n\nEach query $query_i$ is given by\n\n\n0 $t$ $x$\n\n\nor\n\n\n1 $t$\n\n\nor\n\n\n2 $t$\n\n\nwhere the first digits 0, 1 and 2 represent pushBack, dump and clear operations respectively.\n\nOutput\n\nFor each dump operation, print elements of $A_t$ a line. Separete adjacency elements by a space character (do not print the space after the last element). Note that, if the array is empty, an empty line should be printed.\n\nExample\n\nInput\n\n3 13\n0 0 1\n0 0 2\n0 0 3\n0 1 -1\n0 2 4\n0 2 5\n1 0\n1 1\n1 2\n2 1\n1 0\n1 1\n1 2\n\n\nOutput\n\n1 2 3\n-1\n4 5\n1 2 3\n\n4 5", "grammar": {"answer": null}}
{"name": "p02257 Prime Numbers", "description": "A prime number is a natural number which has exactly two distinct natural number divisors: 1 and itself. For example, the first four prime numbers are: 2, 3, 5 and 7.\n\nWrite a program which reads a list of N integers and prints the number of prime numbers in the list.\n\nConstraints\n\n1 ≤ N ≤ 10000\n\n2 ≤ an element of the list ≤ 108\n\nInput\n\nThe first line contains an integer N, the number of elements in the list.\n\nN numbers are given in the following lines.\n\nOutput\n\nPrint the number of prime numbers in the given list.\n\nExamples\n\nInput\n\n5\n2\n3\n4\n5\n6\n\n\nOutput\n\n3\n\n\nInput\n\n11\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p02960 AtCoder Beginner Contest 135 - Digits Parade", "description": "Given is a string S. Each character in S is either a digit (`0`, ..., `9`) or `?`.\n\nAmong the integers obtained by replacing each occurrence of `?` with a digit, how many have a remainder of 5 when divided by 13? An integer may begin with 0.\n\nSince the answer can be enormous, print the count modulo 10^9+7.\n\nConstraints\n\n* S is a string consisting of digits (`0`, ..., `9`) and `?`.\n* 1 \\leq |S| \\leq 10^5\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the number of integers satisfying the condition, modulo 10^9+7.\n\nExamples\n\nInput\n\n??2??5\n\n\nOutput\n\n768\n\n\nInput\n\n?44\n\n\nOutput\n\n1\n\n\nInput\n\n7?4\n\n\nOutput\n\n0\n\n\nInput\n\n?6?42???8??2??06243????9??3???7258??5??7???????774????4?1??17???9?5?70???76???\n\n\nOutput\n\n153716888", "grammar": {"answer": null}}
{"name": "225_B. Well-known Numbers", "description": "Numbers k-bonacci (k is integer, k > 1) are a generalization of Fibonacci numbers and are determined as follows:\n\n  * F(k, n) = 0, for integer n, 1 ≤ n < k; \n  * F(k, k) = 1; \n  * F(k, n) = F(k, n - 1) + F(k, n - 2) + ... + F(k, n - k), for integer n, n > k. \n\n\n\nNote that we determine the k-bonacci numbers, F(k, n), only for integer values of n and k.\n\nYou've got a number s, represent it as a sum of several (at least two) distinct k-bonacci numbers. \n\nInput\n\nThe first line contains two integers s and k (1 ≤ s, k ≤ 109; k > 1).\n\nOutput\n\nIn the first line print an integer m (m ≥ 2) that shows how many numbers are in the found representation. In the second line print m distinct integers a1, a2, ..., am. Each printed integer should be a k-bonacci number. The sum of printed integers must equal s.\n\nIt is guaranteed that the answer exists. If there are several possible answers, print any of them.\n\nExamples\n\nInput\n\n5 2\n\n\nOutput\n\n3\n0 2 3\n\n\nInput\n\n21 5\n\n\nOutput\n\n3\n4 1 16", "grammar": {"answer": null}}
{"name": "p03683 AtCoder Regular Contest 076 - Reconciled?", "description": "Snuke has N dogs and M monkeys. He wants them to line up in a row.\n\nAs a Japanese saying goes, these dogs and monkeys are on bad terms. (\"ken'en no naka\", literally \"the relationship of dogs and monkeys\", means a relationship of mutual hatred.) Snuke is trying to reconsile them, by arranging the animals so that there are neither two adjacent dogs nor two adjacent monkeys.\n\nHow many such arrangements there are? Find the count modulo 10^9+7 (since animals cannot understand numbers larger than that). Here, dogs and monkeys are both distinguishable. Also, two arrangements that result from reversing each other are distinguished.\n\nConstraints\n\n* 1 ≤ N,M ≤ 10^5\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\n\n\nOutput\n\nPrint the number of possible arrangements, modulo 10^9+7.\n\nExamples\n\nInput\n\n2 2\n\n\nOutput\n\n8\n\n\nInput\n\n3 2\n\n\nOutput\n\n12\n\n\nInput\n\n1 8\n\n\nOutput\n\n0\n\n\nInput\n\n100000 100000\n\n\nOutput\n\n530123477", "grammar": {"answer": null}}
{"name": "373_C. Counting Kangaroos is Fun", "description": "There are n kangaroos with pockets. Each kangaroo has a size (integer number). A kangaroo can go into another kangaroo's pocket if and only if the size of kangaroo who hold the kangaroo is at least twice as large as the size of kangaroo who is held.\n\nEach kangaroo can hold at most one kangaroo, and the kangaroo who is held by another kangaroo cannot hold any kangaroos.\n\nThe kangaroo who is held by another kangaroo cannot be visible from outside. Please, find a plan of holding kangaroos with the minimal number of kangaroos who is visible.\n\nInput\n\nThe first line contains a single integer — n (1 ≤ n ≤ 5·105). Each of the next n lines contains an integer si — the size of the i-th kangaroo (1 ≤ si ≤ 105).\n\nOutput\n\nOutput a single integer — the optimal number of visible kangaroos.\n\nExamples\n\nInput\n\n8\n2\n5\n7\n6\n9\n8\n4\n2\n\n\nOutput\n\n5\n\n\nInput\n\n8\n9\n1\n6\n2\n6\n5\n8\n3\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "49_C. Disposition", "description": "Vasya bought the collected works of a well-known Berland poet Petya in n volumes. The volumes are numbered from 1 to n. He thinks that it does not do to arrange the book simply according to their order. Vasya wants to minimize the number of the disposition’s divisors — the positive integers i such that for at least one j (1 ≤ j ≤ n) is true both: j mod i = 0 and at the same time p(j) mod i = 0, where p(j) is the number of the tome that stands on the j-th place and mod is the operation of taking the division remainder. Naturally, one volume can occupy exactly one place and in one place can stand exactly one volume.\n\nHelp Vasya — find the volume disposition with the minimum number of divisors.\n\nInput\n\nThe first line contains number n (1 ≤ n ≤ 100000) which represents the number of volumes and free places.\n\nOutput\n\nPrint n numbers — the sought disposition with the minimum divisor number. The j-th number (1 ≤ j ≤ n) should be equal to p(j) — the number of tome that stands on the j-th place. If there are several solutions, print any of them.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n2 1 \n\n\nInput\n\n3\n\n\nOutput\n\n1 3 2 ", "grammar": {"answer": null}}
{"name": "219_C. Color Stripe", "description": "A colored stripe is represented by a horizontal row of n square cells, each cell is pained one of k colors. Your task is to repaint the minimum number of cells so that no two neighbouring cells are of the same color. You can use any color from 1 to k to repaint the cells.\n\nInput\n\nThe first input line contains two integers n and k (1 ≤ n ≤ 5·105; 2 ≤ k ≤ 26). The second line contains n uppercase English letters. Letter \"A\" stands for the first color, letter \"B\" stands for the second color and so on. The first k English letters may be used. Each letter represents the color of the corresponding cell of the stripe.\n\nOutput\n\nPrint a single integer — the required minimum number of repaintings. In the second line print any possible variant of the repainted stripe.\n\nExamples\n\nInput\n\n6 3\nABBACC\n\n\nOutput\n\n2\nABCACA\n\n\nInput\n\n3 2\nBBB\n\n\nOutput\n\n1\nBAB", "grammar": {"answer": null}}
{"name": "57_C. Array", "description": "Chris the Rabbit has been interested in arrays ever since he was a child. At the moment he is researching arrays with the length of n, containing only integers from 1 to n. He is not good at math, that's why some simple things drive him crazy. For example, yesterday he grew keen on counting how many different beautiful arrays there are. Chris thinks that an array is beautiful if it meets one of the two conditions: \n\n  * each elements, starting from the second one, is no more than the preceding one \n  * each element, starting from the second one, is no less than the preceding one \n\n\n\nHaving got absolutely mad at himself and at math, Chris came to Stewie and Brian to ask them for help. However, they only laughed at him and said that the answer is too simple and not interesting. Help Chris the Rabbit to find the answer at last.\n\nInput\n\nThe single line contains an integer n which is the size of the array (1 ≤ n ≤ 105).\n\nOutput\n\nYou must print the answer on a single line. As it can be rather long, you should print it modulo 1000000007.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n4\n\n\nInput\n\n3\n\n\nOutput\n\n17", "grammar": {"answer": null}}
{"name": "45_J. Planting Trees", "description": "Vasya is a Greencode wildlife preservation society proponent. One day he found an empty field nobody owned, divided it into n × m squares and decided to plant a forest there. Vasya will plant nm trees of all different heights from 1 to nm. For his forest to look more natural he wants any two trees growing in the side neighbouring squares to have the absolute value of difference in heights to be strictly more than 1. Help Vasya: make the plan of the forest planting for which this condition is fulfilled.\n\nInput\n\nThe first line contains two space-separated integers n and m (1 ≤ n, m ≤ 100) — the number of rows and columns on Vasya's field\n\nOutput\n\nIf there's no solution, print -1. Otherwise, print n lines containing m numbers each — the trees' planting plan. In every square of the plan the height of a tree that should be planted on this square should be written. If there are several solutions to that problem, print any of them.\n\nExamples\n\nInput\n\n2 3\n\n\nOutput\n\n3 6 2\n5 1 4\n\n\nInput\n\n2 1\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p02947 AtCoder Beginner Contest 137 - Green Bin", "description": "We will call a string obtained by arranging the characters contained in a string a in some order, an anagram of a.\n\nFor example, `greenbin` is an anagram of `beginner`. As seen here, when the same character occurs multiple times, that character must be used that number of times.\n\nGiven are N strings s_1, s_2, \\ldots, s_N. Each of these strings has a length of 10 and consists of lowercase English characters. Additionally, all of these strings are distinct. Find the number of pairs of integers i, j (1 \\leq i < j \\leq N) such that s_i is an anagram of s_j.\n\nConstraints\n\n* 2 \\leq N \\leq 10^5\n* s_i is a string of length 10.\n* Each character in s_i is a lowercase English letter.\n* s_1, s_2, \\ldots, s_N are all distinct.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\ns_1\ns_2\n:\ns_N\n\n\nOutput\n\nPrint the number of pairs of integers i, j (1 \\leq i < j \\leq N) such that s_i is an anagram of s_j.\n\nExamples\n\nInput\n\n3\nacornistnt\npeanutbomb\nconstraint\n\n\nOutput\n\n1\n\n\nInput\n\n2\noneplustwo\nninemodsix\n\n\nOutput\n\n0\n\n\nInput\n\n5\nabaaaaaaaa\noneplustwo\naaaaaaaaba\ntwoplusone\naaaabaaaaa\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p02608 AIsing Programming Contest 2020 - XYZ Triplets", "description": "Let f(n) be the number of triples of integers (x,y,z) that satisfy both of the following conditions:\n\n* 1 \\leq x,y,z\n* x^2 + y^2 + z^2 + xy + yz + zx = n\n\n\n\nGiven an integer N, find each of f(1),f(2),f(3),\\ldots,f(N).\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^4\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint N lines. The i-th line should contain the value f(i).\n\nExample\n\nInput\n\n20\n\n\nOutput\n\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n3\n0\n0\n0\n0\n0\n3\n3\n0\n0", "grammar": {"answer": null}}
{"name": "1213_D1. Equalizing by Division (easy version)", "description": "The only difference between easy and hard versions is the number of elements in the array.\n\nYou are given an array a consisting of n integers. In one move you can choose any a_i and divide it by 2 rounding down (in other words, in one move you can set a_i := ⌊(a_i)/(2)⌋).\n\nYou can perform such an operation any (possibly, zero) number of times with any a_i.\n\nYour task is to calculate the minimum possible number of operations required to obtain at least k equal numbers in the array.\n\nDon't forget that it is possible to have a_i = 0 after some operations, thus the answer always exists.\n\nInput\n\nThe first line of the input contains two integers n and k (1 ≤ k ≤ n ≤ 50) — the number of elements in the array and the number of equal numbers required.\n\nThe second line of the input contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ 2 ⋅ 10^5), where a_i is the i-th element of a.\n\nOutput\n\nPrint one integer — the minimum possible number of operations required to obtain at least k equal numbers in the array.\n\nExamples\n\nInput\n\n\n5 3\n1 2 2 4 5\n\n\nOutput\n\n\n1\n\n\nInput\n\n\n5 3\n1 2 3 4 5\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n5 3\n1 2 3 3 3\n\n\nOutput\n\n\n0", "grammar": {"answer": null}}
{"name": "289_B. Polo the Penguin and Matrix", "description": "Little penguin Polo has an n × m matrix, consisting of integers. Let's index the matrix rows from 1 to n from top to bottom and let's index the columns from 1 to m from left to right. Let's represent the matrix element on the intersection of row i and column j as aij.\n\nIn one move the penguin can add or subtract number d from some matrix element. Find the minimum number of moves needed to make all matrix elements equal. If the described plan is impossible to carry out, say so.\n\nInput\n\nThe first line contains three integers n, m and d (1 ≤ n, m ≤ 100, 1 ≤ d ≤ 104) — the matrix sizes and the d parameter. Next n lines contain the matrix: the j-th integer in the i-th row is the matrix element aij (1 ≤ aij ≤ 104).\n\nOutput\n\nIn a single line print a single integer — the minimum number of moves the penguin needs to make all matrix elements equal. If that is impossible, print \"-1\" (without the quotes).\n\nExamples\n\nInput\n\n2 2 2\n2 4\n6 8\n\n\nOutput\n\n4\n\n\nInput\n\n1 2 7\n6 7\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p02436 Queue", "description": "Queue is a container of elements that are inserted and deleted according to FIFO (First In First Out).\n\nFor $n$ queues $Q_i$ ($i = 0, 1, ..., n-1$), perform a sequence of the following operations.\n\n* enqueue($t$, $x$): Insert an integer $x$ to $Q_t$.\n* front($t$): Report the value which should be deleted next from $Q_t$. If $Q_t$ is empty, do nothing.\n* dequeue($t$): Delete an element from $Q_t$. If $Q_t$ is empty, do nothing.\n\n\n\nIn the initial state, all queues are empty.\n\nConstraints\n\n* $1 \\leq n \\leq 1,000$\n* $1 \\leq q \\leq 200,000$\n* $-1,000,000,000 \\leq x \\leq 1,000,000,000$\n\nInput\n\nThe input is given in the following format.\n\n\n$n \\; q$\n$query_1$\n$query_2$\n:\n$query_q$\n\n\nEach query $query_i$ is given by\n\n\n0 $t$ $x$\n\n\nor\n\n\n1 $t$\n\n\nor\n\n\n2 $t$\n\n\nwhere the first digits 0, 1 and 2 represent enqueue, front and dequeue operations respectively.\n\nOutput\n\nFor each front operation, print an integer in a line.\n\nExample\n\nInput\n\n3 9\n0 0 1\n0 0 2\n0 0 3\n0 2 4\n0 2 5\n1 0\n1 2\n2 0\n1 0\n\n\nOutput\n\n1\n4\n2", "grammar": {"answer": null}}
{"name": "361_D. Levko and Array", "description": "Levko has an array that consists of integers: a1, a2, ... , an. But he doesn’t like this array at all.\n\nLevko thinks that the beauty of the array a directly depends on value c(a), which can be calculated by the formula: \n\n<image> The less value c(a) is, the more beautiful the array is.\n\nIt’s time to change the world and Levko is going to change his array for the better. To be exact, Levko wants to change the values of at most k array elements (it is allowed to replace the values by any integers). Of course, the changes should make the array as beautiful as possible.\n\nHelp Levko and calculate what minimum number c(a) he can reach.\n\nInput\n\nThe first line contains two integers n and k (1 ≤ k ≤ n ≤ 2000). The second line contains space-separated integers a1, a2, ... , an ( - 109 ≤ ai ≤ 109).\n\nOutput\n\nA single number — the minimum value of c(a) Levko can get.\n\nExamples\n\nInput\n\n5 2\n4 7 4 7 4\n\n\nOutput\n\n0\n\n\nInput\n\n3 1\n-100 0 100\n\n\nOutput\n\n100\n\n\nInput\n\n6 3\n1 2 3 7 8 9\n\n\nOutput\n\n1\n\nNote\n\nIn the first sample Levko can change the second and fourth elements and get array: 4, 4, 4, 4, 4.\n\nIn the third sample he can get array: 1, 2, 3, 4, 5, 6.", "grammar": {"answer": null}}
{"name": "p02659 AtCoder Beginner Contest 169 - Multiplication 3", "description": "Compute A \\times B, truncate its fractional part, and print the result as an integer.\n\nConstraints\n\n* 0 \\leq A \\leq 10^{15}\n* 0 \\leq B < 10\n* A is an integer.\n* B is a number with two digits after the decimal point.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nPrint the answer as an integer.\n\nExamples\n\nInput\n\n198 1.10\n\n\nOutput\n\n217\n\n\nInput\n\n1 0.01\n\n\nOutput\n\n0\n\n\nInput\n\n1000000000000000 9.99\n\n\nOutput\n\n9990000000000000", "grammar": {"answer": null}}
{"name": "p01830 Delete Files", "description": "Example\n\nInput\n\n3\ny 7\ny 6\nn 5\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "784_C. INTERCALC", "description": "DO YOU EXPECT ME TO FIND THIS OUT?\n\nWHAT BASE AND/XOR LANGUAGE INCLUDES string?\n\nDON'T BYTE OF MORE THAN YOU CAN CHEW\n\nYOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\n\nSAYING \"ABRACADABRA\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\n\nTHE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\n\nI HAVE NO ARRAY AND I MUST SCREAM\n\nELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE\n\nInput\n\nThe first line of input data contains a single integer n (1 ≤ n ≤ 10).\n\nThe second line of input data contains n space-separated integers ai (1 ≤ ai ≤ 11).\n\nOutput\n\nOutput a single integer.\n\nExample\n\nInput\n\n4\n2 5 3 1\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p03173 Educational DP Contest - Slimes", "description": "There are N slimes lining up in a row. Initially, the i-th slime from the left has a size of a_i.\n\nTaro is trying to combine all the slimes into a larger slime. He will perform the following operation repeatedly until there is only one slime:\n\n* Choose two adjacent slimes, and combine them into a new slime. The new slime has a size of x + y, where x and y are the sizes of the slimes before combining them. Here, a cost of x + y is incurred. The positional relationship of the slimes does not change while combining slimes.\n\n\n\nFind the minimum possible total cost incurred.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 400\n* 1 \\leq a_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 \\ldots a_N\n\n\nOutput\n\nPrint the minimum possible total cost incurred.\n\nExamples\n\nInput\n\n4\n10 20 30 40\n\n\nOutput\n\n190\n\n\nInput\n\n5\n10 10 10 10 10\n\n\nOutput\n\n120\n\n\nInput\n\n3\n1000000000 1000000000 1000000000\n\n\nOutput\n\n5000000000\n\n\nInput\n\n6\n7 6 8 6 1 1\n\n\nOutput\n\n68", "grammar": {"answer": null}}
{"name": "p03789 AtCoder Grand Contest 011 - Increasing Numbers", "description": "We will call a non-negative integer increasing if, for any two adjacent digits in its decimal representation, the digit to the right is greater than or equal to the digit to the left. For example, 1558, 11, 3 and 0 are all increasing; 10 and 20170312 are not.\n\nSnuke has an integer N. Find the minimum number of increasing integers that can represent N as their sum.\n\nConstraints\n\n* 1 \\leq N \\leq 10^{500000}\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the minimum number of increasing integers that can represent N as their sum.\n\nExamples\n\nInput\n\n80\n\n\nOutput\n\n2\n\n\nInput\n\n123456789\n\n\nOutput\n\n1\n\n\nInput\n\n20170312\n\n\nOutput\n\n4\n\n\nInput\n\n7204647845201772120166980358816078279571541735614841625060678056933503\n\n\nOutput\n\n31", "grammar": {"answer": null}}
{"name": "487_C. Prefix Product Sequence", "description": "Consider a sequence [a1, a2, ... , an]. Define its prefix product sequence <image>.\n\nNow given n, find a permutation of [1, 2, ..., n], such that its prefix product sequence is a permutation of [0, 1, ..., n - 1].\n\nInput\n\nThe only input line contains an integer n (1 ≤ n ≤ 105).\n\nOutput\n\nIn the first output line, print \"YES\" if such sequence exists, or print \"NO\" if no such sequence exists.\n\nIf any solution exists, you should output n more lines. i-th line contains only an integer ai. The elements of the sequence should be different positive integers no larger than n.\n\nIf there are multiple solutions, you are allowed to print any of them.\n\nExamples\n\nInput\n\n7\n\n\nOutput\n\nYES\n1\n4\n3\n6\n5\n2\n7\n\n\nInput\n\n6\n\n\nOutput\n\nNO\n\nNote\n\nFor the second sample, there are no valid sequences.", "grammar": {"answer": null}}
{"name": "p02296 Distance", "description": "For given two segments s1 and s2, print the distance between them.\n\ns1 is formed by end points p0 and p1, and s2 is formed by end points p2 and p3.\n\nConstraints\n\n* 1 ≤ q ≤ 1000\n* -10000 ≤ xpi, ypi ≤ 10000\n* p0 ≠ p1 and p2 ≠ p3.\n\nInput\n\nThe entire input looks like:\n\n\nq (the number of queries)\n1st query\n2nd query\n...\nqth query\n\n\nEach query consists of integer coordinates of end points of s1 and s2 in the following format:\n\n\nxp0 yp0 xp1 yp1 xp2 yp2 xp3 yp3\n\n\nOutput\n\nFor each query, print the distance. The output values should be in a decimal fraction with an error less than 0.00000001.\n\nExample\n\nInput\n\n3\n0 0 1 0 0 1 1 1\n0 0 1 0 2 1 1 2\n-1 0 1 0 0 1 0 -1\n\n\nOutput\n\n1.0000000000\n1.4142135624\n0.0000000000", "grammar": {"answer": null}}
{"name": "p03042 AtCoder Beginner Contest 126 - YYMM or MMYY", "description": "You have a digit sequence S of length 4. You are wondering which of the following formats S is in:\n\n* YYMM format: the last two digits of the year and the two-digit representation of the month (example: `01` for January), concatenated in this order\n* MMYY format: the two-digit representation of the month and the last two digits of the year, concatenated in this order\n\n\n\nIf S is valid in only YYMM format, print `YYMM`; if S is valid in only MMYY format, print `MMYY`; if S is valid in both formats, print `AMBIGUOUS`; if S is valid in neither format, print `NA`.\n\nConstraints\n\n* S is a digit sequence of length 4.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the specified string: `YYMM`, `MMYY`, `AMBIGUOUS` or `NA`.\n\nExamples\n\nInput\n\n1905\n\n\nOutput\n\nYYMM\n\n\nInput\n\n0112\n\n\nOutput\n\nAMBIGUOUS\n\n\nInput\n\n1700\n\n\nOutput\n\nNA", "grammar": {"answer": null}}
{"name": "p03395 AtCoder Grand Contest 022 - Remainder Game", "description": "Aoki is playing with a sequence of numbers a_{1}, a_{2}, ..., a_{N}. Every second, he performs the following operation :\n\n* Choose a positive integer k. For each element of the sequence v, Aoki may choose to replace v with its remainder when divided by k, or do nothing with v. The cost of this operation is 2^{k} (regardless of how many elements he changes).\n\n\n\nAoki wants to turn the sequence into b_{1}, b_{2}, ..., b_{N} (the order of the elements is important). Determine if it is possible for Aoki to perform this task and if yes, find the minimum cost required.\n\nConstraints\n\n* 1 \\leq N \\leq 50\n* 0 \\leq a_{i}, b_{i} \\leq 50\n* All values in the input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_{1} a_{2} ... a_{N}\nb_{1} b_{2} ... b_{N}\n\n\nOutput\n\nPrint the minimum cost required to turn the original sequence into b_{1}, b_{2}, ..., b_{N}. If the task is impossible, output -1 instead.\n\nExamples\n\nInput\n\n3\n19 10 14\n0 3 4\n\n\nOutput\n\n160\n\n\nInput\n\n3\n19 15 14\n0 0 0\n\n\nOutput\n\n2\n\n\nInput\n\n2\n8 13\n5 13\n\n\nOutput\n\n-1\n\n\nInput\n\n4\n2 0 1 8\n2 0 1 8\n\n\nOutput\n\n0\n\n\nInput\n\n1\n50\n13\n\n\nOutput\n\n137438953472", "grammar": {"answer": null}}
{"name": "p03769 AtCoder Grand Contest 012 - Tautonym Puzzle", "description": "We will call a string x good if it satisfies the following condition:\n\n* Condition: x can be represented as a concatenation of two copies of another string y of length at least 1.\n\n\n\nFor example, `aa` and `bubobubo` are good; an empty string, `a`, `abcabcabc` and `abba` are not good.\n\nEagle and Owl created a puzzle on good strings. Find one string s that satisfies the following conditions. It can be proved that such a string always exists under the constraints in this problem.\n\n* 1 ≤ |s| ≤ 200\n* Each character of s is one of the 100 characters represented by the integers 1 through 100.\n* Among the 2^{|s|} subsequences of s, exactly N are good strings.\n\nConstraints\n\n* 1 ≤ N ≤ 10^{12}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nIn the first line, print |s|, the length of s. In the second line, print the elements in s in order, with spaces in between. Any string that satisfies the above conditions will be accepted.\n\nExamples\n\nInput\n\n7\n\n\nOutput\n\n4\n1 1 1 1\n\n\nInput\n\n299\n\n\nOutput\n\n23\n32 11 11 73 45 8 11 83 83 8 45 32 32 10 100 73 32 83 45 73 32 11 10", "grammar": {"answer": null}}
{"name": "p03172 Educational DP Contest - Candies", "description": "There are N children, numbered 1, 2, \\ldots, N.\n\nThey have decided to share K candies among themselves. Here, for each i (1 \\leq i \\leq N), Child i must receive between 0 and a_i candies (inclusive). Also, no candies should be left over.\n\nFind the number of ways for them to share candies, modulo 10^9 + 7. Here, two ways are said to be different when there exists a child who receives a different number of candies.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 100\n* 0 \\leq K \\leq 10^5\n* 0 \\leq a_i \\leq K\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\na_1 a_2 \\ldots a_N\n\n\nOutput\n\nPrint the number of ways for the children to share candies, modulo 10^9 + 7.\n\nExamples\n\nInput\n\n3 4\n1 2 3\n\n\nOutput\n\n5\n\n\nInput\n\n1 10\n9\n\n\nOutput\n\n0\n\n\nInput\n\n2 0\n0 0\n\n\nOutput\n\n1\n\n\nInput\n\n4 100000\n100000 100000 100000 100000\n\n\nOutput\n\n665683269", "grammar": {"answer": null}}
{"name": "p02290 Projection", "description": "For given three points p1, p2, p, find the projection point x of p onto p1p2.\n\n<image>\n\nConstraints\n\n* 1 ≤ q ≤ 1000\n* -10000 ≤ xi, yi ≤ 10000\n* p1 and p2 are not identical.\n\nInput\n\n\nxp1 yp1 xp2 yp2\nq\nxp0 yp0\nxp1 yp1\n...\nxpq−1 ypq−1\n\n\nIn the first line, integer coordinates of p1 and p2 are given. Then, q queries are given for integer coordinates of p.\n\nOutput\n\nFor each query, print the coordinate of the projection point x. The output values should be in a decimal fraction with an error less than 0.00000001.\n\nExamples\n\nInput\n\n0 0 2 0\n3\n-1 1\n0 1\n1 1\n\n\nOutput\n\n-1.0000000000 0.0000000000\n0.0000000000 0.0000000000\n1.0000000000 0.0000000000\n\n\nInput\n\n0 0 3 4\n1\n2 5\n\n\nOutput\n\n3.1200000000 4.1600000000", "grammar": {"answer": null}}
{"name": "1174_B. Ehab Is an Odd Person", "description": "You're given an array a of length n. You can perform the following operation on it as many times as you want:\n\n  * Pick two integers i and j (1 ≤ i,j ≤ n) such that a_i+a_j is odd, then swap a_i and a_j. \n\n\n\nWhat is lexicographically the smallest array you can obtain?\n\nAn array x is [lexicographically smaller](https://en.wikipedia.org/wiki/Lexicographical_order) than an array y if there exists an index i such that x_i<y_i, and x_j=y_j for all 1 ≤ j < i. Less formally, at the first index i in which they differ, x_i<y_i\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 10^5) — the number of elements in the array a.\n\nThe second line contains n space-separated integers a_1, a_2, …, a_{n} (1 ≤ a_i ≤ 10^9) — the elements of the array a.\n\nOutput\n\nThe only line contains n space-separated integers, the lexicographically smallest array you can obtain.\n\nExamples\n\nInput\n\n\n3\n4 1 7\n\n\nOutput\n\n\n1 4 7 \n\nInput\n\n\n2\n1 1\n\n\nOutput\n\n\n1 1 \n\nNote\n\nIn the first example, we can swap 1 and 4 since 1+4=5, which is odd.", "grammar": {"answer": null}}
{"name": "25_B. Phone numbers", "description": "Phone number in Berland is a sequence of n digits. Often, to make it easier to memorize the number, it is divided into groups of two or three digits. For example, the phone number 1198733 is easier to remember as 11-987-33. Your task is to find for a given phone number any of its divisions into groups of two or three digits.\n\nInput\n\nThe first line contains integer n (2 ≤ n ≤ 100) — amount of digits in the phone number. The second line contains n digits — the phone number to divide into groups.\n\nOutput\n\nOutput any of divisions of the given phone number into groups of two or three digits. Separate groups by single character -. If the answer is not unique, output any.\n\nExamples\n\nInput\n\n6\n549871\n\n\nOutput\n\n54-98-71\n\nInput\n\n7\n1198733\n\n\nOutput\n\n11-987-33", "grammar": {"answer": null}}
{"name": "p03060 AtCoder Beginner Contest 125 - Resale", "description": "There are N gems. The value of the i-th gem is V_i.\n\nYou will choose some of these gems, possibly all or none, and get them.\n\nHowever, you need to pay a cost of C_i to get the i-th gem.\n\nLet X be the sum of the values of the gems obtained, and Y be the sum of the costs paid.\n\nFind the maximum possible value of X-Y.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 20\n* 1 \\leq C_i, V_i \\leq 50\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nV_1 V_2 ... V_N\nC_1 C_2 ... C_N\n\n\nOutput\n\nPrint the maximum possible value of X-Y.\n\nExamples\n\nInput\n\n3\n10 2 5\n6 3 4\n\n\nOutput\n\n5\n\n\nInput\n\n4\n13 21 6 19\n11 30 6 15\n\n\nOutput\n\n6\n\n\nInput\n\n1\n1\n50\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03567 CODE FESTIVAL 2017 qual C - Can you get AC?", "description": "Snuke built an online judge to hold a programming contest.\n\nWhen a program is submitted to the judge, the judge returns a verdict, which is a two-character string that appears in the string S as a contiguous substring. (The judge can return any two-character substring of S.)\n\nDetermine whether the judge can return the string `AC` as the verdict to a program.\n\nConstraints\n\n* 2 \\leq |S| \\leq 5\n* S consists of uppercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nIf the judge can return the string `AC` as a verdict to a program, print `Yes`; if it cannot, print `No`.\n\nExamples\n\nInput\n\nBACD\n\n\nOutput\n\nYes\n\n\nInput\n\nABCD\n\n\nOutput\n\nNo\n\n\nInput\n\nCABD\n\n\nOutput\n\nNo\n\n\nInput\n\nACACA\n\n\nOutput\n\nYes\n\n\nInput\n\nXX\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p02178 Walking", "description": "problem\n\nThere are $ N $ islands numbered from $ 1 $ to $ N $.\nEach island has $ N-1 $ bridges, allowing any $ 2 $ island to move to each other across several bridges.\nEach bridge has durability, and the durability of the $ i $ th bridge given the input is $ w_i $.\nThere are $ 1 $ treasures on each island, and you can pick them up while you're on the island.\n\nYebi, who is currently on the island $ S $, wants to carry all the treasures to the museum on the island $ E $.\nSince yebi has ✝ magical power ✝, every time he visits the island $ v $, the durability of all bridges coming out of $ v $ is reduced by $ T $.\nWhen the durability of the bridge drops below $ 0 $, the bridge collapses and cannot be crossed after that.\nCan yebi deliver all the treasures to the museum?\nHowever, since yebi is powerful, he can carry as many treasures as he wants at the same time.\n\n\n\noutput\n\nOutput \"Yes\" if you can deliver all the treasures to the museum, otherwise output \"No\".\nAlso, output a line break at the end.\n\nExample\n\nInput\n\n4 10 1 4\n1 2 52\n1 3 68\n3 4 45\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "p04034 AtCoder Grand Contest 002 - Box and Ball", "description": "We have N boxes, numbered 1 through N. At first, box 1 contains one red ball, and each of the other boxes contains one white ball.\n\nSnuke will perform the following M operations, one by one. In the i-th operation, he randomly picks one ball from box x_i, then he puts it into box y_i.\n\nFind the number of boxes that may contain the red ball after all operations are performed.\n\nConstraints\n\n* 2≤N≤10^5\n* 1≤M≤10^5\n* 1≤x_i,y_i≤N\n* x_i≠y_i\n* Just before the i-th operation is performed, box x_i contains at least 1 ball.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN M\nx_1 y_1\n:\nx_M y_M\n\n\nOutput\n\nPrint the number of boxes that may contain the red ball after all operations are performed.\n\nExamples\n\nInput\n\n3 2\n1 2\n2 3\n\n\nOutput\n\n2\n\n\nInput\n\n3 3\n1 2\n2 3\n2 3\n\n\nOutput\n\n1\n\n\nInput\n\n4 4\n1 2\n2 3\n4 1\n3 4\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p02294 Intersection", "description": "For given two segments s1 and s2, print \"1\" if they are intersect, \"0\" otherwise.\n\ns1 is formed by end points p0 and p1, and s2 is formed by end points p2 and p3.\n\nConstraints\n\n* 1 ≤ q ≤ 1000\n* -10000 ≤ xpi, ypi ≤ 10000\n* p0 ≠ p1 and p2 ≠ p3.\n\nInput\n\nThe entire input looks like:\n\n\nq (the number of queries)\n1st query\n2nd query\n...\nqth query\n\n\nEach query consists of integer coordinates of end points of s1 and s2 in the following format:\n\n\nxp0 yp0 xp1 yp1 xp2 yp2 xp3 yp3\n\n\nOutput\n\nFor each query, print \"1\" or \"0\".\n\nExample\n\nInput\n\n3\n0 0 3 0 1 1 2 -1\n0 0 3 0 3 1 3 -1\n0 0 3 0 3 -2 5 0\n\n\nOutput\n\n1\n1\n0", "grammar": {"answer": null}}
{"name": "7_D. Palindrome Degree", "description": "String s of length n is called k-palindrome, if it is a palindrome itself, and its prefix and suffix of length <image> are (k - 1)-palindromes. By definition, any string (even empty) is 0-palindrome.\n\nLet's call the palindrome degree of string s such a maximum number k, for which s is k-palindrome. For example, \"abaaba\" has degree equals to 3.\n\nYou are given a string. Your task is to find the sum of the palindrome degrees of all its prefixes.\n\nInput\n\nThe first line of the input data contains a non-empty string, consisting of Latin letters and digits. The length of the string does not exceed 5·106. The string is case-sensitive.\n\nOutput\n\nOutput the only number — the sum of the polindrome degrees of all the string's prefixes.\n\nExamples\n\nInput\n\na2A\n\n\nOutput\n\n1\n\nInput\n\nabacaba\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p00098 Maximum Sum Sequence II", "description": "Matrix of given integers\n\n\na1,1 a1,2 ... a1, n\na2,1 a2,2 ... a2, n\n::\nan, 1 an, 2 ... an, n\n\n\nThen, create a program that outputs the maximum value of the sum of one or more consecutive terms (submatrix) in the vertical and horizontal directions and ends.\n\n\n\nInput\n\nThe input data is given in the following format.\n\n\nn\na1,1 a1,2 ... a1, n\na2,1 a2,2 ... a2, n\n::\nan, 1 an, 2 ... an, n\n\n\nn is 1 or more and 100 or less, and ai, j is -10000 or more and 10000 or less.\n\nOutput\n\nPrint the maximum value on one line.\n\nExamples\n\nInput\n\n3\n1 -2 3\n-4 5 6\n7 8 -9\n\n\nOutput\n\n16\n\n\nInput\n\n4\n1 3 -9 2\n2 7 -1 5\n-8 3 2 -1\n5 0 -3 1\n\n\nOutput\n\n15", "grammar": {"answer": null}}
{"name": "p00342 Maximization of Rational Expression", "description": "N different natural numbers are given. If you select four different ones and set them as $ A $, $ B $, $ C $, $ D $, the following formula\n\n$ \\ Frac {A + B} {C --D} $\n\n\n\nI want to find the maximum value of.\n\n\n\n\nGiven N different natural numbers, choose 4 different from them and create a program to find the maximum value of the above formula.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\nN\na1 a2 ... aN\n\n\nThe number N (4 ≤ N ≤ 1000) of natural numbers is given in the first line. The value ai (1 ≤ ai ≤ 108) of each natural number is given in the second line. However, the same natural number does not appear more than once (ai ≠ aj for i ≠ j).\n\nOutput\n\nOutputs the maximum value of the above formula as a real number for a given N natural numbers. However, the error must not exceed plus or minus 10-5.\n\nExamples\n\nInput\n\n10\n1 2 3 4 5 6 7 8 9 10\n\n\nOutput\n\n19.00000\n\n\nInput\n\n5\n22 100 42 3 86\n\n\nOutput\n\n9.78947\n\n\nInput\n\n6\n15 21 36 10 34 5\n\n\nOutput\n\n18.00000\n\n\nInput\n\n4\n100000 99999 8 1\n\n\nOutput\n\n28571.285714", "grammar": {"answer": null}}
{"name": "p00022 Maximum Sum Sequence", "description": "Given a sequence of numbers a1, a2, a3, ..., an, find the maximum sum of a contiguous subsequence of those numbers. Note that, a subsequence of one element is also a contiquous subsequence.\n\n\n\nInput\n\nThe input consists of multiple datasets. Each data set consists of:\n\n\nn\na1\na2\n.\n.\nan\n\n\nYou can assume that 1 ≤ n ≤ 5000 and -100000 ≤ ai ≤ 100000.\n\nThe input end with a line consisting of a single 0.\n\nOutput\n\nFor each dataset, print the maximum sum in a line.\n\nExample\n\nInput\n\n7\n-5\n-1\n6\n4\n9\n-6\n-7\n13\n1\n2\n3\n2\n-2\n-1\n1\n2\n3\n2\n1\n-2\n1\n3\n1000\n-200\n201\n0\n\n\nOutput\n\n19\n14\n1001", "grammar": {"answer": null}}
{"name": "38_B. Chess", "description": "Two chess pieces, a rook and a knight, stand on a standard chessboard 8 × 8 in size. The positions in which they are situated are known. It is guaranteed that none of them beats the other one.\n\nYour task is to find the number of ways to place another knight on the board so that none of the three pieces on the board beat another one. A new piece can only be placed on an empty square.\n\nInput\n\nThe first input line contains the description of the rook's position on the board. This description is a line which is 2 in length. Its first symbol is a lower-case Latin letter from a to h, and its second symbol is a number from 1 to 8. The second line contains the description of the knight's position in a similar way. It is guaranteed that their positions do not coincide.\n\nOutput\n\nPrint a single number which is the required number of ways.\n\nExamples\n\nInput\n\na1\nb2\n\n\nOutput\n\n44\n\n\nInput\n\na8\nd4\n\n\nOutput\n\n38", "grammar": {"answer": null}}
{"name": "p03877 CODE FESTIVAL 2016 Grand Final - 123 Pairs", "description": "Consider all integers between 1 and 2N, inclusive. Snuke wants to divide these integers into N pairs such that:\n\n* Each integer between 1 and 2N is contained in exactly one of the pairs.\n* In exactly A pairs, the difference between the two integers is 1.\n* In exactly B pairs, the difference between the two integers is 2.\n* In exactly C pairs, the difference between the two integers is 3.\n\n\n\nNote that the constraints guarantee that N = A + B + C, thus no pair can have the difference of 4 or more.\n\nCompute the number of ways to do this, modulo 10^9+7.\n\nConstraints\n\n* 1 ≤ N ≤ 5000\n* 0 ≤ A, B, C\n* A + B + C = N\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN A B C\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3 1 2 0\n\n\nOutput\n\n2\n\n\nInput\n\n600 100 200 300\n\n\nOutput\n\n522158867", "grammar": {"answer": null}}
{"name": "p00789 Square Coins", "description": "People in Silverland use square coins. Not only they have square shapes but also their values are square numbers. Coins with values of all square numbers up to 289 (= 172), i.e., 1-credit coins, 4-credit coins, 9-credit coins, ..., and 289-credit coins, are available in Silverland.\n\nThere are four combinations of coins to pay ten credits:\n\n* ten 1-credit coins,\n* one 4-credit coin and six 1-credit coins,\n* two 4-credit coins and two 1-credit coins, and\n* one 9-credit coin and one 1-credit coin.\n\n\n\nYour mission is to count the number of ways to pay a given amount using coins of Silverland.\n\n\n\nInput\n\nThe input consists of lines each containing an integer meaning an amount to be paid, followed by a line containing a zero. You may assume that all the amounts are positive and less than 300.\n\nOutput\n\nFor each of the given amount, one line containing a single integer representing the number of combinations of coins should be output. No other characters should appear in the output.\n\nExample\n\nInput\n\n2\n10\n30\n0\n\n\nOutput\n\n1\n4\n27", "grammar": {"answer": null}}
{"name": "p03620 AtCoder Grand Contest 019 - Shift and Flip", "description": "You have two strings A = A_1 A_2 ... A_n and B = B_1 B_2 ... B_n of the same length consisting of 0 and 1.\n\nYou can transform A using the following operations in any order and as many times as you want:\n\n* Shift A by one character to the left (i.e., if A = A_1 A_2 ... A_n, replace A with A_2 A_3 ... A_n A_1).\n* Shift A by one character to the right (i.e., if A = A_1 A_2 ... A_n, replace A with A_n A_1 A_2 ... A_{n-1}).\n* Choose any i such that B_i = 1. Flip A_i (i.e., set A_i = 1 - A_i).\n\n\n\nYou goal is to make strings A and B equal.\n\nPrint the smallest number of operations required to achieve this, or -1 if the goal is unreachable.\n\nConstraints\n\n* 1 \\leq |A| = |B| \\leq 2,000\n* A and B consist of 0 and 1.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA\nB\n\n\nOutput\n\nPrint the smallest number of operations required to make strings A and B equal, or -1 if the goal is unreachable.\n\nExamples\n\nInput\n\n1010\n1100\n\n\nOutput\n\n3\n\n\nInput\n\n1\n0\n\n\nOutput\n\n-1\n\n\nInput\n\n11010\n10001\n\n\nOutput\n\n4\n\n\nInput\n\n0100100\n1111111\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "347_D. Lucky Common Subsequence", "description": "In mathematics, a subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements. For example, the sequence BDF is a subsequence of ABCDEF. A substring of a string is a continuous subsequence of the string. For example, BCD is a substring of ABCDEF.\n\nYou are given two strings s1, s2 and another string called virus. Your task is to find the longest common subsequence of s1 and s2, such that it doesn't contain virus as a substring.\n\nInput\n\nThe input contains three strings in three separate lines: s1, s2 and virus (1 ≤ |s1|, |s2|, |virus| ≤ 100). Each string consists only of uppercase English letters.\n\nOutput\n\nOutput the longest common subsequence of s1 and s2 without virus as a substring. If there are multiple answers, any of them will be accepted. \n\nIf there is no valid common subsequence, output 0.\n\nExamples\n\nInput\n\nAJKEQSLOBSROFGZ\nOVGURWZLWVLUXTH\nOZ\n\n\nOutput\n\nORZ\n\n\nInput\n\nAA\nA\nA\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "304_E. Minimum Modular", "description": "You have been given n distinct integers a1, a2, ..., an. You can remove at most k of them. Find the minimum modular m (m > 0), so that for every pair of the remaining integers (ai, aj), the following unequality holds: <image>.\n\nInput\n\nThe first line contains two integers n and k (1 ≤ n ≤ 5000, 0 ≤ k ≤ 4), which we have mentioned above. \n\nThe second line contains n distinct integers a1, a2, ..., an (0 ≤ ai ≤ 106).\n\nOutput\n\nPrint a single positive integer — the minimum m.\n\nExamples\n\nInput\n\n7 0\n0 2 3 6 7 12 18\n\n\nOutput\n\n13\n\n\nInput\n\n7 1\n0 2 3 6 7 12 18\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "p02946 AtCoder Beginner Contest 137 - One Clue", "description": "There are 2000001 stones placed on a number line. The coordinates of these stones are -1000000, -999999, -999998, \\ldots, 999999, 1000000.\n\nAmong them, some K consecutive stones are painted black, and the others are painted white.\n\nAdditionally, we know that the stone at coordinate X is painted black.\n\nPrint all coordinates that potentially contain a stone painted black, in ascending order.\n\nConstraints\n\n* 1 \\leq K \\leq 100\n* 0 \\leq X \\leq 100\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK X\n\n\nOutput\n\nPrint all coordinates that potentially contain a stone painted black, in ascending order, with spaces in between.\n\nExamples\n\nInput\n\n3 7\n\n\nOutput\n\n5 6 7 8 9\n\n\nInput\n\n4 0\n\n\nOutput\n\n-3 -2 -1 0 1 2 3\n\n\nInput\n\n1 100\n\n\nOutput\n\n100", "grammar": {"answer": null}}
{"name": "38_A. Army", "description": "The Berland Armed Forces System consists of n ranks that are numbered using natural numbers from 1 to n, where 1 is the lowest rank and n is the highest rank.\n\nOne needs exactly di years to rise from rank i to rank i + 1. Reaching a certain rank i having not reached all the previous i - 1 ranks is impossible.\n\nVasya has just reached a new rank of a, but he dreams of holding the rank of b. Find for how many more years Vasya should serve in the army until he can finally realize his dream.\n\nInput\n\nThe first input line contains an integer n (2 ≤ n ≤ 100). The second line contains n - 1 integers di (1 ≤ di ≤ 100). The third input line contains two integers a and b (1 ≤ a < b ≤ n). The numbers on the lines are space-separated.\n\nOutput\n\nPrint the single number which is the number of years that Vasya needs to rise from rank a to rank b.\n\nExamples\n\nInput\n\n3\n5 6\n1 2\n\n\nOutput\n\n5\n\n\nInput\n\n3\n5 6\n1 3\n\n\nOutput\n\n11", "grammar": {"answer": null}}
{"name": "171_H. A polyline", "description": "<image>\n\nInput\n\nThe input contains two integers a, b (1 ≤ a ≤ 10, 0 ≤ b ≤ 22·a - 1) separated by a single space.\n\nOutput\n\nOutput two integers separated by a single space.\n\nExamples\n\nInput\n\n1 0\n\n\nOutput\n\n0 0\n\n\nInput\n\n2 15\n\n\nOutput\n\n3 0\n\n\nInput\n\n4 160\n\n\nOutput\n\n12 12", "grammar": {"answer": null}}
{"name": "p01281 Tatami", "description": "A tatami mat, a Japanese traditional floor cover, has a rectangular form with aspect ratio 1:2. When spreading tatami mats on a floor, it is prohibited to make a cross with the border of the tatami mats, because it is believed to bring bad luck.\n\nYour task is to write a program that reports how many possible ways to spread tatami mats of the same size on a floor of given height and width.\n\n\n\nInput\n\nThe input consists of multiple datasets. Each dataset cosists of a line which contains two integers H and W in this order, separated with a single space. H and W are the height and the width of the floor respectively. The length of the shorter edge of a tatami mat is regarded as a unit length.\n\nYou may assume 0 < H, W ≤ 20.\n\nThe last dataset is followed by a line containing two zeros. This line is not a part of any dataset and should not be processed.\n\nOutput\n\nFor each dataset, print the number of possible ways to spread tatami mats in one line.\n\nExample\n\nInput\n\n3 4\n4 4\n0 0\n\n\nOutput\n\n4\n2", "grammar": {"answer": null}}
{"name": "p02293 Parallel/Orthogonal", "description": "For given two lines s1 and s2, print \"2\" if they are parallel, \"1\" if they are orthogonal, or \"0\" otherwise.\n\ns1 crosses points p0 and p1, and s2 crosses points p2 and p3.\n\nConstraints\n\n* 1 ≤ q ≤ 1000\n* -10000 ≤ xpi, ypi ≤ 10000\n* p0 ≠ p1 and p2 ≠ p3.\n\nInput\n\nThe entire input looks like:\n\n\nq (the number of queries)\n1st query\n2nd query\n...\nqth query\n\n\nEach query consists of integer coordinates of the points p0, p1, p2, p3 in the following format:\n\n\nxp0 yp0 xp1 yp1 xp2 yp2 xp3 yp3\n\n\nOutput\n\nFor each query, print \"2\", \"1\" or \"0\".\n\nExample\n\nInput\n\n3\n0 0 3 0 0 2 3 2\n0 0 3 0 1 1 1 4\n0 0 3 0 1 1 2 2\n\n\nOutput\n\n2\n1\n0", "grammar": {"answer": null}}
{"name": "120_C. Winnie-the-Pooh and honey", "description": "As we all know, Winnie-the-Pooh just adores honey. Ones he and the Piglet found out that the Rabbit has recently gotten hold of an impressive amount of this sweet and healthy snack. As you may guess, Winnie and the Piglet asked to come at the Rabbit's place. Thus, there are n jars of honey lined up in front of Winnie-the-Pooh, jar number i contains ai kilos of honey. Winnie-the-Pooh eats the honey like that: each time he chooses a jar containing most honey. If the jar has less that k kilos of honey or if Winnie-the-Pooh has already eaten from it three times, he gives the jar to Piglet. Otherwise he eats exactly k kilos of honey from the jar and puts it back. Winnie does so until he gives all jars to the Piglet. Count how much honey Piglet will overall get after Winnie satisfies his hunger.\n\nInput\n\nThe first line contains two integers n and k (1 ≤ n ≤ 100, 1 ≤ k ≤ 100). The second line contains n integers a1, a2, ..., an, separated by spaces (1 ≤ ai ≤ 100).\n\nOutput\n\nPrint a single number — how many kilos of honey gets Piglet.\n\nExamples\n\nInput\n\n3 3\n15 8 10\n\n\nOutput\n\n9", "grammar": {"answer": null}}
{"name": "236_B. Easy Number Challenge", "description": "Let's denote d(n) as the number of divisors of a positive integer n. You are given three integers a, b and c. Your task is to calculate the following sum:\n\n<image>\n\nFind the sum modulo 1073741824 (230).\n\nInput\n\nThe first line contains three space-separated integers a, b and c (1 ≤ a, b, c ≤ 100).\n\nOutput\n\nPrint a single integer — the required sum modulo 1073741824 (230).\n\nExamples\n\nInput\n\n2 2 2\n\n\nOutput\n\n20\n\n\nInput\n\n5 6 7\n\n\nOutput\n\n1520\n\nNote\n\nFor the first example.\n\n  * d(1·1·1) = d(1) = 1; \n  * d(1·1·2) = d(2) = 2; \n  * d(1·2·1) = d(2) = 2; \n  * d(1·2·2) = d(4) = 3; \n  * d(2·1·1) = d(2) = 2; \n  * d(2·1·2) = d(4) = 3; \n  * d(2·2·1) = d(4) = 3; \n  * d(2·2·2) = d(8) = 4. \n\n\n\nSo the result is 1 + 2 + 2 + 3 + 2 + 3 + 3 + 4 = 20.", "grammar": {"answer": null}}
{"name": "p02366 Articulation Points", "description": "Find articulation points of a given undirected graph G(V, E).\n\nA vertex in an undirected graph is an articulation point (or cut vertex) iff removing it disconnects the graph.\n\nConstraints\n\n* 1 ≤ |V| ≤ 100,000\n* 0 ≤ |E| ≤ 100,000\n* The graph is connected\n* There are no parallel edges\n* There are no self-loops\n\nInput\n\n\n|V| |E|\ns0 t0\ns1 t1\n:\ns|E|-1 t|E|-1\n\n\n, where |V| is the number of vertices and |E| is the number of edges in the graph. The graph vertices are named with the numbers 0, 1,..., |V|-1 respectively.\n\nsi and ti represent source and target verticess of i-th edge (undirected).\n\nOutput\n\nA list of articulation points of the graph G ordered by name.\n\nExamples\n\nInput\n\n4 4\n0 1\n0 2\n1 2\n2 3\n\n\nOutput\n\n2\n\n\nInput\n\n5 4\n0 1\n1 2\n2 3\n3 4\n\n\nOutput\n\n1\n2\n3", "grammar": {"answer": null}}
{"name": "18_C. Stripe", "description": "Once Bob took a paper stripe of n squares (the height of the stripe is 1 square). In each square he wrote an integer number, possibly negative. He became interested in how many ways exist to cut this stripe into two pieces so that the sum of numbers from one piece is equal to the sum of numbers from the other piece, and each piece contains positive integer amount of squares. Would you help Bob solve this problem?\n\nInput\n\nThe first input line contains integer n (1 ≤ n ≤ 105) — amount of squares in the stripe. The second line contains n space-separated numbers — they are the numbers written in the squares of the stripe. These numbers are integer and do not exceed 10000 in absolute value.\n\nOutput\n\nOutput the amount of ways to cut the stripe into two non-empty pieces so that the sum of numbers from one piece is equal to the sum of numbers from the other piece. Don't forget that it's allowed to cut the stripe along the squares' borders only.\n\nExamples\n\nInput\n\n9\n1 5 -6 7 9 -16 0 -2 2\n\n\nOutput\n\n3\n\n\nInput\n\n3\n1 1 1\n\n\nOutput\n\n0\n\n\nInput\n\n2\n0 0\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p01996 Test", "description": "problem\n\n$ M $ students will be tested in a classroom with $ N $ seats in a straight line. Seats are numbered $ 1 \\ dots N $ from the front, and $ 1 $ per seat can seat $ 1 $ students.\n\nNow each student is sitting in the $ A_1, \\ dots, A_M $ seats.\n\nTo start the test, the following conditions must be met:\n\n* $ 1 \\ dots M $ students are sitting in every seat.\n\n\n\nTherefore, we decided to repeat the following operations until the conditions were met.\n\n* Move the student sitting at the back and sit at the front of the vacant seats.\n\n\n\nFind the number of operations required to meet the conditions.\n\n\n\noutput\n\nOutput the number of operations required to meet the conditions. Also, output a line break at the end.\n\nExample\n\nInput\n\n6 4\n1 4 5 6\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02731 AtCoder Beginner Contest 159 - Maximum Volume", "description": "Given is a positive integer L. Find the maximum possible volume of a rectangular cuboid whose sum of the dimensions (not necessarily integers) is L.\n\nConstraints\n\n* 1 ≤ L ≤ 1000\n* L is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nL\n\n\nOutput\n\nPrint the maximum possible volume of a rectangular cuboid whose sum of the dimensions (not necessarily integers) is L. Your output is considered correct if its absolute or relative error from our answer is at most 10^{-6}.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n1.000000000000\n\n\nInput\n\n999\n\n\nOutput\n\n36926037.000000000000", "grammar": {"answer": null}}
{"name": "1442_D. Sum", "description": "You are given n non-decreasing arrays of non-negative numbers. \n\nVasya repeats the following operation k times: \n\n  * Selects a non-empty array. \n  * Puts the first element of the selected array in his pocket. \n  * Removes the first element from the selected array. \n\n\n\nVasya wants to maximize the sum of the elements in his pocket.\n\nInput\n\nThe first line contains two integers n and k (1 ≤ n, k ≤ 3 000): the number of arrays and operations.\n\nEach of the next n lines contain an array. The first integer in each line is t_i (1 ≤ t_i ≤ 10^6): the size of the i-th array. The following t_i integers a_{i, j} (0 ≤ a_{i, 1} ≤ … ≤ a_{i, t_i} ≤ 10^8) are the elements of the i-th array.\n\nIt is guaranteed that k ≤ ∑_{i=1}^n t_i ≤ 10^6.\n\nOutput\n\nPrint one integer: the maximum possible sum of all elements in Vasya's pocket after k operations.\n\nExample\n\nInput\n\n\n3 3\n2 5 10\n3 1 2 3\n2 1 20\n\n\nOutput\n\n\n26", "grammar": {"answer": null}}
{"name": "7_C. Line", "description": "A line on the plane is described by an equation Ax + By + C = 0. You are to find any point on this line, whose coordinates are integer numbers from  - 5·1018 to 5·1018 inclusive, or to find out that such points do not exist.\n\nInput\n\nThe first line contains three integers A, B and C ( - 2·109 ≤ A, B, C ≤ 2·109) — corresponding coefficients of the line equation. It is guaranteed that A2 + B2 > 0.\n\nOutput\n\nIf the required point exists, output its coordinates, otherwise output -1.\n\nExamples\n\nInput\n\n2 5 3\n\n\nOutput\n\n6 -3", "grammar": {"answer": null}}
{"name": "p02780 AtCoder Beginner Contest 154 - Dice in Line", "description": "We have N dice arranged in a line from left to right. The i-th die from the left shows p_i numbers from 1 to p_i with equal probability when thrown.\n\nWe will choose K adjacent dice, throw each of them independently, and compute the sum of the numbers shown. Find the maximum possible value of the expected value of this sum.\n\nConstraints\n\n* 1 ≤ K ≤ N ≤ 200000\n* 1 ≤ p_i ≤ 1000\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\np_1 ... p_N\n\n\nOutput\n\nPrint the maximum possible value of the expected value of the sum of the numbers shown.\n\nYour output will be considered correct when its absolute or relative error from our answer is at most 10^{-6}.\n\nExamples\n\nInput\n\n5 3\n1 2 2 4 5\n\n\nOutput\n\n7.000000000000\n\n\nInput\n\n4 1\n6 6 6 6\n\n\nOutput\n\n3.500000000000\n\n\nInput\n\n10 4\n17 13 13 12 15 20 10 13 17 11\n\n\nOutput\n\n32.000000000000", "grammar": {"answer": null}}
{"name": "1424_J. Lonely Numbers", "description": "In number world, two different numbers are friends if they have a lot in common, but also each one has unique perks.\n\nMore precisely, two different numbers a and b are friends if gcd(a,b), (a)/(gcd(a,b)), (b)/(gcd(a,b)) can form sides of a triangle.\n\nThree numbers a, b and c can form sides of a triangle if a + b > c, b + c > a and c + a > b.\n\nIn a group of numbers, a number is lonely if it doesn't have any friends in that group.\n\nGiven a group of numbers containing all numbers from 1, 2, 3, ..., n, how many numbers in that group are lonely?\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 10^6) - number of test cases.\n\nOn next line there are t numbers, n_i (1 ≤ n_i ≤ 10^6) - meaning that in case i you should solve for numbers 1, 2, 3, ..., n_i.\n\nOutput\n\nFor each test case, print the answer on separate lines: number of lonely numbers in group 1, 2, 3, ..., n_i.\n\nExample\n\nInput\n\n\n3\n1 5 10\n\n\nOutput\n\n\n1\n3\n3\n\nNote\n\nFor first test case, 1 is the only number and therefore lonely.\n\nFor second test case where n=5, numbers 1, 3 and 5 are lonely.\n\nFor third test case where n=10, numbers 1, 5 and 7 are lonely.", "grammar": {"answer": null}}
{"name": "p00602 Fibonacci Sets", "description": "Fibonacci number f(i) appear in a variety of puzzles in nature and math, including packing problems, family trees or Pythagorean triangles. They obey the rule f(i) = f(i - 1) + f(i - 2), where we set f(0) = 1 = f(-1).\n\nLet V and d be two certain positive integers and be N ≡ 1001 a constant. Consider a set of V nodes, each node i having a Fibonacci label F[i] = (f(i) mod N) assigned for i = 1,..., V ≤ N. If |F(i) - F(j)| < d, then the nodes i and j are connected.\n\nGiven V and d, how many connected subsets of nodes will you obtain?\n\n<image>\n\nFigure 1: There are 4 connected subsets for V = 20 and d = 100.\n\nConstraints\n\n* 1 ≤ V ≤ 1000\n* 1 ≤ d ≤ 150\n\nInput\n\nEach data set is defined as one line with two integers as follows:\n\nLine 1: Number of nodes V and the distance d.\n\nInput includes several data sets (i.e., several lines). The number of dat sets is less than or equal to 50.\n\nOutput\n\nOutput line contains one integer - the number of connected subsets - for each input line.\n\nExample\n\nInput\n\n5 5\n50 1\n13 13\n\n\nOutput\n\n2\n50\n8", "grammar": {"answer": null}}
{"name": "346_B. Lucky Common Subsequence", "description": "In mathematics, a subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements. For example, the sequence BDF is a subsequence of ABCDEF. A substring of a string is a continuous subsequence of the string. For example, BCD is a substring of ABCDEF.\n\nYou are given two strings s1, s2 and another string called virus. Your task is to find the longest common subsequence of s1 and s2, such that it doesn't contain virus as a substring.\n\nInput\n\nThe input contains three strings in three separate lines: s1, s2 and virus (1 ≤ |s1|, |s2|, |virus| ≤ 100). Each string consists only of uppercase English letters.\n\nOutput\n\nOutput the longest common subsequence of s1 and s2 without virus as a substring. If there are multiple answers, any of them will be accepted. \n\nIf there is no valid common subsequence, output 0.\n\nExamples\n\nInput\n\nAJKEQSLOBSROFGZ\nOVGURWZLWVLUXTH\nOZ\n\n\nOutput\n\nORZ\n\n\nInput\n\nAA\nA\nA\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03049 diverta 2019 Programming Contest - AB Substrings", "description": "Snuke has N strings. The i-th string is s_i.\n\nLet us concatenate these strings into one string after arranging them in some order. Find the maximum possible number of occurrences of `AB` in the resulting string.\n\nConstraints\n\n* 1 \\leq N \\leq 10^{4}\n* 2 \\leq |s_i| \\leq 10\n* s_i consists of uppercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\ns_1\n\\vdots\ns_N\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3\nABCA\nXBAZ\nBAD\n\n\nOutput\n\n2\n\n\nInput\n\n9\nBEWPVCRWH\nZZNQYIJX\nBAVREA\nPA\nHJMYITEOX\nBCJHMRMNK\nBP\nQVFABZ\nPRGKSPUNA\n\n\nOutput\n\n4\n\n\nInput\n\n7\nRABYBBE\nJOZ\nBMHQUVA\nBPA\nISU\nMCMABAOBHZ\nSZMEHMA\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "946_B. Weird Subtraction Process", "description": "You have two variables a and b. Consider the following sequence of actions performed with these variables:\n\n  1. If a = 0 or b = 0, end the process. Otherwise, go to step 2;\n  2. If a ≥ 2·b, then set the value of a to a - 2·b, and repeat step 1. Otherwise, go to step 3;\n  3. If b ≥ 2·a, then set the value of b to b - 2·a, and repeat step 1. Otherwise, end the process.\n\n\n\nInitially the values of a and b are positive integers, and so the process will be finite.\n\nYou have to determine the values of a and b after the process ends.\n\nInput\n\nThe only line of the input contains two integers n and m (1 ≤ n, m ≤ 1018). n is the initial value of variable a, and m is the initial value of variable b.\n\nOutput\n\nPrint two integers — the values of a and b after the end of the process.\n\nExamples\n\nInput\n\n12 5\n\n\nOutput\n\n0 1\n\n\nInput\n\n31 12\n\n\nOutput\n\n7 12\n\nNote\n\nExplanations to the samples:\n\n  1. a = 12, b = 5 <image> a = 2, b = 5 <image> a = 2, b = 1 <image> a = 0, b = 1;\n  2. a = 31, b = 12 <image> a = 7, b = 12.", "grammar": {"answer": null}}
{"name": "870_F. Paths", "description": "You are given a positive integer n. Let's build a graph on vertices 1, 2, ..., n in such a way that there is an edge between vertices u and v if and only if <image>. Let d(u, v) be the shortest distance between u and v, or 0 if there is no path between them. Compute the sum of values d(u, v) over all 1 ≤ u < v ≤ n.\n\nThe gcd (greatest common divisor) of two positive integers is the maximum positive integer that divides both of the integers.\n\nInput\n\nSingle integer n (1 ≤ n ≤ 107).\n\nOutput\n\nPrint the sum of d(u, v) over all 1 ≤ u < v ≤ n.\n\nExamples\n\nInput\n\n6\n\n\nOutput\n\n8\n\n\nInput\n\n10\n\n\nOutput\n\n44\n\nNote\n\nAll shortest paths in the first example: \n\n  * <image>\n  * <image>\n  * <image>\n  * <image>\n  * <image>\n  * <image>\n\n\n\nThere are no paths between other pairs of vertices.\n\nThe total distance is 2 + 1 + 1 + 2 + 1 + 1 = 8.", "grammar": {"answer": null}}
{"name": "p03262 AtCoder Beginner Contest 109 - Skip", "description": "There are N cities on a number line. The i-th city is located at coordinate x_i.\n\nYour objective is to visit all these cities at least once.\n\nIn order to do so, you will first set a positive integer D.\n\nThen, you will depart from coordinate X and perform Move 1 and Move 2 below, as many times as you like:\n\n* Move 1: travel from coordinate y to coordinate y + D.\n* Move 2: travel from coordinate y to coordinate y - D.\n\n\n\nFind the maximum value of D that enables you to visit all the cities.\n\nHere, to visit a city is to travel to the coordinate where that city is located.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq X \\leq 10^9\n* 1 \\leq x_i \\leq 10^9\n* x_i are all different.\n* x_1, x_2, ..., x_N \\neq X\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN X\nx_1 x_2 ... x_N\n\n\nOutput\n\nPrint the maximum value of D that enables you to visit all the cities.\n\nExamples\n\nInput\n\n3 3\n1 7 11\n\n\nOutput\n\n2\n\n\nInput\n\n3 81\n33 105 57\n\n\nOutput\n\n24\n\n\nInput\n\n1 1\n1000000000\n\n\nOutput\n\n999999999", "grammar": {"answer": null}}
{"name": "379_C. New Year Ratings Change", "description": "One very well-known internet resource site (let's call it X) has come up with a New Year adventure. Specifically, they decided to give ratings to all visitors.\n\nThere are n users on the site, for each user we know the rating value he wants to get as a New Year Present. We know that user i wants to get at least ai rating units as a present.\n\nThe X site is administered by very creative and thrifty people. On the one hand, they want to give distinct ratings and on the other hand, the total sum of the ratings in the present must be as small as possible.\n\nHelp site X cope with the challenging task of rating distribution. Find the optimal distribution.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 3·105) — the number of users on the site. The next line contains integer sequence a1, a2, ..., an (1 ≤ ai ≤ 109).\n\nOutput\n\nPrint a sequence of integers b1, b2, ..., bn. Number bi means that user i gets bi of rating as a present. The printed sequence must meet the problem conditions. \n\nIf there are multiple optimal solutions, print any of them.\n\nExamples\n\nInput\n\n3\n5 1 1\n\n\nOutput\n\n5 1 2\n\n\nInput\n\n1\n1000000000\n\n\nOutput\n\n1000000000", "grammar": {"answer": null}}
{"name": "870_A. Search for Pretty Integers", "description": "You are given two lists of non-zero digits.\n\nLet's call an integer pretty if its (base 10) representation has at least one digit from the first list and at least one digit from the second list. What is the smallest positive pretty integer?\n\nInput\n\nThe first line contains two integers n and m (1 ≤ n, m ≤ 9) — the lengths of the first and the second lists, respectively.\n\nThe second line contains n distinct digits a1, a2, ..., an (1 ≤ ai ≤ 9) — the elements of the first list.\n\nThe third line contains m distinct digits b1, b2, ..., bm (1 ≤ bi ≤ 9) — the elements of the second list.\n\nOutput\n\nPrint the smallest pretty integer.\n\nExamples\n\nInput\n\n2 3\n4 2\n5 7 6\n\n\nOutput\n\n25\n\n\nInput\n\n8 8\n1 2 3 4 5 6 7 8\n8 7 6 5 4 3 2 1\n\n\nOutput\n\n1\n\nNote\n\nIn the first example 25, 46, 24567 are pretty, as well as many other integers. The smallest among them is 25. 42 and 24 are not pretty because they don't have digits from the second list.\n\nIn the second example all integers that have at least one digit different from 9 are pretty. It's obvious that the smallest among them is 1, because it's the smallest positive integer.", "grammar": {"answer": null}}
{"name": "p03607 AtCoder Beginner Contest 073 - Write and Erase", "description": "You are playing the following game with Joisino.\n\n* Initially, you have a blank sheet of paper.\n* Joisino announces a number. If that number is written on the sheet, erase the number from the sheet; if not, write the number on the sheet. This process is repeated N times.\n* Then, you are asked a question: How many numbers are written on the sheet now?\n\n\n\nThe numbers announced by Joisino are given as A_1, ... ,A_N in the order she announces them. How many numbers will be written on the sheet at the end of the game?\n\nConstraints\n\n* 1≤N≤100000\n* 1≤A_i≤1000000000(=10^9)\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1\n:\nA_N\n\n\nOutput\n\nPrint how many numbers will be written on the sheet at the end of the game.\n\nExamples\n\nInput\n\n3\n6\n2\n6\n\n\nOutput\n\n1\n\n\nInput\n\n4\n2\n5\n5\n2\n\n\nOutput\n\n0\n\n\nInput\n\n6\n12\n22\n16\n22\n18\n12\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02943 AtCoder Grand Contest 037 - Reversing and Concatenating", "description": "Takahashi has a string S of length N consisting of lowercase English letters. On this string, he will perform the following operation K times:\n\n* Let T be the string obtained by reversing S, and U be the string obtained by concatenating S and T in this order.\n* Let S' be some contiguous substring of U with length N, and replace S with S'.\n\n\n\nAmong the strings that can be the string S after the K operations, find the lexicographically smallest possible one.\n\nConstraints\n\n* 1 \\leq N \\leq 5000\n* 1 \\leq K \\leq 10^9\n* |S|=N\n* S consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nS\n\n\nOutput\n\nPrint the lexicographically smallest possible string that can be the string S after the K operations.\n\nExamples\n\nInput\n\n5 1\nbacba\n\n\nOutput\n\naabca\n\n\nInput\n\n10 2\nbbaabbbaab\n\n\nOutput\n\naaaabbaabb", "grammar": {"answer": null}}
{"name": "932_B. Recursive Queries", "description": "Let us define two functions f and g on positive integer numbers. \n\n<image>\n\n<image>\n\nYou need to process Q queries. In each query, you will be given three integers l, r and k. You need to print the number of integers x between l and r inclusive, such that g(x) = k. \n\nInput\n\nThe first line of the input contains an integer Q (1 ≤ Q ≤ 2 × 105) representing the number of queries. \n\nQ lines follow, each of which contains 3 integers l, r and k (1 ≤ l ≤ r ≤ 106, 1 ≤ k ≤ 9).\n\nOutput\n\nFor each query, print a single line containing the answer for that query.\n\nExamples\n\nInput\n\n4\n22 73 9\n45 64 6\n47 55 7\n2 62 4\n\n\nOutput\n\n1\n4\n0\n8\n\n\nInput\n\n4\n82 94 6\n56 67 4\n28 59 9\n39 74 4\n\n\nOutput\n\n3\n1\n1\n5\n\nNote\n\nIn the first example:\n\n  * g(33) = 9 as g(33) = g(3 × 3) = g(9) = 9\n  * g(47) = g(48) = g(60) = g(61) = 6\n  * There are no such integers between 47 and 55. \n  * g(4) = g(14) = g(22) = g(27) = g(39) = g(40) = g(41) = g(58) = 4", "grammar": {"answer": null}}
{"name": "p01555 FizzBuzz", "description": "FizzBuzz is a game in which integers of 1 or more are spoken in order according to the following rules.\n\n* \"Fizz\" when divisible by 3\n\n* \"Buzz\" when divisible by 5\n\n* \"FizzBuzz\" when divisible by both 3 and 5\n\n* At other times, that number\n\n\n\n\nAn example of the progress of the game is shown below.\n\n1, 2, Fizz, 4, Buzz, Fizz, 7, 8, Fizz, Buzz, 11, Fizz, 13, 14, FizzBuzz, 16,…\n\nThe character string obtained by combining the obtained remarks into one character string is called FizzBuzz String. Since the index s is given, output 20 characters from the s character of the FizzBuzz String. However, the index may start from 1, and the length of the obtained character string may be sufficiently large (s + 20 or more).\n\nConstraints\n\n* s is an integer\n\n* 1 ≤ s ≤ 1018\n\nInput\n\nInput is given in the following format\n\n> s\n>\n\nOutput\n\nOutput 20 characters from the s character of FizzBuzz String on one line\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n12Fizz4BuzzFizz78Fiz\n\n\nInput\n\n20\n\n\nOutput\n\nzzBuzz11Fizz1314Fizz\n\n\nInput\n\n10000000000\n\n\nOutput\n\n93FizzBuzz1418650796", "grammar": {"answer": null}}
{"name": "p02936 AtCoder Beginner Contest 138 - Ki", "description": "Given is a rooted tree with N vertices numbered 1 to N. The root is Vertex 1, and the i-th edge (1 \\leq i \\leq N - 1) connects Vertex a_i and b_i.\n\nEach of the vertices has a counter installed. Initially, the counters on all the vertices have the value 0.\n\nNow, the following Q operations will be performed:\n\n* Operation j (1 \\leq j \\leq Q): Increment by x_j the counter on every vertex contained in the subtree rooted at Vertex p_j.\n\n\n\nFind the value of the counter on each vertex after all operations.\n\nConstraints\n\n* 2 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq Q \\leq 2 \\times 10^5\n* 1 \\leq a_i < b_i \\leq N\n* 1 \\leq p_j \\leq N\n* 1 \\leq x_j \\leq 10^4\n* The given graph is a tree.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN Q\na_1 b_1\n:\na_{N-1} b_{N-1}\np_1 x_1\n:\np_Q x_Q\n\n\nOutput\n\nPrint the values of the counters on Vertex 1, 2, \\ldots, N after all operations, in this order, with spaces in between.\n\nExamples\n\nInput\n\n4 3\n1 2\n2 3\n2 4\n2 10\n1 100\n3 1\n\n\nOutput\n\n100 110 111 110\n\n\nInput\n\n6 2\n1 2\n1 3\n2 4\n3 6\n2 5\n1 10\n1 10\n\n\nOutput\n\n20 20 20 20 20 20", "grammar": {"answer": null}}
{"name": "37_A. Towers", "description": "Little Vasya has received a young builder’s kit. The kit consists of several wooden bars, the lengths of all of them are known. The bars can be put one on the top of the other if their lengths are the same.\n\nVasya wants to construct the minimal number of towers from the bars. Help Vasya to use the bars in the best way possible.\n\nInput\n\nThe first line contains an integer N (1 ≤ N ≤ 1000) — the number of bars at Vasya’s disposal. The second line contains N space-separated integers li — the lengths of the bars. All the lengths are natural numbers not exceeding 1000.\n\nOutput\n\nIn one line output two numbers — the height of the largest tower and their total number. Remember that Vasya should use all the bars.\n\nExamples\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n1 3\n\n\nInput\n\n4\n6 5 6 7\n\n\nOutput\n\n2 3", "grammar": {"answer": null}}
{"name": "p01016 Password", "description": "Taro had his own personal computer and set a password for login. However, Taro inadvertently forgot the password. Then, remembering that there was a piece of paper with the password written down, Taro found the paper and was surprised to see it. The paper was cut and there were only fragments, and there were some stains that made it unreadable. Taro decided to guess the password by referring to the memo.\n\nConstraints\n\n* The length of the character strings A and B is 1 to 1000 characters.\n* The length of the B string does not exceed the length of the A string.\n\nInput\n\nString A\nString B\n\nOutput\n\nOutput \"Yes\" or \"No\" on one line.\n\nExamples\n\nInput\n\nABCDE\nABC\n\n\nOutput\n\nYes\n\n\nInput\n\nKUSATSU\nKSATSU\n\n\nOutput\n\nNo\n\n\nInput\n\nABCABC\nACBA_B\n\n\nOutput\n\nNo\n\n\nInput\n\nRUPCUAPC\n__PC\n\n\nOutput\n\nYes\n\n\nInput\n\nAIZU\n_A\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p03265 AtCoder Beginner Contest 108 - Ruined Square", "description": "There is a square in the xy-plane. The coordinates of its four vertices are (x_1,y_1),(x_2,y_2),(x_3,y_3) and (x_4,y_4) in counter-clockwise order. (Assume that the positive x-axis points right, and the positive y-axis points up.)\n\nTakahashi remembers (x_1,y_1) and (x_2,y_2), but he has forgot (x_3,y_3) and (x_4,y_4).\n\nGiven x_1,x_2,y_1,y_2, restore x_3,y_3,x_4,y_4. It can be shown that x_3,y_3,x_4 and y_4 uniquely exist and have integer values.\n\nConstraints\n\n* |x_1|,|y_1|,|x_2|,|y_2| \\leq 100\n* (x_1,y_1) ≠ (x_2,y_2)\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nx_1 y_1 x_2 y_2\n\n\nOutput\n\nPrint x_3,y_3,x_4 and y_4 as integers, in this order.\n\nExamples\n\nInput\n\n0 0 0 1\n\n\nOutput\n\n-1 1 -1 0\n\n\nInput\n\n2 3 6 6\n\n\nOutput\n\n3 10 -1 7\n\n\nInput\n\n31 -41 -59 26\n\n\nOutput\n\n-126 -64 -36 -131", "grammar": {"answer": null}}
{"name": "p02714 AtCoder Beginner Contest 162 - RGB Triplets", "description": "We have a string S of length N consisting of `R`, `G`, and `B`.\n\nFind the number of triples (i,~j,~k)~(1 \\leq i < j < k \\leq N) that satisfy both of the following conditions:\n\n* S_i \\neq S_j, S_i \\neq S_k, and S_j \\neq S_k.\n* j - i \\neq k - j.\n\nConstraints\n\n* 1 \\leq N \\leq 4000\n* S is a string of length N consisting of `R`, `G`, and `B`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS\n\n\nOutput\n\nPrint the number of triplets in question.\n\nExamples\n\nInput\n\n4\nRRGB\n\n\nOutput\n\n1\n\n\nInput\n\n39\nRBRBGRBGGBBRRGBBRRRBGGBRBGBRBGBRBBBGBBB\n\n\nOutput\n\n1800", "grammar": {"answer": null}}
{"name": "514_A. Chewbaсca and Number", "description": "Luke Skywalker gave Chewbacca an integer number x. Chewbacca isn't good at numbers but he loves inverting digits in them. Inverting digit t means replacing it with digit 9 - t. \n\nHelp Chewbacca to transform the initial number x to the minimum possible positive number by inverting some (possibly, zero) digits. The decimal representation of the final number shouldn't start with a zero.\n\nInput\n\nThe first line contains a single integer x (1 ≤ x ≤ 1018) — the number that Luke Skywalker gave to Chewbacca.\n\nOutput\n\nPrint the minimum possible positive number that Chewbacca can obtain after inverting some digits. The number shouldn't contain leading zeroes.\n\nExamples\n\nInput\n\n27\n\n\nOutput\n\n22\n\n\nInput\n\n4545\n\n\nOutput\n\n4444", "grammar": {"answer": null}}
{"name": "p03671 AtCoder Beginner Contest 066 - ringring", "description": "Snuke is buying a bicycle. The bicycle of his choice does not come with a bell, so he has to buy one separately.\n\nHe has very high awareness of safety, and decides to buy two bells, one for each hand.\n\nThe store sells three kinds of bells for the price of a, b and c yen (the currency of Japan), respectively. Find the minimum total price of two different bells.\n\nConstraints\n\n* 1 \\leq a,b,c \\leq 10000\n* a, b and c are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\na b c\n\n\nOutput\n\nPrint the minimum total price of two different bells.\n\nExamples\n\nInput\n\n700 600 780\n\n\nOutput\n\n1300\n\n\nInput\n\n10000 10000 10000\n\n\nOutput\n\n20000", "grammar": {"answer": null}}
{"name": "p03147 AtCoder Beginner Contest 116 - Grand Garden", "description": "In a flower bed, there are N flowers, numbered 1,2,......,N. Initially, the heights of all flowers are 0. You are given a sequence h=\\\\{h_1,h_2,h_3,......\\\\} as input. You would like to change the height of Flower k to h_k for all k (1 \\leq k \\leq N), by repeating the following \"watering\" operation:\n\n* Specify integers l and r. Increase the height of Flower x by 1 for all x such that l \\leq x \\leq r.\n\n\n\nFind the minimum number of watering operations required to satisfy the condition.\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* 0 \\leq h_i \\leq 100\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nh_1 h_2 h_3 ...... h_N\n\n\nOutput\n\nPrint the minimum number of watering operations required to satisfy the condition.\n\nExamples\n\nInput\n\n4\n1 2 2 1\n\n\nOutput\n\n2\n\n\nInput\n\n5\n3 1 2 3 1\n\n\nOutput\n\n5\n\n\nInput\n\n8\n4 23 75 0 23 96 50 100\n\n\nOutput\n\n221", "grammar": {"answer": null}}
{"name": "p03994 CODE FESTIVAL 2016 qual A - Next Letter", "description": "Mr. Takahashi has a string s consisting of lowercase English letters. He repeats the following operation on s exactly K times.\n\n* Choose an arbitrary letter on s and change that letter to the next alphabet. Note that the next letter of `z` is `a`.\n\n\n\nFor example, if you perform an operation for the second letter on `aaz`, `aaz` becomes `abz`. If you then perform an operation for the third letter on `abz`, `abz` becomes `aba`.\n\nMr. Takahashi wants to have the lexicographically smallest string after performing exactly K operations on s. Find the such string.\n\nConstraints\n\n* 1≤|s|≤10^5\n* All letters in s are lowercase English letters.\n* 1≤K≤10^9\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\ns\nK\n\n\nOutput\n\nPrint the lexicographically smallest string after performing exactly K operations on s.\n\nExamples\n\nInput\n\nxyz\n4\n\n\nOutput\n\naya\n\n\nInput\n\na\n25\n\n\nOutput\n\nz\n\n\nInput\n\ncodefestival\n100\n\n\nOutput\n\naaaafeaaivap", "grammar": {"answer": null}}
{"name": "p02649 Tokio Marine & Nichido Fire Insurance Programming Contest 2020 - O(rand)", "description": "Given are N pairwise distinct non-negative integers A_1,A_2,\\ldots,A_N. Find the number of ways to choose a set of between 1 and K numbers (inclusive) from the given numbers so that the following two conditions are satisfied:\n\n* The bitwise AND of the chosen numbers is S.\n* The bitwise OR of the chosen numbers is T.\n\nConstraints\n\n* 1 \\leq N \\leq 50\n* 1 \\leq K \\leq N\n* 0 \\leq A_i < 2^{18}\n* 0 \\leq S < 2^{18}\n* 0 \\leq T < 2^{18}\n* A_i \\neq A_j (1 \\leq i < j \\leq N)\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K S T\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3 3 0 3\n1 2 3\n\n\nOutput\n\n2\n\n\nInput\n\n5 3 1 7\n3 4 9 1 5\n\n\nOutput\n\n2\n\n\nInput\n\n5 4 0 15\n3 4 9 1 5\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p03315 AtCoder Beginner Contest 101 - Eating Symbols Easy", "description": "There is always an integer in Takahashi's mind.\n\nInitially, the integer in Takahashi's mind is 0. Takahashi is now going to eat four symbols, each of which is `+` or `-`. When he eats `+`, the integer in his mind increases by 1; when he eats `-`, the integer in his mind decreases by 1.\n\nThe symbols Takahashi is going to eat are given to you as a string S. The i-th character in S is the i-th symbol for him to eat.\n\nFind the integer in Takahashi's mind after he eats all the symbols.\n\nConstraints\n\n* The length of S is 4.\n* Each character in S is `+` or `-`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the integer in Takahashi's mind after he eats all the symbols.\n\nExamples\n\nInput\n\n+-++\n\n\nOutput\n\n2\n\n\nInput\n\n-+--\n\n\nOutput\n\n-2\n\n\nInput\n\n----\n\n\nOutput\n\n-4", "grammar": {"answer": null}}
{"name": "p02202 Gag", "description": "Gag\n\nSegtree has $ N $ of \"gags\", each with a value of $ V_i $.\n\nSegtree decided to publish all the gags in any order.\n\nHere, the \"joy\" you get when you publish the $ i $ th gag to the $ j $ th is expressed as $ V_i --j $.\n\nFind the maximum sum of the \"joy\" you can get.\n\ninput\n\nInput is given from standard input in the following format.\n\n\n$ N $\n$ V_1 $ $ V_2 $ $ \\ ldots $ $ V_N $\n\n\noutput\n\nPlease output the maximum value of the sum of \"joy\". However, the value does not always fit in a 32-bit integer.\n\nInsert a line break at the end.\n\nConstraint\n\n* $ 1 \\ leq N \\ leq 10 ^ 5 $\n* $ 1 \\ leq V_i \\ leq 10 ^ 5 $\n* All inputs are integers.\n\n\n\nInput example 1\n\n\n1\n59549\n\n\nOutput example 1\n\n\n59548\n\n\nInput example 2\n\n\nFive\n2 1 8 5 7\n\n\nOutput example 2\n\n\n8\n\n\n\n\n\n\nExample\n\nInput\n\n1\n59549\n\n\nOutput\n\n59548", "grammar": {"answer": null}}
{"name": "467_C. George and Job", "description": "The new ITone 6 has been released recently and George got really keen to buy it. Unfortunately, he didn't have enough money, so George was going to work as a programmer. Now he faced the following problem at the work.\n\nGiven a sequence of n integers p1, p2, ..., pn. You are to choose k pairs of integers:\n\n[l1, r1], [l2, r2], ..., [lk, rk] (1 ≤ l1 ≤ r1 < l2 ≤ r2 < ... < lk ≤ rk ≤ n; ri - li + 1 = m), \n\nin such a way that the value of sum <image> is maximal possible. Help George to cope with the task.\n\nInput\n\nThe first line contains three integers n, m and k (1 ≤ (m × k) ≤ n ≤ 5000). The second line contains n integers p1, p2, ..., pn (0 ≤ pi ≤ 109).\n\nOutput\n\nPrint an integer in a single line — the maximum possible value of sum.\n\nExamples\n\nInput\n\n5 2 1\n1 2 3 4 5\n\n\nOutput\n\n9\n\n\nInput\n\n7 1 3\n2 10 7 18 5 33 0\n\n\nOutput\n\n61", "grammar": {"answer": null}}
{"name": "p02432 Deque", "description": "For a dynamic array $A = \\\\{a_0, a_1, ...\\\\}$ of integers, perform a sequence of the following operations:\n\n* push($d$, $x$): Add element $x$ at the begining of $A$, if $d = 0$. Add element $x$ at the end of $A$, if $d = 1$.\n* randomAccess($p$): Print element $a_p$.\n* pop($d$): Delete the first element of $A$, if $d = 0$. Delete the last element of $A$, if $d = 1$.\n\n\n\n$A$ is a 0-origin array and it is empty in the initial state.\n\nConstraints\n\n* $1 \\leq q \\leq 400,000$\n* $0 \\leq p < $ the size of $A$\n* $-1,000,000,000 \\leq x \\leq 1,000,000,000$\n\nInput\n\nThe input is given in the following format.\n\n\n$q$\n$query_1$\n$query_2$\n:\n$query_q$\n\n\nEach query $query_i$ is given by\n\n\n0 $d$ $x$\n\n\nor\n\n\n1 $p$\n\n\nor\n\n\n2 $d$\n\n\nwhere the first digits 0, 1 and 2 represent push, randomAccess and pop operations respectively.\n\nrandomAccess and pop operations will not be given for an empty array.\n\nOutput\n\nFor each randomAccess, print $a_p$ in a line.\n\nExample\n\nInput\n\n11\n0 0 1\n0 0 2\n0 1 3\n1 0\n1 1\n1 2\n2 0\n2 1\n0 0 4\n1 0\n1 1\n\n\nOutput\n\n2\n1\n3\n4\n1", "grammar": {"answer": null}}
{"name": "p02757 AtCoder Beginner Contest 158 - Divisible Substring", "description": "Takahashi has a string S of length N consisting of digits from `0` through `9`.\n\nHe loves the prime number P. He wants to know how many non-empty (contiguous) substrings of S - there are N \\times (N + 1) / 2 of them - are divisible by P when regarded as integers written in base ten.\n\nHere substrings starting with a `0` also count, and substrings originated from different positions in S are distinguished, even if they are equal as strings or integers.\n\nCompute this count to help Takahashi.\n\nConstraints\n\n* 1 \\leq N \\leq 2 \\times 10^5\n* S consists of digits.\n* |S| = N\n* 2 \\leq P \\leq 10000\n* P is a prime number.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN P\nS\n\n\nOutput\n\nPrint the number of non-empty (contiguous) substrings of S that are divisible by P when regarded as an integer written in base ten.\n\nExamples\n\nInput\n\n4 3\n3543\n\n\nOutput\n\n6\n\n\nInput\n\n4 2\n2020\n\n\nOutput\n\n10\n\n\nInput\n\n20 11\n33883322005544116655\n\n\nOutput\n\n68", "grammar": {"answer": null}}
{"name": "p02305 Intersection", "description": "For given two circles $c1$ and $c2$, print\n\n\n4\n\n\nif they do not cross (there are 4 common tangent lines),\n\n\n3\n\n\nif they are circumscribed (there are 3 common tangent lines),\n\n\n2\n\n\nif they intersect (there are 2 common tangent lines),\n\n\n1\n\n\nif a circle is inscribed in another (there are 1 common tangent line),\n\n\n0\n\n\nif a circle includes another (there is no common tangent line).\n\nConstraints\n\n* $-1,000 \\leq c1x, c1y, c2x, c2y \\leq 1,000$\n* $1 \\leq c1r, c2r \\leq 1,000$\n* $c1$ and $c2$ are different\n\nInput\n\nCoordinates and radii of $c1$ and $c2$ are given in the following format.\n\n$c1x \\; c1y \\; c1r$\n$c2x \\; c2y \\; c2r$\n\n$c1x$, $c1y$ and $c1r$ represent the center coordinate and radius of the first circle. $c2x$, $c2y$ and $c2r$ represent the center coordinate and radius of the second circle. All input values are given in integers.\n\nOutput\n\nPrint \"4\", \"3\", \"2\", \"1\" or \"0\" in a line.\n\nExamples\n\nInput\n\n1 1 1\n6 2 2\n\n\nOutput\n\n4\n\n\nInput\n\n1 2 1\n4 2 2\n\n\nOutput\n\n3\n\n\nInput\n\n1 2 1\n3 2 2\n\n\nOutput\n\n2\n\n\nInput\n\n0 0 1\n1 0 2\n\n\nOutput\n\n1\n\n\nInput\n\n0 0 1\n0 0 2\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "622_D. Optimal Number Permutation", "description": "You have array a that contains all integers from 1 to n twice. You can arbitrary permute any numbers in a.\n\nLet number i be in positions xi, yi (xi < yi) in the permuted array a. Let's define the value di = yi - xi — the distance between the positions of the number i. Permute the numbers in array a to minimize the value of the sum <image>.\n\nInput\n\nThe only line contains integer n (1 ≤ n ≤ 5·105).\n\nOutput\n\nPrint 2n integers — the permuted array a that minimizes the value of the sum s.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n1 1 2 2\n\n\nInput\n\n1\n\n\nOutput\n\n1 1", "grammar": {"answer": null}}
{"name": "1333_F. Kate and imperfection", "description": "Kate has a set S of n integers \\{1, ..., n\\} . \n\nShe thinks that imperfection of a subset M ⊆ S is equal to the maximum of gcd(a, b) over all pairs (a, b) such that both a and b are in M and a ≠ b. \n\nKate is a very neat girl and for each k ∈ \\{2, ..., n\\} she wants to find a subset that has the smallest imperfection among all subsets in S of size k. There can be more than one subset with the smallest imperfection and the same size, but you don't need to worry about it. Kate wants to find all the subsets herself, but she needs your help to find the smallest possible imperfection for each size k, will name it I_k. \n\nPlease, help Kate to find I_2, I_3, ..., I_n.\n\nInput\n\nThe first and only line in the input consists of only one integer n (2≤ n ≤ 5 ⋅ 10^5) — the size of the given set S.\n\nOutput\n\nOutput contains only one line that includes n - 1 integers: I_2, I_3, ..., I_n.\n\nExamples\n\nInput\n\n\n2\n\n\nOutput\n\n\n1 \n\nInput\n\n\n3\n\n\nOutput\n\n\n1 1 \n\nNote\n\nFirst sample: answer is 1, because gcd(1, 2) = 1.\n\nSecond sample: there are subsets of S with sizes 2, 3 with imperfection equal to 1. For example, \\{2,3\\} and \\{1, 2, 3\\}.", "grammar": {"answer": null}}
{"name": "p02826 AtCoder Grand Contest 041 - Problem Scores", "description": "N problems have been chosen by the judges, now it's time to assign scores to them!\n\nProblem i must get an integer score A_i between 1 and N, inclusive. The problems have already been sorted by difficulty: A_1 \\le A_2 \\le \\ldots \\le A_N must hold. Different problems can have the same score, though.\n\nBeing an ICPC fan, you want contestants who solve more problems to be ranked higher. That's why, for any k (1 \\le k \\le N-1), you want the sum of scores of any k problems to be strictly less than the sum of scores of any k+1 problems.\n\nHow many ways to assign scores do you have? Find this number modulo the given prime M.\n\nConstraints\n\n* 2 \\leq N \\leq 5000\n* 9 \\times 10^8 < M < 10^9\n* M is a prime.\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\n\n\nOutput\n\nPrint the number of ways to assign scores to the problems, modulo M.\n\nExamples\n\nInput\n\n2 998244353\n\n\nOutput\n\n3\n\n\nInput\n\n3 998244353\n\n\nOutput\n\n7\n\n\nInput\n\n6 966666661\n\n\nOutput\n\n66\n\n\nInput\n\n96 925309799\n\n\nOutput\n\n83779", "grammar": {"answer": null}}
{"name": "p03581 CODE FESTIVAL 2017 qual B - Popping Balls", "description": "A + B balls are arranged in a row. The leftmost A balls are colored red, and the rightmost B balls are colored blue.\n\nYou perform the following operation:\n\n* First, you choose two integers s, t such that 1 \\leq s, t \\leq A + B.\n* Then, you repeat the following step A + B times: In each step, you remove the first ball or the s-th ball (if it exists) or the t-th ball (if it exists, all indices are 1-based) from left in the row, and give it to Snuke.\n\n\n\nIn how many ways can you give the balls to Snuke? Compute the answer modulo 10^9 + 7.\n\nHere, we consider two ways to be different if for some k, the k-th ball given to Snuke has different colors. In particular, the choice of s, t doesn't matter. Also, we don't distinguish two balls of the same color.\n\nConstraints\n\n* 1 \\leq A, B \\leq 2000\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3 3\n\n\nOutput\n\n20\n\n\nInput\n\n4 4\n\n\nOutput\n\n67\n\n\nInput\n\n7 9\n\n\nOutput\n\n7772\n\n\nInput\n\n1987 1789\n\n\nOutput\n\n456315553", "grammar": {"answer": null}}
{"name": "1076_B. Divisor Subtraction", "description": "You are given an integer number n. The following algorithm is applied to it:\n\n  1. if n = 0, then end algorithm; \n  2. find the smallest prime divisor d of n; \n  3. subtract d from n and go to step 1. \n\n\n\nDetermine the number of subtrations the algorithm will make.\n\nInput\n\nThe only line contains a single integer n (2 ≤ n ≤ 10^{10}).\n\nOutput\n\nPrint a single integer — the number of subtractions the algorithm will make.\n\nExamples\n\nInput\n\n\n5\n\n\nOutput\n\n\n1\n\n\nInput\n\n\n4\n\n\nOutput\n\n\n2\n\nNote\n\nIn the first example 5 is the smallest prime divisor, thus it gets subtracted right away to make a 0.\n\nIn the second example 2 is the smallest prime divisor at both steps.", "grammar": {"answer": null}}
{"name": "858_A. k-rounding", "description": "For a given positive integer n denote its k-rounding as the minimum positive integer x, such that x ends with k or more zeros in base 10 and is divisible by n.\n\nFor example, 4-rounding of 375 is 375·80 = 30000. 30000 is the minimum integer such that it ends with 4 or more zeros and is divisible by 375.\n\nWrite a program that will perform the k-rounding of n.\n\nInput\n\nThe only line contains two integers n and k (1 ≤ n ≤ 109, 0 ≤ k ≤ 8).\n\nOutput\n\nPrint the k-rounding of n.\n\nExamples\n\nInput\n\n375 4\n\n\nOutput\n\n30000\n\n\nInput\n\n10000 1\n\n\nOutput\n\n10000\n\n\nInput\n\n38101 0\n\n\nOutput\n\n38101\n\n\nInput\n\n123456789 8\n\n\nOutput\n\n12345678900000000", "grammar": {"answer": null}}
{"name": "633_D. Fibonacci-ish", "description": "Yash has recently learnt about the Fibonacci sequence and is very excited about it. He calls a sequence Fibonacci-ish if \n\n  1. the sequence consists of at least two elements \n  2. f0 and f1 are arbitrary \n  3. fn + 2 = fn + 1 + fn for all n ≥ 0. \n\n\n\nYou are given some sequence of integers a1, a2, ..., an. Your task is rearrange elements of this sequence in such a way that its longest possible prefix is Fibonacci-ish sequence.\n\nInput\n\nThe first line of the input contains a single integer n (2 ≤ n ≤ 1000) — the length of the sequence ai.\n\nThe second line contains n integers a1, a2, ..., an (|ai| ≤ 109).\n\nOutput\n\nPrint the length of the longest possible Fibonacci-ish prefix of the given sequence after rearrangement.\n\nExamples\n\nInput\n\n3\n1 2 -1\n\n\nOutput\n\n3\n\n\nInput\n\n5\n28 35 7 14 21\n\n\nOutput\n\n4\n\nNote\n\nIn the first sample, if we rearrange elements of the sequence as  - 1, 2, 1, the whole sequence ai would be Fibonacci-ish.\n\nIn the second sample, the optimal way to rearrange elements is <image>, <image>, <image>, <image>, 28.", "grammar": {"answer": null}}
{"name": "p02451 Binary Search", "description": "For a given sequence $A = \\\\{a_0, a_1, ..., a_{n-1}\\\\}$ which is sorted by ascending order, find a specific value $k$ given as a query.\n\nConstraints\n\n* $1 \\leq n \\leq 100,000$\n* $1 \\leq q \\leq 200,000$\n* $0 \\leq a_0 \\leq a_1 \\leq ... \\leq a_{n-1} \\leq 1,000,000,000$\n* $0 \\leq k_i \\leq 1,000,000,000$\n\nInput\n\nThe input is given in the following format.\n\n\n$n$\n$a_0 \\; a_1 \\; ,..., \\; a_{n-1}$\n$q$\n$k_1$\n$k_2$\n:\n$k_q$\n\n\nThe number of elements $n$ and each element $a_i$ are given in the first line and the second line respectively. In the third line, the number of queries $q$ is given and the following $q$ lines, $q$ integers $k_i$ are given as queries.\n\nOutput\n\nFor each query, print 1 if any element in $A$ is equivalent to $k$, and 0 otherwise.\n\nExample\n\nInput\n\n4\n1 2 2 4\n3\n2\n3\n5\n\n\nOutput\n\n1\n0\n0", "grammar": {"answer": null}}
{"name": "p02953 AtCoder Beginner Contest 136 - Build Stairs", "description": "There are N squares arranged in a row from left to right. The height of the i-th square from the left is H_i.\n\nFor each square, you will perform either of the following operations once:\n\n* Decrease the height of the square by 1.\n* Do nothing.\n\n\n\nDetermine if it is possible to perform the operations so that the heights of the squares are non-decreasing from left to right.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq H_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nH_1 H_2 ... H_N\n\n\nOutput\n\nIf it is possible to perform the operations so that the heights of the squares are non-decreasing from left to right, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n5\n1 2 1 1 3\n\n\nOutput\n\nYes\n\n\nInput\n\n4\n1 3 2 1\n\n\nOutput\n\nNo\n\n\nInput\n\n5\n1 2 3 4 5\n\n\nOutput\n\nYes\n\n\nInput\n\n1\n1000000000\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "p03910 CODE FESTIVAL 2016 Final - Exactly N points", "description": "The problem set at CODE FESTIVAL 20XX Finals consists of N problems.\n\nThe score allocated to the i-th (1≦i≦N) problem is i points.\n\nTakahashi, a contestant, is trying to score exactly N points. For that, he is deciding which problems to solve.\n\nAs problems with higher scores are harder, he wants to minimize the highest score of a problem among the ones solved by him.\n\nDetermine the set of problems that should be solved.\n\nConstraints\n\n* 1≦N≦10^7\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nAmong the sets of problems with the total score of N, find a set in which the highest score of a problem is minimum, then print the indices of the problems in the set in any order, one per line.\n\nIf there exists more than one such set, any of them will be accepted.\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n1\n3\n\n\nInput\n\n7\n\n\nOutput\n\n1\n2\n4\n\n\nInput\n\n1\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p03780 AtCoder Beginner Contest 056 - No Need", "description": "AtCoDeer the deer has N cards with positive integers written on them. The number on the i-th card (1≤i≤N) is a_i. Because he loves big numbers, he calls a subset of the cards good when the sum of the numbers written on the cards in the subset, is K or greater.\n\nThen, for each card i, he judges whether it is unnecessary or not, as follows:\n\n* If, for any good subset of the cards containing card i, the set that can be obtained by eliminating card i from the subset is also good, card i is unnecessary.\n* Otherwise, card i is NOT unnecessary.\n\n\n\nFind the number of the unnecessary cards. Here, he judges each card independently, and he does not throw away cards that turn out to be unnecessary.\n\nConstraints\n\n* All input values are integers.\n* 1≤N≤5000\n* 1≤K≤5000\n* 1≤a_i≤10^9 (1≤i≤N)\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN K\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the number of the unnecessary cards.\n\nExamples\n\nInput\n\n3 6\n1 4 3\n\n\nOutput\n\n1\n\n\nInput\n\n5 400\n3 1 4 1 5\n\n\nOutput\n\n5\n\n\nInput\n\n6 20\n10 4 3 10 25 2\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p02730 AtCoder Beginner Contest 159 - String Palindrome", "description": "A string S of an odd length is said to be a strong palindrome if and only if all of the following conditions are satisfied:\n\n* S is a palindrome.\n* Let N be the length of S. The string formed by the 1-st through ((N-1)/2)-th characters of S is a palindrome.\n* The string consisting of the (N+3)/2-st through N-th characters of S is a palindrome.\n\n\n\nDetermine whether S is a strong palindrome.\n\nConstraints\n\n* S consists of lowercase English letters.\n* The length of S is an odd number between 3 and 99 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nIf S is a strong palindrome, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\nakasaka\n\n\nOutput\n\nYes\n\n\nInput\n\nlevel\n\n\nOutput\n\nNo\n\n\nInput\n\natcoder\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "803_B. Distances to Zero", "description": "You are given the array of integer numbers a0, a1, ..., an - 1. For each element find the distance to the nearest zero (to the element which equals to zero). There is at least one zero element in the given array.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 2·105) — length of the array a. The second line contains integer elements of the array separated by single spaces ( - 109 ≤ ai ≤ 109).\n\nOutput\n\nPrint the sequence d0, d1, ..., dn - 1, where di is the difference of indices between i and nearest j such that aj = 0. It is possible that i = j.\n\nExamples\n\nInput\n\n9\n2 1 0 3 0 0 3 2 4\n\n\nOutput\n\n2 1 0 1 0 0 1 2 3 \n\nInput\n\n5\n0 1 2 3 4\n\n\nOutput\n\n0 1 2 3 4 \n\nInput\n\n7\n5 6 0 1 -2 3 4\n\n\nOutput\n\n2 1 0 1 2 3 4 ", "grammar": {"answer": null}}
{"name": "588_B. Duff in Love", "description": "Duff is in love with lovely numbers! A positive integer x is called lovely if and only if there is no such positive integer a > 1 such that a2 is a divisor of x.\n\n<image>\n\nMalek has a number store! In his store, he has only divisors of positive integer n (and he has all of them). As a birthday present, Malek wants to give her a lovely number from his store. He wants this number to be as big as possible.\n\nMalek always had issues in math, so he asked for your help. Please tell him what is the biggest lovely number in his store.\n\nInput\n\nThe first and only line of input contains one integer, n (1 ≤ n ≤ 1012).\n\nOutput\n\nPrint the answer in one line.\n\nExamples\n\nInput\n\n10\n\n\nOutput\n\n10\n\n\nInput\n\n12\n\n\nOutput\n\n6\n\nNote\n\nIn first sample case, there are numbers 1, 2, 5 and 10 in the shop. 10 isn't divisible by any perfect square, so 10 is lovely.\n\nIn second sample case, there are numbers 1, 2, 3, 4, 6 and 12 in the shop. 12 is divisible by 4 = 22, so 12 is not lovely, while 6 is indeed lovely.", "grammar": {"answer": null}}
{"name": "p04041 AtCoder Regular Contest 058 - Iroha and Haiku", "description": "Haiku is a short form of Japanese poetry. A Haiku consists of three phrases with 5, 7 and 5 syllables, in this order.\n\nIroha is looking for X,Y,Z-Haiku (defined below) in integer sequences.\n\nConsider all integer sequences of length N whose elements are between 1 and 10, inclusive. Out of those 10^N sequences, how many contain an X,Y,Z-Haiku?\n\nHere, an integer sequence a_0, a_1, ..., a_{N-1} is said to contain an X,Y,Z-Haiku if and only if there exist four indices x, y, z, w (0 ≦ x < y < z < w ≦ N) such that all of the following are satisfied:\n\n* a_x + a_{x+1} + ... + a_{y-1} = X\n* a_y + a_{y+1} + ... + a_{z-1} = Y\n* a_z + a_{z+1} + ... + a_{w-1} = Z\n\n\n\nSince the answer can be extremely large, print the number modulo 10^9+7.\n\nConstraints\n\n* 3 ≦ N ≦ 40\n* 1 ≦ X ≦ 5\n* 1 ≦ Y ≦ 7\n* 1 ≦ Z ≦ 5\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN X Y Z\n\n\nOutput\n\nPrint the number of the sequences that contain an X,Y,Z-Haiku, modulo 10^9+7.\n\nExamples\n\nInput\n\n3 5 7 5\n\n\nOutput\n\n1\n\n\nInput\n\n4 5 7 5\n\n\nOutput\n\n34\n\n\nInput\n\n37 4 2 3\n\n\nOutput\n\n863912418\n\n\nInput\n\n40 5 7 5\n\n\nOutput\n\n562805100", "grammar": {"answer": null}}
{"name": "p00045 Sum and Average", "description": "Create a program that reads the sales unit price and sales quantity and outputs the total sales amount and the average sales quantity.\n\n\n\nInput\n\nThe input is given in the following format:\n\n\nSales unit price, sales quantity\nSales unit price, sales quantity\n::\n::\n\n\nA comma-separated pair of unit price and quantity is given across multiple lines. All values ​​entered are greater than or equal to 0 and less than or equal to 1,000, and the number of unit price and quantity pairs does not exceed 100.\n\nOutput\n\nPlease output the total sales amount (integer) on the first line and the average sales quantity (integer) on the second line. If the average sales volume has a fraction (number after the decimal point), round off to the first decimal place.\n\nExample\n\nInput\n\n100,20\n50,10\n70,35\n\n\nOutput\n\n4950\n22", "grammar": {"answer": null}}
{"name": "1342_E. Placing Rooks", "description": "Calculate the number of ways to place n rooks on n × n chessboard so that both following conditions are met:\n\n  * each empty cell is under attack; \n  * exactly k pairs of rooks attack each other. \n\n\n\nAn empty cell is under attack if there is at least one rook in the same row or at least one rook in the same column. Two rooks attack each other if they share the same row or column, and there are no other rooks between them. For example, there are only two pairs of rooks that attack each other in the following picture:\n\n<image> One of the ways to place the rooks for n = 3 and k = 2\n\nTwo ways to place the rooks are considered different if there exists at least one cell which is empty in one of the ways but contains a rook in another way.\n\nThe answer might be large, so print it modulo 998244353.\n\nInput\n\nThe only line of the input contains two integers n and k (1 ≤ n ≤ 200000; 0 ≤ k ≤ (n(n - 1))/(2)).\n\nOutput\n\nPrint one integer — the number of ways to place the rooks, taken modulo 998244353.\n\nExamples\n\nInput\n\n\n3 2\n\n\nOutput\n\n\n6\n\n\nInput\n\n\n3 3\n\n\nOutput\n\n\n0\n\n\nInput\n\n\n4 0\n\n\nOutput\n\n\n24\n\n\nInput\n\n\n1337 42\n\n\nOutput\n\n\n807905441", "grammar": {"answer": null}}
{"name": "p02842 Sumitomo Mitsui Trust Bank Programming Contest 2019 - Tax Rate", "description": "Takahashi bought a piece of apple pie at ABC Confiserie. According to his memory, he paid N yen (the currency of Japan) for it.\n\nThe consumption tax rate for foods in this shop is 8 percent. That is, to buy an apple pie priced at X yen before tax, you have to pay X \\times 1.08 yen (rounded down to the nearest integer).\n\nTakahashi forgot the price of his apple pie before tax, X, and wants to know it again. Write a program that takes N as input and finds X. We assume X is an integer.\n\nIf there are multiple possible values for X, find any one of them. Also, Takahashi's memory of N, the amount he paid, may be incorrect. If no value could be X, report that fact.\n\nConstraints\n\n* 1 \\leq N \\leq 50000\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nIf there are values that could be X, the price of the apple pie before tax, print any one of them.\nIf there are multiple such values, printing any one of them will be accepted.\nIf no value could be X, print `:(`.\n\nExamples\n\nInput\n\n432\n\n\nOutput\n\n400\n\n\nInput\n\n1079\n\n\nOutput\n\n:(\n\n\nInput\n\n1001\n\n\nOutput\n\n927", "grammar": {"answer": null}}
{"name": "p03157 AISing Programming Contest 2019 - Alternating Path", "description": "There is a grid with H rows and W columns, where each square is painted black or white.\n\nYou are given H strings S_1, S_2, ..., S_H, each of length W. If the square at the i-th row from the top and the j-th column from the left is painted black, the j-th character in the string S_i is `#`; if that square is painted white, the j-th character in the string S_i is `.`.\n\nFind the number of pairs of a black square c_1 and a white square c_2 that satisfy the following condition:\n\n* There is a path from the square c_1 to the square c_2 where we repeatedly move to a vertically or horizontally adjacent square through an alternating sequence of black and white squares: black, white, black, white...\n\nConstraints\n\n* 1 \\leq H, W \\leq 400\n* |S_i| = W (1 \\leq i \\leq H)\n* For each i (1 \\leq i \\leq H), the string S_i consists of characters `#` and `.`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH W\nS_1\nS_2\n:\nS_H\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3 3\n.#.\n..#\n#..\n\n\nOutput\n\n10\n\n\nInput\n\n3 3\n.#.\n..#\n..\n\n\nOutput\n\n10\n\n\nInput\n\n2 4\n....\n....\n\n\nOutput\n\n0\n\n\nInput\n\n4 3\n\n\n...\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p02453 Lower Bound", "description": "For a given sequence $A = \\\\{a_0, a_1, ..., a_{n-1}\\\\}$ which is sorted by ascending order, find the lower bound for a specific value $k$ given as a query.\n\n* lower bound: the place pointing to the first element greater than or equal to a specific value, or $n$ if there is no such element.\n\nConstraints\n\n* $1 \\leq n \\leq 100,000$\n* $1 \\leq q \\leq 200,000$\n* $0 \\leq a_0 \\leq a_1 \\leq ... \\leq a_{n-1} \\leq 1,000,000,000$\n* $0 \\leq k_i \\leq 1,000,000,000$\n\nInput\n\nThe input is given in the following format.\n\n\n$n$\n$a_0 \\; a_1 \\; ,..., \\; a_{n-1}$\n$q$\n$k_1$\n$k_2$\n:\n$k_q$\n\n\nThe number of elements $n$ and each element $a_i$ are given in the first line and the second line respectively. In the third line, the number of queries $q$ is given and the following $q$ lines, $q$ integers $k_i$ are given as queries.\n\nOutput\n\nFor each query, print the position $i$ ($i = 0, 1, ..., n$) of the lower bound in a line.\n\nExample\n\nInput\n\n4\n1 2 2 4\n3\n2\n3\n5\n\n\nOutput\n\n1\n3\n4", "grammar": {"answer": null}}
{"name": "p00065 Trading", "description": "There is data that records the customer number of the business partner and the trading date on a monthly basis. Please create a program that reads this month's data and last month's data and outputs the customer number of the company with which you have transactions and the number of transactions for two consecutive months from last month. However, the number of monthly business partners is 1,000 or less.\n\n\n\nInput\n\nThis month's data and last month's data are given separated by one blank line. Each data is given in the following format.\n\n\nc1, d1\nc2, d2\n...\n...\n\n\nci (1 ≤ ci ≤ 1,000) is an integer representing the customer number, and di (1 ≤ di ≤ 31) is an integer representing the trading day.\n\nOutput\n\nFor companies that have transactions for two consecutive months, the customer number and the total number of transactions are output separated by a blank in ascending order of customer number.\n\nExample\n\nInput\n\n123,10\n56,12\n34,14\n\n123,3\n56,4\n123,5\n\n\nOutput\n\n56 2\n123 3", "grammar": {"answer": null}}
{"name": "p02840 AtCoder Beginner Contest 147 - Sum Difference", "description": "We have an integer sequence A of length N, where A_1 = X, A_{i+1} = A_i + D (1 \\leq i < N ) holds.\n\nTakahashi will take some (possibly all or none) of the elements in this sequence, and Aoki will take all of the others.\n\nLet S and T be the sum of the numbers taken by Takahashi and Aoki, respectively. How many possible values of S - T are there?\n\nConstraints\n\n* -10^8 \\leq X, D \\leq 10^8\n* 1 \\leq N \\leq 2 \\times 10^5\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN X D\n\n\nOutput\n\nPrint the number of possible values of S - T.\n\nExamples\n\nInput\n\n3 4 2\n\n\nOutput\n\n8\n\n\nInput\n\n2 3 -3\n\n\nOutput\n\n2\n\n\nInput\n\n100 14 20\n\n\nOutput\n\n49805", "grammar": {"answer": null}}
{"name": "837_D. Round Subset", "description": "Let's call the roundness of the number the number of zeros to which it ends.\n\nYou have an array of n numbers. You need to choose a subset of exactly k numbers so that the roundness of the product of the selected numbers will be maximum possible.\n\nInput\n\nThe first line contains two integer numbers n and k (1 ≤ n ≤ 200, 1 ≤ k ≤ n).\n\nThe second line contains n space-separated integer numbers a1, a2, ..., an (1 ≤ ai ≤ 1018).\n\nOutput\n\nPrint maximal roundness of product of the chosen subset of length k.\n\nExamples\n\nInput\n\n3 2\n50 4 20\n\n\nOutput\n\n3\n\n\nInput\n\n5 3\n15 16 3 25 9\n\n\nOutput\n\n3\n\n\nInput\n\n3 3\n9 77 13\n\n\nOutput\n\n0\n\nNote\n\nIn the first example there are 3 subsets of 2 numbers. [50, 4] has product 200 with roundness 2, [4, 20] — product 80, roundness 1, [50, 20] — product 1000, roundness 3.\n\nIn the second example subset [15, 16, 25] has product 6000, roundness 3.\n\nIn the third example all subsets has product with roundness 0.", "grammar": {"answer": null}}
{"name": "p02785 AtCoder Beginner Contest 153 - Fennec vs Monster", "description": "Fennec is fighting with N monsters.\n\nThe health of the i-th monster is H_i.\n\nFennec can do the following two actions:\n\n* Attack: Fennec chooses one monster. That monster's health will decrease by 1.\n* Special Move: Fennec chooses one monster. That monster's health will become 0.\n\n\n\nThere is no way other than Attack and Special Move to decrease the monsters' health.\n\nFennec wins when all the monsters' healths become 0 or below.\n\nFind the minimum number of times Fennec needs to do Attack (not counting Special Move) before winning when she can use Special Move at most K times.\n\nConstraints\n\n* 1 \\leq N \\leq 2 \\times 10^5\n* 0 \\leq K \\leq 2 \\times 10^5\n* 1 \\leq H_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nH_1 ... H_N\n\n\nOutput\n\nPrint the minimum number of times Fennec needs to do Attack (not counting Special Move) before winning.\n\nExamples\n\nInput\n\n3 1\n4 1 5\n\n\nOutput\n\n5\n\n\nInput\n\n8 9\n7 9 3 2 3 8 4 6\n\n\nOutput\n\n0\n\n\nInput\n\n3 0\n1000000000 1000000000 1000000000\n\n\nOutput\n\n3000000000", "grammar": {"answer": null}}
{"name": "p03691 AtCoder Grand Contest 016 - Poor Turkeys", "description": "There are N turkeys. We number them from 1 through N.\n\nM men will visit here one by one. The i-th man to visit will take the following action:\n\n* If both turkeys x_i and y_i are alive: selects one of them with equal probability, then eats it.\n* If either turkey x_i or y_i is alive (but not both): eats the alive one.\n* If neither turkey x_i nor y_i is alive: does nothing.\n\n\n\nFind the number of pairs (i,\\ j) (1 ≤ i < j ≤ N) such that the following condition is held:\n\n* The probability of both turkeys i and j being alive after all the men took actions, is greater than 0.\n\nConstraints\n\n* 2 ≤ N ≤ 400\n* 1 ≤ M ≤ 10^5\n* 1 ≤ x_i < y_i ≤ N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nx_1 y_1\nx_2 y_2\n:\nx_M y_M\n\n\nOutput\n\nPrint the number of pairs (i,\\ j) (1 ≤ i < j ≤ N) such that the condition is held.\n\nExamples\n\nInput\n\n3 1\n1 2\n\n\nOutput\n\n2\n\n\nInput\n\n4 3\n1 2\n3 4\n2 3\n\n\nOutput\n\n1\n\n\nInput\n\n3 2\n1 2\n1 2\n\n\nOutput\n\n0\n\n\nInput\n\n10 10\n8 9\n2 8\n4 6\n4 9\n7 8\n2 8\n1 8\n3 4\n3 4\n2 7\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "41_B. Martian Dollar", "description": "One day Vasya got hold of information on the Martian dollar course in bourles for the next n days. The buying prices and the selling prices for one dollar on day i are the same and are equal to ai. Vasya has b bourles. He can buy a certain number of dollars and then sell it no more than once in n days. According to Martian laws, one can buy only an integer number of dollars. Which maximal sum of money in bourles can Vasya get by the end of day n?\n\nInput\n\nThe first line contains two integers n and b (1 ≤ n, b ≤ 2000) — the number of days and the initial number of money in bourles. The next line contains n integers ai (1 ≤ ai ≤ 2000) — the prices of Martian dollars.\n\nOutput\n\nPrint the single number — which maximal sum of money in bourles can Vasya get by the end of day n.\n\nExamples\n\nInput\n\n2 4\n3 7\n\n\nOutput\n\n8\n\n\nInput\n\n4 10\n4 3 2 1\n\n\nOutput\n\n10\n\n\nInput\n\n4 10\n4 2 3 1\n\n\nOutput\n\n15", "grammar": {"answer": null}}
{"name": "889_D. Symmetric Projections", "description": "You are given a set of n points on the plane. A line containing the origin is called good, if projection of the given set to this line forms a symmetric multiset of points. Find the total number of good lines.\n\nMultiset is a set where equal elements are allowed.\n\nMultiset is called symmetric, if there is a point P on the plane such that the multiset is [centrally symmetric](https://en.wikipedia.org/wiki/Point_reflection) in respect of point P.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 2000) — the number of points in the set.\n\nEach of the next n lines contains two integers xi and yi ( - 106 ≤ xi, yi ≤ 106) — the coordinates of the points. It is guaranteed that no two points coincide.\n\nOutput\n\nIf there are infinitely many good lines, print -1.\n\nOtherwise, print single integer — the number of good lines.\n\nExamples\n\nInput\n\n3\n1 2\n2 1\n3 3\n\n\nOutput\n\n3\n\n\nInput\n\n2\n4 3\n1 2\n\n\nOutput\n\n-1\n\nNote\n\nPicture to the first sample test:\n\n<image>\n\nIn the second sample, any line containing the origin is good.", "grammar": {"answer": null}}
{"name": "548_A. Mike and Fax", "description": "While Mike was walking in the subway, all the stuff in his back-bag dropped on the ground. There were several fax messages among them. He concatenated these strings in some order and now he has string s.\n\n<image>\n\nHe is not sure if this is his own back-bag or someone else's. He remembered that there were exactly k messages in his own bag, each was a palindrome string and all those strings had the same length.\n\nHe asked you to help him and tell him if he has worn his own back-bag. Check if the given string s is a concatenation of k palindromes of the same length.\n\nInput\n\nThe first line of input contains string s containing lowercase English letters (1 ≤ |s| ≤ 1000).\n\nThe second line contains integer k (1 ≤ k ≤ 1000).\n\nOutput\n\nPrint \"YES\"(without quotes) if he has worn his own back-bag or \"NO\"(without quotes) otherwise.\n\nExamples\n\nInput\n\nsaba\n2\n\n\nOutput\n\nNO\n\n\nInput\n\nsaddastavvat\n2\n\n\nOutput\n\nYES\n\nNote\n\nPalindrome is a string reading the same forward and backward.\n\nIn the second sample, the faxes in his back-bag can be \"saddas\" and \"tavvat\".", "grammar": {"answer": null}}
{"name": "802_B. Heidi and Library (medium)", "description": "Whereas humans nowadays read fewer and fewer books on paper, book readership among marmots has surged. Heidi has expanded the library and is now serving longer request sequences.\n\nInput\n\nSame as the easy version, but the limits have changed: 1 ≤ n, k ≤ 400 000.\n\nOutput\n\nSame as the easy version.\n\nExamples\n\nInput\n\n4 100\n1 2 2 1\n\n\nOutput\n\n2\n\n\nInput\n\n4 1\n1 2 2 1\n\n\nOutput\n\n3\n\n\nInput\n\n4 2\n1 2 3 1\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "181_B. Number of Triplets", "description": "You are given n points on a plane. All points are different.\n\nFind the number of different groups of three points (A, B, C) such that point B is the middle of segment AC. \n\nThe groups of three points are considered unordered, that is, if point B is the middle of segment AC, then groups (A, B, C) and (C, B, A) are considered the same.\n\nInput\n\nThe first line contains a single integer n (3 ≤ n ≤ 3000) — the number of points. \n\nNext n lines contain the points. The i-th line contains coordinates of the i-th point: two space-separated integers xi, yi ( - 1000 ≤ xi, yi ≤ 1000).\n\nIt is guaranteed that all given points are different.\n\nOutput\n\nPrint the single number — the answer to the problem. \n\nExamples\n\nInput\n\n3\n1 1\n2 2\n3 3\n\n\nOutput\n\n1\n\n\nInput\n\n3\n0 0\n-1 0\n0 1\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03455 AtCoder Beginner Contest 086 - Product", "description": "AtCoDeer the deer found two positive integers, a and b. Determine whether the product of a and b is even or odd.\n\nConstraints\n\n* 1 ≤ a,b ≤ 10000\n* a and b are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\na b\n\n\nOutput\n\nIf the product is odd, print `Odd`; if it is even, print `Even`.\n\nExamples\n\nInput\n\n3 4\n\n\nOutput\n\nEven\n\n\nInput\n\n1 21\n\n\nOutput\n\nOdd", "grammar": {"answer": null}}
{"name": "p03210 AtCoder Beginner Contest 114 - 753", "description": "Shichi-Go-San (literally \"Seven-Five-Three\") is a traditional event in a certain country to celebrate the growth of seven-, five- and three-year-old children.\n\nTakahashi is now X years old. Will his growth be celebrated in Shichi-Go-San this time?\n\nConstraints\n\n* 1 ≤ X ≤ 9\n* X is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX\n\n\nOutput\n\nIf Takahashi's growth will be celebrated, print `YES`; if it will not, print `NO`.\n\nExamples\n\nInput\n\n5\n\n\nOutput\n\nYES\n\n\nInput\n\n6\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "274_A. k-Multiple Free Set", "description": "A k-multiple free set is a set of integers where there is no pair of integers where one is equal to another integer multiplied by k. That is, there are no two integers x and y (x < y) from the set, such that y = x·k.\n\nYou're given a set of n distinct positive integers. Your task is to find the size of it's largest k-multiple free subset.\n\nInput\n\nThe first line of the input contains two integers n and k (1 ≤ n ≤ 105, 1 ≤ k ≤ 109). The next line contains a list of n distinct positive integers a1, a2, ..., an (1 ≤ ai ≤ 109).\n\nAll the numbers in the lines are separated by single spaces.\n\nOutput\n\nOn the only line of the output print the size of the largest k-multiple free subset of {a1, a2, ..., an}.\n\nExamples\n\nInput\n\n6 2\n2 3 6 5 4 10\n\n\nOutput\n\n3\n\nNote\n\nIn the sample input one of the possible maximum 2-multiple free subsets is {4, 5, 6}.", "grammar": {"answer": null}}
{"name": "p02988 AtCoder Beginner Contest 132 - Ordinary Number", "description": "We have a permutation p = {p_1,\\ p_2,\\ ...,\\ p_n} of {1,\\ 2,\\ ...,\\ n}.\n\nPrint the number of elements p_i (1 < i < n) that satisfy the following condition:\n\n* p_i is the second smallest number among the three numbers p_{i - 1}, p_i, and p_{i + 1}.\n\nConstraints\n\n* All values in input are integers.\n* 3 \\leq n \\leq 20\n* p is a permutation of {1,\\ 2,\\ ...,\\ n}.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nn\np_1 p_2 ... p_n\n\n\nOutput\n\nPrint the number of elements p_i (1 < i < n) that satisfy the condition.\n\nExamples\n\nInput\n\n5\n1 3 5 4 2\n\n\nOutput\n\n2\n\n\nInput\n\n9\n9 6 3 2 5 8 7 4 1\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p02993 AtCoder Beginner Contest 131 - Security", "description": "The door of Snuke's laboratory is locked with a security code.\n\nThe security code is a 4-digit number. We say the security code is hard to enter when it contains two consecutive digits that are the same.\n\nYou are given the current security code S. If S is hard to enter, print `Bad`; otherwise, print `Good`.\n\nConstraints\n\n* S is a 4-character string consisting of digits.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nIf S is hard to enter, print `Bad`; otherwise, print `Good`.\n\nExamples\n\nInput\n\n3776\n\n\nOutput\n\nBad\n\n\nInput\n\n8080\n\n\nOutput\n\nGood\n\n\nInput\n\n1333\n\n\nOutput\n\nBad\n\n\nInput\n\n0024\n\n\nOutput\n\nBad", "grammar": {"answer": null}}
{"name": "p03591 CODE FESTIVAL 2017 qual A - Snuke's favorite YAKINIKU", "description": "Ringo is giving a present to Snuke.\n\nRingo has found out that Snuke loves yakiniku (a Japanese term meaning grilled meat. yaki: grilled, niku: meat). He supposes that Snuke likes grilled things starting with `YAKI` in Japanese, and does not like other things.\n\nYou are given a string S representing the Japanese name of Ringo's present to Snuke. Determine whether S starts with `YAKI`.\n\nConstraints\n\n* 1 \\leq |S| \\leq 10\n* S consists of uppercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nIf S starts with `YAKI`, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\nYAKINIKU\n\n\nOutput\n\nYes\n\n\nInput\n\nTAKOYAKI\n\n\nOutput\n\nNo\n\n\nInput\n\nYAK\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p00004 Simultaneous Equation", "description": "Write a program which solve a simultaneous equation:\n\nax + by = c\ndx + ey = f\n\nThe program should print x and y for given a, b, c, d, e and f (-1,000 ≤ a, b, c, d, e, f ≤ 1,000). You can suppose that given equation has a unique solution.\n\n\n\nInput\n\nThe input consists of several data sets, 1 line for each data set. In a data set, there will be a, b, c, d, e, f separated by a single space. The input terminates with EOF.\n\nOutput\n\nFor each data set, print x and y separated by a single space. Print the solution to three places of decimals. Round off the solution to three decimal places.\n\nExamples\n\nInput\n\n1 2 3 4 5 6\n2 -1 -2 -1 -1 -5\n\n\nOutput\n\n-1.000 2.000\n1.000 4.000\n\n\nInput\n\n2 -1 -3 1 -1 -3\n2 -1 -3 -9 9 27\n\n\nOutput\n\n0.000 3.000\n0.000 3.000", "grammar": {"answer": null}}
{"name": "p03486 AtCoder Beginner Contest 082 - Two Anagrams", "description": "You are given strings s and t, consisting of lowercase English letters. You will create a string s' by freely rearranging the characters in s. You will also create a string t' by freely rearranging the characters in t. Determine whether it is possible to satisfy s' < t' for the lexicographic order.\n\nConstraints\n\n* The lengths of s and t are between 1 and 100 (inclusive).\n* s and t consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\ns\nt\n\n\nOutput\n\nIf it is possible to satisfy s' < t', print `Yes`; if it is not, print `No`.\n\nExamples\n\nInput\n\nyx\naxy\n\n\nOutput\n\nYes\n\n\nInput\n\nratcode\natlas\n\n\nOutput\n\nYes\n\n\nInput\n\ncd\nabc\n\n\nOutput\n\nNo\n\n\nInput\n\nw\nww\n\n\nOutput\n\nYes\n\n\nInput\n\nzzz\nzzz\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p02959 AtCoder Beginner Contest 135 - City Savers", "description": "There are N+1 towns. The i-th town is being attacked by A_i monsters.\n\nWe have N heroes. The i-th hero can defeat monsters attacking the i-th or (i+1)-th town, for a total of at most B_i monsters.\n\nWhat is the maximum total number of monsters the heroes can cooperate to defeat?\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq A_i \\leq 10^9\n* 1 \\leq B_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_{N+1}\nB_1 B_2 ... B_N\n\n\nOutput\n\nPrint the maximum total number of monsters the heroes can defeat.\n\nExamples\n\nInput\n\n2\n3 5 2\n4 5\n\n\nOutput\n\n9\n\n\nInput\n\n3\n5 6 3 8\n5 100 8\n\n\nOutput\n\n22\n\n\nInput\n\n2\n100 1 1\n1 100\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p04029 AtCoder Beginner Contest 043 - Children and Candies (ABC Edit)", "description": "There are N children in AtCoder Kindergarten. Mr. Evi will arrange the children in a line, then give 1 candy to the first child in the line, 2 candies to the second child, ..., N candies to the N-th child. How many candies will be necessary in total?\n\nConstraints\n\n* 1≦N≦100\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the necessary number of candies in total.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n6\n\n\nInput\n\n10\n\n\nOutput\n\n55\n\n\nInput\n\n1\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "787_A. The Monster", "description": "A monster is chasing after Rick and Morty on another planet. They're so frightened that sometimes they scream. More accurately, Rick screams at times b, b + a, b + 2a, b + 3a, ... and Morty screams at times d, d + c, d + 2c, d + 3c, .... \n\n<image>\n\nThe Monster will catch them if at any point they scream at the same time, so it wants to know when it will catch them (the first time they scream at the same time) or that they will never scream at the same time.\n\nInput\n\nThe first line of input contains two integers a and b (1 ≤ a, b ≤ 100). \n\nThe second line contains two integers c and d (1 ≤ c, d ≤ 100).\n\nOutput\n\nPrint the first time Rick and Morty will scream at the same time, or  - 1 if they will never scream at the same time.\n\nExamples\n\nInput\n\n20 2\n9 19\n\n\nOutput\n\n82\n\n\nInput\n\n2 1\n16 12\n\n\nOutput\n\n-1\n\nNote\n\nIn the first sample testcase, Rick's 5th scream and Morty's 8th time are at time 82. \n\nIn the second sample testcase, all Rick's screams will be at odd times and Morty's will be at even times, so they will never scream at the same time.", "grammar": {"answer": null}}
{"name": "p03288 AtCoder Beginner Contest 104 - Rated for Me", "description": "A programming competition site AtCode regularly holds programming contests.\n\nThe next contest on AtCode is called ABC, which is rated for contestants with ratings less than 1200.\n\nThe contest after the ABC is called ARC, which is rated for contestants with ratings less than 2800.\n\nThe contest after the ARC is called AGC, which is rated for all contestants.\n\nTakahashi's rating on AtCode is R. What is the next contest rated for him?\n\nConstraints\n\n* 0 ≤ R ≤ 4208\n* R is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nR\n\n\nOutput\n\nPrint the name of the next contest rated for Takahashi (`ABC`, `ARC` or `AGC`).\n\nExamples\n\nInput\n\n1199\n\n\nOutput\n\nABC\n\n\nInput\n\n1200\n\n\nOutput\n\nARC\n\n\nInput\n\n4208\n\n\nOutput\n\nAGC", "grammar": {"answer": null}}
{"name": "p03643 AtCoder Beginner Contest 068 - ABCxxx", "description": "This contest, AtCoder Beginner Contest, is abbreviated as ABC.\n\nWhen we refer to a specific round of ABC, a three-digit number is appended after ABC. For example, ABC680 is the 680th round of ABC.\n\nWhat is the abbreviation for the N-th round of ABC? Write a program to output the answer.\n\nConstraints\n\n* 100 ≤ N ≤ 999\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the abbreviation for the N-th round of ABC.\n\nExamples\n\nInput\n\n100\n\n\nOutput\n\nABC100\n\n\nInput\n\n425\n\n\nOutput\n\nABC425\n\n\nInput\n\n999\n\n\nOutput\n\nABC999", "grammar": {"answer": null}}
{"name": "p02963 AtCoder Grand Contest 036 - Triangle", "description": "Given is an integer S. Find a combination of six integers X_1,Y_1,X_2,Y_2,X_3, and Y_3 that satisfies all of the following conditions:\n\n* 0 \\leq X_1,Y_1,X_2,Y_2,X_3,Y_3 \\leq 10^9\n* The area of the triangle in a two-dimensional plane whose vertices are (X_1,Y_1),(X_2,Y_2), and (X_3,Y_3) is S/2.\n\n\n\nWe can prove that there always exist six integers that satisfy the conditions under the constraints of this problem.\n\nConstraints\n\n* 1 \\leq S \\leq 10^{18}\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint six integers X_1,Y_1,X_2,Y_2,X_3, and Y_3 that satisfy the conditions, in this order, with spaces in between. If multiple solutions exist, any of them will be accepted.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n1 0 2 2 0 1\n\n\nInput\n\n100\n\n\nOutput\n\n0 0 10 0 0 10\n\n\nInput\n\n311114770564041497\n\n\nOutput\n\n314159265 358979323 846264338 327950288 419716939 937510582", "grammar": {"answer": null}}
{"name": "334_A. Candy Bags", "description": "Gerald has n younger brothers and their number happens to be even. One day he bought n2 candy bags. One bag has one candy, one bag has two candies, one bag has three candies and so on. In fact, for each integer k from 1 to n2 he has exactly one bag with k candies. \n\nHelp him give n bags of candies to each brother so that all brothers got the same number of candies.\n\nInput\n\nThe single line contains a single integer n (n is even, 2 ≤ n ≤ 100) — the number of Gerald's brothers.\n\nOutput\n\nLet's assume that Gerald indexes his brothers with numbers from 1 to n. You need to print n lines, on the i-th line print n integers — the numbers of candies in the bags for the i-th brother. Naturally, all these numbers should be distinct and be within limits from 1 to n2. You can print the numbers in the lines in any order. \n\nIt is guaranteed that the solution exists at the given limits.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n1 4\n2 3\n\nNote\n\nThe sample shows Gerald's actions if he has two brothers. In this case, his bags contain 1, 2, 3 and 4 candies. He can give the bags with 1 and 4 candies to one brother and the bags with 2 and 3 to the other brother.", "grammar": {"answer": null}}
{"name": "597_B. Restaurant", "description": "A restaurant received n orders for the rental. Each rental order reserve the restaurant for a continuous period of time, the i-th order is characterized by two time values — the start time li and the finish time ri (li ≤ ri).\n\nRestaurant management can accept and reject orders. What is the maximal number of orders the restaurant can accept?\n\nNo two accepted orders can intersect, i.e. they can't share even a moment of time. If one order ends in the moment other starts, they can't be accepted both.\n\nInput\n\nThe first line contains integer number n (1 ≤ n ≤ 5·105) — number of orders. The following n lines contain integer values li and ri each (1 ≤ li ≤ ri ≤ 109).\n\nOutput\n\nPrint the maximal number of orders that can be accepted.\n\nExamples\n\nInput\n\n2\n7 11\n4 7\n\n\nOutput\n\n1\n\n\nInput\n\n5\n1 2\n2 3\n3 4\n4 5\n5 6\n\n\nOutput\n\n3\n\n\nInput\n\n6\n4 8\n1 5\n4 7\n2 5\n1 3\n6 8\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02328 Largest Rectangle in a Histogram", "description": "A histogram is made of a number of contiguous bars, which have same width.\n\nFor a given histogram with $N$ bars which have a width of 1 and a height of $h_i$ = $h_1, h_2, ... , h_N$ respectively, find the area of the largest rectangular area.\n\nConstraints\n\n* $1 \\leq N \\leq 10^5$\n* $0 \\leq h_i \\leq 10^9$\n\nInput\n\nThe input is given in the following format.\n\n$N$\n$h_1$ $h_2$ ... $h_N$\n\nOutput\n\nPrint the area of the largest rectangle.\n\nExamples\n\nInput\n\n8\n2 1 3 5 3 4 2 1\n\n\nOutput\n\n12\n\n\nInput\n\n3\n2 0 1\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p00855 Prime Gap", "description": "The sequence of n - 1 consecutive composite numbers (positive integers that are not prime and not equal to 1) lying between two successive prime numbers p and p + n is called a prime gap of length n. For example, (24, 25, 26, 27, 28) between 23 and 29 is a prime gap of length 6.\n\nYour mission is to write a program to calculate, for a given positive integer k, the length of the prime gap that contains k. For convenience, the length is considered 0 in case no prime gap contains k.\n\n\n\nInput\n\nThe input is a sequence of lines each of which contains a single positive integer. Each positive integer is greater than 1 and less than or equal to the 100000th prime number, which is 1299709. The end of the input is indicated by a line containing a single zero.\n\nOutput\n\nThe output should be composed of lines each of which contains a single non-negative integer. It is the length of the prime gap that contains the corresponding positive integer in the input if it is a composite number, or 0 otherwise. No other characters should occur in the output.\n\nExample\n\nInput\n\n10\n11\n27\n2\n492170\n0\n\n\nOutput\n\n4\n0\n6\n0\n114", "grammar": {"answer": null}}
{"name": "p03176 Educational DP Contest - Flowers", "description": "There are N flowers arranged in a row. For each i (1 \\leq i \\leq N), the height and the beauty of the i-th flower from the left is h_i and a_i, respectively. Here, h_1, h_2, \\ldots, h_N are all distinct.\n\nTaro is pulling out some flowers so that the following condition is met:\n\n* The heights of the remaining flowers are monotonically increasing from left to right.\n\n\n\nFind the maximum possible sum of the beauties of the remaining flowers.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 2 × 10^5\n* 1 \\leq h_i \\leq N\n* h_1, h_2, \\ldots, h_N are all distinct.\n* 1 \\leq a_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nh_1 h_2 \\ldots h_N\na_1 a_2 \\ldots a_N\n\n\nOutput\n\nPrint the maximum possible sum of the beauties of the remaining flowers.\n\nExamples\n\nInput\n\n4\n3 1 4 2\n10 20 30 40\n\n\nOutput\n\n60\n\n\nInput\n\n1\n1\n10\n\n\nOutput\n\n10\n\n\nInput\n\n5\n1 2 3 4 5\n1000000000 1000000000 1000000000 1000000000 1000000000\n\n\nOutput\n\n5000000000\n\n\nInput\n\n9\n4 2 5 8 3 6 1 7 9\n6 8 8 4 6 3 5 7 5\n\n\nOutput\n\n31", "grammar": {"answer": null}}
{"name": "p02422 Transformation", "description": "Transformation\n\n\n\n\nWrite a program which performs a sequence of commands to a given string $str$. The command is one of:\n\n* print a b: print from the a-th character to the b-th character of $str$\n* reverse a b: reverse from the a-th character to the b-th character of $str$\n* replace a b p: replace from the a-th character to the b-th character of $str$ with p\n\n\n\nNote that the indices of $str$ start with 0.\n\nConstraints\n\n* $1 \\leq $ length of $str \\leq 1000$\n* $1 \\leq q \\leq 100$\n* $0 \\leq a \\leq b < $ length of $str$\n* for replace command, $b - a + 1 = $ length of $p$\n\nInput\n\nIn the first line, a string $str$ is given. $str$ consists of lowercase letters. In the second line, the number of commands q is given. In the next q lines, each command is given in the above mentioned format.\n\nOutput\n\nFor each print command, print a string in a line.\n\nExamples\n\nInput\n\nabcde\n3\nreplace 1 3 xyz\nreverse 0 2\nprint 1 4\n\n\nOutput\n\nxaze\n\n\nInput\n\nxyz\n3\nprint 0 2\nreplace 0 2 abc\nprint 0 2\n\n\nOutput\n\nxyz\nabc", "grammar": {"answer": null}}
{"name": "p02669 AtCoder Grand Contest 044 - Pay to Win", "description": "You start with the number 0 and you want to reach the number N.\n\nYou can change the number, paying a certain amount of coins, with the following operations:\n\n* Multiply the number by 2, paying A coins.\n* Multiply the number by 3, paying B coins.\n* Multiply the number by 5, paying C coins.\n* Increase or decrease the number by 1, paying D coins.\n\n\n\nYou can perform these operations in arbitrary order and an arbitrary number of times.\n\nWhat is the minimum number of coins you need to reach N?\n\nYou have to solve T testcases.\n\nConstraints\n\n* 1 \\le T \\le 10\n* 1 \\le N \\le 10^{18}\n* 1 \\le A, B, C, D \\le 10^9\n* All numbers N, A, B, C, D are integers.\n\nInput\n\nThe input is given from Standard Input. The first line of the input is\n\n\nT\n\n\nThen, T lines follow describing the T testcases. Each of the T lines has the format\n\n\nN A B C D\n\n\nOutput\n\nFor each testcase, print the answer on Standard Output followed by a newline.\n\nExample\n\nInput\n\n5\n11 1 2 4 8\n11 1 2 2 8\n32 10 8 5 4\n29384293847243 454353412 332423423 934923490 1\n900000000000000000 332423423 454353412 934923490 987654321\n\n\nOutput\n\n20\n19\n26\n3821859835\n23441258666", "grammar": {"answer": null}}
{"name": "p03129 Yahoo Programming Contest 2019 - Anti-Adjacency", "description": "Determine if we can choose K different integers between 1 and N (inclusive) so that no two of them differ by 1.\n\nConstraints\n\n* 1\\leq N,K\\leq 100\n* N and K are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\n\n\nOutput\n\nIf we can choose K integers as above, print `YES`; otherwise, print `NO`.\n\nExamples\n\nInput\n\n3 2\n\n\nOutput\n\nYES\n\n\nInput\n\n5 5\n\n\nOutput\n\nNO\n\n\nInput\n\n31 10\n\n\nOutput\n\nYES\n\n\nInput\n\n10 90\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p03548 AtCoder Beginner Contest 078 - ISU", "description": "We have a long seat of width X centimeters. There are many people who wants to sit here. A person sitting on the seat will always occupy an interval of length Y centimeters.\n\nWe would like to seat as many people as possible, but they are all very shy, and there must be a gap of length at least Z centimeters between two people, and between the end of the seat and a person.\n\nAt most how many people can sit on the seat?\n\nConstraints\n\n* All input values are integers.\n* 1 \\leq X, Y, Z \\leq 10^5\n* Y+2Z \\leq X\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX Y Z\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n13 3 1\n\n\nOutput\n\n3\n\n\nInput\n\n12 3 1\n\n\nOutput\n\n2\n\n\nInput\n\n100000 1 1\n\n\nOutput\n\n49999\n\n\nInput\n\n64146 123 456\n\n\nOutput\n\n110\n\n\nInput\n\n64145 123 456\n\n\nOutput\n\n109", "grammar": {"answer": null}}
{"name": "p01337 The Number of the Real Roots of a Cubic Equation", "description": "Description\n\nSince the cubic equation: ax ^ 3 + bx ^ 2 + cx + d = 0 is given, please check the number of positive real roots and the number of negative real roots, respectively.\n\nThe number of roots shall be counted including the multiple roots.\n\n\n\nInput\n\nThe input consists of multiple test cases, and the number is recorded on the first line.\n\nFrom the second line onward, the coefficients of the cubic equation are written in the form of a b c d. a is not 0, and each number is an integer value from -100 to 100.\n\nOutput\n\nFor a given cubic equation, output the number of positive real roots and the number of negative real roots separated by a space.\n\nExample\n\nInput\n\n2\n1 3 3 1\n-10 0 0 0\n\n\nOutput\n\n0 3\n0 0", "grammar": {"answer": null}}
{"name": "p03430 AtCoder Grand Contest 021 - Reversed LCS", "description": "Takahashi has decided to give a string to his mother.\n\nThe value of a string T is the length of the longest common subsequence of T and T', where T' is the string obtained by reversing T. That is, the value is the longest length of the following two strings that are equal: a subsequence of T (possibly non-contiguous), and a subsequence of T' (possibly non-contiguous).\n\nTakahashi has a string S. He wants to give her mother a string of the highest possible value, so he would like to change at most K characters in S to any other characters in order to obtain a string of the highest possible value. Find the highest possible value achievable.\n\nConstraints\n\n* 1 \\leq |S| \\leq 300\n* 0 \\leq K \\leq |S|\n* S consists of lowercase English letters.\n* K is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\nK\n\n\nOutput\n\nPrint the highest possible value achievable.\n\nExamples\n\nInput\n\nabcabcabc\n1\n\n\nOutput\n\n7\n\n\nInput\n\natcodergrandcontest\n3\n\n\nOutput\n\n15", "grammar": {"answer": null}}
{"name": "p02995 AtCoder Beginner Contest 131 - Anti-Division", "description": "You are given four integers A, B, C, and D. Find the number of integers between A and B (inclusive) that can be evenly divided by neither C nor D.\n\nConstraints\n\n* 1\\leq A\\leq B\\leq 10^{18}\n* 1\\leq C,D\\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C D\n\n\nOutput\n\nPrint the number of integers between A and B (inclusive) that can be evenly divided by neither C nor D.\n\nExamples\n\nInput\n\n4 9 2 3\n\n\nOutput\n\n2\n\n\nInput\n\n10 40 6 8\n\n\nOutput\n\n23\n\n\nInput\n\n314159265358979323 846264338327950288 419716939 937510582\n\n\nOutput\n\n532105071133627368", "grammar": {"answer": null}}
{"name": "p03036 AtCoder Beginner Contest 127 - Algae", "description": "The development of algae in a pond is as follows.\n\nLet the total weight of the algae at the beginning of the year i be x_i gram. For i≥2000, the following formula holds:\n\n* x_{i+1} = rx_i - D\n\n\n\nYou are given r, D and x_{2000}. Calculate x_{2001}, ..., x_{2010} and print them in order.\n\nConstraints\n\n* 2 ≤ r ≤ 5\n* 1 ≤ D ≤ 100\n* D < x_{2000} ≤ 200\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nr D x_{2000}\n\n\nOutput\n\nPrint 10 lines. The i-th line (1 ≤ i ≤ 10) should contain x_{2000+i} as an integer.\n\nExamples\n\nInput\n\n2 10 20\n\n\nOutput\n\n30\n50\n90\n170\n330\n650\n1290\n2570\n5130\n10250\n\n\nInput\n\n4 40 60\n\n\nOutput\n\n200\n760\n3000\n11960\n47800\n191160\n764600\n3058360\n12233400\n48933560", "grammar": {"answer": null}}
{"name": "p02845 Sumitomo Mitsui Trust Bank Programming Contest 2019 - Colorful Hats 2", "description": "N people are standing in a queue, numbered 1, 2, 3, ..., N from front to back. Each person wears a hat, which is red, blue, or green.\n\nThe person numbered i says:\n\n* \"In front of me, exactly A_i people are wearing hats with the same color as mine.\"\n\n\n\nAssuming that all these statements are correct, find the number of possible combinations of colors of the N people's hats.\n\nSince the count can be enormous, compute it modulo 1000000007.\n\nConstraints\n\n* 1 \\leq N \\leq 100000\n* 0 \\leq A_i \\leq N-1\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 A_3 ... A_N\n\n\nOutput\n\nPrint the number of possible combinations of colors of the N people's hats, modulo 1000000007.\n\nExamples\n\nInput\n\n6\n0 1 2 3 4 5\n\n\nOutput\n\n3\n\n\nInput\n\n3\n0 0 0\n\n\nOutput\n\n6\n\n\nInput\n\n54\n0 0 1 0 1 2 1 2 3 2 3 3 4 4 5 4 6 5 7 8 5 6 6 7 7 8 8 9 9 10 10 11 9 12 10 13 14 11 11 12 12 13 13 14 14 15 15 15 16 16 16 17 17 17\n\n\nOutput\n\n115295190", "grammar": {"answer": null}}
{"name": "p00444 Change", "description": "problem\n\nTaro often shop at JOI general stores. At JOI general stores, there are enough coins of 500 yen, 100 yen, 50 yen, 10 yen, 5 yen, and 1 yen, and we always pay the change so that the number of coins is the smallest. Create a program to find the number of coins included in the change you receive when Taro goes shopping at the JOI general store and puts out one 1000 yen bill at the cash register.\n\nFor example, in the case of input example 1, 4 must be output as shown in the figure below.\n\n<image>\n\n\n\ninput\n\nThe input consists of multiple datasets. Each dataset consists of one line, and only one amount (an integer of 1 or more and less than 1000) paid by Taro is written. The input data ends with one zero line.\n\nThe number of datasets does not exceed 5.\n\noutput\n\nOutput the number of coins included in the change for each dataset on one line.\n\nExamples\n\nInput\n\n380\n1\n0\n\n\nOutput\n\n4\n15\n\n\nInput\n\nNone\n\n\nOutput\n\nNone", "grammar": {"answer": null}}
{"name": "p02967 AtCoder Grand Contest 036 - ABC String", "description": "Given is a string S consisting of `A`,`B`, and `C`.\n\nConsider the (not necessarily contiguous) subsequences x of S that satisfy all of the following conditions:\n\n* `A`, `B`, and `C` all occur the same number of times in x.\n* No two adjacent characters in x are the same.\n\n\n\nAmong these subsequences, find one of the longest. Here a subsequence of S is a string obtained by deleting zero or more characters from S.\n\nConstraints\n\n* 1 \\leq |S| \\leq 10^6\n* S consists of `A`,`B`, and `C`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint one longest subsequence that satisfies the conditions. If multiple solutions exist, any of them will be accepted.\n\nExamples\n\nInput\n\nABBCBCAB\n\n\nOutput\n\nACBCAB\n\n\nInput\n\nABABABABACACACAC\n\n\nOutput\n\nBABCAC\n\n\nInput\n\nABCABACBCBABABACBCBCBCBCBCAB\n\n\nOutput\n\nACABACABABACBCBCBCBCA\n\n\nInput\n\nAAA\n\n\nOutput", "grammar": {"answer": null}}
{"name": "p01833 Modern Announce Network", "description": "Example\n\nInput\n\n4 2 1 1\n1 2\n3\n4\n3\n1 2\n2 4\n3 4\n\n\nOutput\n\n2 1", "grammar": {"answer": null}}
{"name": "p03352 AtCoder Beginner Contest 097 - Exponential", "description": "You are given a positive integer X. Find the largest perfect power that is at most X. Here, a perfect power is an integer that can be represented as b^p, where b is an integer not less than 1 and p is an integer not less than 2.\n\nConstraints\n\n* 1 ≤ X ≤ 1000\n* X is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX\n\n\nOutput\n\nPrint the largest perfect power that is at most X.\n\nExamples\n\nInput\n\n10\n\n\nOutput\n\n9\n\n\nInput\n\n1\n\n\nOutput\n\n1\n\n\nInput\n\n999\n\n\nOutput\n\n961", "grammar": {"answer": null}}
{"name": "p02297 Area", "description": "For a given polygon g, computes the area of the polygon.\n\ng is represented by a sequence of points p1, p2,..., pn where line segments connecting pi and pi+1 (1 ≤ i ≤ n-1) are sides of g. The line segment connecting pn and p1 is also a side of the polygon.\n\nNote that the polygon is not necessarily convex.\n\nConstraints\n\n* 3 ≤ n ≤ 100\n* -10000 ≤ xi, yi ≤ 10000\n* No point will occur more than once.\n* Two sides can intersect only at a common endpoint.\n\nInput\n\nThe input consists of coordinates of the points p1,..., pn in the following format:\n\n\nn\nx1 y1\nx2 y2\n:\nxn yn\n\n\nThe first integer n is the number of points. The coordinate of a point pi is given by two integers xi and yi. The coordinates of points are given in the order of counter-clockwise visit of them.\n\nOutput\n\nPrint the area of the polygon in a line. The area should be printed with one digit to the right of the decimal point.\n\nExamples\n\nInput\n\n3\n0 0\n2 2\n-1 1\n\n\nOutput\n\n2.0\n\n\nInput\n\n4\n0 0\n1 1\n1 2\n0 2\n\n\nOutput\n\n1.5", "grammar": {"answer": null}}
{"name": "p02606 AIsing Programming Contest 2020 - Number of Multiples", "description": "How many multiples of d are there among the integers between L and R (inclusive)?\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq L \\leq R \\leq 100\n* 1 \\leq d \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nL R d\n\n\nOutput\n\nPrint the number of multiples of d among the integers between L and R (inclusive).\n\nExamples\n\nInput\n\n5 10 2\n\n\nOutput\n\n3\n\n\nInput\n\n6 20 7\n\n\nOutput\n\n2\n\n\nInput\n\n1 100 1\n\n\nOutput\n\n100", "grammar": {"answer": null}}
{"name": "p02455 Set: Search", "description": "For a set $S$ of integers, perform a sequence of the following operations. Note that each value in $S$ must be unique.\n\n* insert($x$): Insert $x$ to $S$ and report the number of elements in $S$ after the operation.\n* find($x$): Report the number of $x$ in $S$ (0 or 1).\n\nConstraints\n\n* $1 \\leq q \\leq 200,000$\n* $0 \\leq x \\leq 1,000,000,000$\n\nInput\n\nThe input is given in the following format.\n\n\n$q$\n$query_1$\n$query_2$\n:\n$query_q$\n\n\nEach query $query_i$ is given by\n\n\n0 $x$\n\n\nor\n\n\n1 $x$\n\n\nwhere the first digits 0 and 1 represent insert and find operations respectively.\n\nOutput\n\nFor each insert operation, print the number of elements in $S$.\nFor each find operation, print the number of specified elements in $S$.\n\nExample\n\nInput\n\n7\n0 1\n0 2\n0 3\n0 2\n0 4\n1 3\n1 10\n\n\nOutput\n\n1\n2\n3\n3\n4\n1\n0", "grammar": {"answer": null}}
{"name": "p01602 Parentheses", "description": "()\n\nProblem Statement\n\nThere is a string S. Initially, S is an empty string.\nPerform the following processing in order of n.\n\n* Add x_i p_i (=\" (\" or\") \") to the end of S.\n\n\n\nAfter processing, determine if S is a well-balanced string.\n\n\"The string is balanced\" is defined as follows.\n\n* The empty string is well-balanced.\n* For balanced strings a and b, a + b (+ represents a concatenation of strings) is balanced.\n* For a balanced string a, \"(\" + a + \")\" is balanced.\n\nConstraints\n\n* 1 ≤ n ≤ 1,000\n* 1 ≤ x_i ≤ 10 ^ 6\n* p_i is \"(\" or \")\"\n\nInput\n\nInput follows the following format. All given numbers are integers.\n\n\nn\np_1 x_1\n.. ..\np_n x_n\n\nOutput\n\nOutput \"YES\" if balanced, otherwise output \"NO\" on one line.\n\nExamples\n\nInput\n\n3\n( 5\n) 4\n) 1\n\n\nOutput\n\nYES\n\n\nInput\n\n5\n( 2\n) 2\n( 3\n) 1\n) 2\n\n\nOutput\n\nYES\n\n\nInput\n\n2\n) 1\n( 1\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "709_D. Recover the String", "description": "For each string s consisting of characters '0' and '1' one can define four integers a00, a01, a10 and a11, where axy is the number of subsequences of length 2 of the string s equal to the sequence {x, y}. \n\nIn these problem you are given four integers a00, a01, a10, a11 and have to find any non-empty string s that matches them, or determine that there is no such string. One can prove that if at least one answer exists, there exists an answer of length no more than 1 000 000.\n\nInput\n\nThe only line of the input contains four non-negative integers a00, a01, a10 and a11. Each of them doesn't exceed 109.\n\nOutput\n\nIf there exists a non-empty string that matches four integers from the input, print it in the only line of the output. Otherwise, print \"Impossible\". The length of your answer must not exceed 1 000 000.\n\nExamples\n\nInput\n\n1 2 3 4\n\n\nOutput\n\nImpossible\n\n\nInput\n\n1 2 2 1\n\n\nOutput\n\n0110", "grammar": {"answer": null}}
{"name": "p02456 Set: Delete", "description": "For a set $S$ of integers, perform a sequence of the following operations. Note that each value in $S$ must be unique.\n\n* insert($x$): Insert $x$ to $S$ and report the number of elements in $S$ after the operation.\n* find($x$): Report the number of $x$ in $S$ (0 or 1).\n* delete($x$): Delete $x$ from $S$.\n\nConstraints\n\n* $1 \\leq q \\leq 200,000$\n* $0 \\leq x \\leq 1,000,000,000$\n\nInput\n\nThe input is given in the following format.\n\n\n$q$\n$query_1$\n$query_2$\n:\n$query_q$\n\n\nEach query $query_i$ is given by\n\n\n0 $x$\n\n\nor\n\n\n1 $x$\n\n\nor\n\n\n2 $x$\n\n\nwhere the first digits 0, 1 and 2 represent insert, find and delete operations respectively.\n\nOutput\n\nFor each insert operation, print the number of elements in $S$.\nFor each find operation, print the number of specified elements in $S$.\n\nExample\n\nInput\n\n8\n0 1\n0 2\n0 3\n2 2\n1 1\n1 2\n1 3\n0 2\n\n\nOutput\n\n1\n2\n3\n1\n0\n1\n3", "grammar": {"answer": null}}
{"name": "p03087 AtCoder Beginner Contest 122 - GeT AC", "description": "You are given a string S of length N consisting of `A`, `C`, `G` and `T`. Answer the following Q queries:\n\n* Query i (1 \\leq i \\leq Q): You will be given integers l_i and r_i (1 \\leq l_i < r_i \\leq N). Consider the substring of S starting at index l_i and ending at index r_i (both inclusive). In this string, how many times does `AC` occurs as a substring?\n\nConstraints\n\n* 2 \\leq N \\leq 10^5\n* 1 \\leq Q \\leq 10^5\n* S is a string of length N.\n* Each character in S is `A`, `C`, `G` or `T`.\n* 1 \\leq l_i < r_i \\leq N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN Q\nS\nl_1 r_1\n:\nl_Q r_Q\n\n\nOutput\n\nPrint Q lines. The i-th line should contain the answer to the i-th query.\n\nExample\n\nInput\n\n8 3\nACACTACG\n3 7\n2 3\n1 8\n\n\nOutput\n\n2\n0\n3", "grammar": {"answer": null}}
{"name": "p02175 Strange Plants", "description": "problem\n\nA mysterious $ X $ [cm] plant grows in one place. This plant has the following mysterious properties.\n\n* Say \"nobiro\" to this plant and it will grow $ A $ [cm].\n* Say \"tidime\" to this plant and it will grow $ B $ [cm].\n* If you say \"karero\" to this plant, it will be $ 0 $ [cm].\n\n\n\nHowever, this plant does not have a negative length. Specifically, when it grows from the state of $ C $ [cm] to $ D $ [cm] $ (C + D \\ lt 0) $, it is a plant. Stops growing when it reaches $ 0 $ [cm].\n\nSay one of \"nobiro\", \"tidime\", \"karero\" to this plant only once a day for $ N $ days. Find the length [cm] of the plant after $ N $ days.\n\n\n\noutput\n\nPrint the length of the plant after $ N $ days. Also print a newline at the end.\n\nExample\n\nInput\n\n10 30 10\n3\nnobiro\nnobiro\ntidime\n\n\nOutput\n\n80", "grammar": {"answer": null}}
{"name": "p03075 AtCoder Beginner Contest 123 - Five Antennas", "description": "In AtCoder city, there are five antennas standing in a straight line. They are called Antenna A, B, C, D and E from west to east, and their coordinates are a, b, c, d and e, respectively.\nTwo antennas can communicate directly if the distance between them is k or less, and they cannot if the distance is greater than k.\nDetermine if there exists a pair of antennas that cannot communicate directly.\nHere, assume that the distance between two antennas at coordinates p and q (p < q) is q - p.\n\nConstraints\n\n* a, b, c, d, e and k are integers between 0 and 123 (inclusive).\n* a < b < c < d < e\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\na\nb\nc\nd\ne\nk\n\n\nOutput\n\nPrint `:(` if there exists a pair of antennas that cannot communicate directly, and print `Yay!` if there is no such pair.\n\nExamples\n\nInput\n\n1\n2\n4\n8\n9\n15\n\n\nOutput\n\nYay!\n\n\nInput\n\n15\n18\n26\n35\n36\n18\n\n\nOutput\n\n:(", "grammar": {"answer": null}}
{"name": "964_A. Splits", "description": "Let's define a split of n as a nonincreasing sequence of positive integers, the sum of which is n. \n\nFor example, the following sequences are splits of 8: [4, 4], [3, 3, 2], [2, 2, 1, 1, 1, 1], [5, 2, 1].\n\nThe following sequences aren't splits of 8: [1, 7], [5, 4], [11, -3], [1, 1, 4, 1, 1].\n\nThe weight of a split is the number of elements in the split that are equal to the first element. For example, the weight of the split [1, 1, 1, 1, 1] is 5, the weight of the split [5, 5, 3, 3, 3] is 2 and the weight of the split [9] equals 1.\n\nFor a given n, find out the number of different weights of its splits.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 10^9).\n\nOutput\n\nOutput one integer — the answer to the problem.\n\nExamples\n\nInput\n\n7\n\n\nOutput\n\n4\n\n\nInput\n\n8\n\n\nOutput\n\n5\n\n\nInput\n\n9\n\n\nOutput\n\n5\n\nNote\n\nIn the first sample, there are following possible weights of splits of 7:\n\nWeight 1: [\\textbf 7] \n\nWeight 2: [\\textbf 3, \\textbf 3, 1] \n\nWeight 3: [\\textbf 2, \\textbf 2, \\textbf 2, 1] \n\nWeight 7: [\\textbf 1, \\textbf 1, \\textbf 1, \\textbf 1, \\textbf 1, \\textbf 1, \\textbf 1]", "grammar": {"answer": null}}
{"name": "p02466 Set Symmetric Difference", "description": "Find the symmetric difference of two sets $A = \\\\{a_0, a_1, ..., a_{n-1}\\\\}$ and $B = \\\\{b_0, b_1, ..., b_{m-1}\\\\}$.\n\nConstraints\n\n* $1 \\leq n, m \\leq 200,000$\n* $0 \\leq a_0 < a_1 < ... < a_{n-1} \\leq 10^9$\n* $0 \\leq b_0 < b_1 < ... < b_{m-1} \\leq 10^9$\n\nInput\n\nThe input is given in the following format.\n\n\n$n$\n$a_0 \\; a_1 \\; ... \\; a_{n-1}$\n$m$\n$b_0 \\; b_1 \\; ... \\; b_{m-1}$\n\n\nElements in $A$ and $B$ are given in ascending order. There are no duplicate elements in each set.\n\nOutput\n\nPrint elements in the symmetric difference in ascending order. Print an element in a line.\n\nExample\n\nInput\n\n7\n1 2 3 4 5 6 7\n4\n2 4 6 8\n\n\nOutput\n\n1\n3\n5\n7\n8", "grammar": {"answer": null}}
{"name": "1189_F. Array Beauty", "description": "Let's call beauty of an array b_1, b_2, …, b_n (n > 1) — min_{1 ≤ i < j ≤ n} |b_i - b_j|.\n\nYou're given an array a_1, a_2, … a_n and a number k. Calculate the sum of beauty over all subsequences of the array of length exactly k. As this number can be very large, output it modulo 998244353.\n\nA sequence a is a subsequence of an array b if a can be obtained from b by deletion of several (possibly, zero or all) elements.\n\nInput\n\nThe first line contains integers n, k (2 ≤ k ≤ n ≤ 1000).\n\nThe second line contains n integers a_1, a_2, …, a_n (0 ≤ a_i ≤ 10^5).\n\nOutput\n\nOutput one integer — the sum of beauty over all subsequences of the array of length exactly k. As this number can be very large, output it modulo 998244353.\n\nExamples\n\nInput\n\n\n4 3\n1 7 3 5\n\n\nOutput\n\n\n8\n\nInput\n\n\n5 5\n1 10 100 1000 10000\n\n\nOutput\n\n\n9\n\nNote\n\nIn the first example, there are 4 subsequences of length 3 — [1, 7, 3], [1, 3, 5], [7, 3, 5], [1, 7, 5], each of which has beauty 2, so answer is 8.\n\nIn the second example, there is only one subsequence of length 5 — the whole array, which has the beauty equal to |10-1| = 9.", "grammar": {"answer": null}}
{"name": "788_A. Functions again", "description": "Something happened in Uzhlyandia again... There are riots on the streets... Famous Uzhlyandian superheroes Shean the Sheep and Stas the Giraffe were called in order to save the situation. Upon the arriving, they found that citizens are worried about maximum values of the Main Uzhlyandian Function f, which is defined as follows:\n\n<image>\n\nIn the above formula, 1 ≤ l < r ≤ n must hold, where n is the size of the Main Uzhlyandian Array a, and |x| means absolute value of x. But the heroes skipped their math lessons in school, so they asked you for help. Help them calculate the maximum value of f among all possible values of l and r for the given array a.\n\nInput\n\nThe first line contains single integer n (2 ≤ n ≤ 105) — the size of the array a.\n\nThe second line contains n integers a1, a2, ..., an (-109 ≤ ai ≤ 109) — the array elements.\n\nOutput\n\nPrint the only integer — the maximum value of f.\n\nExamples\n\nInput\n\n5\n1 4 2 3 1\n\n\nOutput\n\n3\n\nInput\n\n4\n1 5 4 7\n\n\nOutput\n\n6\n\nNote\n\nIn the first sample case, the optimal value of f is reached on intervals [1, 2] and [2, 5].\n\nIn the second case maximal value of f is reachable only on the whole array.", "grammar": {"answer": null}}
{"name": "p02249 Pattern Search", "description": "Find places where a R × C pattern is found within a H × W region. Print top-left coordinates (i, j) of sub-regions where the pattern found. The top-left and bottom-right coordinates of the region is (0, 0) and (H-1, W-1) respectively.\n\nConstraints\n\n* 1 ≤ H, W ≤ 1000\n* 1 ≤ R, C ≤ 1000\n* The input consists of alphabetical characters and digits\n\nInput\n\nIn the first line, two integers H and W are given. In the following H lines, i-th lines of the region are given.\n\nIn the next line, two integers R and C are given. In the following R lines, i-th lines of the pattern are given.\n\nExample\n\nInput\n\n4 5\n00010\n00101\n00010\n00100\n3 2\n10\n01\n10\n\n\nOutput\n\n0 3\n1 2", "grammar": {"answer": null}}
{"name": "p02824 AtCoder Grand Contest 041 - Voting Judges", "description": "N problems are proposed for an upcoming contest. Problem i has an initial integer score of A_i points.\n\nM judges are about to vote for problems they like. Each judge will choose exactly V problems, independently from the other judges, and increase the score of each chosen problem by 1.\n\nAfter all M judges cast their vote, the problems will be sorted in non-increasing order of score, and the first P problems will be chosen for the problemset. Problems with the same score can be ordered arbitrarily, this order is decided by the chief judge.\n\nHow many problems out of the given N have a chance to be chosen for the problemset?\n\nConstraints\n\n* 2 \\le N \\le 10^5\n* 1 \\le M \\le 10^9\n* 1 \\le V \\le N - 1\n* 1 \\le P \\le N - 1\n* 0 \\le A_i \\le 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M V P\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the number of problems that have a chance to be chosen for the problemset.\n\nExamples\n\nInput\n\n6 1 2 2\n2 1 1 3 0 2\n\n\nOutput\n\n5\n\n\nInput\n\n6 1 5 2\n2 1 1 3 0 2\n\n\nOutput\n\n3\n\n\nInput\n\n10 4 8 5\n7 2 3 6 1 6 5 4 6 5\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "p01883 Parentheses", "description": "Example\n\nInput\n\n1\n\n\nOutput\n\n)(", "grammar": {"answer": null}}
{"name": "p00314 Programming Contest", "description": "A programming contest will be held at White Tiger University this year as well. There are several questions in the contest, each of which is assigned a score according to the difficulty level.\n\nThe executive committee decided to calculate the score for each team based on the following rules, taking into account both the number of questions solved and their scores.\n\n\"Of the questions answered correctly by a team, the maximum A that satisfies the fact that there are A or more questions with a score of A or higher is the score of that team.\"\n\nCreate a program that calculates a team's score from the number of questions that a team answered correctly and the scores of those questions.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\nN\np1 p2 ... pN\n\n\nThe first line gives the number of questions the team answered correctly N (1 ≤ N ≤ 100). The score pi (1 ≤ pi ≤ 100) for each question answered correctly on the second line is given.\n\nOutput\n\nOutput the team score on one line.\n\nExamples\n\nInput\n\n7\n5 4 3 10 2 4 1\n\n\nOutput\n\n4\n\n\nInput\n\n3\n1 1 100\n\n\nOutput\n\n1\n\n\nInput\n\n4\n11 15 58 1\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "417_E. Square Table", "description": "While resting on the ship after the \"Russian Code Cup\" a boy named Misha invented an interesting game. He promised to give his quadrocopter to whoever will be the first one to make a rectangular table of size n × m, consisting of positive integers such that the sum of the squares of numbers for each row and each column was also a square.\n\nSince checking the correctness of the table manually is difficult, Misha asks you to make each number in the table to not exceed 108.\n\nInput\n\nThe first line contains two integers n and m (1 ≤ n, m ≤ 100) — the size of the table. \n\nOutput\n\nPrint the table that meets the condition: n lines containing m integers, separated by spaces. If there are multiple possible answers, you are allowed to print anyone. It is guaranteed that there exists at least one correct answer.\n\nExamples\n\nInput\n\n1 1\n\n\nOutput\n\n1\n\nInput\n\n1 2\n\n\nOutput\n\n3 4", "grammar": {"answer": null}}
{"name": "112_D. Petya and Divisors", "description": "Little Petya loves looking for numbers' divisors. One day Petya came across the following problem:\n\nYou are given n queries in the form \"xi yi\". For each query Petya should count how many divisors of number xi divide none of the numbers xi - yi, xi - yi + 1, ..., xi - 1. Help him.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 105). Each of the following n lines contain two space-separated integers xi and yi (1 ≤ xi ≤ 105, 0 ≤ yi ≤ i - 1, where i is the query's ordinal number; the numeration starts with 1). \n\nIf yi = 0 for the query, then the answer to the query will be the number of divisors of the number xi. In this case you do not need to take the previous numbers x into consideration.\n\nOutput\n\nFor each query print the answer on a single line: the number of positive integers k such that <image>\n\nExamples\n\nInput\n\n6\n4 0\n3 1\n5 2\n6 2\n18 4\n10000 3\n\n\nOutput\n\n3\n1\n1\n2\n2\n22\n\nNote\n\nLet's write out the divisors that give answers for the first 5 queries:\n\n1) 1, 2, 4 \n\n2) 3\n\n3) 5\n\n4) 2, 6\n\n5) 9, 18", "grammar": {"answer": null}}
{"name": "p03125 AtCoder Beginner Contest 118 - B +/- A", "description": "You are given positive integers A and B.\n\nIf A is a divisor of B, print A + B; otherwise, print B - A.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq A \\leq B \\leq 20\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nIf A is a divisor of B, print A + B; otherwise, print B - A.\n\nExamples\n\nInput\n\n4 12\n\n\nOutput\n\n16\n\n\nInput\n\n8 20\n\n\nOutput\n\n12\n\n\nInput\n\n1 1\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "702_A. Maximum Increase", "description": "You are given array consisting of n integers. Your task is to find the maximum length of an increasing subarray of the given array.\n\nA subarray is the sequence of consecutive elements of the array. Subarray is called increasing if each element of this subarray strictly greater than previous.\n\nInput\n\nThe first line contains single positive integer n (1 ≤ n ≤ 105) — the number of integers.\n\nThe second line contains n positive integers a1, a2, ..., an (1 ≤ ai ≤ 109).\n\nOutput\n\nPrint the maximum length of an increasing subarray of the given array.\n\nExamples\n\nInput\n\n5\n1 7 2 11 15\n\n\nOutput\n\n3\n\n\nInput\n\n6\n100 100 100 100 100 100\n\n\nOutput\n\n1\n\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p02566 AtCoder Library Practice Contest - Number of Substrings", "description": "You are given a string of length N. Calculate the number of distinct substrings of S.\n\nConstraints\n\n* 1 \\leq N \\leq 500,000\n* S consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\nabcbcba\n\n\nOutput\n\n21\n\n\nInput\n\nmississippi\n\n\nOutput\n\n53\n\n\nInput\n\nababacaca\n\n\nOutput\n\n33\n\n\nInput\n\naaaaa\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p02581 AtCoder Beginner Contest 176 - Brave CHAIN", "description": "We have 3N cards arranged in a row from left to right, where each card has an integer between 1 and N (inclusive) written on it. The integer written on the i-th card from the left is A_i.\n\nYou will do the following operation N-1 times:\n\n* Rearrange the five leftmost cards in any order you like, then remove the three leftmost cards. If the integers written on those three cards are all equal, you gain 1 point.\n\n\n\nAfter these N-1 operations, if the integers written on the remaining three cards are all equal, you will gain 1 additional point.\n\nFind the maximum number of points you can gain.\n\nConstraints\n\n* 1 \\leq N \\leq 2000\n* 1 \\leq A_i \\leq N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 \\cdots A_{3N}\n\n\nOutput\n\nPrint the maximum number of points you can gain.\n\nExamples\n\nInput\n\n2\n1 2 1 2 2 1\n\n\nOutput\n\n2\n\n\nInput\n\n3\n1 1 2 2 3 3 3 2 1\n\n\nOutput\n\n1\n\n\nInput\n\n3\n1 1 2 2 2 3 3 3 1\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p03922 CODE FESTIVAL 2016 Final (Parallel) - Pair Cards", "description": "Takahashi is playing with N cards.\n\nThe i-th card has an integer X_i on it.\n\nTakahashi is trying to create as many pairs of cards as possible satisfying one of the following conditions:\n\n* The integers on the two cards are the same.\n* The sum of the integers on the two cards is a multiple of M.\n\n\n\nFind the maximum number of pairs that can be created.\n\nNote that a card cannot be used in more than one pair.\n\nConstraints\n\n* 2≦N≦10^5\n* 1≦M≦10^5\n* 1≦X_i≦10^5\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN M\nX_1 X_2 ... X_N\n\n\nOutput\n\nPrint the maximum number of pairs that can be created.\n\nExamples\n\nInput\n\n7 5\n3 1 4 1 5 9 2\n\n\nOutput\n\n3\n\n\nInput\n\n15 10\n1 5 6 10 11 11 11 20 21 25 25 26 99 99 99\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p02885 AtCoder Beginner Contest 143 - Curtain", "description": "The window of Takahashi's room has a width of A. There are two curtains hung over the window, each of which has a horizontal length of B. (Vertically, the curtains are long enough to cover the whole window.)\n\nWe will close the window so as to minimize the total horizontal length of the uncovered part of the window. Find the total horizontal length of the uncovered parts of the window then.\n\nConstraints\n\n* 1 \\leq A \\leq 100\n* 1 \\leq B \\leq 100\n* A and B are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nPrint the total horizontal length of the uncovered parts of the window.\n\nExamples\n\nInput\n\n12 4\n\n\nOutput\n\n4\n\n\nInput\n\n20 15\n\n\nOutput\n\n0\n\n\nInput\n\n20 30\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "367_B. Sereja ans Anagrams", "description": "Sereja has two sequences a and b and number p. Sequence a consists of n integers a1, a2, ..., an. Similarly, sequence b consists of m integers b1, b2, ..., bm. As usual, Sereja studies the sequences he has. Today he wants to find the number of positions q (q + (m - 1)·p ≤ n; q ≥ 1), such that sequence b can be obtained from sequence aq, aq + p, aq + 2p, ..., aq + (m - 1)p by rearranging elements.\n\nSereja needs to rush to the gym, so he asked to find all the described positions of q.\n\nInput\n\nThe first line contains three integers n, m and p (1 ≤ n, m ≤ 2·105, 1 ≤ p ≤ 2·105). The next line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 109). The next line contains m integers b1, b2, ..., bm (1 ≤ bi ≤ 109).\n\nOutput\n\nIn the first line print the number of valid qs. In the second line, print the valid values in the increasing order.\n\nExamples\n\nInput\n\n5 3 1\n1 2 3 2 1\n1 2 3\n\n\nOutput\n\n2\n1 3\n\n\nInput\n\n6 3 2\n1 3 2 2 3 1\n1 2 3\n\n\nOutput\n\n2\n1 2", "grammar": {"answer": null}}
{"name": "349_A. Cinema Line", "description": "The new \"Die Hard\" movie has just been released! There are n people at the cinema box office standing in a huge line. Each of them has a single 100, 50 or 25 ruble bill. A \"Die Hard\" ticket costs 25 rubles. Can the booking clerk sell a ticket to each person and give the change if he initially has no money and sells the tickets strictly in the order people follow in the line?\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 105) — the number of people in the line. The next line contains n integers, each of them equals 25, 50 or 100 — the values of the bills the people have. The numbers are given in the order from the beginning of the line (at the box office) to the end of the line.\n\nOutput\n\nPrint \"YES\" (without the quotes) if the booking clerk can sell a ticket to each person and give the change. Otherwise print \"NO\".\n\nExamples\n\nInput\n\n4\n25 25 50 50\n\n\nOutput\n\nYES\n\n\nInput\n\n2\n25 100\n\n\nOutput\n\nNO\n\n\nInput\n\n4\n50 50 25 25\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p03317 AtCoder Beginner Contest 101 - Minimization", "description": "There is a sequence of length N: A_1, A_2, ..., A_N. Initially, this sequence is a permutation of 1, 2, ..., N.\n\nOn this sequence, Snuke can perform the following operation:\n\n* Choose K consecutive elements in the sequence. Then, replace the value of each chosen element with the minimum value among the chosen elements.\n\n\n\nSnuke would like to make all the elements in this sequence equal by repeating the operation above some number of times. Find the minimum number of operations required. It can be proved that, Under the constraints of this problem, this objective is always achievable.\n\nConstraints\n\n* 2 \\leq K \\leq N \\leq 100000\n* A_1, A_2, ..., A_N is a permutation of 1, 2, ..., N.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the minimum number of operations required.\n\nExamples\n\nInput\n\n4 3\n2 3 1 4\n\n\nOutput\n\n2\n\n\nInput\n\n3 3\n1 2 3\n\n\nOutput\n\n1\n\n\nInput\n\n8 3\n7 3 1 8 4 6 2 5\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p00024 Physical Experiments", "description": "Ignoring the air resistance, velocity of a freely falling object $v$ after $t$ seconds and its drop $y$ in $t$ seconds are represented by the following formulas:\n\n$ v = 9.8 t $\n$ y = 4.9 t^2 $\n\n\nA person is trying to drop down a glass ball and check whether it will crack. Your task is to write a program to help this experiment.\n\nYou are given the minimum velocity to crack the ball. Your program should print the lowest possible floor of a building to crack the ball. The height of the $N$ floor of the building is defined by $5 \\times N - 5$.\n\n\n\nInput\n\nThe input consists of multiple datasets. Each dataset, a line, consists of the minimum velocity v (0 < v < 200) to crack the ball. The value is given by a decimal fraction, with at most 4 digits after the decimal point. The input ends with EOF. The number of datasets is less than or equal to 50.\n\nOutput\n\nFor each dataset, print the lowest possible floor where the ball cracks.\n\nExample\n\nInput\n\n25.4\n25.4\n\n\nOutput\n\n8\n8", "grammar": {"answer": null}}
{"name": "482_A. Diverse Permutation", "description": "Permutation p is an ordered set of integers p1, p2, ..., pn, consisting of n distinct positive integers not larger than n. We'll denote as n the length of permutation p1, p2, ..., pn.\n\nYour task is to find such permutation p of length n, that the group of numbers |p1 - p2|, |p2 - p3|, ..., |pn - 1 - pn| has exactly k distinct elements.\n\nInput\n\nThe single line of the input contains two space-separated positive integers n, k (1 ≤ k < n ≤ 105).\n\nOutput\n\nPrint n integers forming the permutation. If there are multiple answers, print any of them.\n\nExamples\n\nInput\n\n3 2\n\n\nOutput\n\n1 3 2\n\n\nInput\n\n3 1\n\n\nOutput\n\n1 2 3\n\n\nInput\n\n5 2\n\n\nOutput\n\n1 3 2 4 5\n\nNote\n\nBy |x| we denote the absolute value of number x. ", "grammar": {"answer": null}}
{"name": "p02802 AtCoder Beginner Contest 151 - Welcome to AtCoder", "description": "Takahashi participated in a contest on AtCoder.\n\nThe contest had N problems.\n\nTakahashi made M submissions during the contest.\n\nThe i-th submission was made for the p_i-th problem and received the verdict S_i (`AC` or `WA`).\n\nThe number of Takahashi's correct answers is the number of problems on which he received an `AC` once or more.\n\nThe number of Takahashi's penalties is the sum of the following count for the problems on which he received an `AC` once or more: the number of `WA`s received before receiving an `AC` for the first time on that problem.\n\nFind the numbers of Takahashi's correct answers and penalties.\n\nConstraints\n\n* N, M, and p_i are integers.\n* 1 \\leq N \\leq 10^5\n* 0 \\leq M \\leq 10^5\n* 1 \\leq p_i \\leq N\n* S_i is `AC` or `WA`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\np_1 S_1\n:\np_M S_M\n\n\nOutput\n\nPrint the number of Takahashi's correct answers and the number of Takahashi's penalties.\n\nExamples\n\nInput\n\n2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n\n\nOutput\n\n2 2\n\n\nInput\n\n100000 3\n7777 AC\n7777 AC\n7777 AC\n\n\nOutput\n\n1 0\n\n\nInput\n\n6 0\n\n\nOutput\n\n0 0", "grammar": {"answer": null}}
{"name": "871_A. Maximum splitting", "description": "You are given several queries. In the i-th query you are given a single positive integer ni. You are to represent ni as a sum of maximum possible number of composite summands and print this maximum number, or print -1, if there are no such splittings.\n\nAn integer greater than 1 is composite, if it is not prime, i.e. if it has positive divisors not equal to 1 and the integer itself.\n\nInput\n\nThe first line contains single integer q (1 ≤ q ≤ 105) — the number of queries.\n\nq lines follow. The (i + 1)-th line contains single integer ni (1 ≤ ni ≤ 109) — the i-th query.\n\nOutput\n\nFor each query print the maximum possible number of summands in a valid splitting to composite summands, or -1, if there are no such splittings.\n\nExamples\n\nInput\n\n1\n12\n\n\nOutput\n\n3\n\n\nInput\n\n2\n6\n8\n\n\nOutput\n\n1\n2\n\n\nInput\n\n3\n1\n2\n3\n\n\nOutput\n\n-1\n-1\n-1\n\nNote\n\n12 = 4 + 4 + 4 = 4 + 8 = 6 + 6 = 12, but the first splitting has the maximum possible number of summands.\n\n8 = 4 + 4, 6 can't be split into several composite summands.\n\n1, 2, 3 are less than any composite number, so they do not have valid splittings.", "grammar": {"answer": null}}
{"name": "p03275 AtCoder Beginner Contest 107 - Median of Medians", "description": "We will define the median of a sequence b of length M, as follows:\n\n* Let b' be the sequence obtained by sorting b in non-decreasing order. Then, the value of the (M / 2 + 1)-th element of b' is the median of b. Here, / is integer division, rounding down.\n\n\n\nFor example, the median of (10, 30, 20) is 20; the median of (10, 30, 20, 40) is 30; the median of (10, 10, 10, 20, 30) is 10.\n\nSnuke comes up with the following problem.\n\nYou are given a sequence a of length N. For each pair (l, r) (1 \\leq l \\leq r \\leq N), let m_{l, r} be the median of the contiguous subsequence (a_l, a_{l + 1}, ..., a_r) of a. We will list m_{l, r} for all pairs (l, r) to create a new sequence m. Find the median of m.\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* a_i is an integer.\n* 1 \\leq a_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the median of m.\n\nExamples\n\nInput\n\n3\n10 30 20\n\n\nOutput\n\n30\n\n\nInput\n\n1\n10\n\n\nOutput\n\n10\n\n\nInput\n\n10\n5 9 5 9 8 9 3 5 4 3\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "p02748 Social Infrastructure Information Systems Division  Hitachi Programming Contest 2020 - Nice Shopping", "description": "You are visiting a large electronics store to buy a refrigerator and a microwave.\n\nThe store sells A kinds of refrigerators and B kinds of microwaves. The i-th refrigerator ( 1 \\le i \\le A ) is sold at a_i yen (the currency of Japan), and the j-th microwave ( 1 \\le j \\le B ) is sold at b_j yen.\n\nYou have M discount tickets. With the i-th ticket ( 1 \\le i \\le M ), you can get a discount of c_i yen from the total price when buying the x_i-th refrigerator and the y_i-th microwave together. Only one ticket can be used at a time.\n\nYou are planning to buy one refrigerator and one microwave. Find the minimum amount of money required.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\le A \\le 10^5\n* 1 \\le B \\le 10^5\n* 1 \\le M \\le 10^5\n* 1 \\le a_i , b_i , c_i \\le 10^5\n* 1 \\le x_i \\le A\n* 1 \\le y_i \\le B\n* c_i \\le a_{x_i} + b_{y_i}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B M\na_1 a_2 ... a_A\nb_1 b_2 ... b_B\nx_1 y_1 c_1\n\\vdots\nx_M y_M c_M\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n2 3 1\n3 3\n3 3 3\n1 2 1\n\n\nOutput\n\n5\n\n\nInput\n\n1 1 2\n10\n10\n1 1 5\n1 1 10\n\n\nOutput\n\n10\n\n\nInput\n\n2 2 1\n3 5\n3 5\n2 2 2\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p03719 AtCoder Beginner Contest 061 - Between Two Integers", "description": "You are given three integers A, B and C. Determine whether C is not less than A and not greater than B.\n\nConstraints\n\n* -100≤A,B,C≤100\n* A, B and C are all integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C\n\n\nOutput\n\nIf the condition is satisfied, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n1 3 2\n\n\nOutput\n\nYes\n\n\nInput\n\n6 5 4\n\n\nOutput\n\nNo\n\n\nInput\n\n2 2 2\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "1175_D. Array Splitting", "description": "You are given an array a_1, a_2, ..., a_n and an integer k.\n\nYou are asked to divide this array into k non-empty consecutive subarrays. Every element in the array should be included in exactly one subarray. Let f(i) be the index of subarray the i-th element belongs to. Subarrays are numbered from left to right and from 1 to k.\n\nLet the cost of division be equal to ∑_{i=1}^{n} (a_i ⋅ f(i)). For example, if a = [1, -2, -3, 4, -5, 6, -7] and we divide it into 3 subbarays in the following way: [1, -2, -3], [4, -5], [6, -7], then the cost of division is equal to 1 ⋅ 1 - 2 ⋅ 1 - 3 ⋅ 1 + 4 ⋅ 2 - 5 ⋅ 2 + 6 ⋅ 3 - 7 ⋅ 3 = -9.\n\nCalculate the maximum cost you can obtain by dividing the array a into k non-empty consecutive subarrays. \n\nInput\n\nThe first line contains two integers n and k (1 ≤ k ≤ n ≤ 3 ⋅ 10^5).\n\nThe second line contains n integers a_1, a_2, ..., a_n ( |a_i| ≤ 10^6). \n\nOutput\n\nPrint the maximum cost you can obtain by dividing the array a into k nonempty consecutive subarrays. \n\nExamples\n\nInput\n\n\n5 2\n-1 -2 5 -4 8\n\n\nOutput\n\n\n15\n\n\nInput\n\n\n7 6\n-3 0 -1 -2 -2 -4 -1\n\n\nOutput\n\n\n-45\n\n\nInput\n\n\n4 1\n3 -1 6 0\n\n\nOutput\n\n\n8", "grammar": {"answer": null}}
{"name": "802_M. April Fools' Problem (easy)", "description": "The marmots have prepared a very easy problem for this year's HC2 – this one. It involves numbers n, k and a sequence of n positive integers a1, a2, ..., an. They also came up with a beautiful and riveting story for the problem statement. It explains what the input means, what the program should output, and it also reads like a good criminal.\n\nHowever I, Heidi, will have none of that. As my joke for today, I am removing the story from the statement and replacing it with these two unhelpful paragraphs. Now solve the problem, fools!\n\nInput\n\nThe first line of the input contains two space-separated integers n and k (1 ≤ k ≤ n ≤ 2200). The second line contains n space-separated integers a1, ..., an (1 ≤ ai ≤ 104).\n\nOutput\n\nOutput one number.\n\nExamples\n\nInput\n\n8 5\n1 1 1 1 1 1 1 1\n\n\nOutput\n\n5\n\nInput\n\n10 3\n16 8 2 4 512 256 32 128 64 1\n\n\nOutput\n\n7\n\nInput\n\n5 1\n20 10 50 30 46\n\n\nOutput\n\n10\n\nInput\n\n6 6\n6 6 6 6 6 6\n\n\nOutput\n\n36\n\nInput\n\n1 1\n100\n\n\nOutput\n\n100", "grammar": {"answer": null}}
{"name": "p03778 AtCoder Beginner Contest 056 - NarrowRectanglesEasy", "description": "AtCoDeer the deer found two rectangles lying on the table, each with height 1 and width W. If we consider the surface of the desk as a two-dimensional plane, the first rectangle covers the vertical range of [0,1] and the horizontal range of [a,a+W], and the second rectangle covers the vertical range of [1,2] and the horizontal range of [b,b+W], as shown in the following figure:\n\n<image>\n\nAtCoDeer will move the second rectangle horizontally so that it connects with the first rectangle. Find the minimum distance it needs to be moved.\n\nConstraints\n\n* All input values are integers.\n* 1≤W≤10^5\n* 1≤a,b≤10^5\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nW a b\n\n\nOutput\n\nPrint the minimum distance the second rectangle needs to be moved.\n\nExamples\n\nInput\n\n3 2 6\n\n\nOutput\n\n1\n\n\nInput\n\n3 1 3\n\n\nOutput\n\n0\n\n\nInput\n\n5 10 1\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "1538_C. Number of Pairs", "description": "You are given an array a of n integers. Find the number of pairs (i, j) (1 ≤ i < j ≤ n) where the sum of a_i + a_j is greater than or equal to l and less than or equal to r (that is, l ≤ a_i + a_j ≤ r).\n\nFor example, if n = 3, a = [5, 1, 2], l = 4 and r = 7, then two pairs are suitable: \n\n  * i=1 and j=2 (4 ≤ 5 + 1 ≤ 7); \n  * i=1 and j=3 (4 ≤ 5 + 2 ≤ 7). \n\nInput\n\nThe first line contains an integer t (1 ≤ t ≤ 10^4). Then t test cases follow.\n\nThe first line of each test case contains three integers n, l, r (1 ≤ n ≤ 2 ⋅ 10^5, 1 ≤ l ≤ r ≤ 10^9) — the length of the array and the limits on the sum in the pair.\n\nThe second line contains n integers a_1, a_2, …, a_n (1 ≤ a_i ≤ 10^9).\n\nIt is guaranteed that the sum of n overall test cases does not exceed 2 ⋅ 10^5.\n\nOutput\n\nFor each test case, output a single integer — the number of index pairs (i, j) (i < j), such that l ≤ a_i + a_j ≤ r.\n\nExample\n\nInput\n\n\n4\n3 4 7\n5 1 2\n5 5 8\n5 1 2 4 3\n4 100 1000\n1 1 1 1\n5 9 13\n2 5 5 1 1\n\n\nOutput\n\n\n2\n7\n0\n1", "grammar": {"answer": null}}
{"name": "p04052 AtCoder Grand Contest 001 - Wide Swap", "description": "You are given a permutation P_1 ... P_N of the set {1, 2, ..., N}.\n\nYou can apply the following operation to this permutation, any number of times (possibly zero):\n\n* Choose two indices i,j (1 ≦ i < j ≦ N), such that j - i ≧ K and |P_i - P_j| = 1. Then, swap the values of P_i and P_j.\n\n\n\nAmong all permutations that can be obtained by applying this operation to the given permutation, find the lexicographically smallest one.\n\nConstraints\n\n* 2≦N≦500,000\n* 1≦K≦N-1\n* P is a permutation of the set {1, 2, ..., N}.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN K\nP_1 P_2 ... P_N\n\n\nOutput\n\nPrint the lexicographically smallest permutation that can be obtained.\n\nExamples\n\nInput\n\n4 2\n4 2 3 1\n\n\nOutput\n\n2\n1\n4\n3\n\n\nInput\n\n5 1\n5 4 3 2 1\n\n\nOutput\n\n1\n2\n3\n4\n5\n\n\nInput\n\n8 3\n4 5 7 8 3 1 2 6\n\n\nOutput\n\n1\n2\n6\n7\n5\n3\n4\n8", "grammar": {"answer": null}}
{"name": "146_B. Lucky Mask", "description": "Petya loves lucky numbers very much. Everybody knows that lucky numbers are positive integers whose decimal record contains only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.\n\nPetya calls a mask of a positive integer n the number that is obtained after successive writing of all lucky digits of number n from the left to the right. For example, the mask of number 72174994 is number 7744, the mask of 7 is 7, the mask of 9999047 is 47. Obviously, mask of any number is always a lucky number.\n\nPetya has two numbers — an arbitrary integer a and a lucky number b. Help him find the minimum number c (c > a) such that the mask of number c equals b.\n\nInput\n\nThe only line contains two integers a and b (1 ≤ a, b ≤ 105). It is guaranteed that number b is lucky.\n\nOutput\n\nIn the only line print a single number — the number c that is sought by Petya.\n\nExamples\n\nInput\n\n1 7\n\n\nOutput\n\n7\n\n\nInput\n\n100 47\n\n\nOutput\n\n147", "grammar": {"answer": null}}
{"name": "459_D. Pashmak and Parmida's problem", "description": "Parmida is a clever girl and she wants to participate in Olympiads this year. Of course she wants her partner to be clever too (although he's not)! Parmida has prepared the following test problem for Pashmak.\n\nThere is a sequence a that consists of n integers a1, a2, ..., an. Let's denote f(l, r, x) the number of indices k such that: l ≤ k ≤ r and ak = x. His task is to calculate the number of pairs of indicies i, j (1 ≤ i < j ≤ n) such that f(1, i, ai) > f(j, n, aj).\n\nHelp Pashmak with the test.\n\nInput\n\nThe first line of the input contains an integer n (1 ≤ n ≤ 106). The second line contains n space-separated integers a1, a2, ..., an (1 ≤ ai ≤ 109).\n\nOutput\n\nPrint a single integer — the answer to the problem.\n\nExamples\n\nInput\n\n7\n1 2 1 1 2 2 1\n\n\nOutput\n\n8\n\n\nInput\n\n3\n1 1 1\n\n\nOutput\n\n1\n\n\nInput\n\n5\n1 2 3 4 5\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p04038 AtCoder Grand Contest 002 - Leftmost Ball", "description": "Snuke loves colorful balls. He has a total of N×K balls, K in each of his favorite N colors. The colors are numbered 1 through N.\n\nHe will arrange all of the balls in a row from left to right, in arbitrary order. Then, for each of the N colors, he will paint the leftmost ball of that color into color 0, a color different from any of the N original colors.\n\nAfter painting, how many sequences of the colors of the balls are possible? Find this number modulo 10^9+7.\n\nConstraints\n\n* 1≤N,K≤2,000\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN K\n\n\nOutput\n\nPrint the number of the possible sequences of the colors of the balls after painting, modulo 10^9+7.\n\nExamples\n\nInput\n\n2 2\n\n\nOutput\n\n4\n\n\nInput\n\n3 1\n\n\nOutput\n\n1\n\n\nInput\n\n2 3\n\n\nOutput\n\n14\n\n\nInput\n\n2000 2000\n\n\nOutput\n\n546381702", "grammar": {"answer": null}}
{"name": "p03053 AtCoder Grand Contest 033 - Darker and Darker", "description": "You are given a grid of squares with H horizontal rows and W vertical columns, where each square is painted white or black. HW characters from A_{11} to A_{HW} represent the colors of the squares. A_{ij} is `#` if the square at the i-th row from the top and the j-th column from the left is black, and A_{ij} is `.` if that square is white.\n\nWe will repeatedly perform the following operation until all the squares are black:\n\n* Every white square that shares a side with a black square, becomes black.\n\n\n\nFind the number of operations that will be performed. The initial grid has at least one black square.\n\nConstraints\n\n* 1 \\leq H,W \\leq 1000\n* A_{ij} is `#` or `.`.\n* The given grid has at least one black square.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH W\nA_{11}A_{12}...A_{1W}\n:\nA_{H1}A_{H2}...A_{HW}\n\n\nOutput\n\nPrint the number of operations that will be performed.\n\nExamples\n\nInput\n\n3 3\n...\n.#.\n...\n\n\nOutput\n\n2\n\n\nInput\n\n6 6\n..#..#\n......\n..#..\n......\n.#....\n....#.\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "1246_B. Power Products", "description": "You are given n positive integers a_1, …, a_n, and an integer k ≥ 2. Count the number of pairs i, j such that 1 ≤ i < j ≤ n, and there exists an integer x such that a_i ⋅ a_j = x^k.\n\nInput\n\nThe first line contains two integers n and k (2 ≤ n ≤ 10^5, 2 ≤ k ≤ 100).\n\nThe second line contains n integers a_1, …, a_n (1 ≤ a_i ≤ 10^5).\n\nOutput\n\nPrint a single integer — the number of suitable pairs.\n\nExample\n\nInput\n\n\n6 3\n1 3 9 8 24 1\n\n\nOutput\n\n\n5\n\nNote\n\nIn the sample case, the suitable pairs are:\n\n  * a_1 ⋅ a_4 = 8 = 2^3;\n  * a_1 ⋅ a_6 = 1 = 1^3;\n  * a_2 ⋅ a_3 = 27 = 3^3;\n  * a_3 ⋅ a_5 = 216 = 6^3;\n  * a_4 ⋅ a_6 = 8 = 2^3.", "grammar": {"answer": null}}
{"name": "p01885 Escape from the Hell", "description": "Example\n\nInput\n\n3 9\n6 3\n5 2\n3 1\n2\n2\n2\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "1397_B. Power Sequence", "description": "Let's call a list of positive integers a_0, a_1, ..., a_{n-1} a power sequence if there is a positive integer c, so that for every 0 ≤ i ≤ n-1 then a_i = c^i.\n\nGiven a list of n positive integers a_0, a_1, ..., a_{n-1}, you are allowed to:\n\n  * Reorder the list (i.e. pick a permutation p of \\{0,1,...,n - 1\\} and change a_i to a_{p_i}), then \n  * Do the following operation any number of times: pick an index i and change a_i to a_i - 1 or a_i + 1 (i.e. increment or decrement a_i by 1) with a cost of 1. \n\n\n\nFind the minimum cost to transform a_0, a_1, ..., a_{n-1} into a power sequence.\n\nInput\n\nThe first line contains an integer n (3 ≤ n ≤ 10^5).\n\nThe second line contains n integers a_0, a_1, ..., a_{n-1} (1 ≤ a_i ≤ 10^9).\n\nOutput\n\nPrint the minimum cost to transform a_0, a_1, ..., a_{n-1} into a power sequence.\n\nExamples\n\nInput\n\n\n3\n1 3 2\n\n\nOutput\n\n\n1\n\n\nInput\n\n\n3\n1000000000 1000000000 1000000000\n\n\nOutput\n\n\n1999982505\n\nNote\n\nIn the first example, we first reorder \\{1, 3, 2\\} into \\{1, 2, 3\\}, then increment a_2 to 4 with cost 1 to get a power sequence \\{1, 2, 4\\}.", "grammar": {"answer": null}}
{"name": "p02098 The Mean of Angles", "description": "Problem\n\nFind the angle between the two given angles θ1 and θ2. Here, the angle between them is defined as \"θ1 & plus; t'when t'is the one with the smallest absolute value among the t satisfying θ1 & plus; t = θ2 − t\" as shown in the figure below.\n\nA image of angles\n\nConstraints\n\nThe input satisfies the following conditions.\n\n* Angle is expressed in degrees\n* 0 ≤ θ1, θ2 <360\n* θ1 and θ2 are integers\n* | θ1 − θ2 | ≠ 180\n* No input is given that gives the answer [0,0.0001] or [359.999,360)\n\nInput\n\nThe input is given in the following format.\n\n\nθ1\nθ2\n\n\nOutput\n\nOutput the angle between θ1 and θ2 in one line in the range [0,360) in degrees. However, it must not include an error exceeding 0.0001.\n\nExamples\n\nInput\n\n10\n20\n\n\nOutput\n\n15.0\n\n\nInput\n\n20\n350\n\n\nOutput\n\n5.0", "grammar": {"answer": null}}
{"name": "1520_B. Ordinary Numbers", "description": "Let's call a positive integer n ordinary if in the decimal notation all its digits are the same. For example, 1, 2 and 99 are ordinary numbers, but 719 and 2021 are not ordinary numbers.\n\nFor a given number n, find the number of ordinary numbers among the numbers from 1 to n.\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 10^4). Then t test cases follow.\n\nEach test case is characterized by one integer n (1 ≤ n ≤ 10^9).\n\nOutput\n\nFor each test case output the number of ordinary numbers among numbers from 1 to n.\n\nExample\n\nInput\n\n\n6\n1\n2\n3\n4\n5\n100\n\n\nOutput\n\n\n1\n2\n3\n4\n5\n18", "grammar": {"answer": null}}
{"name": "p02913 AtCoder Beginner Contest 141 - Who Says a Pun?", "description": "Given is a string S of length N.\n\nFind the maximum length of a non-empty string that occurs twice or more in S as contiguous substrings without overlapping.\n\nMore formally, find the maximum positive integer len such that there exist integers l_1 and l_2 ( 1 \\leq l_1, l_2 \\leq N - len + 1 ) that satisfy the following:\n\n* l_1 + len \\leq l_2\n\n* S[l_1+i] = S[l_2+i] (i = 0, 1, ..., len - 1)\n\n\n\n\nIf there is no such integer len, print 0.\n\nConstraints\n\n* 2 \\leq N \\leq 5 \\times 10^3\n* |S| = N\n* S consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS\n\n\nOutput\n\nPrint the maximum length of a non-empty string that occurs twice or more in S as contiguous substrings without overlapping. If there is no such non-empty string, print 0 instead.\n\nExamples\n\nInput\n\n5\nababa\n\n\nOutput\n\n2\n\n\nInput\n\n2\nxy\n\n\nOutput\n\n0\n\n\nInput\n\n13\nstrangeorange\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "805_A. Fake NP", "description": "Tavak and Seyyed are good friends. Seyyed is very funny and he told Tavak to solve the following problem instead of longest-path.\n\nYou are given l and r. For all integers from l to r, inclusive, we wrote down all of their integer divisors except 1. Find the integer that we wrote down the maximum number of times.\n\nSolve the problem to show that it's not a NP problem.\n\nInput\n\nThe first line contains two integers l and r (2 ≤ l ≤ r ≤ 109).\n\nOutput\n\nPrint single integer, the integer that appears maximum number of times in the divisors. \n\nIf there are multiple answers, print any of them.\n\nExamples\n\nInput\n\n19 29\n\n\nOutput\n\n2\n\n\nInput\n\n3 6\n\n\nOutput\n\n3\n\nNote\n\nDefinition of a divisor: <https://www.mathsisfun.com/definitions/divisor-of-an-integer-.html>\n\nThe first example: from 19 to 29 these numbers are divisible by 2: {20, 22, 24, 26, 28}.\n\nThe second example: from 3 to 6 these numbers are divisible by 3: {3, 6}.", "grammar": {"answer": null}}
{"name": "p02694 AtCoder Beginner Contest 165 - 1%", "description": "Takahashi has a deposit of 100 yen (the currency of Japan) in AtCoder Bank.\n\nThe bank pays an annual interest rate of 1 % compounded annually. (A fraction of less than one yen is discarded.)\n\nAssuming that nothing other than the interest affects Takahashi's balance, in how many years does the balance reach X yen or above for the first time?\n\nConstraints\n\n* 101 \\le X \\le 10^{18}\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX\n\n\nOutput\n\nPrint the number of years it takes for Takahashi's balance to reach X yen or above for the first time.\n\nExamples\n\nInput\n\n103\n\n\nOutput\n\n3\n\n\nInput\n\n1000000000000000000\n\n\nOutput\n\n3760\n\n\nInput\n\n1333333333\n\n\nOutput\n\n1706", "grammar": {"answer": null}}
{"name": "284_A. Cows and Primitive Roots", "description": "The cows have just learned what a primitive root is! Given a prime p, a primitive root <image> is an integer x (1 ≤ x < p) such that none of integers x - 1, x2 - 1, ..., xp - 2 - 1 are divisible by p, but xp - 1 - 1 is. \n\nUnfortunately, computing primitive roots can be time consuming, so the cows need your help. Given a prime p, help the cows find the number of primitive roots <image>.\n\nInput\n\nThe input contains a single line containing an integer p (2 ≤ p < 2000). It is guaranteed that p is a prime.\n\nOutput\n\nOutput on a single line the number of primitive roots <image>.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n1\n\n\nInput\n\n5\n\n\nOutput\n\n2\n\nNote\n\nThe only primitive root <image> is 2.\n\nThe primitive roots <image> are 2 and 3.", "grammar": {"answer": null}}
{"name": "p02298 Is-Convex", "description": "For a given polygon g, print \"1\" if g is a convex polygon, \"0\" otherwise. Here, in a convex polygon, all interior angles are less than or equal to 180 degrees.\n\ng is represented by a sequence of points p1, p2,..., pn where line segments connecting pi and pi+1 (1 ≤ i ≤ n-1) are sides of the polygon. The line segment connecting pn and p1 is also a side of the polygon.\n\nConstraints\n\n* 3 ≤ n ≤ 100\n* -10000 ≤ xi, yi ≤ 10000\n* No point of the polygon will occur more than once.\n* Two sides of the polygon can intersect only at a common endpoint.\n\nInput\n\ng is given by coordinates of the points p1,..., pn in the following format:\n\n\nn\nx1 y1\nx2 y2\n:\nxn yn\n\n\nThe first integer n is the number of points. The coordinate of a point pi is given by two integers xi and yi. The coordinates of points are given in the order of counter-clockwise visit of them.\n\nOutput\n\nPrint \"1\" or \"0\" in a line.\n\nExamples\n\nInput\n\n4\n0 0\n3 1\n2 3\n0 3\n\n\nOutput\n\n1\n\n\nInput\n\n5\n0 0\n2 0\n1 1\n2 2\n0 2\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "670_D2. Magic Powder - 2", "description": "The term of this problem is the same as the previous one, the only exception — increased restrictions.\n\nInput\n\nThe first line contains two positive integers n and k (1 ≤ n ≤ 100 000, 1 ≤ k ≤ 109) — the number of ingredients and the number of grams of the magic powder.\n\nThe second line contains the sequence a1, a2, ..., an (1 ≤ ai ≤ 109), where the i-th number is equal to the number of grams of the i-th ingredient, needed to bake one cookie.\n\nThe third line contains the sequence b1, b2, ..., bn (1 ≤ bi ≤ 109), where the i-th number is equal to the number of grams of the i-th ingredient, which Apollinaria has.\n\nOutput\n\nPrint the maximum number of cookies, which Apollinaria will be able to bake using the ingredients that she has and the magic powder.\n\nExamples\n\nInput\n\n1 1000000000\n1\n1000000000\n\n\nOutput\n\n2000000000\n\n\nInput\n\n10 1\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n1 1 1 1 1 1 1 1 1 1\n\n\nOutput\n\n0\n\n\nInput\n\n3 1\n2 1 4\n11 3 16\n\n\nOutput\n\n4\n\n\nInput\n\n4 3\n4 3 5 6\n11 12 14 20\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p02681 AtCoder Beginner Contest 167 - Registration", "description": "Takahashi wants to be a member of some web service.\n\nHe tried to register himself with the ID S, which turned out to be already used by another user.\n\nThus, he decides to register using a string obtained by appending one character at the end of S as his ID.\n\nHe is now trying to register with the ID T. Determine whether this string satisfies the property above.\n\nConstraints\n\n* S and T are strings consisting of lowercase English letters.\n* 1 \\leq |S| \\leq 10\n* |T| = |S| + 1\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\nT\n\n\nOutput\n\nIf T satisfies the property in Problem Statement, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\nchokudai\nchokudaiz\n\n\nOutput\n\nYes\n\n\nInput\n\nsnuke\nsnekee\n\n\nOutput\n\nNo\n\n\nInput\n\na\naa\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "1139_A. Even Substrings", "description": "You are given a string s=s_1s_2... s_n of length n, which only contains digits 1, 2, ..., 9.\n\nA substring s[l ... r] of s is a string s_l s_{l + 1} s_{l + 2} … s_r. A substring s[l ... r] of s is called even if the number represented by it is even. \n\nFind the number of even substrings of s. Note, that even if some substrings are equal as strings, but have different l and r, they are counted as different substrings.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 65000) — the length of the string s.\n\nThe second line contains a string s of length n. The string s consists only of digits 1, 2, ..., 9.\n\nOutput\n\nPrint the number of even substrings of s.\n\nExamples\n\nInput\n\n\n4\n1234\n\n\nOutput\n\n\n6\n\nInput\n\n\n4\n2244\n\n\nOutput\n\n\n10\n\nNote\n\nIn the first example, the [l, r] pairs corresponding to even substrings are: \n\n  * s[1 ... 2]\n  * s[2 ... 2]\n  * s[1 ... 4]\n  * s[2 ... 4]\n  * s[3 ... 4]\n  * s[4 ... 4] \n\n\n\nIn the second example, all 10 substrings of s are even substrings. Note, that while substrings s[1 ... 1] and s[2 ... 2] both define the substring \"2\", they are still counted as different substrings.", "grammar": {"answer": null}}
{"name": "1230_A. Dawid and Bags of Candies", "description": "Dawid has four bags of candies. The i-th of them contains a_i candies. Also, Dawid has two friends. He wants to give each bag to one of his two friends. Is it possible to distribute the bags in such a way that each friend receives the same amount of candies in total?\n\nNote, that you can't keep bags for yourself or throw them away, each bag should be given to one of the friends.\n\nInput\n\nThe only line contains four integers a_1, a_2, a_3 and a_4 (1 ≤ a_i ≤ 100) — the numbers of candies in each bag.\n\nOutput\n\nOutput YES if it's possible to give the bags to Dawid's friends so that both friends receive the same amount of candies, or NO otherwise. Each character can be printed in any case (either uppercase or lowercase).\n\nExamples\n\nInput\n\n\n1 7 11 5\n\n\nOutput\n\n\nYES\n\n\nInput\n\n\n7 3 2 5\n\n\nOutput\n\n\nNO\n\nNote\n\nIn the first sample test, Dawid can give the first and the third bag to the first friend, and the second and the fourth bag to the second friend. This way, each friend will receive 12 candies.\n\nIn the second sample test, it's impossible to distribute the bags.", "grammar": {"answer": null}}
{"name": "p03353 AtCoder Beginner Contest 097 - K-th Substring", "description": "You are given a string s. Among the different substrings of s, print the K-th lexicographically smallest one.\n\nA substring of s is a string obtained by taking out a non-empty contiguous part in s. For example, if s = `ababc`, `a`, `bab` and `ababc` are substrings of s, while `ac`, `z` and an empty string are not. Also, we say that substrings are different when they are different as strings.\n\nLet X = x_{1}x_{2}...x_{n} and Y = y_{1}y_{2}...y_{m} be two distinct strings. X is lexicographically larger than Y if and only if Y is a prefix of X or x_{j} > y_{j} where j is the smallest integer such that x_{j} \\neq y_{j}.\n\nConstraints\n\n* 1 ≤ |s| ≤ 5000\n* s consists of lowercase English letters.\n* 1 ≤ K ≤ 5\n* s has at least K different substrings.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\ns\nK\n\n\nOutput\n\nPrint the K-th lexicographically smallest substring of K.\n\nExamples\n\nInput\n\naba\n4\n\n\nOutput\n\nb\n\n\nInput\n\natcoderandatcodeer\n5\n\n\nOutput\n\nandat\n\n\nInput\n\nz\n1\n\n\nOutput\n\nz", "grammar": {"answer": null}}
{"name": "1515_B. Phoenix and Puzzle", "description": "Phoenix is playing with a new puzzle, which consists of n identical puzzle pieces. Each puzzle piece is a right isosceles triangle as shown below.\n\n<image> A puzzle piece\n\nThe goal of the puzzle is to create a square using the n pieces. He is allowed to rotate and move the pieces around, but none of them can overlap and all n pieces must be used (of course, the square shouldn't contain any holes as well). Can he do it?\n\nInput\n\nThe input consists of multiple test cases. The first line contains an integer t (1 ≤ t ≤ 10^4) — the number of test cases.\n\nThe first line of each test case contains an integer n (1 ≤ n ≤ 10^9) — the number of puzzle pieces.\n\nOutput\n\nFor each test case, if Phoenix can create a square with the n puzzle pieces, print YES. Otherwise, print NO.\n\nExample\n\nInput\n\n\n3\n2\n4\n6\n\n\nOutput\n\n\nYES\nYES\nNO\n\nNote\n\nFor n=2, Phoenix can create a square like this:\n\n<image>\n\nFor n=4, Phoenix can create a square like this:\n\n<image>\n\nFor n=6, it is impossible for Phoenix to create a square.", "grammar": {"answer": null}}
{"name": "409_C. Magnum Opus", "description": "Salve, mi amice.\n\nEt tu quidem de lapis philosophorum. Barba non facit philosophum. Labor omnia vincit. Non potest creatio ex nihilo. Necesse est partibus.\n\nRp:\n\nI Aqua Fortis\n\nI Aqua Regia\n\nII Amalgama\n\nVII Minium\n\nIV Vitriol\n\nMisce in vitro et æstus, et nil admirari. Festina lente, et nulla tenaci invia est via.\n\nFac et spera,\n\nVale,\n\nNicolas Flamel\n\nInput\n\nThe first line of input contains several space-separated integers ai (0 ≤ ai ≤ 100).\n\nOutput\n\nPrint a single integer.\n\nExamples\n\nInput\n\n2 4 6 8 10\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p02822 AtCoder Beginner Contest 149 - Surrounded Nodes", "description": "Given is a tree T with N vertices. The i-th edge connects Vertex A_i and B_i (1 \\leq A_i,B_i \\leq N).\n\nNow, each vertex is painted black with probability 1/2 and white with probability 1/2, which is chosen independently from other vertices. Then, let S be the smallest subtree (connected subgraph) of T containing all the vertices painted black. (If no vertex is painted black, S is the empty graph.)\n\nLet the holeyness of S be the number of white vertices contained in S. Find the expected holeyness of S.\n\nSince the answer is a rational number, we ask you to print it \\bmod 10^9+7, as described in Notes.\n\nConstraints\n\n* 2 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq A_i,B_i \\leq N\n* The given graph is a tree.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 B_1\n:\nA_{N-1} B_{N-1}\n\n\nOutput\n\nPrint the expected holeyness of S, \\bmod 10^9+7.\n\nExamples\n\nInput\n\n3\n1 2\n2 3\n\n\nOutput\n\n125000001\n\n\nInput\n\n4\n1 2\n2 3\n3 4\n\n\nOutput\n\n375000003\n\n\nInput\n\n4\n1 2\n1 3\n1 4\n\n\nOutput\n\n250000002\n\n\nInput\n\n7\n4 7\n3 1\n2 6\n5 2\n7 1\n2 7\n\n\nOutput\n\n570312505", "grammar": {"answer": null}}
{"name": "p03637 AtCoder Beginner Contest 069 - 4-adjacent", "description": "We have a sequence of length N, a = (a_1, a_2, ..., a_N). Each a_i is a positive integer.\n\nSnuke's objective is to permute the element in a so that the following condition is satisfied:\n\n* For each 1 ≤ i ≤ N - 1, the product of a_i and a_{i + 1} is a multiple of 4.\n\n\n\nDetermine whether Snuke can achieve his objective.\n\nConstraints\n\n* 2 ≤ N ≤ 10^5\n* a_i is an integer.\n* 1 ≤ a_i ≤ 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\n\n\nOutput\n\nIf Snuke can achieve his objective, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n3\n1 10 100\n\n\nOutput\n\nYes\n\n\nInput\n\n4\n1 2 3 4\n\n\nOutput\n\nNo\n\n\nInput\n\n3\n1 4 1\n\n\nOutput\n\nYes\n\n\nInput\n\n2\n1 1\n\n\nOutput\n\nNo\n\n\nInput\n\n6\n2 7 1 8 2 8\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "p03680 AtCoder Beginner Contest 065 - Trained?", "description": "Takahashi wants to gain muscle, and decides to work out at AtCoder Gym.\n\nThe exercise machine at the gym has N buttons, and exactly one of the buttons is lighten up. These buttons are numbered 1 through N. When Button i is lighten up and you press it, the light is turned off, and then Button a_i will be lighten up. It is possible that i=a_i. When Button i is not lighten up, nothing will happen by pressing it.\n\nInitially, Button 1 is lighten up. Takahashi wants to quit pressing buttons when Button 2 is lighten up.\n\nDetermine whether this is possible. If the answer is positive, find the minimum number of times he needs to press buttons.\n\nConstraints\n\n* 2 ≤ N ≤ 10^5\n* 1 ≤ a_i ≤ N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1\na_2\n:\na_N\n\n\nOutput\n\nPrint -1 if it is impossible to lighten up Button 2. Otherwise, print the minimum number of times we need to press buttons in order to lighten up Button 2.\n\nExamples\n\nInput\n\n3\n3\n1\n2\n\n\nOutput\n\n2\n\n\nInput\n\n4\n3\n4\n1\n2\n\n\nOutput\n\n-1\n\n\nInput\n\n5\n3\n3\n4\n2\n4\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p03280 AtCoder Beginner Contest 106 - Garden", "description": "There is a farm whose length and width are A yard and B yard, respectively. A farmer, John, made a vertical road and a horizontal road inside the farm from one border to another, as shown below: (The gray part represents the roads.)\n\n\n\nWhat is the area of this yard excluding the roads? Find it.\n\nConstraints\n\n* A is an integer between 2 and 100 (inclusive).\n* B is an integer between 2 and 100 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nPrint the area of this yard excluding the roads (in square yards).\n\nExamples\n\nInput\n\n2 2\n\n\nOutput\n\n1\n\n\nInput\n\n5 7\n\n\nOutput\n\n24", "grammar": {"answer": null}}
{"name": "p03735 AtCoder Regular Contest 073 - Ball Coloring", "description": "There are N bags, each containing two white balls. The i-th box contains two balls with integers x_i and y_i written on them, respectively.\n\nFor each of these bags, you will paint one of the balls red, and paint the other blue.\n\nAfterwards, the 2N balls will be classified according to color.\n\nThen, we will define the following:\n\n* R_{max}: the maximum integer written on a ball painted in red\n* R_{min}: the minimum integer written on a ball painted in red\n* B_{max}: the maximum integer written on a ball painted in blue\n* B_{min}: the minimum integer written on a ball painted in blue\n\n\n\nFind the minimum possible value of (R_{max} - R_{min}) \\times (B_{max} - B_{min}).\n\nConstraints\n\n* 1 ≤ N ≤ 200,000\n* 1 ≤ x_i, y_i ≤ 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nx_1 y_1\nx_2 y_2\n:\nx_N y_N\n\n\nOutput\n\nPrint the minimum possible value.\n\nExamples\n\nInput\n\n3\n1 2\n3 4\n5 6\n\n\nOutput\n\n15\n\n\nInput\n\n3\n1010 10\n1000 1\n20 1020\n\n\nOutput\n\n380\n\n\nInput\n\n2\n1 1\n1000000000 1000000000\n\n\nOutput\n\n999999998000000001", "grammar": {"answer": null}}
{"name": "463_D. Gargari and Permutations", "description": "Gargari got bored to play with the bishops and now, after solving the problem about them, he is trying to do math homework. In a math book he have found k permutations. Each of them consists of numbers 1, 2, ..., n in some order. Now he should find the length of the longest common subsequence of these permutations. Can you help Gargari?\n\nYou can read about longest common subsequence there: https://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n\nInput\n\nThe first line contains two integers n and k (1 ≤ n ≤ 1000; 2 ≤ k ≤ 5). Each of the next k lines contains integers 1, 2, ..., n in some order — description of the current permutation.\n\nOutput\n\nPrint the length of the longest common subsequence.\n\nExamples\n\nInput\n\n4 3\n1 4 2 3\n4 1 2 3\n1 2 4 3\n\n\nOutput\n\n3\n\nNote\n\nThe answer for the first test sample is subsequence [1, 2, 3].", "grammar": {"answer": null}}
{"name": "1199_B. Water Lily", "description": "While sailing on a boat, Inessa noticed a beautiful water lily flower above the lake's surface. She came closer and it turned out that the lily was exactly H centimeters above the water surface. Inessa grabbed the flower and sailed the distance of L centimeters. Exactly at this point the flower touched the water surface.\n\n<image>\n\nSuppose that the lily grows at some point A on the lake bottom, and its stem is always a straight segment with one endpoint at point A. Also suppose that initially the flower was exactly above the point A, i.e. its stem was vertical. Can you determine the depth of the lake at point A?\n\nInput\n\nThe only line contains two integers H and L (1 ≤ H < L ≤ 10^{6}).\n\nOutput\n\nPrint a single number — the depth of the lake at point A. The absolute or relative error should not exceed 10^{-6}.\n\nFormally, let your answer be A, and the jury's answer be B. Your answer is accepted if and only if \\frac{|A - B|}{max{(1, |B|)}} ≤ 10^{-6}.\n\nExamples\n\nInput\n\n\n1 2\n\n\nOutput\n\n\n1.5000000000000\n\n\nInput\n\n\n3 5\n\n\nOutput\n\n\n2.6666666666667", "grammar": {"answer": null}}
{"name": "903_D. Almost Difference", "description": "Let's denote a function \n\n<image>\n\nYou are given an array a consisting of n integers. You have to calculate the sum of d(ai, aj) over all pairs (i, j) such that 1 ≤ i ≤ j ≤ n.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 200000) — the number of elements in a.\n\nThe second line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 109) — elements of the array. \n\nOutput\n\nPrint one integer — the sum of d(ai, aj) over all pairs (i, j) such that 1 ≤ i ≤ j ≤ n.\n\nExamples\n\nInput\n\n5\n1 2 3 1 3\n\n\nOutput\n\n4\n\n\nInput\n\n4\n6 6 5 5\n\n\nOutput\n\n0\n\n\nInput\n\n4\n6 6 4 4\n\n\nOutput\n\n-8\n\nNote\n\nIn the first example:\n\n  1. d(a1, a2) = 0; \n  2. d(a1, a3) = 2; \n  3. d(a1, a4) = 0; \n  4. d(a1, a5) = 2; \n  5. d(a2, a3) = 0; \n  6. d(a2, a4) = 0; \n  7. d(a2, a5) = 0; \n  8. d(a3, a4) = - 2; \n  9. d(a3, a5) = 0; \n  10. d(a4, a5) = 2. ", "grammar": {"answer": null}}
{"name": "p03694 AtCoder Beginner Contest 064 - Traveling AtCoDeer Problem", "description": "It is only six months until Christmas, and AtCoDeer the reindeer is now planning his travel to deliver gifts.\nThere are N houses along TopCoDeer street. The i-th house is located at coordinate a_i. He has decided to deliver gifts to all these houses.\nFind the minimum distance to be traveled when AtCoDeer can start and end his travel at any positions.\n\nConstraints\n\n* 1 ≤ N ≤ 100\n* 0 ≤ a_i ≤ 1000\n* a_i is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the minimum distance to be traveled.\n\nExamples\n\nInput\n\n4\n2 3 7 9\n\n\nOutput\n\n7\n\n\nInput\n\n8\n3 1 4 1 5 9 2 6\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "p02894 AtCoder Grand Contest 039 - Incenters", "description": "Given are N points on the circumference of a circle centered at (0,0) in an xy-plane. The coordinates of the i-th point are (\\cos(\\frac{2\\pi T_i}{L}),\\sin(\\frac{2\\pi T_i}{L})).\n\nThree distinct points will be chosen uniformly at random from these N points. Find the expected x- and y-coordinates of the center of the circle inscribed in the triangle formed by the chosen points.\n\nConstraints\n\n* 3 \\leq N \\leq 3000\n* N \\leq L \\leq 10^9\n* 0 \\leq T_i \\leq L-1\n* T_i<T_{i+1}\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN L\nT_1\n:\nT_N\n\n\nOutput\n\nPrint the expected x- and y-coordinates of the center of the circle inscribed in the triangle formed by the chosen points. Your output will be considered correct when the absolute or relative error is at most 10^{-9}.\n\nExamples\n\nInput\n\n3 4\n0\n1\n3\n\n\nOutput\n\n0.414213562373095 -0.000000000000000\n\n\nInput\n\n4 8\n1\n3\n5\n6\n\n\nOutput\n\n-0.229401949926902 -0.153281482438188\n\n\nInput\n\n10 100\n2\n11\n35\n42\n54\n69\n89\n91\n93\n99\n\n\nOutput\n\n0.352886583546338 -0.109065017701873", "grammar": {"answer": null}}
{"name": "p03200 AtCoder Grand Contest 029 - Irreversible operation", "description": "There are N Reversi pieces arranged in a row. (A Reversi piece is a disc with a black side and a white side.) The state of each piece is represented by a string S of length N. If S_i=`B`, the i-th piece from the left is showing black; If S_i=`W`, the i-th piece from the left is showing white.\n\nConsider performing the following operation:\n\n* Choose i (1 \\leq i < N) such that the i-th piece from the left is showing black and the (i+1)-th piece from the left is showing white, then flip both of those pieces. That is, the i-th piece from the left is now showing white and the (i+1)-th piece from the left is now showing black.\n\n\n\nFind the maximum possible number of times this operation can be performed.\n\nConstraints\n\n* 1 \\leq |S| \\leq 2\\times 10^5\n* S_i=`B` or `W`\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the maximum possible number of times the operation can be performed.\n\nExamples\n\nInput\n\nBBW\n\n\nOutput\n\n2\n\n\nInput\n\nBWBWBW\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "151_D. Quantity of Strings", "description": "Just in case somebody missed it: this winter is totally cold in Nvodsk! It is so cold that one gets funny thoughts. For example, let's say there are strings with the length exactly n, based on the alphabet of size m. Any its substring with length equal to k is a palindrome. How many such strings exist? Your task is to find their quantity modulo 1000000007 (109 + 7). Be careful and don't miss a string or two!\n\nLet us remind you that a string is a palindrome if it can be read the same way in either direction, from the left to the right and from the right to the left.\n\nInput\n\nThe first and only line contains three integers: n, m and k (1 ≤ n, m, k ≤ 2000).\n\nOutput\n\nPrint a single integer — the number of strings of the described type modulo 1000000007 (109 + 7).\n\nExamples\n\nInput\n\n1 1 1\n\n\nOutput\n\n1\n\n\nInput\n\n5 2 4\n\n\nOutput\n\n2\n\nNote\n\nIn the first sample only one string is valid: \"a\" (let's denote the only letter of our alphabet as \"a\").\n\nIn the second sample (if we denote the alphabet letters as \"a\" and \"b\") the following strings are valid: \"aaaaa\" and \"bbbbb\".", "grammar": {"answer": null}}
{"name": "p00925 Miscalculation", "description": "Example\n\nInput\n\n1+2*3+4\n11\n\n\nOutput\n\nM", "grammar": {"answer": null}}
{"name": "p02797 Keyence Programming Contest 2020 - Subarray Sum", "description": "Given are three integers N, K, and S.\n\nFind a sequence A_1, A_2, ..., A_N of N integers between 1 and 10^9 (inclusive) that satisfies the condition below. We can prove that, under the conditions in Constraints, such a sequence always exists.\n\n* There are exactly K pairs (l, r) of integers such that 1 \\leq l \\leq r \\leq N and A_l + A_{l + 1} + \\cdots + A_r = S.\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* 0 \\leq K \\leq N\n* 1 \\leq S \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K S\n\n\nOutput\n\nPrint a sequence satisfying the condition, in the following format:\n\n\nA_1 A_2 ... A_N\n\nOutput\n\nPrint a sequence satisfying the condition, in the following format:\n\n\nA_1 A_2 ... A_N\n\nExamples\n\nInput\n\n4 2 3\n\n\nOutput\n\n1 2 3 4\n\n\nInput\n\n5 3 100\n\n\nOutput\n\n50 50 50 30 70", "grammar": {"answer": null}}
{"name": "p02922 AtCoder Beginner Contest 139 - Power Socket", "description": "Takahashi's house has only one socket.\n\nTakahashi wants to extend it with some number of power strips, each with A sockets, into B or more empty sockets.\n\nOne power strip with A sockets can extend one empty socket into A empty sockets.\n\nFind the minimum number of power strips required.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq A \\leq 20\n* 1 \\leq B \\leq 20\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nPrint the minimum number of power strips required.\n\nExamples\n\nInput\n\n4 10\n\n\nOutput\n\n3\n\n\nInput\n\n8 9\n\n\nOutput\n\n2\n\n\nInput\n\n8 8\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p02003 Board", "description": "problem\n\nGiven the squares of $ R * C $. Each square is either an empty square or a square with a hole. The given square meets the following conditions.\n\n* The cells with holes are connected. (You can move a square with a hole in the cross direction to any square with a hole)\n* Empty cells are connected.\n\n\n\nYou can generate rectangular tiles of any length with a width of $ 1 $. I would like to install multiple tiles to fill all the holes in the square. When installing tiles, the following restrictions must be observed.\n\n* Tiles can only be installed vertically or horizontally in the $ 2 $ direction.\n* Do not install more than one tile on one square.\n* There should be no tiles on the squares without holes.\n\n\n\nPlease answer the minimum number of tiles when all the squares with holes are filled with tiles while observing the above restrictions.\n\n\n\noutput\n\nOutput the minimum number of times. Please also output a line break at the end.\n\nExample\n\nInput\n\n5 5\n.....\n.#.#.\n.###.\n.#.#.\n.....\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "1168_B. Good Triple", "description": "Toad Rash has a binary string s. A binary string consists only of zeros and ones.\n\nLet n be the length of s.\n\nRash needs to find the number of such pairs of integers l, r that 1 ≤ l ≤ r ≤ n and there is at least one pair of integers x, k such that 1 ≤ x, k ≤ n, l ≤ x < x + 2k ≤ r, and s_x = s_{x+k} = s_{x+2k}.\n\nFind this number of pairs for Rash.\n\nInput\n\nThe first line contains the string s (1 ≤ |s| ≤ 300 000), consisting of zeros and ones.\n\nOutput\n\nOutput one integer: the number of such pairs of integers l, r that 1 ≤ l ≤ r ≤ n and there is at least one pair of integers x, k such that 1 ≤ x, k ≤ n, l ≤ x < x + 2k ≤ r, and s_x = s_{x+k} = s_{x+2k}.\n\nExamples\n\nInput\n\n\n010101\n\n\nOutput\n\n\n3\n\n\nInput\n\n\n11001100\n\n\nOutput\n\n\n0\n\nNote\n\nIn the first example, there are three l, r pairs we need to count: 1, 6; 2, 6; and 1, 5.\n\nIn the second example, there are no values x, k for the initial string, so the answer is 0.", "grammar": {"answer": null}}
{"name": "171_D. Broken checker", "description": "\"This problem is rubbish! There is not statement, and there are only 5 test cases. The problemsetter took liberties with this problem!\" — people complained in the comments to one round on Codeforces. And even more... No, wait, the checker for the problem was alright, that's a mercy.\n\nInput\n\nThe only line of the input contains an integer between 1 and 5, inclusive. All tests for this problem are different. The contents of the test case doesn't need to be equal to its index.\n\nOutput\n\nThe only line of the output contains an integer between 1 and 3, inclusive.\n\nExamples\n\nNote\n\nThis problem has no samples, since there so few test cases.", "grammar": {"answer": null}}
{"name": "p03625 AtCoder Beginner Contest 071 - Make a Rectangle", "description": "We have N sticks with negligible thickness. The length of the i-th stick is A_i.\n\nSnuke wants to select four different sticks from these sticks and form a rectangle (including a square), using the sticks as its sides. Find the maximum possible area of the rectangle.\n\nConstraints\n\n* 4 \\leq N \\leq 10^5\n* 1 \\leq A_i \\leq 10^9\n* A_i is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the maximum possible area of the rectangle. If no rectangle can be formed, print 0.\n\nExamples\n\nInput\n\n6\n3 1 2 4 2 1\n\n\nOutput\n\n2\n\n\nInput\n\n4\n1 2 3 4\n\n\nOutput\n\n0\n\n\nInput\n\n10\n3 3 3 3 4 4 4 5 5 5\n\n\nOutput\n\n20", "grammar": {"answer": null}}
{"name": "p02684 AtCoder Beginner Contest 167 - Teleporter", "description": "The Kingdom of Takahashi has N towns, numbered 1 through N.\n\nThere is one teleporter in each town. The teleporter in Town i (1 \\leq i \\leq N) sends you to Town A_i.\n\nTakahashi, the king, loves the positive integer K. The selfish king wonders what town he will be in if he starts at Town 1 and uses a teleporter exactly K times from there.\n\nHelp the king by writing a program that answers this question.\n\nConstraints\n\n* 2 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq A_i \\leq N\n* 1 \\leq K \\leq 10^{18}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nA_1 A_2 \\dots A_N\n\n\nOutput\n\nPrint the integer representing the town the king will be in if he starts at Town 1 and uses a teleporter exactly K times from there.\n\nExamples\n\nInput\n\n4 5\n3 2 4 1\n\n\nOutput\n\n4\n\n\nInput\n\n6 727202214173249351\n6 5 2 5 3 2\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "736_B. Taxes", "description": "Mr. Funt now lives in a country with a very specific tax laws. The total income of mr. Funt during this year is equal to n (n ≥ 2) burles and the amount of tax he has to pay is calculated as the maximum divisor of n (not equal to n, of course). For example, if n = 6 then Funt has to pay 3 burles, while for n = 25 he needs to pay 5 and if n = 2 he pays only 1 burle.\n\nAs mr. Funt is a very opportunistic person he wants to cheat a bit. In particular, he wants to split the initial n in several parts n1 + n2 + ... + nk = n (here k is arbitrary, even k = 1 is allowed) and pay the taxes for each part separately. He can't make some part equal to 1 because it will reveal him. So, the condition ni ≥ 2 should hold for all i from 1 to k.\n\nOstap Bender wonders, how many money Funt has to pay (i.e. minimal) if he chooses and optimal way to split n in parts.\n\nInput\n\nThe first line of the input contains a single integer n (2 ≤ n ≤ 2·109) — the total year income of mr. Funt.\n\nOutput\n\nPrint one integer — minimum possible number of burles that mr. Funt has to pay as a tax.\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n2\n\n\nInput\n\n27\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "1080_A. Petya and Origami", "description": "Petya is having a party soon, and he has decided to invite his n friends.\n\nHe wants to make invitations in the form of origami. For each invitation, he needs two red sheets, five green sheets, and eight blue sheets. The store sells an infinite number of notebooks of each color, but each notebook consists of only one color with k sheets. That is, each notebook contains k sheets of either red, green, or blue.\n\nFind the minimum number of notebooks that Petya needs to buy to invite all n of his friends.\n\nInput\n\nThe first line contains two integers n and k (1≤ n, k≤ 10^8) — the number of Petya's friends and the number of sheets in each notebook respectively.\n\nOutput\n\nPrint one number — the minimum number of notebooks that Petya needs to buy.\n\nExamples\n\nInput\n\n\n3 5\n\n\nOutput\n\n\n10\n\n\nInput\n\n\n15 6\n\n\nOutput\n\n\n38\n\nNote\n\nIn the first example, we need 2 red notebooks, 3 green notebooks, and 5 blue notebooks.\n\nIn the second example, we need 5 red notebooks, 13 green notebooks, and 20 blue notebooks.", "grammar": {"answer": null}}
{"name": "p00083 Era Name Transformation", "description": "Create a program that converts the date expressed in the Christian era to the Japanese calendar using the era name and outputs the date. The input is three integers, as shown in the example, in the order year, month, and day. Convert this as shown in the sample output. If the date before the Meiji era is entered, please display \"pre-meiji\".\n\nThe first year of each year will be output as \"1 year\" instead of \"first year\".\n\nEra | Period\n--- | ---\nmeiji | 1868. 9. 8 ~ 1912. 7.29\ntaisho | 1912. 7.30 ~ 1926.12.24\nshowa | 1926.12.25 ~ 1989. 1. 7\nheisei | 1989. 1. 8 ~\n\n\n\n\ninput\n\nMultiple data are given. As each data, three integers representing year, month and day are given on one line separated by blanks.\n\nPlease process until the end of the input. The number of data does not exceed 50.\n\noutput\n\nOutput the blank-separated era, year, month, day, or \"pre-meiji\" on one line.\n\nExample\n\nInput\n\n2005 9 3\n1868 12 2\n1868 9 7\n\n\nOutput\n\nheisei 17 9 3\nmeiji 1 12 2\npre-meiji", "grammar": {"answer": null}}
{"name": "p03270 AtCoder Regular Contest 102 - Stop. Otherwise...", "description": "Takahashi throws N dice, each having K sides with all integers from 1 to K. The dice are NOT pairwise distinguishable. For each i=2,3,...,2K, find the following value modulo 998244353:\n\n* The number of combinations of N sides shown by the dice such that the sum of no two different sides is i.\n\n\n\nNote that the dice are NOT distinguishable, that is, two combinations are considered different when there exists an integer k such that the number of dice showing k is different in those two.\n\nConstraints\n\n* 1 \\leq K \\leq 2000\n* 2 \\leq N \\leq 2000\n* K and N are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK N\n\n\nOutput\n\nPrint 2K-1 integers. The t-th of them (1\\leq t\\leq 2K-1) should be the answer for i=t+1.\n\nExamples\n\nInput\n\n3 3\n\n\nOutput\n\n7\n7\n4\n7\n7\n\n\nInput\n\n4 5\n\n\nOutput\n\n36\n36\n20\n20\n20\n36\n36\n\n\nInput\n\n6 1000\n\n\nOutput\n\n149393349\n149393349\n668669001\n668669001\n4000002\n4000002\n4000002\n668669001\n668669001\n149393349\n149393349", "grammar": {"answer": null}}
{"name": "p02992 AtCoder Beginner Contest 132 - Small Products", "description": "Find the number of sequences of length K consisting of positive integers such that the product of any two adjacent elements is at most N, modulo 10^9+7.\n\nConstraints\n\n* 1\\leq N\\leq 10^9\n* ~~1~~ 2\\leq K\\leq 100 (fixed at 21:33 JST)\n* N and K are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\n\n\nOutput\n\nPrint the number of sequences, modulo 10^9+7.\n\nExamples\n\nInput\n\n3 2\n\n\nOutput\n\n5\n\n\nInput\n\n10 3\n\n\nOutput\n\n147\n\n\nInput\n\n314159265 35\n\n\nOutput\n\n457397712", "grammar": {"answer": null}}
{"name": "p02611 AIsing Programming Contest 2020 - Two Snuke", "description": "Given is an integer N. Snuke will choose integers s_1, s_2, n_1, n_2, u_1, u_2, k_1, k_2, e_1, and e_2 so that all of the following six conditions will be satisfied:\n\n* 0 \\leq s_1 < s_2\n* 0 \\leq n_1 < n_2\n* 0 \\leq u_1 < u_2\n* 0 \\leq k_1 < k_2\n* 0 \\leq e_1 < e_2\n* s_1 + s_2 + n_1 + n_2 + u_1 + u_2 + k_1 + k_2 + e_1 + e_2 \\leq N\n\n\n\nFor every possible choice (s_1,s_2,n_1,n_2,u_1,u_2,k_1,k_2,e_1,e_2), compute (s_2 − s_1)(n_2 − n_1)(u_2 − u_1)(k_2 - k_1)(e_2 - e_1), and find the sum of all computed values, modulo (10^{9} +7).\n\nSolve this problem for each of the T test cases given.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq T \\leq 100\n* 1 \\leq N \\leq 10^{9}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nT\n\\mathrm{case}_1\n\\vdots\n\\mathrm{case}_T\n\n\nEach case is given in the following format:\n\n\nN\n\n\nOutput\n\nPrint T lines. The i-th line should contain the answer to the i-th test case.\n\nExample\n\nInput\n\n4\n4\n6\n10\n1000000000\n\n\nOutput\n\n0\n11\n4598\n257255556", "grammar": {"answer": null}}
{"name": "304_B. Calendar", "description": "Calendars in widespread use today include the Gregorian calendar, which is the de facto international standard, and is used almost everywhere in the world for civil purposes. The Gregorian reform modified the Julian calendar's scheme of leap years as follows:\n\nEvery year that is exactly divisible by four is a leap year, except for years that are exactly divisible by 100; the centurial years that are exactly divisible by 400 are still leap years. For example, the year 1900 is not a leap year; the year 2000 is a leap year. \n\n<image>\n\nIn this problem, you have been given two dates and your task is to calculate how many days are between them. Note, that leap years have unusual number of days in February.\n\nLook at the sample to understand what borders are included in the aswer.\n\nInput\n\nThe first two lines contain two dates, each date is in the format yyyy:mm:dd (1900 ≤ yyyy ≤ 2038 and yyyy:mm:dd is a legal date).\n\nOutput\n\nPrint a single integer — the answer to the problem.\n\nExamples\n\nInput\n\n1900:01:01\n2038:12:31\n\n\nOutput\n\n50768\n\n\nInput\n\n1996:03:09\n1991:11:12\n\n\nOutput\n\n1579", "grammar": {"answer": null}}
{"name": "1269_D. Domino for Young", "description": "You are given a Young diagram. \n\nGiven diagram is a histogram with n columns of lengths a_1, a_2, …, a_n (a_1 ≥ a_2 ≥ … ≥ a_n ≥ 1).\n\n<image> Young diagram for a=[3,2,2,2,1].\n\nYour goal is to find the largest number of non-overlapping dominos that you can draw inside of this histogram, a domino is a 1 × 2 or 2 × 1 rectangle.\n\nInput\n\nThe first line of input contain one integer n (1 ≤ n ≤ 300 000): the number of columns in the given histogram.\n\nThe next line of input contains n integers a_1, a_2, …, a_n (1 ≤ a_i ≤ 300 000, a_i ≥ a_{i+1}): the lengths of columns.\n\nOutput\n\nOutput one integer: the largest number of non-overlapping dominos that you can draw inside of the given Young diagram.\n\nExample\n\nInput\n\n\n5\n3 2 2 2 1\n\n\nOutput\n\n\n4\n\nNote\n\nSome of the possible solutions for the example:\n\n<image> <image>", "grammar": {"answer": null}}
{"name": "p03351 AtCoder Beginner Contest 097 - Colorful Transceivers", "description": "Three people, A, B and C, are trying to communicate using transceivers. They are standing along a number line, and the coordinates of A, B and C are a, b and c (in meters), respectively. Two people can directly communicate when the distance between them is at most d meters. Determine if A and C can communicate, either directly or indirectly. Here, A and C can indirectly communicate when A and B can directly communicate and also B and C can directly communicate.\n\nConstraints\n\n* 1 ≤ a,b,c ≤ 100\n* 1 ≤ d ≤ 100\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\na b c d\n\n\nOutput\n\nIf A and C can communicate, print `Yes`; if they cannot, print `No`.\n\nExamples\n\nInput\n\n4 7 9 3\n\n\nOutput\n\nYes\n\n\nInput\n\n100 10 1 2\n\n\nOutput\n\nNo\n\n\nInput\n\n10 10 10 1\n\n\nOutput\n\nYes\n\n\nInput\n\n1 100 2 10\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "p00595 Greatest Common Divisor", "description": "Please find the greatest common divisor of two natural numbers. A clue is: The Euclid's algorithm is a way to resolve this task.\n\n\n\nInput\n\nThe input file consists of several lines with pairs of two natural numbers in each line. The numbers do not exceed 100000.\n\nThe number of pairs (datasets) is less than 50.\n\nOutput\n\nYour program has to print the greatest common divisor for each pair of input numbers. Print each result on a new line.\n\nExample\n\nInput\n\n57 38\n60 84\n\n\nOutput\n\n19\n12", "grammar": {"answer": null}}
{"name": "385_B. Bear and Strings", "description": "The bear has a string s = s1s2... s|s| (record |s| is the string's length), consisting of lowercase English letters. The bear wants to count the number of such pairs of indices i, j (1 ≤ i ≤ j ≤ |s|), that string x(i, j) = sisi + 1... sj contains at least one string \"bear\" as a substring.\n\nString x(i, j) contains string \"bear\", if there is such index k (i ≤ k ≤ j - 3), that sk = b, sk + 1 = e, sk + 2 = a, sk + 3 = r.\n\nHelp the bear cope with the given problem.\n\nInput\n\nThe first line contains a non-empty string s (1 ≤ |s| ≤ 5000). It is guaranteed that the string only consists of lowercase English letters.\n\nOutput\n\nPrint a single number — the answer to the problem.\n\nExamples\n\nInput\n\nbearbtear\n\n\nOutput\n\n6\n\n\nInput\n\nbearaabearc\n\n\nOutput\n\n20\n\nNote\n\nIn the first sample, the following pairs (i, j) match: (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9).\n\nIn the second sample, the following pairs (i, j) match: (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9), (1, 10), (1, 11), (2, 10), (2, 11), (3, 10), (3, 11), (4, 10), (4, 11), (5, 10), (5, 11), (6, 10), (6, 11), (7, 10), (7, 11).", "grammar": {"answer": null}}
{"name": "p02564 AtCoder Library Practice Contest - SCC", "description": "You are given a directed graph with N vertices and M edges, not necessarily simple. The i-th edge is oriented from the vertex a_i to the vertex b_i. Divide this graph into strongly connected components and print them in their topological order.\n\nConstraints\n\n* 1 \\leq N \\leq 500,000\n* 1 \\leq M \\leq 500,000\n* 0 \\leq a_i, b_i < N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\na_0 b_0\na_1 b_1\n:\na_{M - 1} b_{M - 1}\n\n\nOutput\n\nPrint 1+K lines, where K is the number of strongly connected components. Print K on the first line. Print the information of each strongly connected component in next K lines in the following format, where l is the number of vertices in the strongly connected component and v_i is the index of the vertex in it.\n\n\nl v_0 v_1 ... v_{l-1}\n\n\nHere, for each edge (a_i, b_i), b_i should not appear in earlier line than a_i.\n\nIf there are multiple correct output, print any of them.\n\nExample\n\nInput\n\n6 7\n1 4\n5 2\n3 0\n5 5\n4 1\n0 3\n4 2\n\n\nOutput\n\n4\n1 5\n2 4 1\n1 2\n2 3 0", "grammar": {"answer": null}}
{"name": "p01511 Three-way Branch", "description": "There is a grid that consists of W \\times H cells. The upper-left-most cell is (1, 1). You are standing on the cell of (1,1) and you are going to move to cell of (W, H). You can only move to adjacent lower-left, lower or lower-right cells.\n\nThere are obstructions on several cells. You can not move to it. You cannot move out the grid, either. Write a program that outputs the number of ways to reach (W,H) modulo 1,000,000,009. You can assume that there is no obstruction at (1,1).\n\n\n\nInput\n\nThe first line contains three integers, the width W, the height H, and the number of obstructions N. (1 \\leq W \\leq 75, 2 \\leq H \\leq 10^{18}, 0 \\leq N \\leq 30) Each of following N lines contains 2 integers, denoting the position of an obstruction (x_i, y_i).\n\nThe last test case is followed by a line containing three zeros.\n\nOutput\n\nFor each test case, print its case number and the number of ways to reach (W,H) modulo 1,000,000,009.\n\nExample\n\nInput\n\n2 4 1\n2 1\n2 2 1\n2 2\n0 0 0\n\n\nOutput\n\nCase 1: 4\nCase 2: 0", "grammar": {"answer": null}}
{"name": "p01080 Traffic Tree", "description": "Problem\n\nA graph is given in which N vertices, each numbered from 1 to N, are connected by N-1 undirected edges. For each vertex, output the shortest number of steps to start from that vertex and visit all vertices.\n\nHowever, one step is to follow one side from one vertex and move to another vertex.\n\nConstraints\n\n* 2 ≤ N ≤ 105\n* 1 ≤ ui, vi ≤ N (1 ≤ i ≤ N-1)\n* ui ≠ vi\n* The graph given is concatenated\n\nInput\n\nThe input is given in the following format.\n\n\nN\nu1 v1\n..\n..\n..\nuN−1 vN−1\n\n\nThe first line is given one integer N.\nIn the following N-1 line, the integers ui and vi representing the vertex numbers at both ends of the i-th side are given on the i-th line, separated by blanks.\n\nOutput\n\nOutput the shortest number of steps to visit all vertices starting from vertex i on the i-th line from vertex 1 to vertex N.\n\nExamples\n\nInput\n\n2\n1 2\n\n\nOutput\n\n1\n1\n\n\nInput\n\n6\n1 2\n1 3\n3 4\n3 5\n5 6\n\n\nOutput\n\n7\n6\n8\n7\n7\n6", "grammar": {"answer": null}}
{"name": "p00021 Parallelism", "description": "There are four points: $A(x_1, y_1)$, $B(x_2, y_2)$, $C(x_3, y_3)$, and $D(x_4, y_4)$. Write a program which determines whether the line $AB$ and the line $CD$ are parallel. If those two lines are parallel, your program should prints \"YES\" and if not prints \"NO\".\n\n\n\nInput\n\nInput consists of several datasets. In the first line, you are given the number of datasets $n$ ($n \\leq 100$). There will be $n$ lines where each line correspondgs to each dataset. Each dataset consists of eight real numbers:\n\n$x_1$ $y_1$ $x_2$ $y_2$ $x_3$ $y_3$ $x_4$ $y_4$\n\n\nYou can assume that $-100 \\leq x_1, y_1, x_2, y_2, x_3, y_3, x_4, y_4 \\leq 100$. Each value is a real number with at most 5 digits after the decimal point.\n\nOutput\n\nFor each dataset, print \"YES\" or \"NO\" in a line.\n\nExample\n\nInput\n\n2\n0.0 0.0 1.0 1.0 1.0 0.0 2.0 1.0\n3.0 2.0 9.0 6.0 13.0 5.0 7.0 9.0\n\n\nOutput\n\nYES\nNO", "grammar": {"answer": null}}
{"name": "p02378 Bipartite Matching", "description": "A bipartite graph G = (V, E) is a graph in which the vertex set V can be divided into two disjoint subsets X and Y such that every edge e ∈ E has one end point in X and the other end point in Y.\n\nA matching M is a subset of edges such that each node in V appears in at most one edge in M.\n\nGiven a bipartite graph, find the size of the matching which has the largest size.\n\nConstraints\n\n* 1 ≤ |X|, |Y| ≤ 100\n* 0 ≤ |E| ≤ 10,000\n\nInput\n\n\n|X| |Y| |E|\nx0 y0\nx1 y1\n:\nx|E|-1 y|E|-1\n\n\n|X| and |Y| are the number of vertices in X and Y respectively, and |E| is the number of edges in the graph G. The vertices in X are named with the numbers 0, 1,..., |X|-1, and vertices in Y are named with the numbers 0, 1,..., |Y|-1, respectively.\n\nxi and yi are the node numbers from X and Y respectevely which represent the end-points of the i-th edge.\n\nOutput\n\nPrint the largest size of the matching.\n\nExample\n\nInput\n\n3 4 6\n0 0\n0 2\n0 3\n1 1\n2 1\n2 3\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "335_F. Buy One, Get One Free", "description": "A nearby pie shop is having a special sale. For each pie you pay full price for, you may select one pie of a strictly lesser value to get for free. Given the prices of all the pies you wish to acquire, determine the minimum total amount you must pay for all of the pies.\n\nInput\n\nInput will begin with an integer n (1 ≤ n ≤ 500000), the number of pies you wish to acquire. Following this is a line with n integers, each indicating the cost of a pie. All costs are positive integers not exceeding 109.\n\nOutput\n\nPrint the minimum cost to acquire all the pies.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in С++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nExamples\n\nInput\n\n6\n3 4 5 3 4 5\n\n\nOutput\n\n14\n\n\nInput\n\n5\n5 5 5 5 5\n\n\nOutput\n\n25\n\n\nInput\n\n4\n309999 6000 2080 2080\n\n\nOutput\n\n314159\n\nNote\n\nIn the first test case you can pay for a pie with cost 5 and get a pie with cost 4 for free, then pay for a pie with cost 5 and get a pie with cost 3 for free, then pay for a pie with cost 4 and get a pie with cost 3 for free.\n\nIn the second test case you have to pay full price for every pie.", "grammar": {"answer": null}}
{"name": "1305_C. Kuroni and Impossible Calculation", "description": "To become the king of Codeforces, Kuroni has to solve the following problem.\n\nHe is given n numbers a_1, a_2, ..., a_n. Help Kuroni to calculate ∏_{1≤ i<j≤ n} |a_i - a_j|. As result can be very big, output it modulo m.\n\nIf you are not familiar with short notation, ∏_{1≤ i<j≤ n} |a_i - a_j| is equal to |a_1 - a_2|⋅|a_1 - a_3|⋅ ... ⋅|a_1 - a_n|⋅|a_2 - a_3|⋅|a_2 - a_4|⋅ ... ⋅|a_2 - a_n| ⋅ ... ⋅ |a_{n-1} - a_n|. In other words, this is the product of |a_i - a_j| for all 1≤ i < j ≤ n.\n\nInput\n\nThe first line contains two integers n, m (2≤ n ≤ 2⋅ 10^5, 1≤ m ≤ 1000) — number of numbers and modulo.\n\nThe second line contains n integers a_1, a_2, ..., a_n (0 ≤ a_i ≤ 10^9).\n\nOutput\n\nOutput the single number — ∏_{1≤ i<j≤ n} |a_i - a_j| mod m.\n\nExamples\n\nInput\n\n\n2 10\n8 5\n\n\nOutput\n\n\n3\n\nInput\n\n\n3 12\n1 4 5\n\n\nOutput\n\n\n0\n\nInput\n\n\n3 7\n1 4 9\n\n\nOutput\n\n\n1\n\nNote\n\nIn the first sample, |8 - 5| = 3 ≡ 3 mod 10.\n\nIn the second sample, |1 - 4|⋅|1 - 5|⋅|4 - 5| = 3⋅ 4 ⋅ 1 = 12 ≡ 0 mod 12.\n\nIn the third sample, |1 - 4|⋅|1 - 9|⋅|4 - 9| = 3 ⋅ 8 ⋅ 5 = 120 ≡ 1 mod 7.", "grammar": {"answer": null}}
{"name": "p04026 AtCoder Regular Contest 059 - Unbalanced", "description": "Given a string t, we will call it unbalanced if and only if the length of t is at least 2, and more than half of the letters in t are the same. For example, both `voodoo` and `melee` are unbalanced, while neither `noon` nor `a` is.\n\nYou are given a string s consisting of lowercase letters. Determine if there exists a (contiguous) substring of s that is unbalanced. If the answer is positive, show a position where such a substring occurs in s.\n\nConstraints\n\n* 2 ≦ |s| ≦ 10^5\n* s consists of lowercase letters.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\ns\n\n\nOutput\n\nIf there exists no unbalanced substring of s, print `-1 -1`.\n\nIf there exists an unbalanced substring of s, let one such substring be s_a s_{a+1} ... s_{b} (1 ≦ a < b ≦ |s|), and print `a b`. If there exists more than one such substring, any of them will be accepted.\n\nExamples\n\nInput\n\nneeded\n\n\nOutput\n\n2 5\n\n\nInput\n\natcoder\n\n\nOutput\n\n-1 -1", "grammar": {"answer": null}}
{"name": "p02720 AtCoder Beginner Contest 161 - Lunlun Number", "description": "A positive integer X is said to be a lunlun number if and only if the following condition is satisfied:\n\n* In the base ten representation of X (without leading zeros), for every pair of two adjacent digits, the absolute difference of those digits is at most 1.\n\n\n\nFor example, 1234, 1, and 334 are lunlun numbers, while none of 31415, 119, or 13579 is.\n\nYou are given a positive integer K. Find the K-th smallest lunlun number.\n\nConstraints\n\n* 1 \\leq K \\leq 10^5\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n15\n\n\nOutput\n\n23\n\n\nInput\n\n1\n\n\nOutput\n\n1\n\n\nInput\n\n13\n\n\nOutput\n\n21\n\n\nInput\n\n100000\n\n\nOutput\n\n3234566667", "grammar": {"answer": null}}
{"name": "851_B. Arpa and an exam about geometry", "description": "Arpa is taking a geometry exam. Here is the last problem of the exam.\n\nYou are given three points a, b, c.\n\nFind a point and an angle such that if we rotate the page around the point by the angle, the new position of a is the same as the old position of b, and the new position of b is the same as the old position of c.\n\nArpa is doubting if the problem has a solution or not (i.e. if there exists a point and an angle satisfying the condition). Help Arpa determine if the question has a solution or not.\n\nInput\n\nThe only line contains six integers ax, ay, bx, by, cx, cy (|ax|, |ay|, |bx|, |by|, |cx|, |cy| ≤ 109). It's guaranteed that the points are distinct.\n\nOutput\n\nPrint \"Yes\" if the problem has a solution, \"No\" otherwise.\n\nYou can print each letter in any case (upper or lower).\n\nExamples\n\nInput\n\n0 1 1 1 1 0\n\n\nOutput\n\nYes\n\n\nInput\n\n1 1 0 0 1000 1000\n\n\nOutput\n\nNo\n\nNote\n\nIn the first sample test, rotate the page around (0.5, 0.5) by <image>.\n\nIn the second sample test, you can't find any solution.", "grammar": {"answer": null}}
{"name": "304_A. Pythagorean Theorem II", "description": "In mathematics, the Pythagorean theorem — is a relation in Euclidean geometry among the three sides of a right-angled triangle. In terms of areas, it states:\n\nIn any right-angled triangle, the area of the square whose side is the hypotenuse (the side opposite the right angle) is equal to the sum of the areas of the squares whose sides are the two legs (the two sides that meet at a right angle). \n\nThe theorem can be written as an equation relating the lengths of the sides a, b and c, often called the Pythagorean equation:\n\na2 + b2 = c2\n\nwhere c represents the length of the hypotenuse, and a and b represent the lengths of the other two sides.\n\n<image>\n\nGiven n, your task is to count how many right-angled triangles with side-lengths a, b and c that satisfied an inequality 1 ≤ a ≤ b ≤ c ≤ n.\n\nInput\n\nThe only line contains one integer n (1 ≤ n ≤ 104) as we mentioned above.\n\nOutput\n\nPrint a single integer — the answer to the problem.\n\nExamples\n\nInput\n\n5\n\n\nOutput\n\n1\n\n\nInput\n\n74\n\n\nOutput\n\n35", "grammar": {"answer": null}}
{"name": "p03449 AtCoder Beginner Contest 087 - Candies", "description": "We have a 2 \\times N grid. We will denote the square at the i-th row and j-th column (1 \\leq i \\leq 2, 1 \\leq j \\leq N) as (i, j).\n\nYou are initially in the top-left square, (1, 1). You will travel to the bottom-right square, (2, N), by repeatedly moving right or down.\n\nThe square (i, j) contains A_{i, j} candies. You will collect all the candies you visit during the travel. The top-left and bottom-right squares also contain candies, and you will also collect them.\n\nAt most how many candies can you collect when you choose the best way to travel?\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* 1 \\leq A_{i, j} \\leq 100 (1 \\leq i \\leq 2, 1 \\leq j \\leq N)\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_{1, 1} A_{1, 2} ... A_{1, N}\nA_{2, 1} A_{2, 2} ... A_{2, N}\n\n\nOutput\n\nPrint the maximum number of candies that can be collected.\n\nExamples\n\nInput\n\n5\n3 2 2 4 1\n1 2 2 2 1\n\n\nOutput\n\n14\n\n\nInput\n\n4\n1 1 1 1\n1 1 1 1\n\n\nOutput\n\n5\n\n\nInput\n\n7\n3 3 4 5 4 5 3\n5 3 4 4 2 3 2\n\n\nOutput\n\n29\n\n\nInput\n\n1\n2\n3\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p03185 Educational DP Contest - Frog 3", "description": "There are N stones, numbered 1, 2, \\ldots, N. For each i (1 \\leq i \\leq N), the height of Stone i is h_i. Here, h_1 < h_2 < \\cdots < h_N holds.\n\nThere is a frog who is initially on Stone 1. He will repeat the following action some number of times to reach Stone N:\n\n* If the frog is currently on Stone i, jump to one of the following: Stone i + 1, i + 2, \\ldots, N. Here, a cost of (h_j - h_i)^2 + C is incurred, where j is the stone to land on.\n\n\n\nFind the minimum possible total cost incurred before the frog reaches Stone N.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq C \\leq 10^{12}\n* 1 \\leq h_1 < h_2 < \\cdots < h_N \\leq 10^6\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN C\nh_1 h_2 \\ldots h_N\n\n\nOutput\n\nPrint the minimum possible total cost incurred.\n\nExamples\n\nInput\n\n5 6\n1 2 3 4 5\n\n\nOutput\n\n20\n\n\nInput\n\n2 1000000000000\n500000 1000000\n\n\nOutput\n\n1250000000000\n\n\nInput\n\n8 5\n1 3 4 5 10 11 12 13\n\n\nOutput\n\n62", "grammar": {"answer": null}}
{"name": "1385_A. Three Pairwise Maximums", "description": "You are given three positive (i.e. strictly greater than zero) integers x, y and z.\n\nYour task is to find positive integers a, b and c such that x = max(a, b), y = max(a, c) and z = max(b, c), or determine that it is impossible to find such a, b and c.\n\nYou have to answer t independent test cases. Print required a, b and c in any (arbitrary) order.\n\nInput\n\nThe first line of the input contains one integer t (1 ≤ t ≤ 2 ⋅ 10^4) — the number of test cases. Then t test cases follow.\n\nThe only line of the test case contains three integers x, y, and z (1 ≤ x, y, z ≤ 10^9).\n\nOutput\n\nFor each test case, print the answer:\n\n  * \"NO\" in the only line of the output if a solution doesn't exist; \n  * or \"YES\" in the first line and any valid triple of positive integers a, b and c (1 ≤ a, b, c ≤ 10^9) in the second line. You can print a, b and c in any order. \n\nExample\n\nInput\n\n\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\n\nOutput\n\n\nYES\n3 2 1\nYES\n100 100 100\nNO\nNO\nYES\n1 1 1000000000", "grammar": {"answer": null}}
{"name": "1174_C. Ehab and a Special Coloring Problem", "description": "You're given an integer n. For every integer i from 2 to n, assign a positive integer a_i such that the following conditions hold:\n\n  * For any pair of integers (i,j), if i and j are coprime, a_i ≠ a_j. \n  * The maximal value of all a_i should be minimized (that is, as small as possible). \n\n\n\nA pair of integers is called [coprime](https://en.wikipedia.org/wiki/Coprime_integers) if their [greatest common divisor](https://en.wikipedia.org/wiki/Greatest_common_divisor) is 1.\n\nInput\n\nThe only line contains the integer n (2 ≤ n ≤ 10^5).\n\nOutput\n\nPrint n-1 integers, a_2, a_3, …, a_n (1 ≤ a_i ≤ n). \n\nIf there are multiple solutions, print any of them.\n\nExamples\n\nInput\n\n\n4\n\n\nOutput\n\n\n1 2 1 \n\nInput\n\n\n3\n\n\nOutput\n\n\n2 1\n\nNote\n\nIn the first example, notice that 3 and 4 are coprime, so a_3 ≠ a_4. Also, notice that a=[1,2,3] satisfies the first condition, but it's not a correct answer because its maximal value is 3.", "grammar": {"answer": null}}
{"name": "p02321 Huge Knapsack Problem", "description": "You have N items that you want to put them into a knapsack. Item i has value vi and weight wi.\n\nYou want to find a subset of items to put such that:\n\n* The total value of the items is as large as possible.\n* The items have combined weight at most W, that is capacity of the knapsack.\n\n\n\nFind the maximum total value of items in the knapsack.\n\nConstraints\n\n* 1 ≤ N ≤ 40\n* 1 ≤ vi ≤ 1015\n* 1 ≤ wi ≤ 1015\n* 1 ≤ W ≤ 1015\n\nInput\n\n\nN W\nv1 w1\nv2 w2\n:\nvN wN\n\n\nThe first line consists of the integers N and W. In the following N lines, the value and weight of the i-th item are given.\n\nOutput\n\nPrint the maximum total values of the items in a line.\n\nExamples\n\nInput\n\n4 5\n4 2\n5 2\n2 1\n8 3\n\n\nOutput\n\n13\n\n\nInput\n\n2 20\n5 9\n4 10\n\n\nOutput\n\n9", "grammar": {"answer": null}}
{"name": "p01412 Power of Power", "description": "Training is indispensable for achieving good results at ICPC. Rabbit wants to win at ICPC, so he decided to practice today as well.\n\nToday's training is to perform a very large number of calculations to improve the calculation power and raise awareness. Exponentiation is an operation that easily produces large numbers.\n\nThere are N non-negative integers A1, A2, ..., AN. We would like to find the sorts B1, B2, ..., BN that maximize B1B2 ... BN -1BN. Of course, it is common sense for rabbits, but this calculation is performed in order from the upper right. We also promise that 00 = 1.\n\nThere may be multiple types of B1, B2, ..., and BN that satisfy the maximum conditions. In such a case, let's choose the smallest column in the dictionary order.\n\n\n\nInput\n\n\nN\nA1\n...\nAN\n\n\nSatisfy 1 ≤ N ≤ 100, 0 ≤ Ai ≤ 1,000,000,000.\n\nOutput\n\nThe output consists of N lines. Output Bi on line i.\n\nExamples\n\nInput\n\n4\n7\n5\n10\n6\n\n\nOutput\n\n5\n6\n7\n10\n\n\nInput\n\n3\n0\n0\n1000000000\n\n\nOutput\n\n1000000000\n0\n0", "grammar": {"answer": null}}
{"name": "p03354 AtCoder Beginner Contest 097 - Equals", "description": "We have a permutation of the integers from 1 through N, p_1, p_2, .., p_N. We also have M pairs of two integers between 1 and N (inclusive), represented as (x_1,y_1), (x_2,y_2), .., (x_M,y_M). AtCoDeer the deer is going to perform the following operation on p as many times as desired so that the number of i (1 ≤ i ≤ N) such that p_i = i is maximized:\n\n* Choose j such that 1 ≤ j ≤ M, and swap p_{x_j} and p_{y_j}.\n\n\n\nFind the maximum possible number of i such that p_i = i after operations.\n\nConstraints\n\n* 2 ≤ N ≤ 10^5\n* 1 ≤ M ≤ 10^5\n* p is a permutation of integers from 1 through N.\n* 1 ≤ x_j,y_j ≤ N\n* x_j ≠ y_j\n* If i ≠ j, \\\\{x_i,y_i\\\\} ≠ \\\\{x_j,y_j\\\\}.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\np_1 p_2 .. p_N\nx_1 y_1\nx_2 y_2\n:\nx_M y_M\n\n\nOutput\n\nPrint the maximum possible number of i such that p_i = i after operations.\n\nExamples\n\nInput\n\n5 2\n5 3 1 4 2\n1 3\n5 4\n\n\nOutput\n\n2\n\n\nInput\n\n3 2\n3 2 1\n1 2\n2 3\n\n\nOutput\n\n3\n\n\nInput\n\n10 8\n5 3 6 8 7 10 9 1 2 4\n3 1\n4 1\n5 9\n2 5\n6 5\n3 5\n8 9\n7 9\n\n\nOutput\n\n8\n\n\nInput\n\n5 1\n1 2 3 4 5\n1 5\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p02243 Single Source Shortest Path II", "description": "For a given weighted graph $G = (V, E)$, find the shortest path from a source to each vertex. For each vertex $u$, print the total weight of edges on the shortest path from vertex $0$ to $u$.\n\nConstraints\n\n* $1 \\leq n \\leq 10,000$\n* $0 \\leq c_i \\leq 100,000$\n* $|E| < 500,000$\n* All vertices are reachable from vertex $0$\n\nInput\n\nIn the first line, an integer $n$ denoting the number of vertices in $G$ is given. In the following $n$ lines, adjacency lists for each vertex $u$ are respectively given in the following format:\n\n$u$ $k$ $v_1$ $c_1$ $v_2$ $c_2$ ... $v_k$ $c_k$\n\nVertices in $G$ are named with IDs $0, 1, ..., n-1$. $u$ is ID of the target vertex and $k$ denotes its degree. $v_i (i = 1, 2, ... k)$ denote IDs of vertices adjacent to $u$ and $c_i$ denotes the weight of a directed edge connecting $u$ and $v_i$ (from $u$ to $v_i$).\n\nOutput\n\nFor each vertex, print its ID and the distance separated by a space character in a line respectively. Print in order of vertex IDs.\n\nExample\n\nInput\n\n5\n0 3 2 3 3 1 1 2\n1 2 0 2 3 4\n2 3 0 3 3 1 4 1\n3 4 2 1 0 1 1 4 4 3\n4 2 2 1 3 3\n\n\nOutput\n\n0 0\n1 2\n2 2\n3 1\n4 3", "grammar": {"answer": null}}
{"name": "664_B. Rebus", "description": "You are given a rebus of form ? + ? - ? + ? = n, consisting of only question marks, separated by arithmetic operation '+' and '-', equality and positive integer n. The goal is to replace each question mark with some positive integer from 1 to n, such that equality holds.\n\nInput\n\nThe only line of the input contains a rebus. It's guaranteed that it contains no more than 100 question marks, integer n is positive and doesn't exceed 1 000 000, all letters and integers are separated by spaces, arithmetic operations are located only between question marks.\n\nOutput\n\nThe first line of the output should contain \"Possible\" (without quotes) if rebus has a solution and \"Impossible\" (without quotes) otherwise.\n\nIf the answer exists, the second line should contain any valid rebus with question marks replaced by integers from 1 to n. Follow the format given in the samples.\n\nExamples\n\nInput\n\n? + ? - ? + ? + ? = 42\n\n\nOutput\n\nPossible\n9 + 13 - 39 + 28 + 31 = 42\n\n\nInput\n\n? - ? = 1\n\n\nOutput\n\nImpossible\n\n\nInput\n\n? = 1000000\n\n\nOutput\n\nPossible\n1000000 = 1000000", "grammar": {"answer": null}}
{"name": "462_A. Appleman and Easy Task", "description": "Toastman came up with a very easy task. He gives it to Appleman, but Appleman doesn't know how to solve it. Can you help him?\n\nGiven a n × n checkerboard. Each cell of the board has either character 'x', or character 'o'. Is it true that each cell of the board has even number of adjacent cells with 'o'? Two cells of the board are adjacent if they share a side.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 100). Then n lines follow containing the description of the checkerboard. Each of them contains n characters (either 'x' or 'o') without spaces.\n\nOutput\n\nPrint \"YES\" or \"NO\" (without the quotes) depending on the answer to the problem.\n\nExamples\n\nInput\n\n3\nxxo\nxox\noxx\n\n\nOutput\n\nYES\n\n\nInput\n\n4\nxxxo\nxoxo\noxox\nxxxx\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "819_E. Mister B and Flight to the Moon", "description": "In order to fly to the Moon Mister B just needs to solve the following problem.\n\nThere is a complete indirected graph with n vertices. You need to cover it with several simple cycles of length 3 and 4 so that each edge is in exactly 2 cycles.\n\nWe are sure that Mister B will solve the problem soon and will fly to the Moon. Will you?\n\nInput\n\nThe only line contains single integer n (3 ≤ n ≤ 300).\n\nOutput\n\nIf there is no answer, print -1.\n\nOtherwise, in the first line print k (1 ≤ k ≤ n2) — the number of cycles in your solution.\n\nIn each of the next k lines print description of one cycle in the following format: first print integer m (3 ≤ m ≤ 4) — the length of the cycle, then print m integers v1, v2, ..., vm (1 ≤ vi ≤ n) — the vertices in the cycle in the traverse order. Each edge should be in exactly two cycles.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n2\n3 1 2 3\n3 1 2 3\n\n\nInput\n\n5\n\n\nOutput\n\n6\n3 5 4 2\n3 3 1 5\n4 4 5 2 3\n4 4 3 2 1\n3 4 2 1\n3 3 1 5", "grammar": {"answer": null}}
{"name": "522_D. Closest Equals", "description": "You are given sequence a1, a2, ..., an and m queries lj, rj (1 ≤ lj ≤ rj ≤ n). For each query you need to print the minimum distance between such pair of elements ax and ay (x ≠ y), that:\n\n  * both indexes of the elements lie within range [lj, rj], that is, lj ≤ x, y ≤ rj; \n  * the values of the elements are equal, that is ax = ay. \n\n\n\nThe text above understands distance as |x - y|.\n\nInput\n\nThe first line of the input contains a pair of integers n, m (1 ≤ n, m ≤ 5·105) — the length of the sequence and the number of queries, correspondingly. \n\nThe second line contains the sequence of integers a1, a2, ..., an ( - 109 ≤ ai ≤ 109). \n\nNext m lines contain the queries, one per line. Each query is given by a pair of numbers lj, rj (1 ≤ lj ≤ rj ≤ n) — the indexes of the query range limits.\n\nOutput\n\nPrint m integers — the answers to each query. If there is no valid match for some query, please print -1 as an answer to this query.\n\nExamples\n\nInput\n\n5 3\n1 1 2 3 2\n1 5\n2 4\n3 5\n\n\nOutput\n\n1\n-1\n2\n\n\nInput\n\n6 5\n1 2 1 3 2 3\n4 6\n1 3\n2 5\n2 4\n1 6\n\n\nOutput\n\n2\n2\n3\n-1\n2", "grammar": {"answer": null}}
{"name": "p03511 Code Festival Team Relay (Parallel) - Coinage", "description": "You are given two strings s and t consisting of lowercase English letters and an integer L.\n\nWe will consider generating a string of length L by concatenating one or more copies of s and t. Here, it is allowed to use the same string more than once.\n\nFor example, when s = `at`, t = `code` and L = 6, the strings `atatat`, `atcode` and `codeat` can be generated.\n\nAmong the strings that can be generated in this way, find the lexicographically smallest one. In the cases given as input, it is always possible to generate a string of length L.\n\nConstraints\n\n* 1 ≤ L ≤ 2 × 10^5\n* 1 ≤ |s|, |t| ≤ L\n* s and t consist of lowercase English letters.\n* It is possible to generate a string of length L in the way described in Problem Statement.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nx_1 s_1\nx_2 s_2\n:\nx_N s_N\n\n\nOutput\n\nPrint the lexicographically smallest string among the ones that can be generated in the way described in Problem Statement.\n\nExamples\n\nInput\n\n6\nat\ncode\n\n\nOutput\n\natatat\n\n\nInput\n\n8\ncoding\nfestival\n\n\nOutput\n\nfestival\n\n\nInput\n\n8\nsame\nsame\n\n\nOutput\n\nsamesame\n\n\nInput\n\n10\ncoin\nage\n\n\nOutput\n\nageagecoin", "grammar": {"answer": null}}
{"name": "p03649 AtCoder Regular Contest 079 - Decrease (Judge ver.)", "description": "We have a sequence of length N consisting of non-negative integers. Consider performing the following operation on this sequence until the largest element in this sequence becomes N-1 or smaller. (The operation is the same as the one in Problem D.)\n\n* Determine the largest element in the sequence (if there is more than one, choose one). Decrease the value of this element by N, and increase each of the other elements by 1.\n\n\n\nIt can be proved that the largest element in the sequence becomes N-1 or smaller after a finite number of operations.\n\nYou are given the sequence a_i. Find the number of times we will perform the above operation.\n\nConstraints\n\n* 2 ≤ N ≤ 50\n* 0 ≤ a_i ≤ 10^{16} + 1000\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the number of times the operation will be performed.\n\nExamples\n\nInput\n\n4\n3 3 3 3\n\n\nOutput\n\n0\n\n\nInput\n\n3\n1 0 3\n\n\nOutput\n\n1\n\n\nInput\n\n2\n2 2\n\n\nOutput\n\n2\n\n\nInput\n\n7\n27 0 0 0 0 0 0\n\n\nOutput\n\n3\n\n\nInput\n\n10\n1000 193 256 777 0 1 1192 1234567891011 48 425\n\n\nOutput\n\n1234567894848", "grammar": {"answer": null}}
{"name": "448_D. Multiplication Table", "description": "Bizon the Champion isn't just charming, he also is very smart.\n\nWhile some of us were learning the multiplication table, Bizon the Champion had fun in his own manner. Bizon the Champion painted an n × m multiplication table, where the element on the intersection of the i-th row and j-th column equals i·j (the rows and columns of the table are numbered starting from 1). Then he was asked: what number in the table is the k-th largest number? Bizon the Champion always answered correctly and immediately. Can you repeat his success?\n\nConsider the given multiplication table. If you write out all n·m numbers from the table in the non-decreasing order, then the k-th number you write out is called the k-th largest number.\n\nInput\n\nThe single line contains integers n, m and k (1 ≤ n, m ≤ 5·105; 1 ≤ k ≤ n·m).\n\nOutput\n\nPrint the k-th largest number in a n × m multiplication table.\n\nExamples\n\nInput\n\n2 2 2\n\n\nOutput\n\n2\n\n\nInput\n\n2 3 4\n\n\nOutput\n\n3\n\n\nInput\n\n1 10 5\n\n\nOutput\n\n5\n\nNote\n\nA 2 × 3 multiplication table looks like this:\n    \n    \n      \n    1 2 3  \n    2 4 6  \n      \n    ", "grammar": {"answer": null}}
{"name": "p01884 Similarity of Subtrees", "description": "Example\n\nInput\n\n5\n1 2\n1 3\n1 4\n1 5\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p00044 Prime Number II", "description": "A prime number is an integer that is greater than 1 and can only be divided by itself or 1. For example, 2 is a prime number because it is divisible only by 2 and 1, but 12 is not a prime number because it is divisible by 2, 3, 4, 6 in addition to 12 and 1.\n\nWhen you enter the integer n, write a program that outputs the largest prime number less than n and the smallest prime number greater than n.\n\n\n\nInput\n\nGiven multiple datasets. Each dataset is given n (3 ≤ n ≤ 50,000) on one row.\n\nThe number of datasets does not exceed 50.\n\nOutput\n\nFor each dataset, output the largest prime number less than n and the smallest prime number greater than n on one line, separated by a space.\n\nExample\n\nInput\n\n19\n3517\n\n\nOutput\n\n17 23\n3511 3527", "grammar": {"answer": null}}
{"name": "p02934 AtCoder Beginner Contest 138 - Resistors in Parallel", "description": "Given is a sequence of N integers A_1, \\ldots, A_N.\n\nFind the (multiplicative) inverse of the sum of the inverses of these numbers, \\frac{1}{\\frac{1}{A_1} + \\ldots + \\frac{1}{A_N}}.\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* 1 \\leq A_i \\leq 1000\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 \\ldots A_N\n\n\nOutput\n\nPrint a decimal number (or an integer) representing the value of \\frac{1}{\\frac{1}{A_1} + \\ldots + \\frac{1}{A_N}}.\n\nYour output will be judged correct when its absolute or relative error from the judge's output is at most 10^{-5}.\n\nExamples\n\nInput\n\n2\n10 30\n\n\nOutput\n\n7.5\n\n\nInput\n\n3\n200 200 200\n\n\nOutput\n\n66.66666666666667\n\n\nInput\n\n1\n1000\n\n\nOutput\n\n1000", "grammar": {"answer": null}}
{"name": "630_N. Forecast", "description": "The Department of economic development of IT City created a model of city development till year 2100.\n\nTo prepare report about growth perspectives it is required to get growth estimates from the model.\n\nTo get the growth estimates it is required to solve a quadratic equation. Since the Department of economic development of IT City creates realistic models only, that quadratic equation has a solution, moreover there are exactly two different real roots.\n\nThe greater of these roots corresponds to the optimistic scenario, the smaller one corresponds to the pessimistic one. Help to get these estimates, first the optimistic, then the pessimistic one.\n\nInput\n\nThe only line of the input contains three integers a, b, c ( - 1000 ≤ a, b, c ≤ 1000) — the coefficients of ax2 + bx + c = 0 equation.\n\nOutput\n\nIn the first line output the greater of the equation roots, in the second line output the smaller one. Absolute or relative error should not be greater than 10 - 6.\n\nExamples\n\nInput\n\n1 30 200\n\n\nOutput\n\n-10.000000000000000\n-20.000000000000000", "grammar": {"answer": null}}
{"name": "1208_F. Bits And Pieces", "description": "You are given an array a of n integers.\n\nYou need to find the maximum value of a_{i} | ( a_{j} \\& a_{k} ) over all triplets (i,j,k) such that i < j < k.\n\nHere \\& denotes the [bitwise AND operation](https://en.wikipedia.org/wiki/Bitwise_operation#AND), and | denotes the [bitwise OR operation](https://en.wikipedia.org/wiki/Bitwise_operation#OR).\n\nInput\n\nThe first line of input contains the integer n (3 ≤ n ≤ 10^{6}), the size of the array a.\n\nNext line contains n space separated integers a_1, a_2, ..., a_n (0 ≤ a_{i} ≤ 2 ⋅ 10^{6}), representing the elements of the array a.\n\nOutput\n\nOutput a single integer, the maximum value of the expression given in the statement. \n\nExamples\n\nInput\n\n\n3\n2 4 6\n\n\nOutput\n\n\n6\n\n\nInput\n\n\n4\n2 8 4 7\n\n\nOutput\n\n\n12\n\nNote\n\nIn the first example, the only possible triplet is (1, 2, 3). Hence, the answer is 2 | (4 \\& 6) = 6.\n\nIn the second example, there are 4 possible triplets: \n\n  1. (1, 2, 3), value of which is 2|(8\\&4) = 2. \n  2. (1, 2, 4), value of which is 2|(8\\&7) = 2. \n  3. (1, 3, 4), value of which is 2|(4\\&7) = 6. \n  4. (2, 3, 4), value of which is 8|(4\\&7) = 12. \n\n\n\nThe maximum value hence is 12.", "grammar": {"answer": null}}
{"name": "p02322 Knapsack Problem with Limitations II", "description": "You have $N$ items that you want to put them into a knapsack. Item $i$ has value $v_i$, weight $w_i$ and limitation $m_i$.\n\nYou want to find a subset of items to put such that:\n\n* The total value of the items is as large as possible.\n* The items have combined weight at most $W$, that is capacity of the knapsack.\n* You can select at most $m_i$ items for $i$-th item.\n\n\n\nFind the maximum total value of items in the knapsack.\n\nConstraints\n\n* $1 \\le N \\le 50$\n* $1 \\le v_i \\le 50$\n* $1 \\le w_i \\le 10^9$\n* $1 \\le m_i \\le 10^9$\n* $1 \\le W \\le 10^9$\n\nInput\n\n\n$N$ $W$\n$v_1$ $w_1$ $m_1$\n$v_2$ $w_2$ $m_2$\n:\n$v_N$ $w_N$ $m_N$\n\n\nThe first line consists of the integers $N$ and $W$. In the following $N$ lines, the value, weight and limitation of the $i$-th item are given.\n\nOutput\n\nPrint the maximum total values of the items in a line.\n\nExamples\n\nInput\n\n4 8\n4 3 2\n2 1 1\n1 2 4\n3 2 2\n\n\nOutput\n\n12\n\n\nInput\n\n2 100\n1 1 100\n2 1 50\n\n\nOutput\n\n150\n\n\nInput\n\n5 1000000000\n3 5 1000000000\n7 6 1000000000\n4 4 1000000000\n6 8 1000000000\n2 5 1000000000\n\n\nOutput\n\n1166666666", "grammar": {"answer": null}}
{"name": "p02835 AtCoder Beginner Contest 147 - Blackjack", "description": "Given are three integers A_1, A_2, and A_3.\n\nIf A_1+A_2+A_3 is greater than or equal to 22, print `bust`; otherwise, print `win`.\n\nConstraints\n\n* 1 \\leq A_i \\leq 13 \\ \\ (i=1,2,3)\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA_1 A_2 A_3\n\n\nOutput\n\nIf A_1+A_2+A_3 is greater than or equal to 22, print `bust`; otherwise, print `win`.\n\nExamples\n\nInput\n\n5 7 9\n\n\nOutput\n\nwin\n\n\nInput\n\n13 7 2\n\n\nOutput\n\nbust", "grammar": {"answer": null}}
{"name": "p01819 Where is the Boundary", "description": "Example\n\nInput\n\n2 1\nWE\n\n\nOutput\n\n1 2", "grammar": {"answer": null}}
{"name": "p00935 Decimal Sequences", "description": "Example\n\nInput\n\n3\n3 0 1\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02916 AtCoder Beginner Contest 140 - Buffet", "description": "Takahashi went to an all-you-can-eat buffet with N kinds of dishes and ate all of them (Dish 1, Dish 2, \\ldots, Dish N) once.\n\nThe i-th dish (1 \\leq i \\leq N) he ate was Dish A_i.\n\nWhen he eats Dish i (1 \\leq i \\leq N), he gains B_i satisfaction points.\n\nAdditionally, when he eats Dish i+1 just after eating Dish i (1 \\leq i \\leq N - 1), he gains C_i more satisfaction points.\n\nFind the sum of the satisfaction points he gained.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 20\n* 1 \\leq A_i \\leq N\n* A_1, A_2, ..., A_N are all different.\n* 1 \\leq B_i \\leq 50\n* 1 \\leq C_i \\leq 50\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\nB_1 B_2 ... B_N\nC_1 C_2 ... C_{N-1}\n\n\nOutput\n\nPrint the sum of the satisfaction points Takahashi gained, as an integer.\n\nExamples\n\nInput\n\n3\n3 1 2\n2 5 4\n3 6\n\n\nOutput\n\n14\n\n\nInput\n\n4\n2 3 4 1\n13 5 8 24\n45 9 15\n\n\nOutput\n\n74\n\n\nInput\n\n2\n1 2\n50 50\n50\n\n\nOutput\n\n150", "grammar": {"answer": null}}
{"name": "892_B. Wrath", "description": "Hands that shed innocent blood!\n\nThere are n guilty people in a line, the i-th of them holds a claw with length Li. The bell rings and every person kills some of people in front of him. All people kill others at the same time. Namely, the i-th person kills the j-th person if and only if j < i and j ≥ i - Li.\n\nYou are given lengths of the claws. You need to find the total number of alive people after the bell rings.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 106) — the number of guilty people.\n\nSecond line contains n space-separated integers L1, L2, ..., Ln (0 ≤ Li ≤ 109), where Li is the length of the i-th person's claw.\n\nOutput\n\nPrint one integer — the total number of alive people after the bell rings.\n\nExamples\n\nInput\n\n4\n0 1 0 10\n\n\nOutput\n\n1\n\n\nInput\n\n2\n0 0\n\n\nOutput\n\n2\n\n\nInput\n\n10\n1 1 3 0 0 0 2 1 0 3\n\n\nOutput\n\n3\n\nNote\n\nIn first sample the last person kills everyone in front of him.", "grammar": {"answer": null}}
{"name": "43_A. Football", "description": "One day Vasya decided to have a look at the results of Berland 1910 Football Championship’s finals. Unfortunately he didn't find the overall score of the match; however, he got hold of a profound description of the match's process. On the whole there are n lines in that description each of which described one goal. Every goal was marked with the name of the team that had scored it. Help Vasya, learn the name of the team that won the finals. It is guaranteed that the match did not end in a tie.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 100) — the number of lines in the description. Then follow n lines — for each goal the names of the teams that scored it. The names are non-empty lines consisting of uppercase Latin letters whose lengths do not exceed 10 symbols. It is guaranteed that the match did not end in a tie and the description contains no more than two different teams.\n\nOutput\n\nPrint the name of the winning team. We remind you that in football the team that scores more goals is considered the winner.\n\nExamples\n\nInput\n\n1\nABC\n\n\nOutput\n\nABC\n\n\nInput\n\n5\nA\nABA\nABA\nA\nA\n\n\nOutput\n\nA", "grammar": {"answer": null}}
{"name": "617_A. Elephant", "description": "An elephant decided to visit his friend. It turned out that the elephant's house is located at point 0 and his friend's house is located at point x(x > 0) of the coordinate line. In one step the elephant can move 1, 2, 3, 4 or 5 positions forward. Determine, what is the minimum number of steps he need to make in order to get to his friend's house.\n\nInput\n\nThe first line of the input contains an integer x (1 ≤ x ≤ 1 000 000) — The coordinate of the friend's house.\n\nOutput\n\nPrint the minimum number of steps that elephant needs to make to get from point 0 to point x.\n\nExamples\n\nInput\n\n5\n\n\nOutput\n\n1\n\n\nInput\n\n12\n\n\nOutput\n\n3\n\nNote\n\nIn the first sample the elephant needs to make one step of length 5 to reach the point x.\n\nIn the second sample the elephant can get to point x if he moves by 3, 5 and 4. There are other ways to get the optimal answer but the elephant cannot reach x in less than three moves.", "grammar": {"answer": null}}
{"name": "797_B. Odd sum", "description": "You are given sequence a1, a2, ..., an of integer numbers of length n. Your task is to find such subsequence that its sum is odd and maximum among all such subsequences. It's guaranteed that given sequence contains subsequence with odd sum.\n\nSubsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements.\n\nYou should write a program which finds sum of the best subsequence.\n\nInput\n\nThe first line contains integer number n (1 ≤ n ≤ 105).\n\nThe second line contains n integer numbers a1, a2, ..., an ( - 104 ≤ ai ≤ 104). The sequence contains at least one subsequence with odd sum.\n\nOutput\n\nPrint sum of resulting subseqeuence.\n\nExamples\n\nInput\n\n4\n-2 2 -3 1\n\n\nOutput\n\n3\n\n\nInput\n\n3\n2 -5 -3\n\n\nOutput\n\n-1\n\nNote\n\nIn the first example sum of the second and the fourth elements is 3.", "grammar": {"answer": null}}
{"name": "p02705 AtCoder Beginner Contest 163 - Circle Pond", "description": "Print the circumference of a circle of radius R.\n\nConstraints\n\n* 1 \\leq R \\leq 100\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nR\n\n\nOutput\n\nPrint the circumference of the circle. Your output is considered correct if and only if its absolute or relative error from our answer is at most 10^{-2}.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n6.28318530717958623200\n\n\nInput\n\n73\n\n\nOutput\n\n458.67252742410977361942", "grammar": {"answer": null}}
{"name": "p03684 AtCoder Regular Contest 076 - Built?", "description": "There are N towns on a plane. The i-th town is located at the coordinates (x_i,y_i). There may be more than one town at the same coordinates.\n\nYou can build a road between two towns at coordinates (a,b) and (c,d) for a cost of min(|a-c|,|b-d|) yen (the currency of Japan). It is not possible to build other types of roads.\n\nYour objective is to build roads so that it will be possible to travel between every pair of towns by traversing roads. At least how much money is necessary to achieve this?\n\nConstraints\n\n* 2 ≤ N ≤ 10^5\n* 0 ≤ x_i,y_i ≤ 10^9\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nx_1 y_1\nx_2 y_2\n:\nx_N y_N\n\n\nOutput\n\nPrint the minimum necessary amount of money in order to build roads so that it will be possible to travel between every pair of towns by traversing roads.\n\nExamples\n\nInput\n\n3\n1 5\n3 9\n7 8\n\n\nOutput\n\n3\n\n\nInput\n\n6\n8 3\n4 9\n12 19\n18 1\n13 5\n7 6\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "p01747 Snake", "description": "Sunake is in the form of a polygonal line consisting of n vertices (without self-intersection). First, Sunake-kun's i-th vertex is at (xi, yi). You can move continuously by translating or rotating, but you cannot deform (change the length of the polygonal line or the angle between the two line segments). y = 0 is the wall, and there is a small hole at (0, 0). Determine if you can move through this hole so that the whole thing meets y <0.\n\nConstraints\n\n* 2 ≤ n ≤ 1000\n* 0 ≤ xi ≤ 109\n* 1 ≤ yi ≤ 109\n* Lines do not have self-intersections\n* None of the three points are on the same straight line\n* (xi, yi) ≠ (xi + 1, yi + 1)\n* All inputs are integers\n\nInput\n\n\nn\nx1 y1\n.. ..\nxn yn\n\n\nOutput\n\nOutput \"Possible\" if you can move through the hole, and \"Impossible\" if you can't.\n\nExamples\n\nInput\n\n4\n0 1\n1 1\n1 2\n2 2\n\n\nOutput\n\nPossible\n\n\nInput\n\n11\n63 106\n87 143\n102 132\n115 169\n74 145\n41 177\n56 130\n28 141\n19 124\n0 156\n22 183\n\n\nOutput\n\nImpossible", "grammar": {"answer": null}}
{"name": "1189_E. Count Pairs", "description": "You are given a prime number p, n integers a_1, a_2, …, a_n, and an integer k. \n\nFind the number of pairs of indexes (i, j) (1 ≤ i < j ≤ n) for which (a_i + a_j)(a_i^2 + a_j^2) ≡ k mod p.\n\nInput\n\nThe first line contains integers n, p, k (2 ≤ n ≤ 3 ⋅ 10^5, 2 ≤ p ≤ 10^9, 0 ≤ k ≤ p-1). p is guaranteed to be prime.\n\nThe second line contains n integers a_1, a_2, …, a_n (0 ≤ a_i ≤ p-1). It is guaranteed that all elements are different.\n\nOutput\n\nOutput a single integer — answer to the problem.\n\nExamples\n\nInput\n\n\n3 3 0\n0 1 2\n\n\nOutput\n\n\n1\n\nInput\n\n\n6 7 2\n1 2 3 4 5 6\n\n\nOutput\n\n\n3\n\nNote\n\nIn the first example:\n\n(0+1)(0^2 + 1^2) = 1 ≡ 1 mod 3.\n\n(0+2)(0^2 + 2^2) = 8 ≡ 2 mod 3.\n\n(1+2)(1^2 + 2^2) = 15 ≡ 0 mod 3.\n\nSo only 1 pair satisfies the condition.\n\nIn the second example, there are 3 such pairs: (1, 5), (2, 3), (4, 6).", "grammar": {"answer": null}}
{"name": "p03693 AtCoder Beginner Contest 064 - RGB Cards", "description": "AtCoDeer has three cards, one red, one green and one blue.\nAn integer between 1 and 9 (inclusive) is written on each card: r on the red card, g on the green card and b on the blue card.\nWe will arrange the cards in the order red, green and blue from left to right, and read them as a three-digit integer.\nIs this integer a multiple of 4?\n\nConstraints\n\n* 1 ≤ r, g, b ≤ 9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nr g b\n\n\nOutput\n\nIf the three-digit integer is a multiple of 4, print `YES` (case-sensitive); otherwise, print `NO`.\n\nExamples\n\nInput\n\n4 3 2\n\n\nOutput\n\nYES\n\n\nInput\n\n2 3 4\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p03512 Code Festival Team Relay (Parallel) - Akashic Records", "description": "Consider an infinite sequence a_1, a_2, … Initially, the values of all the terms are 0, and from this state we will sequentially perform Q operations. The i-th operation (1 ≤ i ≤ Q) is as follows:\n\n* For every positive integer j, add x_i to the value of a_{j × m_i}.\n\n\n\nFind the value of the largest term after these Q operations.\n\nConstraints\n\n* 1 ≤ Q ≤ 299\n* 2 ≤ m_i ≤ 300\n* -10^6 ≤ x_i ≤ 10^6\n* All m_i are distinct.\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nQ\nm_1 x_1\n:\nm_Q x_Q\n\n\nOutput\n\nPrint the value of the largest term after the Q operations.\n\nExamples\n\nInput\n\n3\n2 10\n3 -20\n6 15\n\n\nOutput\n\n10\n\n\nInput\n\n3\n10 -3\n50 4\n100 -5\n\n\nOutput\n\n1\n\n\nInput\n\n5\n56 114834\n72 -149861\n100 190757\n192 -132693\n240 133108\n\n\nOutput\n\n438699", "grammar": {"answer": null}}
{"name": "1143_B. Nirvana", "description": "Kurt reaches nirvana when he finds the product of all the digits of some positive integer. Greater value of the product makes the nirvana deeper.\n\nHelp Kurt find the maximum possible product of digits among all integers from 1 to n.\n\nInput\n\nThe only input line contains the integer n (1 ≤ n ≤ 2⋅10^9).\n\nOutput\n\nPrint the maximum product of digits among all integers from 1 to n.\n\nExamples\n\nInput\n\n\n390\n\n\nOutput\n\n\n216\n\n\nInput\n\n\n7\n\n\nOutput\n\n\n7\n\n\nInput\n\n\n1000000000\n\n\nOutput\n\n\n387420489\n\nNote\n\nIn the first example the maximum product is achieved for 389 (the product of digits is 3⋅8⋅9=216).\n\nIn the second example the maximum product is achieved for 7 (the product of digits is 7).\n\nIn the third example the maximum product is achieved for 999999999 (the product of digits is 9^9=387420489).", "grammar": {"answer": null}}
{"name": "p00089 The Shortest Path on A Rhombic Path", "description": "<image>\n\n\nArrange integers (0 or more and 99 or less) in a rhombus as illustrated in Fig. 1. Create a program that reads the data representing the rhombus and outputs the maximum value of the sum of the integers that pass when starting from the top and proceeding to the bottom according to the following rules.\n\n* At each step, you can proceed to the lower left diagonal or the lower right diagonal.\n\n\n\nFor example, in the example of Fig. 1, as shown in Fig. 2, when 7,3,8,7,5,7,8,3,7 is selected and passed, the sum is the maximum 55 (7 + 3 + 8). + 7 + 5 + 7 + 8 + 3 + 7 = 55).\n\n\n\nInput\n\nAs shown in the input example, a comma-separated sequence of integers is given to the diamond. Each line does not contain whitespace. The input example corresponds to Fig. 1. There are less than 100 rows of data.\n\nOutput\n\nOutputs the maximum value of the sum of integers that pass according to the rules on one line.\n\nExample\n\nInput\n\n7\n3,8\n8,1,0\n2,7,4,4\n4,5,2,6,5\n2,7,4,4\n8,1,0\n3,8\n7\n\n\nOutput\n\n55", "grammar": {"answer": null}}
{"name": "p02303 Closest Pair", "description": "For given n points in metric space, find the distance of the closest points.\n\nConstraints\n\n* 2 ≤ n ≤ 100,000\n* -100 ≤ x, y ≤ 100\n\nInput\n\n\nn\nx0 y0\nx1 y1\n:\nxn-1 yn-1\n\n\nThe first integer n is the number of points.\n\nIn the following n lines, the coordinate of the i-th point is given by two real numbers xi and yi. Each value is a real number with at most 6 digits after the decimal point.\n\nOutput\n\nPrint the distance in a line. The output values should be in a decimal fraction with an error less than 0.000001.\n\nExamples\n\nInput\n\n2\n0.0 0.0\n1.0 0.0\n\n\nOutput\n\n1.000000\n\n\nInput\n\n3\n0.0 0.0\n2.0 0.0\n1.0 1.0\n\n\nOutput\n\n1.41421356237", "grammar": {"answer": null}}
{"name": "p03987 AtCoder Grand Contest 005 - Minimum Sum", "description": "One day, Snuke was given a permutation of length N, a_1, a_2, ..., a_N, from his friend.\n\nFind the following:\n\n<image>\n\nConstraints\n\n* 1 ≦ N ≦ 200,000\n* (a_1, a_2, ..., a_N) is a permutation of (1, 2, ..., N).\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the answer.\n\nNote that the answer may not fit into a 32-bit integer.\n\nExamples\n\nInput\n\n3\n2 1 3\n\n\nOutput\n\n9\n\n\nInput\n\n4\n1 3 2 4\n\n\nOutput\n\n19\n\n\nInput\n\n8\n5 4 8 1 2 6 7 3\n\n\nOutput\n\n85", "grammar": {"answer": null}}
{"name": "p00008 Sum of 4 Integers", "description": "Write a program which reads an integer n and identifies the number of combinations of a, b, c and d (0 ≤ a, b, c, d ≤ 9) which meet the following equality:\n\na + b + c + d = n\n\nFor example, for n = 35, we have 4 different combinations of (a, b, c, d): (8, 9, 9, 9), (9, 8, 9, 9), (9, 9, 8, 9), and (9, 9, 9, 8).\n\n\n\nInput\n\nThe input consists of several datasets. Each dataset consists of n (1 ≤ n ≤ 50) in a line. The number of datasets is less than or equal to 50.\n\nOutput\n\nPrint the number of combination in a line.\n\nExample\n\nInput\n\n35\n1\n\n\nOutput\n\n4\n4", "grammar": {"answer": null}}
{"name": "p02358 Union of Rectangles", "description": "Given a set of $N$ axis-aligned rectangles in the plane, find the area of regions which are covered by at least one rectangle.\n\nConstraints\n\n* $ 1 \\leq N \\leq 2000 $\n* $ −10^9 \\leq x1_i < x2_i\\leq 10^9 $\n* $ −10^9 \\leq y1_i < y2_i\\leq 10^9 $\n\nInput\n\nThe input is given in the following format.\n\n$N$\n$x1_1$ $y1_1$ $x2_1$ $y2_1$\n$x1_2$ $y1_2$ $x2_2$ $y2_2$\n:\n$x1_N$ $y1_N$ $x2_N$ $y2_N$\n\n\n($x1_i, y1_i$) and ($x2_i, y2_i$) are the coordinates of the top-left corner and the bottom-right corner of the $i$-th rectangle respectively.\n\nOutput\n\nPrint the area of the regions.\n\nExamples\n\nInput\n\n2\n0 0 3 4\n1 2 4 3\n\n\nOutput\n\n13\n\n\nInput\n\n3\n1 1 2 5\n2 1 5 2\n1 2 2 5\n\n\nOutput\n\n7\n\n\nInput\n\n4\n0 0 3 1\n0 0 1 3\n0 2 3 3\n2 0 3 3\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "p03729 AtCoder Beginner Contest 060 - Shiritori", "description": "You are given three strings A, B and C. Check whether they form a word chain.\n\nMore formally, determine whether both of the following are true:\n\n* The last character in A and the initial character in B are the same.\n* The last character in B and the initial character in C are the same.\n\n\n\nIf both are true, print `YES`. Otherwise, print `NO`.\n\nConstraints\n\n* A, B and C are all composed of lowercase English letters (`a` - `z`).\n* 1 ≤ |A|, |B|, |C| ≤ 10, where |A|, |B| and |C| are the lengths of A, B and C, respectively.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C\n\n\nOutput\n\nPrint `YES` or `NO`.\n\nExamples\n\nInput\n\nrng gorilla apple\n\n\nOutput\n\nYES\n\n\nInput\n\nyakiniku unagi sushi\n\n\nOutput\n\nNO\n\n\nInput\n\na a a\n\n\nOutput\n\nYES\n\n\nInput\n\naaaaaaaaab aaaaaaaaaa aaaaaaaaab\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "620_A. Professor GukiZ's Robot", "description": "Professor GukiZ makes a new robot. The robot are in the point with coordinates (x1, y1) and should go to the point (x2, y2). In a single step the robot can change any of its coordinates (maybe both of them) by one (decrease or increase). So the robot can move in one of the 8 directions. Find the minimal number of steps the robot should make to get the finish position.\n\nInput\n\nThe first line contains two integers x1, y1 ( - 109 ≤ x1, y1 ≤ 109) — the start position of the robot.\n\nThe second line contains two integers x2, y2 ( - 109 ≤ x2, y2 ≤ 109) — the finish position of the robot.\n\nOutput\n\nPrint the only integer d — the minimal number of steps to get the finish position.\n\nExamples\n\nInput\n\n0 0\n4 5\n\n\nOutput\n\n5\n\n\nInput\n\n3 4\n6 1\n\n\nOutput\n\n3\n\nNote\n\nIn the first example robot should increase both of its coordinates by one four times, so it will be in position (4, 4). After that robot should simply increase its y coordinate and get the finish position.\n\nIn the second example robot should simultaneously increase x coordinate and decrease y coordinate by one three times.", "grammar": {"answer": null}}
{"name": "p00352 Handsel", "description": "Alice and Brown are brothers in a family and each receives pocket money in celebration of the coming year. They are very close and share the total amount of the money fifty-fifty. The pocket money each receives is a multiple of 1,000 yen.\n\nWrite a program to calculate each one’s share given the amount of money Alice and Brown received.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\na b\n\n\nA line of data is given that contains two values of money: a (1000 ≤ a ≤ 50000) for Alice and b (1000 ≤ b ≤ 50000) for Brown.\n\nOutput\n\nOutput the amount of money each of Alice and Brown receive in a line.\n\nExamples\n\nInput\n\n1000 3000\n\n\nOutput\n\n2000\n\n\nInput\n\n5000 5000\n\n\nOutput\n\n5000\n\n\nInput\n\n1000 2000\n\n\nOutput\n\n1500", "grammar": {"answer": null}}
{"name": "p03986 AtCoder Grand Contest 005 - STring", "description": "We have a string X, which has an even number of characters. Half the characters are `S`, and the other half are `T`.\n\nTakahashi, who hates the string `ST`, will perform the following operation 10^{10000} times:\n\n* Among the occurrences of `ST` in X as (contiguous) substrings, remove the leftmost one. If there is no occurrence, do nothing.\n\n\n\nFind the eventual length of X.\n\nConstraints\n\n* 2 ≦ |X| ≦ 200,000\n* The length of X is even.\n* Half the characters in X are `S`, and the other half are `T`.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nX\n\n\nOutput\n\nPrint the eventual length of X.\n\nExamples\n\nInput\n\nTSTTSS\n\n\nOutput\n\n4\n\n\nInput\n\nSSTTST\n\n\nOutput\n\n0\n\n\nInput\n\nTSSTTTSS\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p00025 Hit and Blow", "description": "Let's play Hit and Blow game. A imagines four numbers and B guesses the numbers. After B picks out four numbers, A answers:\n\n* The number of numbers which have the same place with numbers A imagined (Hit)\n* The number of numbers included (but different place) in the numbers A imagined (Blow)\n\n\n\nFor example, if A imagined numbers:\n\n\n9 1 8 2\n\n\nand B chose:\n\n\n4 1 5 9\n\n\nA should say 1 Hit and 1 Blow.\n\nWrite a program which reads four numbers A imagined and four numbers B chose and prints the number of Hit and Blow respectively. You may assume that the four numbers are all different and within from 0 to 9.\n\n\n\nInput\n\nThe input consists of multiple datasets. Each dataset set consists of:\n\n\na1 a2 a3 a4\nb1 b2 b3 b4\n\n\n, where ai (0 ≤ ai ≤ 9) is i-th number A imagined and bi (0 ≤ bi ≤ 9) is i-th number B chose.\n\nThe input ends with EOF. The number of datasets is less than or equal to 50.\n\nOutput\n\nFor each dataset, print the number of Hit and Blow in a line. These two numbers should be separated by a space.\n\nExample\n\nInput\n\n9 1 8 2\n4 1 5 9\n4 6 8 2\n4 6 3 2\n\n\nOutput\n\n1 1\n3 0", "grammar": {"answer": null}}
{"name": "p02256 Greatest Common Divisor", "description": "Write a program which finds the greatest common divisor of two natural numbers a and b\n\nHint\n\nYou can use the following observation:\n\nFor integers x and y, if x ≥ y, then gcd(x, y) = gcd(y, x%y)\n\nConstrants\n\n1 ≤ a, b ≤ 109\n\nInput\n\na and b are given in a line sparated by a single space.\n\nOutput\n\nOutput the greatest common divisor of a and b.\n\nExamples\n\nInput\n\n54 20\n\n\nOutput\n\n2\n\n\nInput\n\n147 105\n\n\nOutput\n\n21", "grammar": {"answer": null}}
{"name": "p03079 ExaWizards 2019 - Regular Triangle", "description": "You are given three integers A, B and C.\n\nDetermine if there exists an equilateral triangle whose sides have lengths A, B and C.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq A,B,C \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C\n\n\nOutput\n\nIf there exists an equilateral triangle whose sides have lengths A, B and C, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n2 2 2\n\n\nOutput\n\nYes\n\n\nInput\n\n3 4 5\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "620_B. Grandfather Dovlet’s calculator", "description": "Once Max found an electronic calculator from his grandfather Dovlet's chest. He noticed that the numbers were written with seven-segment indicators (<https://en.wikipedia.org/wiki/Seven-segment_display>).\n\n<image>\n\nMax starts to type all the values from a to b. After typing each number Max resets the calculator. Find the total number of segments printed on the calculator.\n\nFor example if a = 1 and b = 3 then at first the calculator will print 2 segments, then — 5 segments and at last it will print 5 segments. So the total number of printed segments is 12.\n\nInput\n\nThe only line contains two integers a, b (1 ≤ a ≤ b ≤ 106) — the first and the last number typed by Max.\n\nOutput\n\nPrint the only integer a — the total number of printed segments.\n\nExamples\n\nInput\n\n1 3\n\n\nOutput\n\n12\n\n\nInput\n\n10 15\n\n\nOutput\n\n39", "grammar": {"answer": null}}
{"name": "p02989 AtCoder Beginner Contest 132 - Divide the Problems", "description": "Takahashi made N problems for competitive programming. The problems are numbered 1 to N, and the difficulty of Problem i is represented as an integer d_i (the higher, the harder).\n\nHe is dividing the problems into two categories by choosing an integer K, as follows:\n\n* A problem with difficulty K or higher will be for ARCs.\n* A problem with difficulty lower than K will be for ABCs.\n\n\n\nHow many choices of the integer K make the number of problems for ARCs and the number of problems for ABCs the same?\n\n* 2 \\leq N \\leq 10^5\n* N is an even number.\n* 1 \\leq d_i \\leq 10^5\n* All values in input are integers.\n\n\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nd_1 d_2 ... d_N\n\n\nOutput\n\nPrint the number of choices of the integer K that make the number of problems for ARCs and the number of problems for ABCs the same.\n\nExamples\n\nInput\n\n6\n9 1 4 4 6 7\n\n\nOutput\n\n2\n\n\nInput\n\n8\n9 1 14 5 5 4 4 14\n\n\nOutput\n\n0\n\n\nInput\n\n14\n99592 10342 29105 78532 83018 11639 92015 77204 30914 21912 34519 80835 100000 1\n\n\nOutput\n\n42685", "grammar": {"answer": null}}
{"name": "p01488 TransferTrain", "description": "Example\n\nInput\n\n2 10\nWarsaw Petersburg\n3\nKiev Moscow Petersburg\n150 120\n3\nMoscow Minsk Warsaw\n100 150\n\n\nOutput\n\n380 1", "grammar": {"answer": null}}
{"name": "12_B. Correct Solution?", "description": "One cold winter evening Alice and her older brother Bob was sitting at home near the fireplace and giving each other interesting problems to solve. When it was Alice's turn, she told the number n to Bob and said:\n\n—Shuffle the digits in this number in order to obtain the smallest possible number without leading zeroes.\n\n—No problem! — said Bob and immediately gave her an answer.\n\nAlice said a random number, so she doesn't know whether Bob's answer is correct. Help her to find this out, because impatient brother is waiting for the verdict.\n\nInput\n\nThe first line contains one integer n (0 ≤ n ≤ 109) without leading zeroes. The second lines contains one integer m (0 ≤ m ≤ 109) — Bob's answer, possibly with leading zeroes.\n\nOutput\n\nPrint OK if Bob's answer is correct and WRONG_ANSWER otherwise.\n\nExamples\n\nInput\n\n3310\n1033\n\n\nOutput\n\nOK\n\n\nInput\n\n4\n5\n\n\nOutput\n\nWRONG_ANSWER", "grammar": {"answer": null}}
{"name": "p02812 AtCoder Beginner Contest 150 - Count ABC", "description": "We have a string S of length N consisting of uppercase English letters.\n\nHow many times does `ABC` occur in S as contiguous subsequences (see Sample Inputs and Outputs)?\n\nConstraints\n\n* 3 \\leq N \\leq 50\n* S consists of uppercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS\n\n\nOutput\n\nPrint number of occurrences of `ABC` in S as contiguous subsequences.\n\nExamples\n\nInput\n\n10\nZABCDBABCQ\n\n\nOutput\n\n2\n\n\nInput\n\n19\nTHREEONEFOURONEFIVE\n\n\nOutput\n\n0\n\n\nInput\n\n33\nABCCABCBABCCABACBCBBABCBCBCBCABCB\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p02399 A / B Problem", "description": "Write a program which reads two integers a and b, and calculates the following values:\n\n* a ÷ b: d (in integer)\n* remainder of a ÷ b: r (in integer)\n* a ÷ b: f (in real number)\n\nConstraints\n\n* 1 ≤ a, b ≤ 109\n\nInput\n\nTwo integers a and b are given in a line.\n\nOutput\n\nPrint d, r and f separated by a space in a line. For f, the output should not contain an absolute error greater than 10-5.\n\nExample\n\nInput\n\n3 2\n\n\nOutput\n\n1 1 1.50000", "grammar": {"answer": null}}
{"name": "805_D. Minimum number of steps", "description": "We have a string of letters 'a' and 'b'. We want to perform some operations on it. On each step we choose one of substrings \"ab\" in the string and replace it with the string \"bba\". If we have no \"ab\" as a substring, our job is done. Print the minimum number of steps we should perform to make our job done modulo 109 + 7.\n\nThe string \"ab\" appears as a substring if there is a letter 'b' right after the letter 'a' somewhere in the string.\n\nInput\n\nThe first line contains the initial string consisting of letters 'a' and 'b' only with length from 1 to 106.\n\nOutput\n\nPrint the minimum number of steps modulo 109 + 7.\n\nExamples\n\nInput\n\nab\n\n\nOutput\n\n1\n\n\nInput\n\naab\n\n\nOutput\n\n3\n\nNote\n\nThe first example: \"ab\"  →  \"bba\".\n\nThe second example: \"aab\"  →  \"abba\"  →  \"bbaba\"  →  \"bbbbaa\".", "grammar": {"answer": null}}
{"name": "p03903 CODE FESTIVAL 2016 Elimination Tournament Round 1 (Parallel) - Graph", "description": "Takahashi found an undirected connected graph with N vertices and M edges. The vertices are numbered 1 through N. The i-th edge connects vertices a_i and b_i, and has a weight of c_i.\n\nHe will play Q rounds of a game using this graph. In the i-th round, two vertices S_i and T_i are specified, and he will choose a subset of the edges such that any vertex can be reached from at least one of the vertices S_i or T_i by traversing chosen edges.\n\nFor each round, find the minimum possible total weight of the edges chosen by Takahashi.\n\nConstraints\n\n* 1 ≦ N ≦ 4,000\n* 1 ≦ M ≦ 400,000\n* 1 ≦ Q ≦ 100,000\n* 1 ≦ a_i,b_i,S_i,T_i ≦ N\n* 1 ≦ c_i ≦ 10^{9}\n* a_i \\neq b_i\n* S_i \\neq T_i\n* The given graph is connected.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN M\na_1 b_1 c_1\na_2 b_2 c_2\n:\na_M b_M c_M\nQ\nS_1 T_1\nS_2 T_2\n:\nS_Q T_Q\n\n\nOutput\n\nPrint Q lines. The i-th line should contain the minimum possible total weight of the edges chosen by Takahashi.\n\nExamples\n\nInput\n\n4 3\n1 2 3\n2 3 4\n3 4 5\n2\n2 3\n1 4\n\n\nOutput\n\n8\n7\n\n\nInput\n\n4 6\n1 3 5\n4 1 10\n2 4 6\n3 2 2\n3 4 5\n2 1 3\n1\n2 3\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "p02713 AtCoder Beginner Contest 162 - Sum of gcd of Tuples (Easy)", "description": "Find \\displaystyle{\\sum_{a=1}^{K}\\sum_{b=1}^{K}\\sum_{c=1}^{K} \\gcd(a,b,c)}.\n\nHere \\gcd(a,b,c) denotes the greatest common divisor of a, b, and c.\n\nConstraints\n\n* 1 \\leq K \\leq 200\n* K is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK\n\n\nOutput\n\nPrint the value of \\displaystyle{\\sum_{a=1}^{K}\\sum_{b=1}^{K}\\sum_{c=1}^{K} \\gcd(a,b,c)}.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n9\n\n\nInput\n\n200\n\n\nOutput\n\n10813692", "grammar": {"answer": null}}
{"name": "p03738 AtCoder Beginner Contest 059 - Comparison", "description": "You are given two positive integers A and B. Compare the magnitudes of these numbers.\n\nConstraints\n\n* 1 ≤ A, B ≤ 10^{100}\n* Neither A nor B begins with a `0`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA\nB\n\n\nOutput\n\nPrint `GREATER` if A>B, `LESS` if A<B and `EQUAL` if A=B.\n\nExamples\n\nInput\n\n36\n24\n\n\nOutput\n\nGREATER\n\n\nInput\n\n850\n3777\n\n\nOutput\n\nLESS\n\n\nInput\n\n9720246\n22516266\n\n\nOutput\n\nLESS\n\n\nInput\n\n123456789012345678901234567890\n234567890123456789012345678901\n\n\nOutput\n\nLESS", "grammar": {"answer": null}}
{"name": "p03714 AtCoder Beginner Contest 062 - 3N Numbers", "description": "Let N be a positive integer.\n\nThere is a numerical sequence of length 3N, a = (a_1, a_2, ..., a_{3N}). Snuke is constructing a new sequence of length 2N, a', by removing exactly N elements from a without changing the order of the remaining elements. Here, the score of a' is defined as follows: (the sum of the elements in the first half of a') - (the sum of the elements in the second half of a').\n\nFind the maximum possible score of a'.\n\nConstraints\n\n* 1 ≤ N ≤ 10^5\n* a_i is an integer.\n* 1 ≤ a_i ≤ 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_{3N}\n\n\nOutput\n\nPrint the maximum possible score of a'.\n\nExamples\n\nInput\n\n2\n3 1 4 1 5 9\n\n\nOutput\n\n1\n\n\nInput\n\n1\n1 2 3\n\n\nOutput\n\n-1\n\n\nInput\n\n3\n8 2 2 7 4 6 5 3 8\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "1330_D. Dreamoon Likes Sequences", "description": "Dreamoon likes sequences very much. So he created a problem about the sequence that you can't find in OEIS: \n\nYou are given two integers d, m, find the number of arrays a, satisfying the following constraints:\n\n  * The length of a is n, n ≥ 1 \n  * 1 ≤ a_1 < a_2 < ... < a_n ≤ d \n  * Define an array b of length n as follows: b_1 = a_1, ∀ i > 1, b_i = b_{i - 1} ⊕ a_i, where ⊕ is the bitwise exclusive-or (xor). After constructing an array b, the constraint b_1 < b_2 < ... < b_{n - 1} < b_n should hold. \n\n\n\nSince the number of possible arrays may be too large, you need to find the answer modulo m.\n\nInput\n\nThe first line contains an integer t (1 ≤ t ≤ 100) denoting the number of test cases in the input.\n\nEach of the next t lines contains two integers d, m (1 ≤ d, m ≤ 10^9).\n\nNote that m is not necessary the prime!\n\nOutput\n\nFor each test case, print the number of arrays a, satisfying all given constrains, modulo m.\n\nExample\n\nInput\n\n\n10\n1 1000000000\n2 999999999\n3 99999998\n4 9999997\n5 999996\n6 99995\n7 9994\n8 993\n9 92\n10 1\n\n\nOutput\n\n\n1\n3\n5\n11\n17\n23\n29\n59\n89\n0", "grammar": {"answer": null}}
{"name": "171_E. MYSTERIOUS LANGUAGE", "description": "You are given a mysterious language (codenamed \"Secret\") available in \"Custom Test\" tab. Find out what this language is and write a program which outputs its name. Note that the program must be written in this language.\n\nInput\n\nThis program has only one test, and it's empty (it doesn't give your program anything to read).\n\nOutput\n\nOutput the name of the mysterious language.\n\nExamples", "grammar": {"answer": null}}
{"name": "p03554 AtCoder Regular Contest 085 - NRE", "description": "You are given a sequence a = \\\\{a_1, ..., a_N\\\\} with all zeros, and a sequence b = \\\\{b_1, ..., b_N\\\\} consisting of 0 and 1. The length of both is N.\n\nYou can perform Q kinds of operations. The i-th operation is as follows:\n\n* Replace each of a_{l_i}, a_{l_i + 1}, ..., a_{r_i} with 1.\n\n\n\nMinimize the hamming distance between a and b, that is, the number of i such that a_i \\neq b_i, by performing some of the Q operations.\n\nConstraints\n\n* 1 \\leq N \\leq 200,000\n* b consists of 0 and 1.\n* 1 \\leq Q \\leq 200,000\n* 1 \\leq l_i \\leq r_i \\leq N\n* If i \\neq j, either l_i \\neq l_j or r_i \\neq r_j.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nb_1 b_2 ... b_N\nQ\nl_1 r_1\nl_2 r_2\n:\nl_Q r_Q\n\n\nOutput\n\nPrint the minimum possible hamming distance.\n\nExamples\n\nInput\n\n3\n1 0 1\n1\n1 3\n\n\nOutput\n\n1\n\n\nInput\n\n3\n1 0 1\n2\n1 1\n3 3\n\n\nOutput\n\n0\n\n\nInput\n\n3\n1 0 1\n2\n1 1\n2 3\n\n\nOutput\n\n1\n\n\nInput\n\n5\n0 1 0 1 0\n1\n1 5\n\n\nOutput\n\n2\n\n\nInput\n\n9\n0 1 0 1 1 1 0 1 0\n3\n1 4\n5 8\n6 7\n\n\nOutput\n\n3\n\n\nInput\n\n15\n1 1 0 0 0 0 0 0 1 0 1 1 1 0 0\n9\n4 10\n13 14\n1 7\n4 14\n9 11\n2 6\n7 8\n3 12\n7 13\n\n\nOutput\n\n5\n\n\nInput\n\n10\n0 0 0 1 0 0 1 1 1 0\n7\n1 4\n2 5\n1 3\n6 7\n9 9\n1 5\n7 9\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p03850 AtCoder Regular Contest 066 - Addition and Subtraction Hard", "description": "Joisino has a formula consisting of N terms: A_1 op_1 A_2 ... op_{N-1} A_N. Here, A_i is an integer, and op_i is an binary operator either `+` or `-`. Because Joisino loves large numbers, she wants to maximize the evaluated value of the formula by inserting an arbitrary number of pairs of parentheses (possibly zero) into the formula. Opening parentheses can only be inserted immediately before an integer, and closing parentheses can only be inserted immediately after an integer. It is allowed to insert any number of parentheses at a position. Your task is to write a program to find the maximum possible evaluated value of the formula after inserting an arbitrary number of pairs of parentheses.\n\nConstraints\n\n* 1≦N≦10^5\n* 1≦A_i≦10^9\n* op_i is either `+` or `-`.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nA_1 op_1 A_2 ... op_{N-1} A_N\n\n\nOutput\n\nPrint the maximum possible evaluated value of the formula after inserting an arbitrary number of pairs of parentheses.\n\nExamples\n\nInput\n\n3\n5 - 1 - 3\n\n\nOutput\n\n7\n\n\nInput\n\n5\n1 - 2 + 3 - 4 + 5\n\n\nOutput\n\n5\n\n\nInput\n\n5\n1 - 20 - 13 + 14 - 5\n\n\nOutput\n\n13", "grammar": {"answer": null}}
{"name": "p03329 AtCoder Beginner Contest 099 - Strange Bank", "description": "To make it difficult to withdraw money, a certain bank allows its customers to withdraw only one of the following amounts in one operation:\n\n* 1 yen (the currency of Japan)\n\n* 6 yen, 6^2(=36) yen, 6^3(=216) yen, ...\n\n* 9 yen, 9^2(=81) yen, 9^3(=729) yen, ...\n\n\n\n\nAt least how many operations are required to withdraw exactly N yen in total?\n\nIt is not allowed to re-deposit the money you withdrew.\n\nConstraints\n\n* 1 \\leq N \\leq 100000\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nIf at least x operations are required to withdraw exactly N yen in total, print x.\n\nExamples\n\nInput\n\n127\n\n\nOutput\n\n4\n\n\nInput\n\n3\n\n\nOutput\n\n3\n\n\nInput\n\n44852\n\n\nOutput\n\n16", "grammar": {"answer": null}}
{"name": "290_F. Greedy Petya", "description": "Petya is an unexperienced programming contestant. Recently he has come across the following problem:\n\nYou are given a non-directed graph which consists of n nodes and m edges. Your task is to determine whether the graph contains a Hamiltonian path.\n\nPetya wrote a quick bug-free code which he believes solves this problem. After that Petya decided to give this problem for April Fools Day contest. Unfortunately, Petya might have made a mistake, and it's quite possible that his algorithm is wrong. But this isn't a good excuse to leave the contest without submitting this problem, is it?\n\nInput\n\nThe first line contains two integers n, m (1 ≤ n ≤ 20; 0 ≤ m ≤ 400). Next m lines contain pairs of integers vi, ui (1 ≤ vi, ui ≤ n).\n\nOutput\n\nFollow the format of Petya's code output.\n\nExamples\n\nInput\n\n2 3\n1 2\n2 1\n1 1\n\n\nOutput\n\nYes\n\n\nInput\n\n3 0\n\n\nOutput\n\nNo\n\n\nInput\n\n10 20\n3 10\n4 6\n4 9\n7 5\n8 8\n3 10\n9 7\n5 2\n9 2\n10 6\n10 4\n1 1\n7 2\n8 4\n7 2\n1 8\n5 4\n10 2\n8 5\n5 2\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "761_A. Dasha and Stairs", "description": "On her way to programming school tiger Dasha faced her first test — a huge staircase!\n\n<image>\n\nThe steps were numbered from one to infinity. As we know, tigers are very fond of all striped things, it is possible that it has something to do with their color. So on some interval of her way she calculated two values — the number of steps with even and odd numbers. \n\nYou need to check whether there is an interval of steps from the l-th to the r-th (1 ≤ l ≤ r), for which values that Dasha has found are correct.\n\nInput\n\nIn the only line you are given two integers a, b (0 ≤ a, b ≤ 100) — the number of even and odd steps, accordingly.\n\nOutput\n\nIn the only line print \"YES\", if the interval of steps described above exists, and \"NO\" otherwise.\n\nExamples\n\nInput\n\n2 3\n\n\nOutput\n\nYES\n\n\nInput\n\n3 1\n\n\nOutput\n\nNO\n\nNote\n\nIn the first example one of suitable intervals is from 1 to 5. The interval contains two even steps — 2 and 4, and three odd: 1, 3 and 5.", "grammar": {"answer": null}}
{"name": "p00094 Calculation of Area", "description": "Have you ever heard of the unit \"○○ tsubo\" that expresses the area of ​​land? Since ancient times, one samurai has said the area for making rice to eat in a day.\n\nThere is a land of a [m] x b [m]. Enter a and b and create a program that outputs the tsubo area S [tsubo] of the land. 1 tsubo = 3.305785 [m2], and a and b are integers less than or equal to 100.\n\n\n\ninput\n\n\na b\n\n\nA and b separated by one space are given on one line.\n\noutput\n\nOutput the tsubo area S in one line. An error of 0.0001 or less is allowed.\n\nExample\n\nInput\n\n15 25\n\n\nOutput\n\n113.437508", "grammar": {"answer": null}}
{"name": "p03861 AtCoder Beginner Contest 048 - Between a and b ...", "description": "You are given nonnegative integers a and b (a ≤ b), and a positive integer x. Among the integers between a and b, inclusive, how many are divisible by x?\n\nConstraints\n\n* 0 ≤ a ≤ b ≤ 10^{18}\n* 1 ≤ x ≤ 10^{18}\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\na b x\n\n\nOutput\n\nPrint the number of the integers between a and b, inclusive, that are divisible by x.\n\nExamples\n\nInput\n\n4 8 2\n\n\nOutput\n\n3\n\n\nInput\n\n0 5 1\n\n\nOutput\n\n6\n\n\nInput\n\n9 9 2\n\n\nOutput\n\n0\n\n\nInput\n\n1 1000000000000000000 3\n\n\nOutput\n\n333333333333333333", "grammar": {"answer": null}}
{"name": "1497_C2. k-LCM (hard version)", "description": "It is the hard version of the problem. The only difference is that in this version 3 ≤ k ≤ n.\n\nYou are given a positive integer n. Find k positive integers a_1, a_2, …, a_k, such that:\n\n  * a_1 + a_2 + … + a_k = n \n  * LCM(a_1, a_2, …, a_k) ≤ n/2 \n\n\n\nHere LCM is the [least common multiple](https://en.wikipedia.org/wiki/Least_common_multiple) of numbers a_1, a_2, …, a_k.\n\nWe can show that for given constraints the answer always exists.\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 10^4) — the number of test cases.\n\nThe only line of each test case contains two integers n, k (3 ≤ n ≤ 10^9, 3 ≤ k ≤ n).\n\nIt is guaranteed that the sum of k over all test cases does not exceed 10^5.\n\nOutput\n\nFor each test case print k positive integers a_1, a_2, …, a_k, for which all conditions are satisfied.\n\nExample\n\nInput\n\n\n2\n6 4\n9 5\n\n\nOutput\n\n\n1 2 2 1 \n1 3 3 1 1 ", "grammar": {"answer": null}}
{"name": "p01814 Nearly Cyclic String", "description": "Almost periodic string\n\nGiven the string S. Answer Q queries for this string S. In the i-th query, determine if S [l_i, \\ r_i] can be a string of period t_i when you can change from S [l_i, \\ r_i] to one character. S [l, \\ r] represents the substring of the string S from the lth to the rth.\n\nIf the character string W is a character string with period t, then for i \\ = \\ 1, \\ 2, \\ ..., \\ | W | − t, W_ {i} = W_ {i + t}. I will do it.\n\nConstraints\n\n* 1 ≤ | S | ≤ 10 ^ 5\n* 1 ≤ Q ≤ 10 ^ 5\n* 1 ≤ l_i ≤ r_i ≤ | S |\n* 1 ≤ t_i ≤ r_i − l_i + 1\n* S consists of only lowercase letters\n\n\n\nInput Format\n\nInput is given from standard input in the following format.\n\n\nS\nQ\nl_1 r_1 t_1\n...\nl_Q r_Q t_Q\n\n\nOutput Format\n\nOutput over Q lines. On line i, print the answer to the i-th query with `Yes` or` No`.\n\nSample Input 1\n\n\nabcabcaxcabc\nFour\n1 9 3\n8 12 3\n1 4 2\n2 3 2\n\n\nSample Output 1\n\n\nYes\nYes\nNo\nYes\n\n\nSample Input 2\n\n\nisuruu\nFour\n3 6 1\n3 6 2\n3 6 3\n2 4 1\n\n\nSample Output 2\n\n\nYes\nYes\nYes\nNo\n\n\n\n\n\n\nExample\n\nInput\n\nabcabcaxcabc\n4\n1 9 3\n8 12 3\n1 4 2\n2 3 2\n\n\nOutput\n\nYes\nYes\nNo\nYes", "grammar": {"answer": null}}
{"name": "p03312 AtCoder Regular Contest 100 - Equal Cut", "description": "Snuke has an integer sequence A of length N.\n\nHe will make three cuts in A and divide it into four (non-empty) contiguous subsequences B, C, D and E. The positions of the cuts can be freely chosen.\n\nLet P,Q,R,S be the sums of the elements in B,C,D,E, respectively. Snuke is happier when the absolute difference of the maximum and the minimum among P,Q,R,S is smaller. Find the minimum possible absolute difference of the maximum and the minimum among P,Q,R,S.\n\nConstraints\n\n* 4 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq A_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nFind the minimum possible absolute difference of the maximum and the minimum among P,Q,R,S.\n\nExamples\n\nInput\n\n5\n3 2 4 1 2\n\n\nOutput\n\n2\n\n\nInput\n\n10\n10 71 84 33 6 47 23 25 52 64\n\n\nOutput\n\n36\n\n\nInput\n\n7\n1 2 3 1000000000 4 5 6\n\n\nOutput\n\n999999994", "grammar": {"answer": null}}
{"name": "1535_C. Unstable String", "description": "You are given a string s consisting of the characters 0, 1, and ?.\n\nLet's call a string unstable if it consists of the characters 0 and 1 and any two adjacent characters are different (i. e. it has the form 010101... or 101010...).\n\nLet's call a string beautiful if it consists of the characters 0, 1, and ?, and you can replace the characters ? to 0 or 1 (for each character, the choice is independent), so that the string becomes unstable.\n\nFor example, the strings 0??10, 0, and ??? are beautiful, and the strings 00 and ?1??1 are not.\n\nCalculate the number of beautiful contiguous substrings of the string s.\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 10^4) — number of test cases.\n\nThe first and only line of each test case contains the string s (1 ≤ |s| ≤ 2 ⋅ 10^5) consisting of characters 0, 1, and ?.\n\nIt is guaranteed that the sum of the string lengths over all test cases does not exceed 2 ⋅ 10^5.\n\nOutput\n\nFor each test case, output a single integer — the number of beautiful substrings of the string s.\n\nExample\n\nInput\n\n\n3\n0?10\n???\n?10??1100\n\n\nOutput\n\n\n8\n6\n25", "grammar": {"answer": null}}
{"name": "p02398 How Many Divisors?", "description": "How Many Divisors?\n\nWrite a program which reads three integers a, b and c, and prints the number of divisors of c between a and b.\n\nConstraints\n\n* 1 ≤ a, b, c ≤ 10000\n* a ≤ b\n\nInput\n\nThree integers a, b and c are given in a line separated by a single space.\n\nOutput\n\nPrint the number of divisors in a line.\n\nExample\n\nInput\n\n5 14 80\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p03184 Educational DP Contest - Grid 2", "description": "There is a grid with H horizontal rows and W vertical columns. Let (i, j) denote the square at the i-th row from the top and the j-th column from the left.\n\nIn the grid, N Squares (r_1, c_1), (r_2, c_2), \\ldots, (r_N, c_N) are wall squares, and the others are all empty squares. It is guaranteed that Squares (1, 1) and (H, W) are empty squares.\n\nTaro will start from Square (1, 1) and reach (H, W) by repeatedly moving right or down to an adjacent empty square.\n\nFind the number of Taro's paths from Square (1, 1) to (H, W), modulo 10^9 + 7.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq H, W \\leq 10^5\n* 1 \\leq N \\leq 3000\n* 1 \\leq r_i \\leq H\n* 1 \\leq c_i \\leq W\n* Squares (r_i, c_i) are all distinct.\n* Squares (1, 1) and (H, W) are empty squares.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH W N\nr_1 c_1\nr_2 c_2\n:\nr_N c_N\n\n\nOutput\n\nPrint the number of Taro's paths from Square (1, 1) to (H, W), modulo 10^9 + 7.\n\nExamples\n\nInput\n\n3 4 2\n2 2\n1 4\n\n\nOutput\n\n3\n\n\nInput\n\n5 2 2\n2 1\n4 2\n\n\nOutput\n\n0\n\n\nInput\n\n5 5 4\n3 1\n3 5\n1 3\n5 3\n\n\nOutput\n\n24\n\n\nInput\n\n100000 100000 1\n50000 50000\n\n\nOutput\n\n123445622", "grammar": {"answer": null}}
{"name": "p02259 Bubble Sort", "description": "Write a program of the Bubble Sort algorithm which sorts a sequence A in ascending order. The algorithm should be based on the following pseudocode:\n\n\nBubbleSort(A)\n1 for i = 0 to A.length-1\n2     for j = A.length-1 downto i+1\n3         if A[j] < A[j-1]\n4             swap A[j] and A[j-1]\n\n\nNote that, indices for array elements are based on 0-origin.\n\nYour program should also print the number of swap operations defined in line 4 of the pseudocode.\n\nConstraints\n\n1 ≤ N ≤ 100\n\nInput\n\nThe first line of the input includes an integer N, the number of elements in the sequence.\n\nIn the second line, N elements of the sequence are given separated by spaces characters.\n\nOutput\n\nThe output consists of 2 lines.\n\nIn the first line, please print the sorted sequence. Two contiguous elements of the sequence should be separated by a space character.\n\nIn the second line, please print the number of swap operations.\n\nExamples\n\nInput\n\n5\n5 3 2 4 1\n\n\nOutput\n\n1 2 3 4 5\n8\n\n\nInput\n\n6\n5 2 4 6 1 3\n\n\nOutput\n\n1 2 3 4 5 6\n9", "grammar": {"answer": null}}
{"name": "1517_A. Sum of 2050", "description": "A number is called 2050-number if it is 2050, 20500, ..., (2050 ⋅ 10^k for integer k ≥ 0).\n\nGiven a number n, you are asked to represent n as the sum of some (not necessarily distinct) 2050-numbers. Compute the minimum number of 2050-numbers required for that.\n\nInput\n\nThe first line contains a single integer T (1≤ T≤ 1 000) denoting the number of test cases.\n\nThe only line of each test case contains a single integer n (1≤ n≤ 10^{18}) denoting the number to be represented.\n\nOutput\n\nFor each test case, output the minimum number of 2050-numbers in one line. \n\nIf n cannot be represented as the sum of 2050-numbers, output -1 instead. \n\nExample\n\nInput\n\n\n6\n205\n2050\n4100\n20500\n22550\n25308639900\n\n\nOutput\n\n\n-1\n1\n2\n1\n2\n36\n\nNote\n\nIn the third case, 4100 = 2050 + 2050.\n\nIn the fifth case, 22550 = 20500 + 2050.", "grammar": {"answer": null}}
{"name": "16_C. Monitor", "description": "Reca company makes monitors, the most popular of their models is AB999 with the screen size a × b centimeters. Because of some production peculiarities a screen parameters are integer numbers. Recently the screen sides ratio x: y became popular with users. That's why the company wants to reduce monitor AB999 size so that its screen sides ratio becomes x: y, at the same time they want its total area to be maximal of all possible variants. Your task is to find the screen parameters of the reduced size model, or find out that such a reduction can't be performed.\n\nInput\n\nThe first line of the input contains 4 integers — a, b, x and y (1 ≤ a, b, x, y ≤ 2·109).\n\nOutput\n\nIf the answer exists, output 2 positive integers — screen parameters of the reduced size model. Output 0 0 otherwise.\n\nExamples\n\nInput\n\n800 600 4 3\n\n\nOutput\n\n800 600\n\n\nInput\n\n1920 1200 16 9\n\n\nOutput\n\n1920 1080\n\n\nInput\n\n1 1 1 2\n\n\nOutput\n\n0 0", "grammar": {"answer": null}}
{"name": "p01974 Pigeonhole principle", "description": "problem\n\nGiven $ N $ different natural numbers $ a_i $. I decided to make a pair by choosing a different natural number from the given natural numbers. Output one pair that can be created with a value difference that is a multiple of $ N -1 $.\n\nIt should be noted that such a pair always exists.\n\n\n\n\n\nExample\n\nInput\n\n5\n1 2 4 7 10\n\n\nOutput\n\n2 10", "grammar": {"answer": null}}
{"name": "281_B. Nearest Fraction", "description": "You are given three positive integers x, y, n. Your task is to find the nearest fraction to fraction <image> whose denominator is no more than n. \n\nFormally, you should find such pair of integers a, b (1 ≤ b ≤ n; 0 ≤ a) that the value <image> is as minimal as possible.\n\nIf there are multiple \"nearest\" fractions, choose the one with the minimum denominator. If there are multiple \"nearest\" fractions with the minimum denominator, choose the one with the minimum numerator.\n\nInput\n\nA single line contains three integers x, y, n (1 ≤ x, y, n ≤ 105).\n\nOutput\n\nPrint the required fraction in the format \"a/b\" (without quotes).\n\nExamples\n\nInput\n\n3 7 6\n\n\nOutput\n\n2/5\n\n\nInput\n\n7 2 4\n\n\nOutput\n\n7/2", "grammar": {"answer": null}}
{"name": "889_E. Mod Mod Mod", "description": "You are given a sequence of integers a1, a2, ..., an. Let <image>, and <image> for 1 ≤ i < n. Here, <image> denotes the modulus operation. Find the maximum value of f(x, 1) over all nonnegative integers x. \n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 200000) — the length of the sequence.\n\nThe second lines contains n integers a1, a2, ..., an (1 ≤ ai ≤ 1013) — the elements of the sequence.\n\nOutput\n\nOutput a single integer — the maximum value of f(x, 1) over all nonnegative integers x.\n\nExamples\n\nInput\n\n2\n10 5\n\n\nOutput\n\n13\n\n\nInput\n\n5\n5 4 3 2 1\n\n\nOutput\n\n6\n\n\nInput\n\n4\n5 10 5 10\n\n\nOutput\n\n16\n\nNote\n\nIn the first example you can choose, for example, x = 19.\n\nIn the second example you can choose, for example, x = 3 or x = 2.", "grammar": {"answer": null}}
{"name": "p02875 AtCoder Grand Contest 040 - Neither AB nor BA", "description": "Given is a positive even number N.\n\nFind the number of strings s of length N consisting of `A`, `B`, and `C` that satisfy the following condition:\n\n* s can be converted to the empty string by repeating the following operation:\n* Choose two consecutive characters in s and erase them. However, choosing `AB` or `BA` is not allowed.\n\n\n\nFor example, `ABBC` satisfies the condition for N=4, because we can convert it as follows: `ABBC` → (erase `BB`) → `AC` → (erase `AC`) → `(empty)`.\n\nThe answer can be enormous, so compute the count modulo 998244353.\n\nConstraints\n\n* 2 \\leq N \\leq 10^7\n* N is an even number.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the number of strings that satisfy the conditions, modulo 998244353.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n7\n\n\nInput\n\n10\n\n\nOutput\n\n50007\n\n\nInput\n\n1000000\n\n\nOutput\n\n210055358", "grammar": {"answer": null}}
{"name": "p04043 AtCoder Beginner Contest 042 - Iroha and Haiku (ABC Edition)", "description": "Iroha loves Haiku. Haiku is a short form of Japanese poetry. A Haiku consists of three phrases with 5, 7 and 5 syllables, in this order.\n\nTo create a Haiku, Iroha has come up with three different phrases. These phrases have A, B and C syllables, respectively. Determine whether she can construct a Haiku by using each of the phrases once, in some order.\n\nConstraints\n\n* 1≦A,B,C≦10\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nA B C\n\n\nOutput\n\nIf it is possible to construct a Haiku by using each of the phrases once, print `YES` (case-sensitive). Otherwise, print `NO`.\n\nExamples\n\nInput\n\n5 5 7\n\n\nOutput\n\nYES\n\n\nInput\n\n7 7 5\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "612_E. Square Root of Permutation", "description": "A permutation of length n is an array containing each integer from 1 to n exactly once. For example, q = [4, 5, 1, 2, 3] is a permutation. For the permutation q the square of permutation is the permutation p that p[i] = q[q[i]] for each i = 1... n. For example, the square of q = [4, 5, 1, 2, 3] is p = q2 = [2, 3, 4, 5, 1].\n\nThis problem is about the inverse operation: given the permutation p you task is to find such permutation q that q2 = p. If there are several such q find any of them.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 106) — the number of elements in permutation p.\n\nThe second line contains n distinct integers p1, p2, ..., pn (1 ≤ pi ≤ n) — the elements of permutation p.\n\nOutput\n\nIf there is no permutation q such that q2 = p print the number \"-1\".\n\nIf the answer exists print it. The only line should contain n different integers qi (1 ≤ qi ≤ n) — the elements of the permutation q. If there are several solutions print any of them.\n\nExamples\n\nInput\n\n4\n2 1 4 3\n\n\nOutput\n\n3 4 2 1\n\n\nInput\n\n4\n2 1 3 4\n\n\nOutput\n\n-1\n\n\nInput\n\n5\n2 3 4 5 1\n\n\nOutput\n\n4 5 1 2 3", "grammar": {"answer": null}}
{"name": "p02676 AtCoder Beginner Contest 168 - ... (Triple Dots)", "description": "We have a string S consisting of lowercase English letters.\n\nIf the length of S is at most K, print S without change.\n\nIf the length of S exceeds K, extract the first K characters in S, append `...` to the end of them, and print the result.\n\nConstraints\n\n* K is an integer between 1 and 100 (inclusive).\n* S is a string consisting of lowercase English letters.\n* The length of S is between 1 and 100 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK\nS\n\n\nOutput\n\nPrint a string as stated in Problem Statement.\n\nExamples\n\nInput\n\n7\nnikoandsolstice\n\n\nOutput\n\nnikoand...\n\n\nInput\n\n40\nferelibenterhominesidquodvoluntcredunt\n\n\nOutput\n\nferelibenterhominesidquodvoluntcredunt", "grammar": {"answer": null}}
{"name": "397_D. On Sum of Fractions", "description": "Let's assume that \n\n  * v(n) is the largest prime number, that does not exceed n;\n  * u(n) is the smallest prime number strictly greater than n. \n\n\n\nFind <image>.\n\nInput\n\nThe first line contains integer t (1 ≤ t ≤ 500) — the number of testscases. \n\nEach of the following t lines of the input contains integer n (2 ≤ n ≤ 109).\n\nOutput\n\nPrint t lines: the i-th of them must contain the answer to the i-th test as an irreducible fraction \"p/q\", where p, q are integers, q > 0.\n\nExamples\n\nInput\n\n2\n2\n3\n\n\nOutput\n\n1/6\n7/30", "grammar": {"answer": null}}
{"name": "p03575 AtCoder Beginner Contest 075 - Bridge", "description": "You are given an undirected connected graph with N vertices and M edges that does not contain self-loops and double edges.\nThe i-th edge (1 \\leq i \\leq M) connects Vertex a_i and Vertex b_i.\n\nAn edge whose removal disconnects the graph is called a bridge.\nFind the number of the edges that are bridges among the M edges.\n\nConstraints\n\n* 2 \\leq N \\leq 50\n* N-1 \\leq M \\leq min(N(N−1)⁄2,50)\n* 1 \\leq a_i<b_i \\leq N\n* The given graph does not contain self-loops and double edges.\n* The given graph is connected.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\na_1 b_1\na_2 b_2\n:\na_M b_M\n\n\nOutput\n\nPrint the number of the edges that are bridges among the M edges.\n\nExamples\n\nInput\n\n7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n\n\nOutput\n\n4\n\n\nInput\n\n3 3\n1 2\n1 3\n2 3\n\n\nOutput\n\n0\n\n\nInput\n\n6 5\n1 2\n2 3\n3 4\n4 5\n5 6\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p03943 AtCoder Beginner Contest 047 - Fighting over Candies", "description": "Two students of AtCoder Kindergarten are fighting over candy packs.\n\nThere are three candy packs, each of which contains a, b, and c candies, respectively.\n\nTeacher Evi is trying to distribute the packs between the two students so that each student gets the same number of candies. Determine whether it is possible.\n\nNote that Evi cannot take candies out of the packs, and the whole contents of each pack must be given to one of the students.\n\nConstraints\n\n* 1 ≦ a, b, c ≦ 100\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\na b c\n\n\nOutput\n\nIf it is possible to distribute the packs so that each student gets the same number of candies, print `Yes`. Otherwise, print `No`.\n\nExamples\n\nInput\n\n10 30 20\n\n\nOutput\n\nYes\n\n\nInput\n\n30 30 100\n\n\nOutput\n\nNo\n\n\nInput\n\n56 25 31\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "41_A. Translation", "description": "The translation from the Berland language into the Birland language is not an easy task. Those languages are very similar: a berlandish word differs from a birlandish word with the same meaning a little: it is spelled (and pronounced) reversely. For example, a Berlandish word code corresponds to a Birlandish word edoc. However, it's easy to make a mistake during the «translation». Vasya translated word s from Berlandish into Birlandish as t. Help him: find out if he translated the word correctly.\n\nInput\n\nThe first line contains word s, the second line contains word t. The words consist of lowercase Latin letters. The input data do not consist unnecessary spaces. The words are not empty and their lengths do not exceed 100 symbols.\n\nOutput\n\nIf the word t is a word s, written reversely, print YES, otherwise print NO.\n\nExamples\n\nInput\n\ncode\nedoc\n\n\nOutput\n\nYES\n\n\nInput\n\nabb\naba\n\n\nOutput\n\nNO\n\n\nInput\n\ncode\ncode\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p03697 AtCoder Beginner Contest 063 - Restricted", "description": "You are given two integers A and B as the input. Output the value of A + B.\n\nHowever, if A + B is 10 or greater, output `error` instead.\n\nConstraints\n\n* A and B are integers.\n* 1 ≤ A, B ≤ 9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nIf A + B is 10 or greater, print the string `error` (case-sensitive); otherwise, print the value of A + B.\n\nExamples\n\nInput\n\n6 3\n\n\nOutput\n\n9\n\n\nInput\n\n6 4\n\n\nOutput\n\nerror", "grammar": {"answer": null}}
{"name": "p03839 AtCoder Grand Contest 008 - Contiguous Repainting", "description": "There are N squares aligned in a row. The i-th square from the left contains an integer a_i.\n\nInitially, all the squares are white. Snuke will perform the following operation some number of times:\n\n* Select K consecutive squares. Then, paint all of them white, or paint all of them black. Here, the colors of the squares are overwritten.\n\n\n\nAfter Snuke finishes performing the operation, the score will be calculated as the sum of the integers contained in the black squares. Find the maximum possible score.\n\nConstraints\n\n* 1≤N≤10^5\n* 1≤K≤N\n* a_i is an integer.\n* |a_i|≤10^9\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN K\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the maximum possible score.\n\nExamples\n\nInput\n\n5 3\n-10 10 -10 10 -10\n\n\nOutput\n\n10\n\n\nInput\n\n4 2\n10 -10 -10 10\n\n\nOutput\n\n20\n\n\nInput\n\n1 1\n-10\n\n\nOutput\n\n0\n\n\nInput\n\n10 5\n5 -4 -5 -8 -4 7 2 -4 0 7\n\n\nOutput\n\n17", "grammar": {"answer": null}}
{"name": "p02682 AtCoder Beginner Contest 167 - Easy Linear Programming", "description": "We have A cards, each of which has an integer 1 written on it. Similarly, we also have B cards with 0s and C cards with -1s.\n\nWe will pick up K among these cards. What is the maximum possible sum of the numbers written on the cards chosen?\n\nConstraints\n\n* All values in input are integers.\n* 0 \\leq A, B, C\n* 1 \\leq K \\leq A + B + C \\leq 2 \\times 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C K\n\n\nOutput\n\nPrint the maximum possible sum of the numbers written on the cards chosen.\n\nExamples\n\nInput\n\n2 1 1 3\n\n\nOutput\n\n2\n\n\nInput\n\n1 2 3 4\n\n\nOutput\n\n0\n\n\nInput\n\n2000000000 0 0 2000000000\n\n\nOutput\n\n2000000000", "grammar": {"answer": null}}
{"name": "p03161 Educational DP Contest - Frog 2", "description": "There are N stones, numbered 1, 2, \\ldots, N. For each i (1 \\leq i \\leq N), the height of Stone i is h_i.\n\nThere is a frog who is initially on Stone 1. He will repeat the following action some number of times to reach Stone N:\n\n* If the frog is currently on Stone i, jump to one of the following: Stone i + 1, i + 2, \\ldots, i + K. Here, a cost of |h_i - h_j| is incurred, where j is the stone to land on.\n\n\n\nFind the minimum possible total cost incurred before the frog reaches Stone N.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 10^5\n* 1 \\leq K \\leq 100\n* 1 \\leq h_i \\leq 10^4\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nh_1 h_2 \\ldots h_N\n\n\nOutput\n\nPrint the minimum possible total cost incurred.\n\nExamples\n\nInput\n\n5 3\n10 30 40 50 20\n\n\nOutput\n\n30\n\n\nInput\n\n3 1\n10 20 10\n\n\nOutput\n\n20\n\n\nInput\n\n2 100\n10 10\n\n\nOutput\n\n0\n\n\nInput\n\n10 4\n40 10 20 70 80 10 20 70 80 60\n\n\nOutput\n\n40", "grammar": {"answer": null}}
{"name": "p03128 AtCoder Beginner Contest 118 - Match Matching", "description": "Find the largest integer that can be formed with exactly N matchsticks, under the following conditions:\n\n* Every digit in the integer must be one of the digits A_1, A_2, ..., A_M (1 \\leq A_i \\leq 9).\n* The number of matchsticks used to form digits 1, 2, 3, 4, 5, 6, 7, 8, 9 should be 2, 5, 5, 4, 5, 6, 3, 7, 6, respectively.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 10^4\n* 1 \\leq M \\leq 9\n* 1 \\leq A_i \\leq 9\n* A_i are all different.\n* There exists an integer that can be formed by exactly N matchsticks under the conditions.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nA_1 A_2 ... A_M\n\n\nOutput\n\nPrint the largest integer that can be formed with exactly N matchsticks under the conditions in the problem statement.\n\nExamples\n\nInput\n\n20 4\n3 7 8 4\n\n\nOutput\n\n777773\n\n\nInput\n\n101 9\n9 8 7 6 5 4 3 2 1\n\n\nOutput\n\n71111111111111111111111111111111111111111111111111\n\n\nInput\n\n15 3\n5 4 6\n\n\nOutput\n\n654", "grammar": {"answer": null}}
{"name": "p03171 Educational DP Contest - Deque", "description": "Taro and Jiro will play the following game against each other.\n\nInitially, they are given a sequence a = (a_1, a_2, \\ldots, a_N). Until a becomes empty, the two players perform the following operation alternately, starting from Taro:\n\n* Remove the element at the beginning or the end of a. The player earns x points, where x is the removed element.\n\n\n\nLet X and Y be Taro's and Jiro's total score at the end of the game, respectively. Taro tries to maximize X - Y, while Jiro tries to minimize X - Y.\n\nAssuming that the two players play optimally, find the resulting value of X - Y.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 3000\n* 1 \\leq a_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 \\ldots a_N\n\n\nOutput\n\nPrint the resulting value of X - Y, assuming that the two players play optimally.\n\nExamples\n\nInput\n\n4\n10 80 90 30\n\n\nOutput\n\n10\n\n\nInput\n\n3\n10 100 10\n\n\nOutput\n\n-80\n\n\nInput\n\n1\n10\n\n\nOutput\n\n10\n\n\nInput\n\n10\n1000000000 1 1000000000 1 1000000000 1 1000000000 1 1000000000 1\n\n\nOutput\n\n4999999995\n\n\nInput\n\n6\n4 2 9 7 1 5\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02447 Sorting Pairs", "description": "Write a program which print coordinates $(x_i, y_i)$ of given $n$ points on the plane by the following criteria.\n\n1. first by $x$-coordinate\n2. in case of a tie, by $y$-coordinate\n\nConstraints\n\n* $1 \\leq n \\leq 100,000$\n* $-1,000,000,000 \\leq x_i, y_i \\leq 1,000,000,000$\n\nInput\n\nThe input is given in the following format.\n\n\n$n$\n$x_0 \\; y_0$\n$x_1 \\; y_1$\n:\n$x_{n-1} \\; y_{n-1}$\n\n\nIn the first line, the number of points $n$ is given. In the following $n$ lines, coordinates of each point are given.\n\nOutput\n\nPrint coordinate of given points in order.\n\nExample\n\nInput\n\n5\n4 7\n5 5\n2 3\n6 8\n2 1\n\n\nOutput\n\n2 1\n2 3\n4 7\n5 5\n6 8", "grammar": {"answer": null}}
{"name": "p02638 AtCoder Grand Contest 046 - Forbidden Tournament", "description": "Given are integers N and K, and a prime number P. Find the number, modulo P, of directed graphs G with N vertices that satisfy below. Here, the vertices are distinguishable from each other.\n\n* G is a tournament, that is, G contains no duplicated edges or self-loops, and exactly one of the edges u\\to v and v\\to u exists for any two vertices u and v.\n* The in-degree of every vertex in G is at most K.\n* For any four distinct vertices a, b, c, and d in G, it is not the case that all of the six edges a\\to b, b\\to c, c\\to a, a\\to d, b\\to d, and c\\to d exist simultaneously.\n\nConstraints\n\n* 4 \\leq N \\leq 200\n* \\frac{N-1}{2} \\leq K \\leq N-1\n* 10^8<P<10^9\n* N and K are integers.\n* P is a prime number.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K P\n\n\nOutput\n\nPrint the number of directed graphs that satisfy the conditions, modulo P.\n\nExamples\n\nInput\n\n4 3 998244353\n\n\nOutput\n\n56\n\n\nInput\n\n7 3 998244353\n\n\nOutput\n\n720\n\n\nInput\n\n50 37 998244353\n\n\nOutput\n\n495799508", "grammar": {"answer": null}}
{"name": "p02838 AtCoder Beginner Contest 147 - Xor Sum 4", "description": "We have N integers. The i-th integer is A_i.\n\nFind \\sum_{i=1}^{N-1}\\sum_{j=i+1}^{N} (A_i \\mbox{ XOR } A_j), modulo (10^9+7).\n\nWhat is \\mbox{ XOR }?\n\nThe XOR of integers A and B, A \\mbox{ XOR } B, is defined as follows:\n\n* When A \\mbox{ XOR } B is written in base two, the digit in the 2^k's place (k \\geq 0) is 1 if either A or B, but not both, has 1 in the 2^k's place, and 0 otherwise.\n\nFor example, 3 \\mbox{ XOR } 5 = 6. (In base two: 011 \\mbox{ XOR } 101 = 110.)\n\nConstraints\n\n* 2 \\leq N \\leq 3 \\times 10^5\n* 0 \\leq A_i < 2^{60}\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the value \\sum_{i=1}^{N-1}\\sum_{j=i+1}^{N} (A_i \\mbox{ XOR } A_j), modulo (10^9+7).\n\nExamples\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n6\n\n\nInput\n\n10\n3 1 4 1 5 9 2 6 5 3\n\n\nOutput\n\n237\n\n\nInput\n\n10\n3 14 159 2653 58979 323846 2643383 27950288 419716939 9375105820\n\n\nOutput\n\n103715602", "grammar": {"answer": null}}
{"name": "1380_A. Three Indices", "description": "You are given a permutation p_1, p_2, ..., p_n. Recall that sequence of n integers is called a permutation if it contains all integers from 1 to n exactly once.\n\nFind three indices i, j and k such that: \n\n  * 1 ≤ i < j < k ≤ n; \n  * p_i < p_j and p_j > p_k. \n\nOr say that there are no such indices.\n\nInput\n\nThe first line contains a single integer T (1 ≤ T ≤ 200) — the number of test cases.\n\nNext 2T lines contain test cases — two lines per test case. The first line of each test case contains the single integer n (3 ≤ n ≤ 1000) — the length of the permutation p.\n\nThe second line contains n integers p_1, p_2, ..., p_n (1 ≤ p_i ≤ n; p_i ≠ p_j if i ≠ j) — the permutation p.\n\nOutput\n\nFor each test case: \n\n  * if there are such indices i, j and k, print YES (case insensitive) and the indices themselves; \n  * if there are no such indices, print NO (case insensitive). \n\n\n\nIf there are multiple valid triples of indices, print any of them.\n\nExample\n\nInput\n\n\n3\n4\n2 1 4 3\n6\n4 6 1 2 5 3\n5\n5 3 1 2 4\n\n\nOutput\n\n\nYES\n2 3 4\nYES\n3 5 6\nNO", "grammar": {"answer": null}}
{"name": "1009_F. Dominant Indices", "description": "You are given a rooted undirected tree consisting of n vertices. Vertex 1 is the root.\n\nLet's denote a depth array of vertex x as an infinite sequence [d_{x, 0}, d_{x, 1}, d_{x, 2}, ...], where d_{x, i} is the number of vertices y such that both conditions hold:\n\n  * x is an ancestor of y; \n  * the simple path from x to y traverses exactly i edges. \n\n\n\nThe dominant index of a depth array of vertex x (or, shortly, the dominant index of vertex x) is an index j such that:\n\n  * for every k < j, d_{x, k} < d_{x, j}; \n  * for every k > j, d_{x, k} ≤ d_{x, j}. \n\n\n\nFor every vertex in the tree calculate its dominant index.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 10^6) — the number of vertices in a tree.\n\nThen n - 1 lines follow, each containing two integers x and y (1 ≤ x, y ≤ n, x ≠ y). This line denotes an edge of the tree.\n\nIt is guaranteed that these edges form a tree.\n\nOutput\n\nOutput n numbers. i-th number should be equal to the dominant index of vertex i.\n\nExamples\n\nInput\n\n4\n1 2\n2 3\n3 4\n\n\nOutput\n\n0\n0\n0\n0\n\n\nInput\n\n4\n1 2\n1 3\n1 4\n\n\nOutput\n\n1\n0\n0\n0\n\n\nInput\n\n4\n1 2\n2 3\n2 4\n\n\nOutput\n\n2\n1\n0\n0", "grammar": {"answer": null}}
{"name": "p02351 RSQ and RAQ", "description": "Write a program which manipulates a sequence A = {a1, a2, . . . , an} with the following operations:\n\n* add(s, t, x): add x to as, as+1, ..., at.\n* getSum(s, t): report the sum of as, as+1, ..., at.\n\n\n\nNote that the initial values of ai (i = 1, 2, . . . , n) are 0.\n\nConstraints\n\n* 1 ≤ n ≤ 100000\n* 1 ≤ q ≤ 100000\n* 1 ≤ s ≤ t ≤ n\n* 0 ≤ x < 1000\n\nInput\n\n\nn q\nquery1\nquery2\n:\nqueryq\n\n\nIn the first line, n (the number of elements in A) and q (the number of queries) are given. Then, ith query queryi is given in the following format:\n\n\n0 s t x\n\n\nor\n\n\n1 s t\n\n\nThe first digit represents the type of the query. '0' denotes add(s, t, x) and '1' denotes getSum(s, t).\n\nOutput\n\nFor each getSum operation, print the sum;\n\nExamples\n\nInput\n\n3 5\n0 1 2 1\n0 2 3 2\n0 3 3 3\n1 1 2\n1 2 3\n\n\nOutput\n\n4\n8\n\n\nInput\n\n4 3\n1 1 4\n0 1 4 1\n1 1 4\n\n\nOutput\n\n0\n4", "grammar": {"answer": null}}
{"name": "p02565 AtCoder Library Practice Contest - Two SAT", "description": "Consider placing N flags on a line. Flags are numbered through 1 to N.\n\nFlag i can be placed on the coordinate X_i or Y_i. For any two different flags, the distance between them should be at least D.\n\nDecide whether it is possible to place all N flags. If it is possible, print such a configulation.\n\nConstraints\n\n* 1 \\leq N \\leq 1000\n* 0 \\leq D \\leq 10^9\n* 0 \\leq X_i < Y_i \\leq 10^9\n* All values in Input are integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN D\nX_1 Y_1\nX_2 Y_2\n\\vdots\nX_N Y_N\n\n\nOutput\n\nPrint `No` if it is impossible to place N flags.\n\nIf it is possible, print `Yes` first. After that, print N lines. i-th line of them should contain the coodinate of flag i.\n\nExamples\n\nInput\n\n3 2\n1 4\n2 5\n0 6\n\n\nOutput\n\nYes\n4\n2\n0\n\n\nInput\n\n3 3\n1 4\n2 5\n0 6\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p02457 Set: Range Search", "description": "For a set $S$ of integers, perform a sequence of the following operations. Note that each value in $S$ must be unique.\n\n* insert($x$): Insert $x$ to $S$ and report the number of elements in $S$ after the operation.\n* find($x$): Report the number of $x$ in $S$ (0 or 1).\n* delete($x$): Delete $x$ from $S$.\n* dump($L$, $R$): Print elements $x$ in $S$ such that $L \\leq x \\leq R$.\n\nConstraints\n\n* $1 \\leq q \\leq 200,000$\n* $0 \\leq x \\leq 1,000,000,000$\n* The total number of elements printed by dump operations does not exceed $1,000,000$\n\nInput\n\nThe input is given in the following format.\n\n\n$q$\n$query_1$\n$query_2$\n:\n$query_q$\n\n\nEach query $query_i$ is given by\n\n\n0 $x$\n\n\nor\n\n\n1 $x$\n\n\nor\n\n\n2 $x$\n\n\nor\n\n\n3 $L$ $R$\n\n\nwhere the first digits 0, 1, 2 and 3 represent insert, find, delete and dump operations respectively.\n\nOutput\n\nFor each insert operation, print the number of elements in $S$.\nFor each find operation, print the number of specified elements in $S$.\nFor each dump operation, print the corresponding elements in ascending order. Print an element in a line.\n\nExample\n\nInput\n\n9\n0 1\n0 2\n0 3\n2 2\n1 1\n1 2\n1 3\n0 4\n3 2 4\n\n\nOutput\n\n1\n2\n3\n1\n0\n1\n3\n3\n4", "grammar": {"answer": null}}
{"name": "p03573 AtCoder Beginner Contest 075 - One out of Three", "description": "You are given three integers, A, B and C.\nAmong them, two are the same, but the remaining one is different from the rest.\nFor example, when A=5,B=7,C=5, A and C are the same, but B is different.\nFind the one that is different from the rest among the given three integers.\n\nConstraints\n\n* -100 \\leq A,B,C \\leq 100\n* A, B and C are integers.\n* The input satisfies the condition in the statement.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C\n\n\nOutput\n\nAmong A, B and C, print the integer that is different from the rest.\n\nExamples\n\nInput\n\n5 7 5\n\n\nOutput\n\n7\n\n\nInput\n\n1 1 7\n\n\nOutput\n\n7\n\n\nInput\n\n-100 100 100\n\n\nOutput\n\n-100", "grammar": {"answer": null}}
{"name": "544_A. Set of Strings", "description": "You are given a string q. A sequence of k strings s1, s2, ..., sk is called beautiful, if the concatenation of these strings is string q (formally, s1 + s2 + ... + sk = q) and the first characters of these strings are distinct.\n\nFind any beautiful sequence of strings or determine that the beautiful sequence doesn't exist.\n\nInput\n\nThe first line contains a positive integer k (1 ≤ k ≤ 26) — the number of strings that should be in a beautiful sequence. \n\nThe second line contains string q, consisting of lowercase Latin letters. The length of the string is within range from 1 to 100, inclusive.\n\nOutput\n\nIf such sequence doesn't exist, then print in a single line \"NO\" (without the quotes). Otherwise, print in the first line \"YES\" (without the quotes) and in the next k lines print the beautiful sequence of strings s1, s2, ..., sk.\n\nIf there are multiple possible answers, print any of them.\n\nExamples\n\nInput\n\n1\nabca\n\n\nOutput\n\nYES\nabca\n\n\nInput\n\n2\naaacas\n\n\nOutput\n\nYES\naaa\ncas\n\n\nInput\n\n4\nabc\n\n\nOutput\n\nNO\n\nNote\n\nIn the second sample there are two possible answers: {\"aaaca\", \"s\"} and {\"aaa\", \"cas\"}.", "grammar": {"answer": null}}
{"name": "1053_A. Vasya and Triangle", "description": "Vasya has got three integers n, m and k. He'd like to find three integer points (x_1, y_1), (x_2, y_2), (x_3, y_3), such that 0 ≤ x_1, x_2, x_3 ≤ n, 0 ≤ y_1, y_2, y_3 ≤ m and the area of the triangle formed by these points is equal to nm/k.\n\nHelp Vasya! Find such points (if it's possible). If there are multiple solutions, print any of them.\n\nInput\n\nThe single line contains three integers n, m, k (1≤ n, m ≤ 10^9, 2 ≤ k ≤ 10^9).\n\nOutput\n\nIf there are no such points, print \"NO\".\n\nOtherwise print \"YES\" in the first line. The next three lines should contain integers x_i, y_i — coordinates of the points, one point per line. If there are multiple solutions, print any of them.\n\nYou can print each letter in any case (upper or lower).\n\nExamples\n\nInput\n\n4 3 3\n\n\nOutput\n\nYES\n1 0\n2 3\n4 1\n\n\nInput\n\n4 4 7\n\n\nOutput\n\nNO\n\nNote\n\nIn the first example area of the triangle should be equal to nm/k = 4. The triangle mentioned in the output is pictured below: \n\n<image>\n\nIn the second example there is no triangle with area nm/k = 16/7.", "grammar": {"answer": null}}
{"name": "p03065 Tenka1 Programmer Contest 2019 - Polynomial Divisors", "description": "You are given a polynomial of degree N with integer coefficients: f(x)=a_Nx^N+a_{N-1}x^{N-1}+...+a_0. Find all prime numbers p that divide f(x) for every integer x.\n\nConstraints\n\n* 0 \\leq N \\leq 10^4\n* |a_i| \\leq 10^9(0\\leq i\\leq N)\n* a_N \\neq 0\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_N\n:\na_0\n\n\nOutput\n\nPrint all prime numbers p that divide f(x) for every integer x, in ascending order.\n\nExamples\n\nInput\n\n2\n7\n-7\n14\n\n\nOutput\n\n2\n7\n\n\nInput\n\n3\n1\n4\n1\n5\n\n\nOutput\n\n\n\n\nInput\n\n0\n998244353\n\n\nOutput\n\n998244353", "grammar": {"answer": null}}
{"name": "145_B. Lucky Number 2", "description": "Petya loves lucky numbers very much. Everybody knows that lucky numbers are positive integers whose decimal record contains only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.\n\nPetya loves long lucky numbers very much. He is interested in the minimum lucky number d that meets some condition. Let cnt(x) be the number of occurrences of number x in number d as a substring. For example, if d = 747747, then cnt(4) = 2, cnt(7) = 4, cnt(47) = 2, cnt(74) = 2. Petya wants the following condition to fulfil simultaneously: cnt(4) = a1, cnt(7) = a2, cnt(47) = a3, cnt(74) = a4. Petya is not interested in the occurrences of other numbers. Help him cope with this task.\n\nInput\n\nThe single line contains four integers a1, a2, a3 and a4 (1 ≤ a1, a2, a3, a4 ≤ 106).\n\nOutput\n\nOn the single line print without leading zeroes the answer to the problem — the minimum lucky number d such, that cnt(4) = a1, cnt(7) = a2, cnt(47) = a3, cnt(74) = a4. If such number does not exist, print the single number \"-1\" (without the quotes).\n\nExamples\n\nInput\n\n2 2 1 1\n\n\nOutput\n\n4774\n\n\nInput\n\n4 7 3 1\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p00141 Spiral Pattern", "description": "I decided to create a program that displays a \"round and round pattern\". The \"round and round pattern\" is as follows.\n\n* If the length of one side is n, it is displayed as a character string with n rows and n columns.\n* A spiral pattern that rotates clockwise with the lower left corner as the base point.\n* The part with a line is represented by # (half-width sharp), and the blank part is represented by \"\" (half-width blank).\n* Leave a space between the lines.\n\n\n\nCreate a program that takes an integer n as an input and outputs a \"round and round pattern\" with a side length of n.\n\n\n\nInput\n\nThe input is given in the following format:\n\n\nd\nn1\nn2\n::\nnd\n\n\nThe number of datasets d (d ≤ 20) is given to the first line, and the side length ni (1 ≤ ni ≤ 100) of the i-th round pattern is given to each of the following d lines.\n\nOutput\n\nPlease output a round and round pattern for each data set. Insert a blank line between the datasets.\n\nExample\n\nInput\n\n2\n5\n6\n\n\nOutput\n\n#####\n#   #\n# # #\n# # #\n# ###\n\n######\n#    #\n# ## #\n# #  #\n# #  #\n# ####", "grammar": {"answer": null}}
{"name": "p00929 There is No Alternative", "description": "Example\n\nInput\n\n4 4\n1 2 3\n1 3 3\n2 3 3\n2 4 3\n\n\nOutput\n\n1 3", "grammar": {"answer": null}}
{"name": "p02560 AtCoder Library Practice Contest - Floor Sum", "description": "In this problem, you should process T testcases.\n\nFor each testcase, you are given four integers N, M, A, B.\n\nCalculate \\sum_{i = 0}^{N - 1} floor((A \\times i + B) / M).\n\nConstraints\n\n* 1 \\leq T \\leq 100,000\n* 1 \\leq N, M \\leq 10^9\n* 0 \\leq A, B < M\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nT\nN_0 M_0 A_0 B_0\nN_1 M_1 A_1 B_1\n:\nN_{T - 1} M_{T - 1} A_{T - 1} B_{T - 1}\n\n\nOutput\n\nPrint the answer for each testcase.\n\nExample\n\nInput\n\n5\n4 10 6 3\n6 5 4 3\n1 1 0 0\n31415 92653 58979 32384\n1000000000 1000000000 999999999 999999999\n\n\nOutput\n\n3\n13\n0\n314095480\n499999999500000000", "grammar": {"answer": null}}
{"name": "p00940 Deadlock Detection", "description": "Example\n\nInput\n\n2 2 7\n3 4\n3 2\n1 3\n1 1\n2 2\n1 2\n2 1\n1 2\n2 2\n1 1\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "995_E. Number Clicker", "description": "Allen is playing Number Clicker on his phone.\n\nHe starts with an integer u on the screen. Every second, he can press one of 3 buttons.\n\n  1. Turn u → u+1 \\pmod{p}. \n  2. Turn u → u+p-1 \\pmod{p}. \n  3. Turn u → u^{p-2} \\pmod{p}. \n\n\n\nAllen wants to press at most 200 buttons and end up with v on the screen. Help him!\n\nInput\n\nThe first line of the input contains 3 positive integers: u, v, p (0 ≤ u, v ≤ p-1, 3 ≤ p ≤ 10^9 + 9). p is guaranteed to be prime.\n\nOutput\n\nOn the first line, print a single integer ℓ, the number of button presses. On the second line, print integers c_1, ..., c_ℓ, the button presses. For 1 ≤ i ≤ ℓ, 1 ≤ c_i ≤ 3.\n\nWe can show that the answer always exists.\n\nExamples\n\nInput\n\n1 3 5\n\n\nOutput\n\n2\n1 1\n\n\nInput\n\n3 2 5\n\n\nOutput\n\n1\n3\n\nNote\n\nIn the first example the integer on the screen changes as 1 → 2 → 3.\n\nIn the second example the integer on the screen changes as 3 → 2. ", "grammar": {"answer": null}}
{"name": "p03951 AtCoder Grand Contest 006 - Prefix and Suffix", "description": "Snuke is interested in strings that satisfy the following conditions:\n\n* The length of the string is at least N.\n* The first N characters equal to the string s.\n* The last N characters equal to the string t.\n\n\n\nFind the length of the shortest string that satisfies the conditions.\n\nConstraints\n\n* 1≤N≤100\n* The lengths of s and t are both N.\n* s and t consist of lowercase English letters.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\ns\nt\n\n\nOutput\n\nPrint the length of the shortest string that satisfies the conditions.\n\nExamples\n\nInput\n\n3\nabc\ncde\n\n\nOutput\n\n5\n\n\nInput\n\n1\na\nz\n\n\nOutput\n\n2\n\n\nInput\n\n4\nexpr\nexpr\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p02359 The Maximum Number of Customers", "description": "$N$ persons visited a restaurant. The restaurant is open from 0 to $T$. The $i$-th person entered the restaurant at $l_i$ and left at $r_i$. Find the maximum number of persons during the business hours.\n\nConstraints\n\n* $ 1 \\leq N \\leq 10^5 $\n* $ 1 \\leq T \\leq 10^5 $\n* $ 0 \\leq l_i < r_i \\leq T $\n\nInput\n\nThe input is given in the following format.\n\n$N$ $T$\n$l_1$ $r_1$\n$l_2$ $r_2$\n:\n$l_N$ $r_N$\n\nOutput\n\nPrint the maximum number of persons in a line.\n\nExamples\n\nInput\n\n6 10\n0 2\n1 3\n2 6\n3 8\n4 10\n5 10\n\n\nOutput\n\n4\n\n\nInput\n\n2 2\n0 1\n1 2\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "409_E. Dome", "description": "<image>\n\nInput\n\nThe input contains a single floating-point number x with exactly 6 decimal places (0 < x < 5).\n\nOutput\n\nOutput two integers separated by a single space. Each integer should be between 1 and 10, inclusive. If several solutions exist, output any of them. Solution will exist for all tests.\n\nExamples\n\nInput\n\n1.200000\n\n\nOutput\n\n3 2\n\n\nInput\n\n2.572479\n\n\nOutput\n\n10 3\n\n\nInput\n\n4.024922\n\n\nOutput\n\n9 9", "grammar": {"answer": null}}
{"name": "p01880 Best Matched Pair", "description": "Example\n\nInput\n\n2\n1 2\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "888_A. Local Extrema", "description": "You are given an array a. Some element of this array ai is a local minimum iff it is strictly less than both of its neighbours (that is, ai < ai - 1 and ai < ai + 1). Also the element can be called local maximum iff it is strictly greater than its neighbours (that is, ai > ai - 1 and ai > ai + 1). Since a1 and an have only one neighbour each, they are neither local minima nor local maxima.\n\nAn element is called a local extremum iff it is either local maximum or local minimum. Your task is to calculate the number of local extrema in the given array.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 1000) — the number of elements in array a.\n\nThe second line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 1000) — the elements of array a.\n\nOutput\n\nPrint the number of local extrema in the given array.\n\nExamples\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n0\n\n\nInput\n\n4\n1 5 2 5\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02691 AtCoder Beginner Contest 166 - This Message Will Self-Destruct in 5s", "description": "You are the top spy of AtCoder Kingdom. To prevent the stolen secret from being handed to AlDebaran Kingdom, you have sneaked into the party where the transaction happens.\n\nThere are N attendees in the party, and they are given attendee numbers from 1 through N. The height of Attendee i is A_i.\n\nAccording to an examination beforehand, you know that a pair of attendees satisfying the condition below will make the transaction.\n\n* The absolute difference of their attendee numbers is equal to the sum of their heights.\n\n\n\nThere are \\frac{N(N-1)}{2} ways to choose two from the N attendees and make a pair. Among them, how many satisfy the condition above?\n\nP.S.: We cannot let you know the secret.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq A_i \\leq 10^9\\ (1 \\leq i \\leq N)\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 \\dots A_N\n\n\nOutput\n\nPrint the number of pairs satisfying the condition.\n\nExamples\n\nInput\n\n6\n2 3 3 1 3 1\n\n\nOutput\n\n3\n\n\nInput\n\n6\n5 2 4 2 8 8\n\n\nOutput\n\n0\n\n\nInput\n\n32\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4 6 2 6 4 3 3 8 3 2 7 9 5\n\n\nOutput\n\n22", "grammar": {"answer": null}}
{"name": "p03135 AtCoder Beginner Contest 117 - Entrance Examination", "description": "In order to pass the entrance examination tomorrow, Taro has to study for T more hours.\n\nFortunately, he can leap to World B where time passes X times as fast as it does in our world (World A).\n\nWhile (X \\times t) hours pass in World B, t hours pass in World A.\n\nHow many hours will pass in World A while Taro studies for T hours in World B?\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq T \\leq 100\n* 1 \\leq X \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nT X\n\n\nOutput\n\nPrint the number of hours that will pass in World A.\n\nThe output will be regarded as correct when its absolute or relative error from the judge's output is at most 10^{-3}.\n\nExamples\n\nInput\n\n8 3\n\n\nOutput\n\n2.6666666667\n\n\nInput\n\n99 1\n\n\nOutput\n\n99.0000000000\n\n\nInput\n\n1 100\n\n\nOutput\n\n0.0100000000", "grammar": {"answer": null}}
{"name": "1198_E. Rectangle Painting 2", "description": "There is a square grid of size n × n. Some cells are colored in black, all others are colored in white. In one operation you can select some rectangle and color all its cells in white. It costs min(h, w) to color a rectangle of size h × w. You are to make all cells white for minimum total cost.\n\nThe square is large, so we give it to you in a compressed way. The set of black cells is the union of m rectangles.\n\nInput\n\nThe first line contains two integers n and m (1 ≤ n ≤ 10^{9}, 0 ≤ m ≤ 50) — the size of the square grid and the number of black rectangles.\n\nEach of the next m lines contains 4 integers x_{i1} y_{i1} x_{i2} y_{i2} (1 ≤ x_{i1} ≤ x_{i2} ≤ n, 1 ≤ y_{i1} ≤ y_{i2} ≤ n) — the coordinates of the bottom-left and the top-right corner cells of the i-th black rectangle.\n\nThe rectangles may intersect.\n\nOutput\n\nPrint a single integer — the minimum total cost of painting the whole square in white.\n\nExamples\n\nInput\n\n\n10 2\n4 1 5 10\n1 4 10 5\n\n\nOutput\n\n\n4\n\n\nInput\n\n\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n\n\nOutput\n\n\n3\n\nNote\n\nThe examples and some of optimal solutions are shown on the pictures below.\n\n<image>", "grammar": {"answer": null}}
{"name": "600_B. Queries about less or equal elements", "description": "You are given two arrays of integers a and b. For each element of the second array bj you should find the number of elements in array a that are less than or equal to the value bj.\n\nInput\n\nThe first line contains two integers n, m (1 ≤ n, m ≤ 2·105) — the sizes of arrays a and b.\n\nThe second line contains n integers — the elements of array a ( - 109 ≤ ai ≤ 109).\n\nThe third line contains m integers — the elements of array b ( - 109 ≤ bj ≤ 109).\n\nOutput\n\nPrint m integers, separated by spaces: the j-th of which is equal to the number of such elements in array a that are less than or equal to the value bj.\n\nExamples\n\nInput\n\n5 4\n1 3 5 7 9\n6 4 2 8\n\n\nOutput\n\n3 2 1 4\n\n\nInput\n\n5 5\n1 2 1 2 5\n3 1 4 1 5\n\n\nOutput\n\n4 2 4 2 5", "grammar": {"answer": null}}
{"name": "p03013 AtCoder Beginner Contest 129 - Typical Stairs", "description": "There is a staircase with N steps. Takahashi is now standing at the foot of the stairs, that is, on the 0-th step. He can climb up one or two steps at a time.\n\nHowever, the treads of the a_1-th, a_2-th, a_3-th, \\ldots, a_M-th steps are broken, so it is dangerous to set foot on those steps.\n\nHow many are there to climb up to the top step, that is, the N-th step, without setting foot on the broken steps? Find the count modulo 1\\ 000\\ 000\\ 007.\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* 0 \\leq M \\leq N-1\n* 1 \\leq a_1 < a_2 < ... < a_M \\leq N-1\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\na_1\na_2\n.\n.\n.\na_M\n\n\nOutput\n\nPrint the number of ways to climb up the stairs under the condition, modulo 1\\ 000\\ 000\\ 007.\n\nExamples\n\nInput\n\n6 1\n3\n\n\nOutput\n\n4\n\n\nInput\n\n10 2\n4\n5\n\n\nOutput\n\n0\n\n\nInput\n\n100 5\n1\n23\n45\n67\n89\n\n\nOutput\n\n608200469", "grammar": {"answer": null}}
{"name": "p03291 AtCoder Beginner Contest 104 - We Love ABC", "description": "The ABC number of a string T is the number of triples of integers (i, j, k) that satisfy all of the following conditions:\n\n* 1 ≤ i < j < k ≤ |T| (|T| is the length of T.)\n* T_i = `A` (T_i is the i-th character of T from the beginning.)\n* T_j = `B`\n* T_k = `C`\n\n\n\nFor example, when T = `ABCBC`, there are three triples of integers (i, j, k) that satisfy the conditions: (1, 2, 3), (1, 2, 5), (1, 4, 5). Thus, the ABC number of T is 3.\n\nYou are given a string S. Each character of S is `A`, `B`, `C` or `?`.\n\nLet Q be the number of occurrences of `?` in S. We can make 3^Q strings by replacing each occurrence of `?` in S with `A`, `B` or `C`. Find the sum of the ABC numbers of all these strings.\n\nThis sum can be extremely large, so print the sum modulo 10^9 + 7.\n\nConstraints\n\n* 3 ≤ |S| ≤ 10^5\n* Each character of S is `A`, `B`, `C` or `?`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the sum of the ABC numbers of all the 3^Q strings, modulo 10^9 + 7.\n\nExamples\n\nInput\n\nA??C\n\n\nOutput\n\n8\n\n\nInput\n\nABCBC\n\n\nOutput\n\n3\n\n\nInput\n\n????C?????B??????A???????\n\n\nOutput\n\n979596887", "grammar": {"answer": null}}
{"name": "p02898 AtCoder Beginner Contest 142 - Roller Coaster", "description": "N friends of Takahashi has come to a theme park.\n\nTo ride the most popular roller coaster in the park, you must be at least K centimeters tall.\n\nThe i-th friend is h_i centimeters tall.\n\nHow many of the Takahashi's friends can ride the roller coaster?\n\nConstraints\n\n* 1 \\le N \\le 10^5\n* 1 \\le K \\le 500\n* 1 \\le h_i \\le 500\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nh_1 h_2 \\ldots h_N\n\n\nOutput\n\nPrint the number of people among the Takahashi's friends who can ride the roller coaster.\n\nExamples\n\nInput\n\n4 150\n150 140 100 200\n\n\nOutput\n\n2\n\n\nInput\n\n1 500\n499\n\n\nOutput\n\n0\n\n\nInput\n\n5 1\n100 200 300 400 500\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "1373_C. Pluses and Minuses", "description": "You are given a string s consisting only of characters + and -. You perform some process with this string. This process can be described by the following pseudocode: \n    \n    \n    res = 0  \n    for init = 0 to inf  \n        cur = init  \n        ok = true  \n        for i = 1 to |s|  \n            res = res + 1  \n            if s[i] == '+'  \n                cur = cur + 1  \n            else  \n                cur = cur - 1  \n            if cur < 0  \n                ok = false  \n                break  \n        if ok  \n            break  \n    \n\nNote that the inf denotes infinity, and the characters of the string are numbered from 1 to |s|.\n\nYou have to calculate the value of the res after the process ends.\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 1000) — the number of test cases.\n\nThe only lines of each test case contains string s (1 ≤ |s| ≤ 10^6) consisting only of characters + and -.\n\nIt's guaranteed that sum of |s| over all test cases doesn't exceed 10^6.\n\nOutput\n\nFor each test case print one integer — the value of the res after the process ends.\n\nExample\n\nInput\n\n\n3\n--+-\n---\n++--+-\n\n\nOutput\n\n\n7\n9\n6", "grammar": {"answer": null}}
{"name": "p03579 CODE FESTIVAL 2017 qual B - 3 Steps", "description": "Rng has a connected undirected graph with N vertices. Currently, there are M edges in the graph, and the i-th edge connects Vertices A_i and B_i.\n\nRng will add new edges to the graph by repeating the following operation:\n\n* Operation: Choose u and v (u \\neq v) such that Vertex v can be reached by traversing exactly three edges from Vertex u, and add an edge connecting Vertices u and v. It is not allowed to add an edge if there is already an edge connecting Vertices u and v.\n\n\n\nFind the maximum possible number of edges that can be added.\n\nConstraints\n\n* 2 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 10^5\n* 1 \\leq A_i,B_i \\leq N\n* The graph has no self-loops or multiple edges.\n* The graph is connected.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nA_1 B_1\nA_2 B_2\n:\nA_M B_M\n\n\nOutput\n\nFind the maximum possible number of edges that can be added.\n\nExamples\n\nInput\n\n6 5\n1 2\n2 3\n3 4\n4 5\n5 6\n\n\nOutput\n\n4\n\n\nInput\n\n5 5\n1 2\n2 3\n3 1\n5 4\n5 1\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "319_B. Psychos in a Line", "description": "There are n psychos standing in a line. Each psycho is assigned a unique integer from 1 to n. At each step every psycho who has an id greater than the psycho to his right (if exists) kills his right neighbor in the line. Note that a psycho might kill and get killed at the same step. \n\nYou're given the initial arrangement of the psychos in the line. Calculate how many steps are needed to the moment of time such, that nobody kills his neighbor after that moment. Look notes to understand the statement more precise.\n\nInput\n\nThe first line of input contains integer n denoting the number of psychos, (1 ≤ n ≤ 105). In the second line there will be a list of n space separated distinct integers each in range 1 to n, inclusive — ids of the psychos in the line from left to right.\n\nOutput\n\nPrint the number of steps, so that the line remains the same afterward.\n\nExamples\n\nInput\n\n10\n10 9 7 8 6 5 3 4 2 1\n\n\nOutput\n\n2\n\n\nInput\n\n6\n1 2 3 4 5 6\n\n\nOutput\n\n0\n\nNote\n\nIn the first sample line of the psychos transforms as follows: [10 9 7 8 6 5 3 4 2 1]  →  [10 8 4] →  [10]. So, there are two steps.", "grammar": {"answer": null}}
{"name": "p04023 AtCoder Grand Contest 003 - Sequential operations on Sequence", "description": "Snuke got an integer sequence from his mother, as a birthday present. The sequence has N elements, and the i-th of them is i. Snuke performs the following Q operations on this sequence. The i-th operation, described by a parameter q_i, is as follows:\n\n* Take the first q_i elements from the sequence obtained by concatenating infinitely many copy of the current sequence, then replace the current sequence with those q_i elements.\n\n\n\nAfter these Q operations, find how many times each of the integers 1 through N appears in the final sequence.\n\nConstraints\n\n* 1 ≦ N ≦ 10^5\n* 0 ≦ Q ≦ 10^5\n* 1 ≦ q_i ≦ 10^{18}\n* All input values are integers.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN Q\nq_1\n:\nq_Q\n\n\nOutput\n\nPrint N lines. The i-th line (1 ≦ i ≦ N) should contain the number of times integer i appears in the final sequence after the Q operations.\n\nExamples\n\nInput\n\n5 3\n6\n4\n11\n\n\nOutput\n\n3\n3\n3\n2\n0\n\n\nInput\n\n10 10\n9\n13\n18\n8\n10\n10\n9\n19\n22\n27\n\n\nOutput\n\n7\n4\n4\n3\n3\n2\n2\n2\n0\n0", "grammar": {"answer": null}}
{"name": "1493_A. Anti-knapsack", "description": "You are given two integers n and k. You are asked to choose maximum number of distinct integers from 1 to n so that there is no subset of chosen numbers with sum equal to k.\n\nA subset of a set is a set that can be obtained from initial one by removing some (possibly all or none) elements of it.\n\nInput\n\nThe first line contains the number of test cases T (1 ≤ T ≤ 100).\n\nEach of the next T lines contains two integers n and k (1 ≤ k ≤ n ≤ 1000) — the description of test cases.\n\nOutput\n\nFor each test case output two lines. In the first line output a single integer m — the number of chosen integers.\n\nIn the second line output m distinct integers from 1 to n — the chosen numbers.\n\nIf there are multiple answers, print any. You can print the numbers in any order.\n\nExample\n\nInput\n\n\n3\n3 2\n5 3\n1 1\n\n\nOutput\n\n\n2\n3 1 \n3\n4 5 2 \n0", "grammar": {"answer": null}}
{"name": "600_E. Lomsat gelral", "description": "You are given a rooted tree with root in vertex 1. Each vertex is coloured in some colour.\n\nLet's call colour c dominating in the subtree of vertex v if there are no other colours that appear in the subtree of vertex v more times than colour c. So it's possible that two or more colours will be dominating in the subtree of some vertex.\n\nThe subtree of vertex v is the vertex v and all other vertices that contains vertex v in each path to the root.\n\nFor each vertex v find the sum of all dominating colours in the subtree of vertex v.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 105) — the number of vertices in the tree.\n\nThe second line contains n integers ci (1 ≤ ci ≤ n), ci — the colour of the i-th vertex.\n\nEach of the next n - 1 lines contains two integers xj, yj (1 ≤ xj, yj ≤ n) — the edge of the tree. The first vertex is the root of the tree.\n\nOutput\n\nPrint n integers — the sums of dominating colours for each vertex.\n\nExamples\n\nInput\n\n4\n1 2 3 4\n1 2\n2 3\n2 4\n\n\nOutput\n\n10 9 3 4\n\n\nInput\n\n15\n1 2 3 1 2 3 3 1 1 3 2 2 1 2 3\n1 2\n1 3\n1 4\n1 14\n1 15\n2 5\n2 6\n2 7\n3 8\n3 9\n3 10\n4 11\n4 12\n4 13\n\n\nOutput\n\n6 5 4 3 2 3 3 1 1 3 2 2 1 2 3", "grammar": {"answer": null}}
{"name": "630_H. Benches", "description": "The city park of IT City contains n east to west paths and n north to south paths. Each east to west path crosses each north to south path, so there are n2 intersections.\n\nThe city funded purchase of five benches. To make it seems that there are many benches it was decided to place them on as many paths as possible. Obviously this requirement is satisfied by the following scheme: each bench is placed on a cross of paths and each path contains not more than one bench.\n\nHelp the park administration count the number of ways to place the benches.\n\nInput\n\nThe only line of the input contains one integer n (5 ≤ n ≤ 100) — the number of east to west paths and north to south paths.\n\nOutput\n\nOutput one integer — the number of ways to place the benches.\n\nExamples\n\nInput\n\n5\n\n\nOutput\n\n120", "grammar": {"answer": null}}
{"name": "493_E. Vasya and Polynomial", "description": "Vasya is studying in the last class of school and soon he will take exams. He decided to study polynomials. Polynomial is a function P(x) = a0 + a1x1 + ... + anxn. Numbers ai are called coefficients of a polynomial, non-negative integer n is called a degree of a polynomial.\n\nVasya has made a bet with his friends that he can solve any problem with polynomials. They suggested him the problem: \"Determine how many polynomials P(x) exist with integer non-negative coefficients so that <image>, and <image>, where <image> and b are given positive integers\"? \n\nVasya does not like losing bets, but he has no idea how to solve this task, so please help him to solve the problem.\n\nInput\n\nThe input contains three integer positive numbers <image> no greater than 1018.\n\nOutput\n\nIf there is an infinite number of such polynomials, then print \"inf\" without quotes, otherwise print the reminder of an answer modulo 109 + 7.\n\nExamples\n\nInput\n\n2 2 2\n\n\nOutput\n\n2\n\n\nInput\n\n2 3 3\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p02987 AtCoder Beginner Contest 132 - Fifty-Fifty", "description": "You are given a 4-character string S consisting of uppercase English letters. Determine if S consists of exactly two kinds of characters which both appear twice in S.\n\nConstraints\n\n* The length of S is 4.\n* S consists of uppercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nIf S consists of exactly two kinds of characters which both appear twice in S, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\nASSA\n\n\nOutput\n\nYes\n\n\nInput\n\nSTOP\n\n\nOutput\n\nNo\n\n\nInput\n\nFFEE\n\n\nOutput\n\nYes\n\n\nInput\n\nFREE\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "630_K. Indivisibility", "description": "IT City company developing computer games decided to upgrade its way to reward its employees. Now it looks the following way. After a new game release users start buying it actively, and the company tracks the number of sales with precision to each transaction. Every time when the next number of sales is not divisible by any number from 2 to 10 every developer of this game gets a small bonus.\n\nA game designer Petya knows that the company is just about to release a new game that was partly developed by him. On the basis of his experience he predicts that n people will buy the game during the first month. Now Petya wants to determine how many times he will get the bonus. Help him to know it.\n\nInput\n\nThe only line of the input contains one integer n (1 ≤ n ≤ 1018) — the prediction on the number of people who will buy the game.\n\nOutput\n\nOutput one integer showing how many numbers from 1 to n are not divisible by any number from 2 to 10.\n\nExamples\n\nInput\n\n12\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p03140 NIKKEI Programming Contest 2019 - Touitsu", "description": "You are given three strings A, B and C. Each of these is a string of length N consisting of lowercase English letters.\n\nOur objective is to make all these three strings equal. For that, you can repeatedly perform the following operation:\n\n* Operation: Choose one of the strings A, B and C, and specify an integer i between 1 and N (inclusive). Change the i-th character from the beginning of the chosen string to some other lowercase English letter.\n\n\n\nWhat is the minimum number of operations required to achieve the objective?\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* Each of the strings A, B and C is a string of length N.\n* Each character in each of the strings A, B and C is a lowercase English letter.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA\nB\nC\n\n\nOutput\n\nPrint the minimum number of operations required.\n\nExamples\n\nInput\n\n4\nwest\neast\nwait\n\n\nOutput\n\n3\n\n\nInput\n\n9\ndifferent\ndifferent\ndifferent\n\n\nOutput\n\n0\n\n\nInput\n\n7\nzenkoku\ntouitsu\nprogram\n\n\nOutput\n\n13", "grammar": {"answer": null}}
{"name": "908_E. New Year and Entity Enumeration", "description": "You are given an integer m.\n\nLet M = 2m - 1.\n\nYou are also given a set of n integers denoted as the set T. The integers will be provided in base 2 as n binary strings of length m.\n\nA set of integers S is called \"good\" if the following hold. \n\n  1. If <image>, then <image>. \n  2. If <image>, then <image>\n  3. <image>\n  4. All elements of S are less than or equal to M. \n\n\n\nHere, <image> and <image> refer to the bitwise XOR and bitwise AND operators, respectively.\n\nCount the number of good sets S, modulo 109 + 7.\n\nInput\n\nThe first line will contain two integers m and n (1 ≤ m ≤ 1 000, 1 ≤ n ≤ min(2m, 50)).\n\nThe next n lines will contain the elements of T. Each line will contain exactly m zeros and ones. Elements of T will be distinct.\n\nOutput\n\nPrint a single integer, the number of good sets modulo 109 + 7. \n\nExamples\n\nInput\n\n5 3\n11010\n00101\n11000\n\n\nOutput\n\n4\n\n\nInput\n\n30 2\n010101010101010010101010101010\n110110110110110011011011011011\n\n\nOutput\n\n860616440\n\nNote\n\nAn example of a valid set S is {00000, 00101, 00010, 00111, 11000, 11010, 11101, 11111}.", "grammar": {"answer": null}}
{"name": "986_C. AND Graph", "description": "You are given a set of size m with integer elements between 0 and 2^{n}-1 inclusive. Let's build an undirected graph on these integers in the following way: connect two integers x and y with an edge if and only if x \\& y = 0. Here \\& is the [bitwise AND operation](https://en.wikipedia.org/wiki/Bitwise_operation#AND). Count the number of connected components in that graph.\n\nInput\n\nIn the first line of input there are two integers n and m (0 ≤ n ≤ 22, 1 ≤ m ≤ 2^{n}).\n\nIn the second line there are m integers a_1, a_2, …, a_m (0 ≤ a_{i} < 2^{n}) — the elements of the set. All a_{i} are distinct.\n\nOutput\n\nPrint the number of connected components.\n\nExamples\n\nInput\n\n2 3\n1 2 3\n\n\nOutput\n\n2\n\n\nInput\n\n5 5\n5 19 10 20 12\n\n\nOutput\n\n2\n\nNote\n\nGraph from first sample:\n\n<image>\n\nGraph from second sample:\n\n<image>", "grammar": {"answer": null}}
{"name": "691_B. s-palindrome", "description": "Let's call a string \"s-palindrome\" if it is symmetric about the middle of the string. For example, the string \"oHo\" is \"s-palindrome\", but the string \"aa\" is not. The string \"aa\" is not \"s-palindrome\", because the second half of it is not a mirror reflection of the first half.\n\n<image> English alphabet\n\nYou are given a string s. Check if the string is \"s-palindrome\".\n\nInput\n\nThe only line contains the string s (1 ≤ |s| ≤ 1000) which consists of only English letters.\n\nOutput\n\nPrint \"TAK\" if the string s is \"s-palindrome\" and \"NIE\" otherwise.\n\nExamples\n\nInput\n\noXoxoXo\n\n\nOutput\n\nTAK\n\n\nInput\n\nbod\n\n\nOutput\n\nTAK\n\n\nInput\n\nER\n\n\nOutput\n\nNIE", "grammar": {"answer": null}}
{"name": "p03194 CADDi 2018 for Beginners - Product and GCD", "description": "There are N integers a_1, a_2, ..., a_N not less than 1. The values of a_1, a_2, ..., a_N are not known, but it is known that a_1 \\times a_2 \\times ... \\times a_N = P.\n\nFind the maximum possible greatest common divisor of a_1, a_2, ..., a_N.\n\nConstraints\n\n* 1 \\leq N \\leq 10^{12}\n* 1 \\leq P \\leq 10^{12}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN P\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3 24\n\n\nOutput\n\n2\n\n\nInput\n\n5 1\n\n\nOutput\n\n1\n\n\nInput\n\n1 111\n\n\nOutput\n\n111\n\n\nInput\n\n4 972439611840\n\n\nOutput\n\n206", "grammar": {"answer": null}}
{"name": "p03510 Code Festival Team Relay (Parallel) - Capture", "description": "In a long narrow forest stretching east-west, there are N beasts. Below, we will call the point that is p meters from the west end Point p. The i-th beast from the west (1 ≤ i ≤ N) is at Point x_i, and can be sold for s_i yen (the currency of Japan) if captured.\n\nYou will choose two integers L and R (L ≤ R), and throw a net to cover the range from Point L to Point R including both ends, [L, R]. Then, all the beasts in the range will be captured. However, the net costs R - L yen and your profit will be (the sum of s_i over all captured beasts i) - (R - L) yen.\n\nWhat is the maximum profit that can be earned by throwing a net only once?\n\nConstraints\n\n* 1 ≤ N ≤ 2 × 10^5\n* 1 ≤ x_1 < x_2 < ... < x_N ≤ 10^{15}\n* 1 ≤ s_i ≤ 10^9\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nx_1 s_1\nx_2 s_2\n:\nx_N s_N\n\n\nOutput\n\nWhen the maximum profit is X yen, print the value of X.\n\nExamples\n\nInput\n\n5\n10 20\n40 50\n60 30\n70 40\n90 10\n\n\nOutput\n\n90\n\n\nInput\n\n5\n10 2\n40 5\n60 3\n70 4\n90 1\n\n\nOutput\n\n5\n\n\nInput\n\n4\n1 100\n3 200\n999999999999999 150\n1000000000000000 150\n\n\nOutput\n\n299", "grammar": {"answer": null}}
{"name": "11_B. Jumping Jack", "description": "Jack is working on his jumping skills recently. Currently he's located at point zero of the number line. He would like to get to the point x. In order to train, he has decided that he'll first jump by only one unit, and each subsequent jump will be exactly one longer than the previous one. He can go either left or right with each jump. He wonders how many jumps he needs to reach x.\n\nInput\n\nThe input data consists of only one integer x ( - 109 ≤ x ≤ 109).\n\nOutput\n\nOutput the minimal number of jumps that Jack requires to reach x.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n3\n\n\nInput\n\n6\n\n\nOutput\n\n3\n\n\nInput\n\n0\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "485_A. Factory", "description": "One industrial factory is reforming working plan. The director suggested to set a mythical detail production norm. If at the beginning of the day there were x details in the factory storage, then by the end of the day the factory has to produce <image> (remainder after dividing x by m) more details. Unfortunately, no customer has ever bought any mythical detail, so all the details produced stay on the factory. \n\nThe board of directors are worried that the production by the given plan may eventually stop (that means that there will be а moment when the current number of details on the factory is divisible by m). \n\nGiven the number of details a on the first day and number m check if the production stops at some moment.\n\nInput\n\nThe first line contains two integers a and m (1 ≤ a, m ≤ 105).\n\nOutput\n\nPrint \"Yes\" (without quotes) if the production will eventually stop, otherwise print \"No\".\n\nExamples\n\nInput\n\n1 5\n\n\nOutput\n\nNo\n\n\nInput\n\n3 6\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "1213_D2. Equalizing by Division (hard version)", "description": "The only difference between easy and hard versions is the number of elements in the array.\n\nYou are given an array a consisting of n integers. In one move you can choose any a_i and divide it by 2 rounding down (in other words, in one move you can set a_i := ⌊(a_i)/(2)⌋).\n\nYou can perform such an operation any (possibly, zero) number of times with any a_i.\n\nYour task is to calculate the minimum possible number of operations required to obtain at least k equal numbers in the array.\n\nDon't forget that it is possible to have a_i = 0 after some operations, thus the answer always exists.\n\nInput\n\nThe first line of the input contains two integers n and k (1 ≤ k ≤ n ≤ 2 ⋅ 10^5) — the number of elements in the array and the number of equal numbers required.\n\nThe second line of the input contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ 2 ⋅ 10^5), where a_i is the i-th element of a.\n\nOutput\n\nPrint one integer — the minimum possible number of operations required to obtain at least k equal numbers in the array.\n\nExamples\n\nInput\n\n\n5 3\n1 2 2 4 5\n\n\nOutput\n\n\n1\n\n\nInput\n\n\n5 3\n1 2 3 4 5\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n5 3\n1 2 3 3 3\n\n\nOutput\n\n\n0", "grammar": {"answer": null}}
{"name": "p02125 OOllOll", "description": "Problem\n\nLet $ f (x) $ be the sum of each digit when the non-negative integer $ x $ is expressed in binary.\nGiven a positive integer $ N $, output the largest of $ f (0) $, $ f (1) $, ..., $ f (N) $.\n\n\nExample of calculating the function $ f (5) $:\nWhen 5 is expressed in binary, it is 101 and the sum of each digit is 1 + 0 + 1 = 2\nTherefore, $ f (5) = 2 $.\n\n\nNote: https://ja.wikipedia.org/wiki/ Binary\n\nOuput\n\nOutputs the largest of $ f (0) $, $ f (1) $, ..., $ f (N) $ on one line.\n\nConstraints\n\nThe input satisfies the following conditions.\n\n* $ 1 \\ le N \\ le 10 ^ 9 $\n\nInput\n\nThe input is given in the following format.\n\n\n$ N $\n\n\nA positive integer $ N $ is given on one line.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n1\n\n\nInput\n\n9\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "12_E. Start of the season", "description": "Before the start of the football season in Berland a strange magic ritual is held. The most experienced magicians have to find a magic matrix of the size n × n (n is even number). Gods will never allow to start the championship without it. Matrix should contain integers from 0 to n - 1, main diagonal should contain only zeroes and matrix should be symmetric. Moreover, all numbers in each row should be different. Magicians are very tired of the thinking process, so they ask you to write a program to find such matrix.\n\nInput\n\nThe first line contains one integer n (2 ≤ n ≤ 1000), n is even.\n\nOutput\n\nOutput n lines with n numbers each — the required matrix. Separate numbers with spaces. If there are several solutions, output any.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n0 1\n1 0\n\n\nInput\n\n4\n\n\nOutput\n\n0 1 3 2\n1 0 2 3\n3 2 0 1\n2 3 1 0", "grammar": {"answer": null}}
{"name": "798_B. Mike and strings", "description": "Mike has n strings s1, s2, ..., sn each consisting of lowercase English letters. In one move he can choose a string si, erase the first character and append it to the end of the string. For example, if he has the string \"coolmike\", in one move he can transform it into the string \"oolmikec\".\n\nNow Mike asks himself: what is minimal number of moves that he needs to do in order to make all the strings equal?\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 50) — the number of strings.\n\nThis is followed by n lines which contain a string each. The i-th line corresponding to string si. Lengths of strings are equal. Lengths of each string is positive and don't exceed 50.\n\nOutput\n\nPrint the minimal number of moves Mike needs in order to make all the strings equal or print  - 1 if there is no solution.\n\nExamples\n\nInput\n\n4\nxzzwo\nzwoxz\nzzwox\nxzzwo\n\n\nOutput\n\n5\n\n\nInput\n\n2\nmolzv\nlzvmo\n\n\nOutput\n\n2\n\n\nInput\n\n3\nkc\nkc\nkc\n\n\nOutput\n\n0\n\n\nInput\n\n3\naa\naa\nab\n\n\nOutput\n\n-1\n\nNote\n\nIn the first sample testcase the optimal scenario is to perform operations in such a way as to transform all strings into \"zwoxz\".", "grammar": {"answer": null}}
{"name": "p00009 Prime Number", "description": "Write a program which reads an integer n and prints the number of prime numbers which are less than or equal to n. A prime number is a natural number which has exactly two distinct natural number divisors: 1 and itself. For example, the first four prime numbers are: 2, 3, 5 and 7.\n\n\n\nInput\n\nInput consists of several datasets. Each dataset has an integer n (1 ≤ n ≤ 999,999) in a line.\n\nThe number of datasets is less than or equal to 30.\n\nOutput\n\nFor each dataset, prints the number of prime numbers.\n\nExample\n\nInput\n\n10\n3\n11\n\n\nOutput\n\n4\n2\n5", "grammar": {"answer": null}}
{"name": "p03506 Code Festival Team Relay (Parallel) - Evergrowing Tree", "description": "You are given an integer N. Consider an infinite N-ary tree as shown below:\n\n<image>\n\nFigure: an infinite N-ary tree for the case N = 3\n\nAs shown in the figure, each vertex is indexed with a unique positive integer, and for every positive integer there is a vertex indexed with it. The root of the tree has the index 1. For the remaining vertices, vertices in the upper row have smaller indices than those in the lower row. Among the vertices in the same row, a vertex that is more to the left has a smaller index.\n\nRegarding this tree, process Q queries. The i-th query is as follows:\n\n* Find the index of the lowest common ancestor (see Notes) of Vertex v_i and w_i.\n\nConstraints\n\n* 1 ≤ N ≤ 10^9\n* 1 ≤ Q ≤ 10^5\n* 1 ≤ v_i < w_i ≤ 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN Q\nv_1 w_1\n:\nv_Q w_Q\n\n\nOutput\n\nPrint Q lines. The i-th line (1 ≤ i ≤ Q) must contain the index of the lowest common ancestor of Vertex v_i and w_i.\n\nExamples\n\nInput\n\n3 3\n5 7\n8 11\n3 9\n\n\nOutput\n\n2\n1\n3\n\n\nInput\n\n100000 2\n1 2\n3 4\n\n\nOutput\n\n1\n1", "grammar": {"answer": null}}
{"name": "1036_F. Relatively Prime Powers", "description": "Consider some positive integer x. Its prime factorization will be of form x = 2^{k_1} ⋅ 3^{k_2} ⋅ 5^{k_3} ⋅ ...\n\nLet's call x elegant if the greatest common divisor of the sequence k_1, k_2, ... is equal to 1. For example, numbers 5 = 5^1, 12 = 2^2 ⋅ 3, 72 = 2^3 ⋅ 3^2 are elegant and numbers 8 = 2^3 (GCD = 3), 2500 = 2^2 ⋅ 5^4 (GCD = 2) are not.\n\nCount the number of elegant integers from 2 to n.\n\nEach testcase contains several values of n, for each of them you are required to solve the problem separately.\n\nInput\n\nThe first line contains a single integer T (1 ≤ T ≤ 10^5) — the number of values of n in the testcase.\n\nEach of the next T lines contains a single integer n_i (2 ≤ n_i ≤ 10^{18}).\n\nOutput\n\nPrint T lines — the i-th line should contain the number of elegant numbers from 2 to n_i.\n\nExample\n\nInput\n\n4\n4\n2\n72\n10\n\n\nOutput\n\n2\n1\n61\n6\n\nNote\n\nHere is the list of non-elegant numbers up to 10:\n\n  * 4 = 2^2, GCD = 2; \n  * 8 = 2^3, GCD = 3; \n  * 9 = 3^2, GCD = 2. \n\n\n\nThe rest have GCD = 1.", "grammar": {"answer": null}}
{"name": "27_E. Number With The Given Amount Of Divisors", "description": "Given the number n, find the smallest positive integer which has exactly n divisors. It is guaranteed that for the given n the answer will not exceed 1018.\n\nInput\n\nThe first line of the input contains integer n (1 ≤ n ≤ 1000).\n\nOutput\n\nOutput the smallest positive integer with exactly n divisors.\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n6\n\n\nInput\n\n6\n\n\nOutput\n\n12", "grammar": {"answer": null}}
{"name": "430_E. Guess the Tree", "description": "Iahub and Iahubina went to a picnic in a forest full of trees. Less than 5 minutes passed before Iahub remembered of trees from programming. Moreover, he invented a new problem and Iahubina has to solve it, otherwise Iahub won't give her the food. \n\nIahub asks Iahubina: can you build a rooted tree, such that\n\n  * each internal node (a node with at least one son) has at least two sons; \n  * node i has ci nodes in its subtree? \n\n\n\nIahubina has to guess the tree. Being a smart girl, she realized that it's possible no tree can follow Iahub's restrictions. In this way, Iahub will eat all the food. You need to help Iahubina: determine if there's at least one tree following Iahub's restrictions. The required tree must contain n nodes.\n\nInput\n\nThe first line of the input contains integer n (1 ≤ n ≤ 24). Next line contains n positive integers: the i-th number represents ci (1 ≤ ci ≤ n).\n\nOutput\n\nOutput on the first line \"YES\" (without quotes) if there exist at least one tree following Iahub's restrictions, otherwise output \"NO\" (without quotes). \n\nExamples\n\nInput\n\n4\n1 1 1 4\n\n\nOutput\n\nYES\n\nInput\n\n5\n1 1 5 2 1\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p02021 Working", "description": "G: Working\n\nKou decided to do the same number of jobs every day for the next $ N $.\n\n$ A_i $ jobs are added on the $ i $ day of the $ N $ day.\n\nMr. Kou has no work to do now, and he doesn't have to finish all the work by the $ N $ day.\n\nHow many jobs can you do in a day?\n\nHowever, Mr. Kou is excellent, so he can do as many jobs as he has.\n\ninput\n\n$ N $ is given on the first line.\n\nOn the second line, $ N $ integers $ A_1, A_2, A_3, \\ dots, A_N $ are given, separated by blanks.\n\noutput\n\nOutput the maximum number of jobs you can do in a day. Insert a line break at the end.\n\nConstraint\n\n* $ N $ is an integer greater than or equal to $ 1 $ and less than or equal to $ 100 $\n* $ A_1, A_2, A_3, \\ dots, A_N $ are integers between $ 1 $ and $ 100 $\n\n\n\nInput example 1\n\n\nFive\n4 2 5 3 1\n\n\nOutput example 1\n\n\n3\n\n\nIf you decide to work more than $ 4 $ a day, you'll run out of work on the second day.\n\nInput example 2\n\n\nFive\n9 9 1 9 9\n\n\nOutput example 2\n\n\n6\n\n\n\n\n\n\nExample\n\nInput\n\n5\n4 2 5 3 1\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p00077 Run Length", "description": "If the strings are consecutive, you can replace the characters with a rule to shorten the string. For example, for the string AAAA, the expression @ 4A will compress one character. Create a program that restores the character string compressed by this rule to the original character string. However, it is assumed that the @ character does not appear in the restored character string.\n\nIn addition, the original character string is uppercase letters, lowercase letters, numbers, and symbols, and can be up to 100 characters, and consecutive characters can be up to 9 characters.\n\n\n\ninput\n\nMultiple strings are given. One string is given per line. The number of strings does not exceed 50.\n\noutput\n\nFor each character string, output the restored character string for each character on one line.\n\nExample\n\nInput\n\nab@5C1@8050\n@99+1=1@90\n\n\nOutput\n\nabCCCCC10000000050\n999999999+1=1000000000", "grammar": {"answer": null}}
{"name": "p03841 AtCoder Grand Contest 008 - K-th K", "description": "You are given an integer sequence x of length N. Determine if there exists an integer sequence a that satisfies all of the following conditions, and if it exists, construct an instance of a.\n\n* a is N^2 in length, containing N copies of each of the integers 1, 2, ..., N.\n* For each 1 ≤ i ≤ N, the i-th occurrence of the integer i from the left in a is the x_i-th element of a from the left.\n\nConstraints\n\n* 1 ≤ N ≤ 500\n* 1 ≤ x_i ≤ N^2\n* All x_i are distinct.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nx_1 x_2 ... x_N\n\n\nOutput\n\nIf there does not exist an integer sequence a that satisfies all the conditions, print `No`. If there does exist such an sequence a, print `Yes` in the first line, then print an instance of a in the second line, with spaces inbetween.\n\nExamples\n\nInput\n\n3\n1 5 9\n\n\nOutput\n\nYes\n1 1 1 2 2 2 3 3 3\n\n\nInput\n\n2\n4 1\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p03155 AISing Programming Contest 2019 - Bulletin Board", "description": "It has been decided that a programming contest sponsored by company A will be held, so we will post the notice on a bulletin board.\n\nThe bulletin board is in the form of a grid with N rows and N columns, and the notice will occupy a rectangular region with H rows and W columns.\n\nHow many ways are there to choose where to put the notice so that it completely covers exactly HW squares?\n\nConstraints\n\n* 1 \\leq H, W \\leq N \\leq 100\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nH\nW\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3\n2\n3\n\n\nOutput\n\n2\n\n\nInput\n\n100\n1\n1\n\n\nOutput\n\n10000\n\n\nInput\n\n5\n4\n2\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "101_C. Vectors", "description": "At a geometry lesson Gerald was given a task: to get vector B out of vector A. Besides, the teacher permitted him to perform the following operations with vector А:\n\n  * Turn the vector by 90 degrees clockwise.\n  * Add to the vector a certain vector C.\n\n\n\nOperations could be performed in any order any number of times.\n\nCan Gerald cope with the task?\n\nInput\n\nThe first line contains integers x1 и y1 — the coordinates of the vector A ( - 108 ≤ x1, y1 ≤ 108). The second and the third line contain in the similar manner vectors B and C (their coordinates are integers; their absolute value does not exceed 108).\n\nOutput\n\nPrint \"YES\" (without the quotes) if it is possible to get vector B using the given operations. Otherwise print \"NO\" (without the quotes).\n\nExamples\n\nInput\n\n0 0\n1 1\n0 1\n\n\nOutput\n\nYES\n\n\nInput\n\n0 0\n1 1\n1 1\n\n\nOutput\n\nYES\n\n\nInput\n\n0 0\n1 1\n2 2\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p03629 AtCoder Regular Contest 081 - Don't Be a Subsequence", "description": "A subsequence of a string S is a string that can be obtained by deleting zero or more characters from S without changing the order of the remaining characters. For example, `arc`, `artistic` and (an empty string) are all subsequences of `artistic`; `abc` and `ci` are not.\n\nYou are given a string A consisting of lowercase English letters. Find the shortest string among the strings consisting of lowercase English letters that are not subsequences of A. If there are more than one such string, find the lexicographically smallest one among them.\n\nConstraints\n\n* 1 \\leq |A| \\leq 2 \\times 10^5\n* A consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA\n\n\nOutput\n\nPrint the lexicographically smallest string among the shortest strings consisting of lowercase English letters that are not subsequences of A.\n\nExamples\n\nInput\n\natcoderregularcontest\n\n\nOutput\n\nb\n\n\nInput\n\nabcdefghijklmnopqrstuvwxyz\n\n\nOutput\n\naa\n\n\nInput\n\nfrqnvhydscshfcgdemurlfrutcpzhopfotpifgepnqjxupnskapziurswqazdwnwbgdhyktfyhqqxpoidfhjdakoxraiedxskywuepzfniuyskxiyjpjlxuqnfgmnjcvtlpnclfkpervxmdbvrbrdn\n\n\nOutput\n\naca", "grammar": {"answer": null}}
{"name": "845_B. Luba And The Ticket", "description": "Luba has a ticket consisting of 6 digits. In one move she can choose digit in any position and replace it with arbitrary digit. She wants to know the minimum number of digits she needs to replace in order to make the ticket lucky.\n\nThe ticket is considered lucky if the sum of first three digits equals to the sum of last three digits.\n\nInput\n\nYou are given a string consisting of 6 characters (all characters are digits from 0 to 9) — this string denotes Luba's ticket. The ticket can start with the digit 0.\n\nOutput\n\nPrint one number — the minimum possible number of digits Luba needs to replace to make the ticket lucky.\n\nExamples\n\nInput\n\n000000\n\n\nOutput\n\n0\n\n\nInput\n\n123456\n\n\nOutput\n\n2\n\n\nInput\n\n111000\n\n\nOutput\n\n1\n\nNote\n\nIn the first example the ticket is already lucky, so the answer is 0.\n\nIn the second example Luba can replace 4 and 5 with zeroes, and the ticket will become lucky. It's easy to see that at least two replacements are required.\n\nIn the third example Luba can replace any zero with 3. It's easy to see that at least one replacement is required.", "grammar": {"answer": null}}
{"name": "p03494 AtCoder Beginner Contest 081 - Shift only", "description": "There are N positive integers written on a blackboard: A_1, ..., A_N.\n\nSnuke can perform the following operation when all integers on the blackboard are even:\n\n* Replace each integer X on the blackboard by X divided by 2.\n\n\n\nFind the maximum possible number of operations that Snuke can perform.\n\nConstraints\n\n* 1 \\leq N \\leq 200\n* 1 \\leq A_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the maximum possible number of operations that Snuke can perform.\n\nExamples\n\nInput\n\n3\n8 12 40\n\n\nOutput\n\n2\n\n\nInput\n\n4\n5 6 8 10\n\n\nOutput\n\n0\n\n\nInput\n\n6\n382253568 723152896 37802240 379425024 404894720 471526144\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "900_B. Position in Fraction", "description": "You have a fraction <image>. You need to find the first occurrence of digit c into decimal notation of the fraction after decimal point.\n\nInput\n\nThe first contains three single positive integers a, b, c (1 ≤ a < b ≤ 105, 0 ≤ c ≤ 9).\n\nOutput\n\nPrint position of the first occurrence of digit c into the fraction. Positions are numbered from 1 after decimal point. It there is no such position, print -1.\n\nExamples\n\nInput\n\n1 2 0\n\n\nOutput\n\n2\n\nInput\n\n2 3 7\n\n\nOutput\n\n-1\n\nNote\n\nThe fraction in the first example has the following decimal notation: <image>. The first zero stands on second position.\n\nThe fraction in the second example has the following decimal notation: <image>. There is no digit 7 in decimal notation of the fraction. ", "grammar": {"answer": null}}
{"name": "61_E. Enemy is weak", "description": "The Romans have attacked again. This time they are much more than the Persians but Shapur is ready to defeat them. He says: \"A lion is never afraid of a hundred sheep\". \n\nNevertheless Shapur has to find weaknesses in the Roman army to defeat them. So he gives the army a weakness number.\n\nIn Shapur's opinion the weakness of an army is equal to the number of triplets i, j, k such that i < j < k and ai > aj > ak where ax is the power of man standing at position x. The Roman army has one special trait — powers of all the people in it are distinct.\n\nHelp Shapur find out how weak the Romans are.\n\nInput\n\nThe first line of input contains a single number n (3 ≤ n ≤ 106) — the number of men in Roman army. Next line contains n different positive integers ai (1 ≤ i ≤ n, 1 ≤ ai ≤ 109) — powers of men in the Roman army. \n\nOutput\n\nA single integer number, the weakness of the Roman army. \n\nPlease, do not use %lld specificator to read or write 64-bit integers in C++. It is preffered to use cout (also you may use %I64d).\n\nExamples\n\nInput\n\n3\n3 2 1\n\n\nOutput\n\n1\n\n\nInput\n\n3\n2 3 1\n\n\nOutput\n\n0\n\n\nInput\n\n4\n10 8 3 1\n\n\nOutput\n\n4\n\n\nInput\n\n4\n1 5 4 3\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "440_A. Forgotten Episode", "description": "Polycarpus adores TV series. Right now he is ready to finish watching a season of a popular sitcom \"Graph Theory\". In total, the season has n episodes, numbered with integers from 1 to n.\n\nPolycarpus watches episodes not one by one but in a random order. He has already watched all the episodes except for one. Which episode has Polycaprus forgotten to watch?\n\nInput\n\nThe first line of the input contains integer n (2 ≤ n ≤ 100000) — the number of episodes in a season. Assume that the episodes are numbered by integers from 1 to n.\n\nThe second line contains n - 1 integer a1, a2, ..., an (1 ≤ ai ≤ n) — the numbers of episodes that Polycarpus has watched. All values of ai are distinct.\n\nOutput\n\nPrint the number of the episode that Polycarpus hasn't watched.\n\nExamples\n\nInput\n\n10\n3 8 10 1 7 9 6 5 2\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "447_A. DZY Loves Hash", "description": "DZY has a hash table with p buckets, numbered from 0 to p - 1. He wants to insert n numbers, in the order they are given, into the hash table. For the i-th number xi, DZY will put it into the bucket numbered h(xi), where h(x) is the hash function. In this problem we will assume, that h(x) = x mod p. Operation a mod b denotes taking a remainder after division a by b.\n\nHowever, each bucket can contain no more than one element. If DZY wants to insert an number into a bucket which is already filled, we say a \"conflict\" happens. Suppose the first conflict happens right after the i-th insertion, you should output i. If no conflict happens, just output -1.\n\nInput\n\nThe first line contains two integers, p and n (2 ≤ p, n ≤ 300). Then n lines follow. The i-th of them contains an integer xi (0 ≤ xi ≤ 109).\n\nOutput\n\nOutput a single integer — the answer to the problem.\n\nExamples\n\nInput\n\n10 5\n0\n21\n53\n41\n53\n\n\nOutput\n\n4\n\n\nInput\n\n5 5\n0\n1\n2\n3\n4\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "1270_F. Awesome Substrings", "description": "Let's call a binary string s awesome, if it has at least 1 symbol 1 and length of the string is divisible by the number of 1 in it. In particular, 1, 1010, 111 are awesome, but 0, 110, 01010 aren't.\n\nYou are given a binary string s. Count the number of its awesome substrings.\n\nA string a is a substring of a string b if a can be obtained from b by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.\n\nInput\n\nThe first line contains the string s (1 ≤ |s|≤ 200 000) consisting only of zeros and ones.\n\nOutput\n\nOutput a single number — the number of awesome substrings of s.\n\nExamples\n\nInput\n\n\n111\n\n\nOutput\n\n\n6\n\n\nInput\n\n\n01010\n\n\nOutput\n\n\n10\n\n\nInput\n\n\n0000\n\n\nOutput\n\n\n0\n\n\nInput\n\n\n1111100000\n\n\nOutput\n\n\n25\n\nNote\n\nIn the first sample, all substrings of s are awesome.\n\nIn the second sample, we have the following awesome substrings of s: 1 (2 times), 01 (2 times), 10 (2 times), 010 (2 times), 1010, 0101\n\nIn the third sample, no substring is awesome.", "grammar": {"answer": null}}
{"name": "p03721 AtCoder Beginner Contest 061 - Big Array", "description": "There is an empty array. The following N operations will be performed to insert integers into the array. In the i-th operation (1≤i≤N), b_i copies of an integer a_i are inserted into the array. Find the K-th smallest integer in the array after the N operations. For example, the 4-th smallest integer in the array \\\\{1,2,2,3,3,3\\\\} is 3.\n\nConstraints\n\n* 1≤N≤10^5\n* 1≤a_i,b_i≤10^5\n* 1≤K≤b_1…+…b_n\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\na_1 b_1\n:\na_N b_N\n\n\nOutput\n\nPrint the K-th smallest integer in the array after the N operations.\n\nExamples\n\nInput\n\n3 4\n1 1\n2 2\n3 3\n\n\nOutput\n\n3\n\n\nInput\n\n10 500000\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p02630 AtCoder Beginner Contest 171 - Replacing", "description": "You have a sequence A composed of N positive integers: A_{1}, A_{2}, \\cdots, A_{N}.\n\nYou will now successively do the following Q operations:\n\n* In the i-th operation, you replace every element whose value is B_{i} with C_{i}.\n\n\n\nFor each i (1 \\leq i \\leq Q), find S_{i}: the sum of all elements in A just after the i-th operation.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N, Q, A_{i}, B_{i}, C_{i} \\leq 10^{5}\n* B_{i} \\neq C_{i}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_{1} A_{2} \\cdots A_{N}\nQ\nB_{1} C_{1}\nB_{2} C_{2}\n\\vdots\nB_{Q} C_{Q}\n\n\nOutput\n\nPrint Q integers S_{i} to Standard Output in the following format:\n\n\nS_{1}\nS_{2}\n\\vdots\nS_{Q}\n\n\nNote that S_{i} may not fit into a 32-bit integer.\n\nExamples\n\nInput\n\n4\n1 2 3 4\n3\n1 2\n3 4\n2 4\n\n\nOutput\n\n11\n12\n16\n\n\nInput\n\n4\n1 1 1 1\n3\n1 2\n2 1\n3 5\n\n\nOutput\n\n8\n4\n4\n\n\nInput\n\n2\n1 2\n3\n1 100\n2 100\n100 1000\n\n\nOutput\n\n102\n200\n2000", "grammar": {"answer": null}}
{"name": "305_A. Strange Addition", "description": "Unfortunately, Vasya can only sum pairs of integers (a, b), such that for any decimal place at least one number has digit 0 in this place. For example, Vasya can sum numbers 505 and 50, but he cannot sum 1 and 4.\n\nVasya has a set of k distinct non-negative integers d1, d2, ..., dk.\n\nVasya wants to choose some integers from this set so that he could sum any two chosen numbers. What maximal number of integers can he choose in the required manner?\n\nInput\n\nThe first input line contains integer k (1 ≤ k ≤ 100) — the number of integers.\n\nThe second line contains k distinct space-separated integers d1, d2, ..., dk (0 ≤ di ≤ 100).\n\nOutput\n\nIn the first line print a single integer n the maximum number of the chosen integers. In the second line print n distinct non-negative integers — the required integers.\n\nIf there are multiple solutions, print any of them. You can print the numbers in any order.\n\nExamples\n\nInput\n\n4\n100 10 1 0\n\n\nOutput\n\n4\n0 1 10 100 \n\nInput\n\n3\n2 70 3\n\n\nOutput\n\n2\n2 70 ", "grammar": {"answer": null}}
{"name": "1188_C. Array Beauty", "description": "Let's call beauty of an array b_1, b_2, …, b_n (n > 1) — min_{1 ≤ i < j ≤ n} |b_i - b_j|.\n\nYou're given an array a_1, a_2, … a_n and a number k. Calculate the sum of beauty over all subsequences of the array of length exactly k. As this number can be very large, output it modulo 998244353.\n\nA sequence a is a subsequence of an array b if a can be obtained from b by deletion of several (possibly, zero or all) elements.\n\nInput\n\nThe first line contains integers n, k (2 ≤ k ≤ n ≤ 1000).\n\nThe second line contains n integers a_1, a_2, …, a_n (0 ≤ a_i ≤ 10^5).\n\nOutput\n\nOutput one integer — the sum of beauty over all subsequences of the array of length exactly k. As this number can be very large, output it modulo 998244353.\n\nExamples\n\nInput\n\n\n4 3\n1 7 3 5\n\n\nOutput\n\n\n8\n\nInput\n\n\n5 5\n1 10 100 1000 10000\n\n\nOutput\n\n\n9\n\nNote\n\nIn the first example, there are 4 subsequences of length 3 — [1, 7, 3], [1, 3, 5], [7, 3, 5], [1, 7, 5], each of which has beauty 2, so answer is 8.\n\nIn the second example, there is only one subsequence of length 5 — the whole array, which has the beauty equal to |10-1| = 9.", "grammar": {"answer": null}}
{"name": "39_D. Cubical Planet", "description": "You can find anything whatsoever in our Galaxy! A cubical planet goes round an icosahedral star. Let us introduce a system of axes so that the edges of the cubical planet are parallel to the coordinate axes and two opposite vertices lay in the points (0, 0, 0) and (1, 1, 1). Two flies live on the planet. At the moment they are sitting on two different vertices of the cubical planet. Your task is to determine whether they see each other or not. The flies see each other when the vertices they occupy lie on the same face of the cube.\n\nInput\n\nThe first line contains three space-separated integers (0 or 1) — the coordinates of the first fly, the second line analogously contains the coordinates of the second fly.\n\nOutput\n\nOutput \"YES\" (without quotes) if the flies see each other. Otherwise, output \"NO\".\n\nExamples\n\nInput\n\n0 0 0\n0 1 0\n\n\nOutput\n\nYES\n\n\nInput\n\n1 1 0\n0 1 0\n\n\nOutput\n\nYES\n\n\nInput\n\n0 0 0\n1 1 1\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p02111 Clock", "description": "Problem\n\nGaccho has his favorite watch. One day the minute hand of the clock came off and I lost it somewhere. However, Gaccho wants to keep using the watch and wants to read the time with only the short hand.\n\nOutput the time (hour h, minute m) for the information θ of the short hand. A clock is a so-called analog clock, in which numbers 1 to 12 are arranged clockwise at regular intervals in ascending order.\n\nConstraints\n\n* 0 ≤ θ ≤ 359\n\nInput\n\nThe input is given in the following format.\n\n\nθ\n\n\nAn integer representing the angle θ of the short hand is given in one line in degrees. The direction pointed by the short hand is the direction rotated by θ degrees clockwise when the direction pointing to 12 o'clock is 0 degrees.\n\nOutput\n\nThe time when the hour hand takes a given angle\nh m\nOutput in one line in the form of.\n\nSince there is no distinction between morning and afternoon in the time, 0 ≤ h ≤ 11 is set.\n\nExamples\n\nInput\n\n0\n\n\nOutput\n\n0 0\n\n\nInput\n\n45\n\n\nOutput\n\n1 30\n\n\nInput\n\n100\n\n\nOutput\n\n3 20", "grammar": {"answer": null}}
{"name": "40_C. Berland Square", "description": "Last year the world's largest square was built in Berland. It is known that the square can be represented as an infinite plane with an introduced Cartesian system of coordinates. On that square two sets of concentric circles were painted. Let's call the set of concentric circles with radii 1, 2, ..., K and the center in the point (z, 0) a (K, z)-set. Thus, on the square were painted a (N, x)-set and a (M, y)-set. You have to find out how many parts those sets divided the square into.\n\nInput\n\nThe first line contains integers N, x, M, y. (1 ≤ N, M ≤ 100000, - 100000 ≤ x, y ≤ 100000, x ≠ y).\n\nOutput\n\nPrint the sought number of parts.\n\nExamples\n\nInput\n\n1 0 1 1\n\n\nOutput\n\n4\n\n\nInput\n\n1 0 1 2\n\n\nOutput\n\n3\n\n\nInput\n\n3 3 4 7\n\n\nOutput\n\n17\n\nNote\n\nPicture for the third sample:\n\n<image>", "grammar": {"answer": null}}
{"name": "p03131 Yahoo Programming Contest 2019 - When I hit my pocket...", "description": "Snuke has one biscuit and zero Japanese yen (the currency) in his pocket. He will perform the following operations exactly K times in total, in the order he likes:\n\n* Hit his pocket, which magically increases the number of biscuits by one.\n* Exchange A biscuits to 1 yen.\n* Exchange 1 yen to B biscuits.\n\n\n\nFind the maximum possible number of biscuits in Snuke's pocket after K operations.\n\nConstraints\n\n* 1 \\leq K,A,B \\leq 10^9\n* K,A and B are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK A B\n\n\nOutput\n\nPrint the maximum possible number of biscuits in Snuke's pocket after K operations.\n\nExamples\n\nInput\n\n4 2 6\n\n\nOutput\n\n7\n\n\nInput\n\n7 3 4\n\n\nOutput\n\n8\n\n\nInput\n\n314159265 35897932 384626433\n\n\nOutput\n\n48518828981938099", "grammar": {"answer": null}}
{"name": "1036_C. Classy Numbers", "description": "Let's call some positive integer classy if its decimal representation contains no more than 3 non-zero digits. For example, numbers 4, 200000, 10203 are classy and numbers 4231, 102306, 7277420000 are not.\n\nYou are given a segment [L; R]. Count the number of classy integers x such that L ≤ x ≤ R.\n\nEach testcase contains several segments, for each of them you are required to solve the problem separately.\n\nInput\n\nThe first line contains a single integer T (1 ≤ T ≤ 10^4) — the number of segments in a testcase.\n\nEach of the next T lines contains two integers L_i and R_i (1 ≤ L_i ≤ R_i ≤ 10^{18}).\n\nOutput\n\nPrint T lines — the i-th line should contain the number of classy integers on a segment [L_i; R_i].\n\nExample\n\nInput\n\n4\n1 1000\n1024 1024\n65536 65536\n999999 1000001\n\n\nOutput\n\n1000\n1\n0\n2", "grammar": {"answer": null}}
{"name": "597_C. Subsequences", "description": "For the given sequence with n different elements find the number of increasing subsequences with k + 1 elements. It is guaranteed that the answer is not greater than 8·1018.\n\nInput\n\nFirst line contain two integer values n and k (1 ≤ n ≤ 105, 0 ≤ k ≤ 10) — the length of sequence and the number of elements in increasing subsequences.\n\nNext n lines contains one integer ai (1 ≤ ai ≤ n) each — elements of sequence. All values ai are different.\n\nOutput\n\nPrint one integer — the answer to the problem.\n\nExamples\n\nInput\n\n5 2\n1\n2\n3\n5\n4\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "p02973 AtCoder Beginner Contest 134 - Sequence Decomposing", "description": "You are given a sequence with N integers: A = \\\\{ A_1, A_2, \\cdots, A_N \\\\}. For each of these N integers, we will choose a color and paint the integer with that color. Here the following condition must be satisfied:\n\n* If A_i and A_j (i < j) are painted with the same color, A_i < A_j.\n\n\n\nFind the minimum number of colors required to satisfy the condition.\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* 0 \\leq A_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1\n:\nA_N\n\n\nOutput\n\nPrint the minimum number of colors required to satisfy the condition.\n\nExamples\n\nInput\n\n5\n2\n1\n4\n5\n3\n\n\nOutput\n\n2\n\n\nInput\n\n4\n0\n0\n0\n0\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p02925 AtCoder Beginner Contest 139 - League", "description": "N players will participate in a tennis tournament. We will call them Player 1, Player 2, \\ldots, Player N.\n\nThe tournament is round-robin format, and there will be N(N-1)/2 matches in total. Is it possible to schedule these matches so that all of the following conditions are satisfied? If the answer is yes, also find the minimum number of days required.\n\n* Each player plays at most one matches in a day.\n* Each player i (1 \\leq i \\leq N) plays one match against Player A_{i, 1}, A_{i, 2}, \\ldots, A_{i, N-1} in this order.\n\nConstraints\n\n* 3 \\leq N \\leq 1000\n* 1 \\leq A_{i, j} \\leq N\n* A_{i, j} \\neq i\n* A_{i, 1}, A_{i, 2}, \\ldots, A_{i, N-1} are all different.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_{1, 1} A_{1, 2} \\ldots A_{1, N-1}\nA_{2, 1} A_{2, 2} \\ldots A_{2, N-1}\n:\nA_{N, 1} A_{N, 2} \\ldots A_{N, N-1}\n\n\nOutput\n\nIf it is possible to schedule all the matches so that all of the conditions are satisfied, print the minimum number of days required; if it is impossible, print `-1`.\n\nExamples\n\nInput\n\n3\n2 3\n1 3\n1 2\n\n\nOutput\n\n3\n\n\nInput\n\n4\n2 3 4\n1 3 4\n4 1 2\n3 1 2\n\n\nOutput\n\n4\n\n\nInput\n\n3\n2 3\n3 1\n1 2\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "1288_B. Yet Another Meme Problem", "description": "Try guessing the statement from this picture <http://tiny.cc/ogyoiz>.\n\nYou are given two integers A and B, calculate the number of pairs (a, b) such that 1 ≤ a ≤ A, 1 ≤ b ≤ B, and the equation a ⋅ b + a + b = conc(a, b) is true; conc(a, b) is the concatenation of a and b (for example, conc(12, 23) = 1223, conc(100, 11) = 10011). a and b should not contain leading zeroes.\n\nInput\n\nThe first line contains t (1 ≤ t ≤ 100) — the number of test cases.\n\nEach test case contains two integers A and B (1 ≤ A, B ≤ 10^9).\n\nOutput\n\nPrint one integer — the number of pairs (a, b) such that 1 ≤ a ≤ A, 1 ≤ b ≤ B, and the equation a ⋅ b + a + b = conc(a, b) is true.\n\nExample\n\nInput\n\n\n3\n1 11\n4 2\n191 31415926\n\n\nOutput\n\n\n1\n0\n1337\n\nNote\n\nThere is only one suitable pair in the first test case: a = 1, b = 9 (1 + 9 + 1 ⋅ 9 = 19).", "grammar": {"answer": null}}
{"name": "p03201 AtCoder Grand Contest 029 - Powers of two", "description": "Takahashi has N balls with positive integers written on them. The integer written on the i-th ball is A_i. He would like to form some number of pairs such that the sum of the integers written on each pair of balls is a power of 2. Note that a ball cannot belong to multiple pairs. Find the maximum possible number of pairs that can be formed.\n\nHere, a positive integer is said to be a power of 2 when it can be written as 2^t using some non-negative integer t.\n\nConstraints\n\n* 1 \\leq N \\leq 2\\times 10^5\n* 1 \\leq A_i \\leq 10^9\n* A_i is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the maximum possible number of pairs such that the sum of the integers written on each pair of balls is a power of 2.\n\nExamples\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n1\n\n\nInput\n\n5\n3 11 14 5 13\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "1042_F. Leaf Sets", "description": "You are given an undirected tree, consisting of n vertices.\n\nThe vertex is called a leaf if it has exactly one vertex adjacent to it.\n\nThe distance between some pair of vertices is the number of edges in the shortest path between them.\n\nLet's call some set of leaves beautiful if the maximum distance between any pair of leaves in it is less or equal to k.\n\nYou want to split all leaves into non-intersecting beautiful sets. What is the minimal number of sets in such a split?\n\nInput\n\nThe first line contains two integers n and k (3 ≤ n ≤ 10^6, 1 ≤ k ≤ 10^6) — the number of vertices in the tree and the maximum distance between any pair of leaves in each beautiful set.\n\nEach of the next n - 1 lines contains two integers v_i and u_i (1 ≤ v_i, u_i ≤ n) — the description of the i-th edge. \n\nIt is guaranteed that the given edges form a tree.\n\nOutput\n\nPrint a single integer — the minimal number of beautiful sets the split can have. \n\nExamples\n\nInput\n\n9 3\n1 2\n1 3\n2 4\n2 5\n3 6\n6 7\n6 8\n3 9\n\n\nOutput\n\n2\n\n\nInput\n\n5 3\n1 2\n2 3\n3 4\n4 5\n\n\nOutput\n\n2\n\n\nInput\n\n6 1\n1 2\n1 3\n1 4\n1 5\n1 6\n\n\nOutput\n\n5\n\nNote\n\nHere is the graph for the first example:\n\n<image>", "grammar": {"answer": null}}
{"name": "133_A. HQ9+", "description": "HQ9+ is a joke programming language which has only four one-character instructions:\n\n  * \"H\" prints \"Hello, World!\",\n  * \"Q\" prints the source code of the program itself,\n  * \"9\" prints the lyrics of \"99 Bottles of Beer\" song, \n  * \"+\" increments the value stored in the internal accumulator.\n\n\n\nInstructions \"H\" and \"Q\" are case-sensitive and must be uppercase. The characters of the program which are not instructions are ignored.\n\nYou are given a program written in HQ9+. You have to figure out whether executing this program will produce any output.\n\nInput\n\nThe input will consist of a single line p which will give a program in HQ9+. String p will contain between 1 and 100 characters, inclusive. ASCII-code of each character of p will be between 33 (exclamation mark) and 126 (tilde), inclusive.\n\nOutput\n\nOutput \"YES\", if executing the program will produce any output, and \"NO\" otherwise.\n\nExamples\n\nInput\n\nHi!\n\n\nOutput\n\nYES\n\n\nInput\n\nCodeforces\n\n\nOutput\n\nNO\n\nNote\n\nIn the first case the program contains only one instruction — \"H\", which prints \"Hello, World!\".\n\nIn the second case none of the program characters are language instructions.", "grammar": {"answer": null}}
{"name": "1157_A. Reachable Numbers", "description": "Let's denote a function f(x) in such a way: we add 1 to x, then, while there is at least one trailing zero in the resulting number, we remove that zero. For example, \n\n  * f(599) = 6: 599 + 1 = 600 → 60 → 6; \n  * f(7) = 8: 7 + 1 = 8; \n  * f(9) = 1: 9 + 1 = 10 → 1; \n  * f(10099) = 101: 10099 + 1 = 10100 → 1010 → 101. \n\n\n\nWe say that some number y is reachable from x if we can apply function f to x some (possibly zero) times so that we get y as a result. For example, 102 is reachable from 10098 because f(f(f(10098))) = f(f(10099)) = f(101) = 102; and any number is reachable from itself.\n\nYou are given a number n; your task is to count how many different numbers are reachable from n.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 10^9).\n\nOutput\n\nPrint one integer: the number of different numbers that are reachable from n.\n\nExamples\n\nInput\n\n\n1098\n\n\nOutput\n\n\n20\n\n\nInput\n\n\n10\n\n\nOutput\n\n\n19\n\nNote\n\nThe numbers that are reachable from 1098 are:\n\n1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1098, 1099.", "grammar": {"answer": null}}
{"name": "p03179 Educational DP Contest - Permutation", "description": "Let N be a positive integer. You are given a string s of length N - 1, consisting of `<` and `>`.\n\nFind the number of permutations (p_1, p_2, \\ldots, p_N) of (1, 2, \\ldots, N) that satisfy the following condition, modulo 10^9 + 7:\n\n* For each i (1 \\leq i \\leq N - 1), p_i < p_{i + 1} if the i-th character in s is `<`, and p_i > p_{i + 1} if the i-th character in s is `>`.\n\nConstraints\n\n* N is an integer.\n* 2 \\leq N \\leq 3000\n* s is a string of length N - 1.\n* s consists of `<` and `>`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\ns\n\n\nOutput\n\nPrint the number of permutations that satisfy the condition, modulo 10^9 + 7.\n\nExamples\n\nInput\n\n4\n<><\n\n\nOutput\n\n5\n\n\nInput\n\n5\n<<<<\n\n\nOutput\n\n1\n\n\nInput\n\n20\n>>>><>>><>><>>><<>>\n\n\nOutput\n\n217136290", "grammar": {"answer": null}}
{"name": "p02587 AtCoder Beginner Contest 175 - Making Palindrome", "description": "We have N strings of lowercase English letters: S_1, S_2, \\cdots, S_N.\n\nTakahashi wants to make a string that is a palindrome by choosing one or more of these strings - the same string can be chosen more than once - and concatenating them in some order of his choice.\n\nThe cost of using the string S_i once is C_i, and the cost of using it multiple times is C_i multiplied by that number of times.\n\nFind the minimum total cost needed to choose strings so that Takahashi can make a palindrome.\n\nIf there is no choice of strings in which he can make a palindrome, print -1.\n\nConstraints\n\n* 1 \\leq N \\leq 50\n* 1 \\leq |S_i| \\leq 20\n* S_i consists of lowercase English letters.\n* 1 \\leq C_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS_1 C_1\nS_2 C_2\n:\nS_N C_N\n\n\nOutput\n\nPrint the minimum total cost needed to choose strings so that Takahashi can make a palindrome, or -1 if there is no such choice.\n\nExamples\n\nInput\n\n3\nba 3\nabc 4\ncbaa 5\n\n\nOutput\n\n7\n\n\nInput\n\n2\nabcab 5\ncba 3\n\n\nOutput\n\n11\n\n\nInput\n\n4\nab 5\ncba 3\na 12\nab 10\n\n\nOutput\n\n8\n\n\nInput\n\n2\nabc 1\nab 2\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p03759 AtCoder Beginner Contest 058 - ι⊥l", "description": "Three poles stand evenly spaced along a line. Their heights are a, b and c meters, from left to right. We will call the arrangement of the poles beautiful if the tops of the poles lie on the same line, that is, b-a = c-b.\n\nDetermine whether the arrangement of the poles is beautiful.\n\nConstraints\n\n* 1 \\leq a,b,c \\leq 100\n* a, b and c are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\na b c\n\n\nOutput\n\nPrint `YES` if the arrangement of the poles is beautiful; print `NO` otherwise.\n\nExamples\n\nInput\n\n2 4 6\n\n\nOutput\n\nYES\n\n\nInput\n\n2 5 6\n\n\nOutput\n\nNO\n\n\nInput\n\n3 2 1\n\n\nOutput\n\nYES", "grammar": {"answer": null}}
{"name": "p02998 AtCoder Beginner Contest 131 - Must Be Rectangular!", "description": "There are N dots in a two-dimensional plane. The coordinates of the i-th dot are (x_i, y_i).\n\nWe will repeat the following operation as long as possible:\n\n* Choose four integers a, b, c, d (a \\neq c, b \\neq d) such that there are dots at exactly three of the positions (a, b), (a, d), (c, b) and (c, d), and add a dot at the remaining position.\n\n\n\nWe can prove that we can only do this operation a finite number of times. Find the maximum number of times we can do the operation.\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* 1 \\leq x_i, y_i \\leq 10^5\n* If i \\neq j, x_i \\neq x_j or y_i \\neq y_j.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nx_1 y_1\n:\nx_N y_N\n\n\nOutput\n\nPrint the maximum number of times we can do the operation.\n\nExamples\n\nInput\n\n3\n1 1\n5 1\n5 5\n\n\nOutput\n\n1\n\n\nInput\n\n2\n10 10\n20 20\n\n\nOutput\n\n0\n\n\nInput\n\n9\n1 1\n2 1\n3 1\n4 1\n5 1\n1 2\n1 3\n1 4\n1 5\n\n\nOutput\n\n16", "grammar": {"answer": null}}
{"name": "441_E. Valera and Number", "description": "Valera is a coder. Recently he wrote a funny program. The pseudo code for this program is given below:\n    \n    \n      \n    //input: integers x, k, p  \n    a = x;  \n    for(step = 1; step <= k; step = step + 1){  \n        rnd = [random integer from 1 to 100];  \n        if(rnd <= p)  \n            a = a * 2;  \n        else  \n            a = a + 1;  \n    }  \n      \n    s = 0;  \n      \n    while(remainder after dividing a by 2 equals 0){  \n        a = a / 2;  \n        s = s + 1;  \n    }  \n      \n    \n\nNow Valera wonders: given the values x, k and p, what is the expected value of the resulting number s?\n\nInput\n\nThe first line of the input contains three integers x, k, p (1 ≤ x ≤ 109; 1 ≤ k ≤ 200; 0 ≤ p ≤ 100).\n\nOutput\n\nPrint the required expected value. Your answer will be considered correct if the absolute or relative error doesn't exceed 10 - 6.\n\nExamples\n\nInput\n\n1 1 50\n\n\nOutput\n\n1.0000000000000\n\n\nInput\n\n5 3 0\n\n\nOutput\n\n3.0000000000000\n\n\nInput\n\n5 3 25\n\n\nOutput\n\n1.9218750000000\n\nNote\n\nIf the concept of expected value is new to you, you can read about it by the link: \n\nhttp://en.wikipedia.org/wiki/Expected_value", "grammar": {"answer": null}}
{"name": "p02814 AtCoder Beginner Contest 150 - Semi Common Multiple", "description": "Given are a sequence A= {a_1,a_2,......a_N} of N positive even numbers, and an integer M.\n\nLet a semi-common multiple of A be a positive integer X that satisfies the following condition for every k (1 \\leq k \\leq N):\n\n* There exists a non-negative integer p such that X= a_k \\times (p+0.5).\n\n\n\nFind the number of semi-common multiples of A among the integers between 1 and M (inclusive).\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 10^9\n* 2 \\leq a_i \\leq 10^9\n* a_i is an even number.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the number of semi-common multiples of A among the integers between 1 and M (inclusive).\n\nExamples\n\nInput\n\n2 50\n6 10\n\n\nOutput\n\n2\n\n\nInput\n\n3 100\n14 22 40\n\n\nOutput\n\n0\n\n\nInput\n\n5 1000000000\n6 6 2 6 2\n\n\nOutput\n\n166666667", "grammar": {"answer": null}}
{"name": "228_A. Is your horseshoe on the other hoof?", "description": "Valera the Horse is going to the party with friends. He has been following the fashion trends for a while, and he knows that it is very popular to wear all horseshoes of different color. Valera has got four horseshoes left from the last year, but maybe some of them have the same color. In this case he needs to go to the store and buy some few more horseshoes, not to lose face in front of his stylish comrades.\n\nFortunately, the store sells horseshoes of all colors under the sun and Valera has enough money to buy any four of them. However, in order to save the money, he would like to spend as little money as possible, so you need to help Valera and determine what is the minimum number of horseshoes he needs to buy to wear four horseshoes of different colors to a party.\n\nInput\n\nThe first line contains four space-separated integers s1, s2, s3, s4 (1 ≤ s1, s2, s3, s4 ≤ 109) — the colors of horseshoes Valera has.\n\nConsider all possible colors indexed with integers.\n\nOutput\n\nPrint a single integer — the minimum number of horseshoes Valera needs to buy.\n\nExamples\n\nInput\n\n1 7 3 3\n\n\nOutput\n\n1\n\n\nInput\n\n7 7 7 7\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "1366_A. Shovels and Swords", "description": "Polycarp plays a well-known computer game (we won't mention its name). In this game, he can craft tools of two types — shovels and swords. To craft a shovel, Polycarp spends two sticks and one diamond; to craft a sword, Polycarp spends two diamonds and one stick.\n\nEach tool can be sold for exactly one emerald. How many emeralds can Polycarp earn, if he has a sticks and b diamonds?\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 1000) — the number of test cases.\n\nThe only line of each test case contains two integers a and b (0 ≤ a, b ≤ 10^9) — the number of sticks and the number of diamonds, respectively.\n\nOutput\n\nFor each test case print one integer — the maximum number of emeralds Polycarp can earn.\n\nExample\n\nInput\n\n\n4\n4 4\n1000000000 0\n7 15\n8 7\n\n\nOutput\n\n\n2\n0\n7\n5\n\nNote\n\nIn the first test case Polycarp can earn two emeralds as follows: craft one sword and one shovel.\n\nIn the second test case Polycarp does not have any diamonds, so he cannot craft anything.", "grammar": {"answer": null}}
{"name": "p03590 Tenka1 Programmer Beginner Contest - IntegerotS", "description": "Seisu-ya, a store specializing in non-negative integers, sells N non-negative integers. The i-th integer is A_i and has a utility of B_i. There may be multiple equal integers with different utilities.\n\nTakahashi will buy some integers in this store. He can buy a combination of integers whose bitwise OR is less than or equal to K. He wants the sum of utilities of purchased integers to be as large as possible.\n\nFind the maximum possible sum of utilities of purchased integers.\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* 0 \\leq K < 2^{30}\n* 0 \\leq A_i < 2^{30}(1\\leq i\\leq N)\n* 1 \\leq B_i \\leq 10^9(1\\leq i\\leq N)\n* All input values are integers.\n\nInputs\n\nInput is given from Standard Input in the following format:\n\n\nN K\nA_1 B_1\n:\nA_N B_N\n\n\nOutputs\n\nPrint the maximum possible sum of utilities of purchased integers.\n\nExamples\n\nInput\n\n3 5\n3 3\n4 4\n2 5\n\n\nOutput\n\n8\n\n\nInput\n\n3 6\n3 3\n4 4\n2 5\n\n\nOutput\n\n9\n\n\nInput\n\n7 14\n10 5\n7 4\n11 4\n9 8\n3 6\n6 2\n8 9\n\n\nOutput\n\n32", "grammar": {"answer": null}}
{"name": "1513_C. Add One", "description": "You are given an integer n. You have to apply m operations to it.\n\nIn a single operation, you must replace every digit d of the number with the decimal representation of integer d + 1. For example, 1912 becomes 21023 after applying the operation once.\n\nYou have to find the length of n after applying m operations. Since the answer can be very large, print it modulo 10^9+7.\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 2 ⋅ 10^5) — the number of test cases.\n\nThe only line of each test case contains two integers n (1 ≤ n ≤ 10^9) and m (1 ≤ m ≤ 2 ⋅ 10^5) — the initial number and the number of operations. \n\nOutput\n\nFor each test case output the length of the resulting number modulo 10^9+7.\n\nExample\n\nInput\n\n\n5\n1912 1\n5 6\n999 1\n88 2\n12 100\n\n\nOutput\n\n\n5\n2\n6\n4\n2115\n\nNote\n\nFor the first test, 1912 becomes 21023 after 1 operation which is of length 5.\n\nFor the second test, 5 becomes 21 after 6 operations which is of length 2.\n\nFor the third test, 999 becomes 101010 after 1 operation which is of length 6.\n\nFor the fourth test, 88 becomes 1010 after 2 operations which is of length 4.", "grammar": {"answer": null}}
{"name": "p02927 Japanese Student Championship 2019 Qualification - Takahashi Calendar", "description": "Today is August 24, one of the five Product Days in a year.\n\nA date m-d (m is the month, d is the date) is called a Product Day when d is a two-digit number, and all of the following conditions are satisfied (here d_{10} is the tens digit of the day and d_1 is the ones digit of the day):\n\n* d_1 \\geq 2\n* d_{10} \\geq 2\n* d_1 \\times d_{10} = m\n\n\n\nTakahashi wants more Product Days, and he made a new calendar called Takahashi Calendar where a year consists of M month from Month 1 to Month M, and each month consists of D days from Day 1 to Day D.\n\nIn Takahashi Calendar, how many Product Days does a year have?\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq M \\leq 100\n* 1 \\leq D \\leq 99\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nM D\n\n\nOutput\n\nPrint the number of Product Days in a year in Takahashi Calender.\n\nExamples\n\nInput\n\n15 40\n\n\nOutput\n\n10\n\n\nInput\n\n12 31\n\n\nOutput\n\n5\n\n\nInput\n\n1 1\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03605 AtCoder Beginner Contest 073 - September 9", "description": "It is September 9 in Japan now.\n\nYou are given a two-digit integer N. Answer the question: Is 9 contained in the decimal notation of N?\n\nConstraints\n\n* 10≤N≤99\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nIf 9 is contained in the decimal notation of N, print `Yes`; if not, print `No`.\n\nExamples\n\nInput\n\n29\n\n\nOutput\n\nYes\n\n\nInput\n\n72\n\n\nOutput\n\nNo\n\n\nInput\n\n91\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "p02469 Least Common Multiple", "description": "Find the least common multiple (LCM) of given n integers.\n\nConstraints\n\n* 2 ≤ n ≤ 10\n* 1 ≤ ai ≤ 1000\n* Product of given integers ai(i = 1, 2, ... n) does not exceed 231-1\n\nInput\n\n\nn\na1 a2 ... an\n\n\nn is given in the first line. Then, n integers are given in the second line.\n\nOutput\n\nPrint the least common multiple of the given integers in a line.\n\nExamples\n\nInput\n\n3\n3 4 6\n\n\nOutput\n\n12\n\n\nInput\n\n4\n1 2 3 5\n\n\nOutput\n\n30", "grammar": {"answer": null}}
{"name": "305_C. Ivan and Powers of Two", "description": "Ivan has got an array of n non-negative integers a1, a2, ..., an. Ivan knows that the array is sorted in the non-decreasing order. \n\nIvan wrote out integers 2a1, 2a2, ..., 2an on a piece of paper. Now he wonders, what minimum number of integers of form 2b (b ≥ 0) need to be added to the piece of paper so that the sum of all integers written on the paper equalled 2v - 1 for some integer v (v ≥ 0). \n\nHelp Ivan, find the required quantity of numbers.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 105). The second input line contains n space-separated integers a1, a2, ..., an (0 ≤ ai ≤ 2·109). It is guaranteed that a1 ≤ a2 ≤ ... ≤ an.\n\nOutput\n\nPrint a single integer — the answer to the problem.\n\nExamples\n\nInput\n\n4\n0 1 1 1\n\n\nOutput\n\n0\n\n\nInput\n\n1\n3\n\n\nOutput\n\n3\n\nNote\n\nIn the first sample you do not need to add anything, the sum of numbers already equals 23 - 1 = 7.\n\nIn the second sample you need to add numbers 20, 21, 22.", "grammar": {"answer": null}}
{"name": "p02919 AtCoder Beginner Contest 140 - Second Sum", "description": "Given is a permutation P of \\\\{1, 2, \\ldots, N\\\\}.\n\nFor a pair (L, R) (1 \\le L \\lt R \\le N), let X_{L, R} be the second largest value among P_L, P_{L+1}, \\ldots, P_R.\n\nFind \\displaystyle \\sum_{L=1}^{N-1} \\sum_{R=L+1}^{N} X_{L,R}.\n\nConstraints\n\n* 2 \\le N \\le 10^5\n* 1 \\le P_i \\le N\n* P_i \\neq P_j  (i \\neq j)\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nP_1 P_2 \\ldots P_N\n\n\nOutput\n\nPrint \\displaystyle \\sum_{L=1}^{N-1} \\sum_{R=L+1}^{N} X_{L,R}.\n\nExamples\n\nInput\n\n3\n2 3 1\n\n\nOutput\n\n5\n\n\nInput\n\n5\n1 2 3 4 5\n\n\nOutput\n\n30\n\n\nInput\n\n8\n8 2 7 3 4 5 6 1\n\n\nOutput\n\n136", "grammar": {"answer": null}}
{"name": "p03458 AtCoder Beginner Contest 086 - Checker", "description": "AtCoDeer is thinking of painting an infinite two-dimensional grid in a checked pattern of side K. Here, a checked pattern of side K is a pattern where each square is painted black or white so that each connected component of each color is a K × K square. Below is an example of a checked pattern of side 3:\n\ncba927b2484fad94fb5ff7473e9aadef.png\n\nAtCoDeer has N desires. The i-th desire is represented by x_i, y_i and c_i. If c_i is `B`, it means that he wants to paint the square (x_i,y_i) black; if c_i is `W`, he wants to paint the square (x_i,y_i) white. At most how many desires can he satisfy at the same time?\n\nConstraints\n\n* 1 ≤ N ≤ 10^5\n* 1 ≤ K ≤ 1000\n* 0 ≤ x_i ≤ 10^9\n* 0 ≤ y_i ≤ 10^9\n* If i ≠ j, then (x_i,y_i) ≠ (x_j,y_j).\n* c_i is `B` or `W`.\n* N, K, x_i and y_i are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nx_1 y_1 c_1\nx_2 y_2 c_2\n:\nx_N y_N c_N\n\n\nOutput\n\nPrint the maximum number of desires that can be satisfied at the same time.\n\nExamples\n\nInput\n\n4 3\n0 1 W\n1 2 W\n5 3 B\n5 4 B\n\n\nOutput\n\n4\n\n\nInput\n\n2 1000\n0 0 B\n0 1 W\n\n\nOutput\n\n2\n\n\nInput\n\n6 2\n1 2 B\n2 1 W\n2 2 B\n1 0 B\n0 6 W\n4 5 W\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p04005 AtCoder Grand Contest 004 - Divide a Cuboid", "description": "We have a rectangular parallelepiped of size A×B×C, built with blocks of size 1×1×1. Snuke will paint each of the A×B×C blocks either red or blue, so that:\n\n* There is at least one red block and at least one blue block.\n* The union of all red blocks forms a rectangular parallelepiped.\n* The union of all blue blocks forms a rectangular parallelepiped.\n\n\n\nSnuke wants to minimize the difference between the number of red blocks and the number of blue blocks. Find the minimum possible difference.\n\nConstraints\n\n* 2≤A,B,C≤10^9\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nA B C\n\n\nOutput\n\nPrint the minimum possible difference between the number of red blocks and the number of blue blocks.\n\nExamples\n\nInput\n\n3 3 3\n\n\nOutput\n\n9\n\n\nInput\n\n2 2 4\n\n\nOutput\n\n0\n\n\nInput\n\n5 3 5\n\n\nOutput\n\n15", "grammar": {"answer": null}}
{"name": "p00360 Swapping Characters", "description": "You are given a string and a number k. You are suggested to generate new strings by swapping any adjacent pair of characters in the string up to k times. Write a program to report the lexicographically smallest string among them.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\ns\nk\n\n\nThe first line provides a string s. The second line provides the maximum number of swapping operations k (0 ≤ k ≤ 109). The string consists solely of lower-case alphabetical letters and has a length between 1 and 2 × 105.\n\nOutput\n\nOutput the lexicographically smallest string.\n\nExamples\n\nInput\n\npckoshien\n3\n\n\nOutput\n\nckopshien\n\n\nInput\n\npckoshien\n10\n\n\nOutput\n\ncekophsin", "grammar": {"answer": null}}
{"name": "p02977 AtCoder Grand Contest 035 - Skolem XOR Tree", "description": "You are given an integer N. Determine if there exists a tree with 2N vertices numbered 1 to 2N satisfying the following condition, and show one such tree if the answer is yes.\n\n* Assume that, for each integer i between 1 and N (inclusive), Vertex i and N+i have the weight i. Then, for each integer i between 1 and N, the bitwise XOR of the weights of the vertices on the path between Vertex i and N+i (including themselves) is i.\n\nConstraints\n\n* N is an integer.\n* 1 \\leq N \\leq 10^{5}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nIf there exists a tree satisfying the condition in the statement, print `Yes`; otherwise, print `No`. Then, if such a tree exists, print the 2N-1 edges of such a tree in the subsequent 2N-1 lines, in the following format:\n\n\na_{1} b_{1}\n\\vdots\na_{2N-1} b_{2N-1}\n\n\nHere each pair (a_i, b_i) means that there is an edge connecting Vertex a_i and b_i. The edges may be printed in any order.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\nYes\n1 2\n2 3\n3 4\n4 5\n5 6\n\n\nInput\n\n1\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "1315_C. Restoring Permutation", "description": "You are given a sequence b_1, b_2, …, b_n. Find the lexicographically minimal permutation a_1, a_2, …, a_{2n} such that b_i = min(a_{2i-1}, a_{2i}), or determine that it is impossible.\n\nInput\n\nEach test contains one or more test cases. The first line contains the number of test cases t (1 ≤ t ≤ 100).\n\nThe first line of each test case consists of one integer n — the number of elements in the sequence b (1 ≤ n ≤ 100).\n\nThe second line of each test case consists of n different integers b_1, …, b_n — elements of the sequence b (1 ≤ b_i ≤ 2n).\n\nIt is guaranteed that the sum of n by all test cases doesn't exceed 100.\n\nOutput\n\nFor each test case, if there is no appropriate permutation, print one number -1.\n\nOtherwise, print 2n integers a_1, …, a_{2n} — required lexicographically minimal permutation of numbers from 1 to 2n.\n\nExample\n\nInput\n\n\n5\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n\n\nOutput\n\n\n1 2 \n-1\n4 5 1 2 3 6 \n-1\n1 3 5 6 7 9 2 4 8 10 ", "grammar": {"answer": null}}
{"name": "p00466 Receipt", "description": "problem\n\nTaro bought 10 books. Later, I tried to find out the price based on the receipt, but the receipt was dirty and I could not read the price of a book. We decided to calculate the price of the book from the total price of 10 books and the prices of the other 9 books.\n\nWrite a program that outputs the price of the book whose price could not be read. The prices of books are all positive integers. Also, there is no need to consider the consumption tax.\n\n\n\n\n\nExample\n\nInput\n\n9850\n1050\n800\n420\n380\n600\n820\n2400\n1800\n980\n0\n\n\nOutput\n\n600", "grammar": {"answer": null}}
{"name": "584_D. Dima and Lisa", "description": "Dima loves representing an odd number as the sum of multiple primes, and Lisa loves it when there are at most three primes. Help them to represent the given number as the sum of at most than three primes.\n\nMore formally, you are given an odd numer n. Find a set of numbers pi (1 ≤ i ≤ k), such that\n\n  1. 1 ≤ k ≤ 3\n  2. pi is a prime\n  3. <image>\n\n\n\nThe numbers pi do not necessarily have to be distinct. It is guaranteed that at least one possible solution exists.\n\nInput\n\nThe single line contains an odd number n (3 ≤ n < 109).\n\nOutput\n\nIn the first line print k (1 ≤ k ≤ 3), showing how many numbers are in the representation you found.\n\nIn the second line print numbers pi in any order. If there are multiple possible solutions, you can print any of them.\n\nExamples\n\nInput\n\n27\n\n\nOutput\n\n3\n5 11 11\n\nNote\n\nA prime is an integer strictly larger than one that is divisible only by one and by itself.", "grammar": {"answer": null}}
{"name": "p02190 Set", "description": "Set\n\nGiven the sequence a_1, a_2, .., a_N.\n\nHow many values ​​are there in this sequence?\n\ninput\n\n\nN\na_1 a_2 ... a_N\n\n\noutput\n\nOutput the number of types of values ​​in the sequence.\n\nConstraint\n\n* 1 \\ leq N \\ leq 10 ^ 5\n* 1 \\ leq a_i \\ leq 10 ^ 9\n\n\n\nInput example\n\n\n6\n8 6 9 1 2 1\n\n\nOutput example\n\n\nFive\n\n\n\n\n\n\nExample\n\nInput\n\n6\n8 6 9 1 2 1\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p01997 Right triangle", "description": "problem\n\nGiven the lengths of $ 2 $ sides that are not the hypotenuse of a right triangle, $ A $ and $ B $. The side of length $ A $ overlaps the $ x $ axis, and the side of length $ B $ overlaps the $ y $ axis.\n\nDo the following:\n\n1. Rotate the triangle around the $ x $ axis.\n2. Rotate the shape created by performing the operation $ 1 $ around the $ y $ axis.\n\n\n\nPerform the operation $ 2 $ to find the volume of the created figure.\n\n\n\noutput\n\nOutput the volume of the figure. Also, output a line break at the end. Absolute or relative errors less than $ 0.000001 $ are allowed.\n\nExample\n\nInput\n\n1 2\n\n\nOutput\n\n33.510322", "grammar": {"answer": null}}
{"name": "p03190 AtCoder Grand Contest 030 - Less than 3", "description": "You are given strings s and t, both of length N. s and t consist of `0` and `1`. Additionally, in these strings, the same character never occurs three or more times in a row.\n\nYou can modify s by repeatedly performing the following operation:\n\n* Choose an index i (1 \\leq i \\leq N) freely and invert the i-th character in s (that is, replace `0` with `1`, and `1` with `0`), under the condition that the same character would not occur three or more times in a row in s after the operation.\n\n\n\nYour objective is to make s equal to t. Find the minimum number of operations required.\n\nConstraints\n\n* 1 \\leq N \\leq 5000\n* The lengths of s and t are both N.\n* s and t consists of `0` and `1`.\n* In s and t, the same character never occurs three or more times in a row.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\ns\nt\n\n\nOutput\n\nFind the minimum number of operations required to make s equal to t. It can be proved that the objective is always achievable in a finite number of operations.\n\nExamples\n\nInput\n\n4\n0011\n0101\n\n\nOutput\n\n4\n\n\nInput\n\n1\n0\n0\n\n\nOutput\n\n0\n\n\nInput\n\n8\n00110011\n10101010\n\n\nOutput\n\n10", "grammar": {"answer": null}}
{"name": "p02633 AtCoder Grand Contest 046 - Takahashikun  The Strider", "description": "Takahashi is standing on a two-dimensional plane, facing north. Find the minimum positive integer K such that Takahashi will be at the starting position again after he does the following action K times:\n\n* Go one meter in the direction he is facing. Then, turn X degrees counter-clockwise.\n\nConstraints\n\n* 1 \\leq X \\leq 179\n* X is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX\n\n\nOutput\n\nPrint the number of times Takahashi will do the action before he is at the starting position again.\n\nExamples\n\nInput\n\n90\n\n\nOutput\n\n4\n\n\nInput\n\n1\n\n\nOutput\n\n360", "grammar": {"answer": null}}
{"name": "615_D. Multipliers", "description": "Ayrat has number n, represented as it's prime factorization pi of size m, i.e. n = p1·p2·...·pm. Ayrat got secret information that that the product of all divisors of n taken modulo 109 + 7 is the password to the secret data base. Now he wants to calculate this value.\n\nInput\n\nThe first line of the input contains a single integer m (1 ≤ m ≤ 200 000) — the number of primes in factorization of n. \n\nThe second line contains m primes numbers pi (2 ≤ pi ≤ 200 000).\n\nOutput\n\nPrint one integer — the product of all divisors of n modulo 109 + 7.\n\nExamples\n\nInput\n\n2\n2 3\n\n\nOutput\n\n36\n\n\nInput\n\n3\n2 3 2\n\n\nOutput\n\n1728\n\nNote\n\nIn the first sample n = 2·3 = 6. The divisors of 6 are 1, 2, 3 and 6, their product is equal to 1·2·3·6 = 36.\n\nIn the second sample 2·3·2 = 12. The divisors of 12 are 1, 2, 3, 4, 6 and 12. 1·2·3·4·6·12 = 1728.", "grammar": {"answer": null}}
{"name": "p03737 AtCoder Beginner Contest 059 - Three-letter acronym", "description": "You are given three words s_1, s_2 and s_3, each composed of lowercase English letters, with spaces in between. Print the acronym formed from the uppercased initial letters of the words.\n\nConstraints\n\n* s_1, s_2 and s_3 are composed of lowercase English letters.\n* 1 ≤ |s_i| ≤ 10 (1≤i≤3)\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\ns_1 s_2 s_3\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\natcoder beginner contest\n\n\nOutput\n\nABC\n\n\nInput\n\nresident register number\n\n\nOutput\n\nRRN\n\n\nInput\n\nk nearest neighbor\n\n\nOutput\n\nKNN\n\n\nInput\n\nasync layered coding\n\n\nOutput\n\nALC", "grammar": {"answer": null}}
{"name": "11_A. Increasing Sequence", "description": "A sequence a0, a1, ..., at - 1 is called increasing if ai - 1 < ai for each i: 0 < i < t.\n\nYou are given a sequence b0, b1, ..., bn - 1 and a positive integer d. In each move you may choose one element of the given sequence and add d to it. What is the least number of moves required to make the given sequence increasing?\n\nInput\n\nThe first line of the input contains two integer numbers n and d (2 ≤ n ≤ 2000, 1 ≤ d ≤ 106). The second line contains space separated sequence b0, b1, ..., bn - 1 (1 ≤ bi ≤ 106).\n\nOutput\n\nOutput the minimal number of moves needed to make the sequence increasing.\n\nExamples\n\nInput\n\n4 2\n1 3 3 2\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "1327_A. Sum of Odd Integers", "description": "You are given two integers n and k. Your task is to find if n can be represented as a sum of k distinct positive odd (not divisible by 2) integers or not.\n\nYou have to answer t independent test cases.\n\nInput\n\nThe first line of the input contains one integer t (1 ≤ t ≤ 10^5) — the number of test cases.\n\nThe next t lines describe test cases. The only line of the test case contains two integers n and k (1 ≤ n, k ≤ 10^7).\n\nOutput\n\nFor each test case, print the answer — \"YES\" (without quotes) if n can be represented as a sum of k distinct positive odd (not divisible by 2) integers and \"NO\" otherwise.\n\nExample\n\nInput\n\n\n6\n3 1\n4 2\n10 3\n10 2\n16 4\n16 5\n\n\nOutput\n\n\nYES\nYES\nNO\nYES\nYES\nNO\n\nNote\n\nIn the first test case, you can represent 3 as 3.\n\nIn the second test case, the only way to represent 4 is 1+3.\n\nIn the third test case, you cannot represent 10 as the sum of three distinct positive odd integers.\n\nIn the fourth test case, you can represent 10 as 3+7, for example.\n\nIn the fifth test case, you can represent 16 as 1+3+5+7.\n\nIn the sixth test case, you cannot represent 16 as the sum of five distinct positive odd integers.", "grammar": {"answer": null}}
{"name": "552_E. Vanya and Brackets", "description": "Vanya is doing his maths homework. He has an expression of form <image>, where x1, x2, ..., xn are digits from 1 to 9, and sign <image> represents either a plus '+' or the multiplication sign '*'. Vanya needs to add one pair of brackets in this expression so that to maximize the value of the resulting expression.\n\nInput\n\nThe first line contains expression s (1 ≤ |s| ≤ 5001, |s| is odd), its odd positions only contain digits from 1 to 9, and even positions only contain signs  +  and  * . \n\nThe number of signs  *  doesn't exceed 15.\n\nOutput\n\nIn the first line print the maximum possible value of an expression.\n\nExamples\n\nInput\n\n3+5*7+8*4\n\n\nOutput\n\n303\n\n\nInput\n\n2+3*5\n\n\nOutput\n\n25\n\n\nInput\n\n3*4*5\n\n\nOutput\n\n60\n\nNote\n\nNote to the first sample test. 3 + 5 * (7 + 8) * 4 = 303.\n\nNote to the second sample test. (2 + 3) * 5 = 25.\n\nNote to the third sample test. (3 * 4) * 5 = 60 (also many other variants are valid, for instance, (3) * 4 * 5 = 60).", "grammar": {"answer": null}}
{"name": "78_B. Easter Eggs", "description": "The Easter Rabbit laid n eggs in a circle and is about to paint them. \n\nEach egg should be painted one color out of 7: red, orange, yellow, green, blue, indigo or violet. Also, the following conditions should be satisfied:\n\n  * Each of the seven colors should be used to paint at least one egg. \n  * Any four eggs lying sequentially should be painted different colors. \n\n\n\nHelp the Easter Rabbit paint the eggs in the required manner. We know that it is always possible.\n\nInput\n\nThe only line contains an integer n — the amount of eggs (7 ≤ n ≤ 100).\n\nOutput\n\nPrint one line consisting of n characters. The i-th character should describe the color of the i-th egg in the order they lie in the circle. The colors should be represented as follows: \"R\" stands for red, \"O\" stands for orange, \"Y\" stands for yellow, \"G\" stands for green, \"B\" stands for blue, \"I\" stands for indigo, \"V\" stands for violet.\n\nIf there are several answers, print any of them.\n\nExamples\n\nInput\n\n8\n\n\nOutput\n\nROYGRBIV\n\n\nInput\n\n13\n\n\nOutput\n\nROYGBIVGBIVYG\n\nNote\n\nThe way the eggs will be painted in the first sample is shown on the picture: \n\n<image>", "grammar": {"answer": null}}
{"name": "p02696 AtCoder Beginner Contest 165 - Floor Function", "description": "Given are integers A, B, and N.\n\nFind the maximum possible value of floor(Ax/B) - A × floor(x/B) for a non-negative integer x not greater than N.\n\nHere floor(t) denotes the greatest integer not greater than the real number t.\n\nConstraints\n\n* 1 ≤ A ≤ 10^{6}\n* 1 ≤ B ≤ 10^{12}\n* 1 ≤ N ≤ 10^{12}\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B N\n\n\nOutput\n\nPrint the maximum possible value of floor(Ax/B) - A × floor(x/B) for a non-negative integer x not greater than N, as an integer.\n\nExamples\n\nInput\n\n5 7 4\n\n\nOutput\n\n2\n\n\nInput\n\n11 10 9\n\n\nOutput\n\n9", "grammar": {"answer": null}}
{"name": "p00312 Frog Going Straight", "description": "A frog is about to return to the burrow. The burrow is D centimeters ahead of the frog, and the frog goes straight toward the burrow. There are only two actions that a frog can do:\n\n* Large jump (go forward L centimeters)\n* Small jump (go 1 cm forward)\n\n\n\nThe frog aims to just land in the burrow without jumping over it.\n\nCreate a program that asks how many times a frog needs to jump to return to its burrow.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\nDL\n\n\nThe input is one line, given the distance D (1 ≤ D ≤ 10000) to the burrow and the distance L (2 ≤ L ≤ 10000) for the frog to travel on a large jump.\n\nOutput\n\nPrint on one line how many times the frog needs to jump.\n\nExamples\n\nInput\n\n10 5\n\n\nOutput\n\n2\n\n\nInput\n\n7 4\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p03318 AtCoder Beginner Contest 101 - Snuke Numbers", "description": "Let S(n) denote the sum of the digits in the decimal notation of n. For example, S(123) = 1 + 2 + 3 = 6.\n\nWe will call an integer n a Snuke number when, for all positive integers m such that m > n, \\frac{n}{S(n)} \\leq \\frac{m}{S(m)} holds.\n\nGiven an integer K, list the K smallest Snuke numbers.\n\nConstraints\n\n* 1 \\leq K\n* The K-th smallest Snuke number is not greater than 10^{15}.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK\n\n\nOutput\n\nPrint K lines. The i-th line should contain the i-th smallest Snuke number.\n\nExample\n\nInput\n\n10\n\n\nOutput\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n19", "grammar": {"answer": null}}
{"name": "p02270 Allocation", "description": "You are given $n$ packages of $w_i$ kg from a belt conveyor in order ($i = 0, 1, ... n-1$). You should load all packages onto $k$ trucks which have the common maximum load $P$. Each truck can load consecutive packages (more than or equals to zero) from the belt conveyor unless the total weights of the packages in the sequence does not exceed the maximum load $P$.\n\nWrite a program which reads $n$, $k$ and $w_i$, and reports the minimum value of the maximum load $P$ to load all packages from the belt conveyor.\n\nConstraints\n\n* $1 \\leq n \\leq 100,000$\n* $1 \\leq k \\leq 100,000$\n* $1 \\leq w_i \\leq 10,000$\n\nInput\n\nIn the first line, two integers $n$ and $k$ are given separated by a space character. In the following $n$ lines, $w_i$ are given respectively.\n\nOutput\n\nPrint the minimum value of $P$ in a line.\n\nExamples\n\nInput\n\n5 3\n8\n1\n7\n3\n9\n\n\nOutput\n\n10\n\n\nInput\n\n4 2\n1\n2\n2\n6\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p02381 Standard Deviation", "description": "You have final scores of an examination for n students. Calculate standard deviation of the scores s1, s2 ... sn.\n\nThe variance α2 is defined by\n\nα2 = (∑ni=1(si - m)2)/n\n\nwhere m is an average of si. The standard deviation of the scores is the square root of their variance.\n\nConstraints\n\n* n ≤ 1000\n* 0 ≤ si ≤ 100\n\nInput\n\nThe input consists of multiple datasets. Each dataset is given in the following format:\n\n\nn\ns1 s2 ... sn\n\n\nThe input ends with single zero for n.\n\nOutput\n\nFor each dataset, print the standard deviation in a line. The output should not contain an absolute error greater than 10-4.\n\nExample\n\nInput\n\n5\n70 80 100 90 20\n3\n80 80 80\n0\n\n\nOutput\n\n27.85677655\n0.00000000", "grammar": {"answer": null}}
{"name": "p02635 AtCoder Grand Contest 046 - Shift", "description": "Given is a string S consisting of `0` and `1`. Find the number of strings, modulo 998244353, that can result from applying the following operation on S between 0 and K times (inclusive):\n\n* Choose a pair of integers i, j (1\\leq i < j\\leq |S|) such that the i-th and j-th characters of S are `0` and `1`, respectively. Remove the j-th character from S and insert it to the immediate left of the i-th character.\n\nConstraints\n\n* 1 \\leq |S| \\leq 300\n* 0 \\leq K \\leq 10^9\n* S consists of `0` and `1`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS K\n\n\nOutput\n\nFind the number of strings, modulo 998244353, that can result from applying the operation on S between 0 and K times (inclusive).\n\nExamples\n\nInput\n\n0101 1\n\n\nOutput\n\n4\n\n\nInput\n\n01100110 2\n\n\nOutput\n\n14\n\n\nInput\n\n1101010010101101110111100011011111011000111101110101010010101010101 20\n\n\nOutput\n\n113434815", "grammar": {"answer": null}}
{"name": "p03386 AtCoder Beginner Contest 093 - Small and Large Integers", "description": "Print all the integers that satisfies the following in ascending order:\n\n* Among the integers between A and B (inclusive), it is either within the K smallest integers or within the K largest integers.\n\nConstraints\n\n* 1 \\leq A \\leq B \\leq 10^9\n* 1 \\leq K \\leq 100\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B K\n\n\nOutput\n\nPrint all the integers that satisfies the condition above in ascending order.\n\nExamples\n\nInput\n\n3 8 2\n\n\nOutput\n\n3\n4\n7\n8\n\n\nInput\n\n4 8 3\n\n\nOutput\n\n4\n5\n6\n7\n8\n\n\nInput\n\n2 9 100\n\n\nOutput\n\n2\n3\n4\n5\n6\n7\n8\n9", "grammar": {"answer": null}}
{"name": "p00591 Advanced Algorithm Class", "description": "In the advanced algorithm class, n2 students sit in n rows and n columns. One day, a professor who teaches this subject comes into the class, asks the shortest student in each row to lift up his left hand, and the tallest student in each column to lift up his right hand. What is the height of the student whose both hands are up ? The student will become a target for professor’s questions.\n\nGiven the size of the class, and the height of the students in the class, you have to print the height of the student who has both his hands up in the class.\n\n\n\nInput\n\nThe input will consist of several cases. the first line of each case will be n(0 < n < 100), the number of rows and columns in the class. It will then be followed by a n-by-n matrix, each row of the matrix appearing on a single line. Note that the elements of the matrix may not be necessarily distinct. The input will be terminated by the case n = 0.\n\nOutput\n\nFor each input case, you have to print the height of the student in the class whose both hands are up. If there is no such student, then print 0 for that case.\n\nExample\n\nInput\n\n3\n1 2 3\n4 5 6\n7 8 9\n3\n1 2 3\n7 8 9\n4 5 6\n0\n\n\nOutput\n\n7\n7", "grammar": {"answer": null}}
{"name": "705_A. Hulk", "description": "Dr. Bruce Banner hates his enemies (like others don't). As we all know, he can barely talk when he turns into the incredible Hulk. That's why he asked you to help him to express his feelings.\n\nHulk likes the Inception so much, and like that his feelings are complicated. They have n layers. The first layer is hate, second one is love, third one is hate and so on...\n\nFor example if n = 1, then his feeling is \"I hate it\" or if n = 2 it's \"I hate that I love it\", and if n = 3 it's \"I hate that I love that I hate it\" and so on.\n\nPlease help Dr. Banner.\n\nInput\n\nThe only line of the input contains a single integer n (1 ≤ n ≤ 100) — the number of layers of love and hate.\n\nOutput\n\nPrint Dr.Banner's feeling in one line.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\nI hate it\n\n\nInput\n\n2\n\n\nOutput\n\nI hate that I love it\n\n\nInput\n\n3\n\n\nOutput\n\nI hate that I love that I hate it", "grammar": {"answer": null}}
{"name": "p02443 Reverse", "description": "Write a program which reads a sequence of integers $A = \\\\{a_0, a_1, ..., a_{n-1}\\\\}$ and reverse specified elements by a list of the following operation:\n\n* reverse($b, e$): reverse the order of $a_b, a_{b+1}, ..., a_{e-1}$\n\nConstraints\n\n* $1 \\leq n \\leq 1,000$\n* $-1,000,000,000 \\leq a_i \\leq 1,000,000,000$\n* $1 \\leq q \\leq 1,000$\n* $0 \\leq b < e \\leq n$\n\nInput\n\nThe input is given in the following format.\n\n\n$n$\n$a_0 \\; a_1 \\; ...,\\; a_{n-1}$\n$q$\n$b_1 \\; e_1$\n$b_2 \\; e_2$\n:\n$b_{q} \\; b_{q}$\n\n\nIn the first line, $n$ (the number of elements in $A$) is given. In the second line, $a_i$ (each element in $A$) are given. In the third line, the number of queries $q$ is given and each query is given by two integers $b_i \\; e_i$ in the following $q$ lines.\n\nOutput\n\nPrint all elements of $A$ in a line after performing the given operations. Put a single space character between adjacency elements and a newline at the end of the last element.\n\nExample\n\nInput\n\n8\n1 2 3 4 5 6 7 8\n2\n1 6\n3 8\n\n\nOutput\n\n1 6 5 8 7 2 3 4", "grammar": {"answer": null}}
{"name": "p02841 Sumitomo Mitsui Trust Bank Programming Contest 2019 - November 30", "description": "In this problem, a date is written as Y-M-D. For example, 2019-11-30 means November 30, 2019.\n\nIntegers M_1, D_1, M_2, and D_2 will be given as input.\nIt is known that the date 2019-M_2-D_2 follows 2019-M_1-D_1.\nDetermine whether the date 2019-M_1-D_1 is the last day of a month.\n\nConstraints\n\n* Both 2019-M_1-D_1 and 2019-M_2-D_2 are valid dates in the Gregorian calendar.\n* The date 2019-M_2-D_2 follows 2019-M_1-D_1.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nM_1 D_1\nM_2 D_2\n\n\nOutput\n\nIf the date 2019-M_1-D_1 is the last day of a month, print `1`; otherwise, print `0`.\n\nExamples\n\nInput\n\n11 16\n11 17\n\n\nOutput\n\n0\n\n\nInput\n\n11 30\n12 1\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p02865 NIKKEI Programming Contest 2019-2 - Sum of Two Integers", "description": "How many ways are there to choose two distinct positive integers totaling N, disregarding the order?\n\nConstraints\n\n* 1 \\leq N \\leq 10^6\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n1\n\n\nInput\n\n999999\n\n\nOutput\n\n499999", "grammar": {"answer": null}}
{"name": "112_C. Petya and Inequiations", "description": "Little Petya loves inequations. Help him find n positive integers a1, a2, ..., an, such that the following two conditions are satisfied:\n\n  * a12 + a22 + ... + an2 ≥ x\n  * a1 + a2 + ... + an ≤ y\n\nInput\n\nThe first line contains three space-separated integers n, x and y (1 ≤ n ≤ 105, 1 ≤ x ≤ 1012, 1 ≤ y ≤ 106).\n\nPlease do not use the %lld specificator to read or write 64-bit integers in С++. It is recommended to use cin, cout streams or the %I64d specificator.\n\nOutput\n\nPrint n positive integers that satisfy the conditions, one integer per line. If such numbers do not exist, print a single number \"-1\". If there are several solutions, print any of them.\n\nExamples\n\nInput\n\n5 15 15\n\n\nOutput\n\n4\n4\n1\n1\n2\n\n\nInput\n\n2 3 2\n\n\nOutput\n\n-1\n\n\nInput\n\n1 99 11\n\n\nOutput\n\n11", "grammar": {"answer": null}}
{"name": "p02318 Edit Distance (Levenshtein Distance)", "description": "Find the edit distance between given two words s1 and s2.\n\nThe disntace is the minimum number of single-character edits required to change one word into the other. The edits including the following operations:\n\n* insertion: Insert a character at a particular position.\n* deletion: Delete a character at a particular position.\n* substitution: Change the character at a particular position to a different character\n\nConstraints\n\n* 1 ≤ length of s1 ≤ 1000\n* 1 ≤ length of s2 ≤ 1000\n\nInput\n\n\ns1\ns2\n\n\nTwo words s1 and s2 are given in the first line and the second line respectively. The words will consist of lower case characters.\n\nOutput\n\nPrint the edit distance in a line.\n\nExamples\n\nInput\n\nacac\nacm\n\n\nOutput\n\n2\n\n\nInput\n\nicpc\nicpc\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "1037_A. Packets", "description": "You have n coins, each of the same value of 1.\n\nDistribute them into packets such that any amount x (1 ≤ x ≤ n) can be formed using some (possibly one or all) number of these packets.\n\nEach packet may only be used entirely or not used at all. No packet may be used more than once in the formation of the single x, however it may be reused for the formation of other x's.\n\nFind the minimum number of packets in such a distribution.\n\nInput\n\nThe only line contains a single integer n (1 ≤ n ≤ 10^9) — the number of coins you have.\n\nOutput\n\nOutput a single integer — the minimum possible number of packets, satisfying the condition above.\n\nExamples\n\nInput\n\n6\n\n\nOutput\n\n3\n\nInput\n\n2\n\n\nOutput\n\n2\n\nNote\n\nIn the first example, three packets with 1, 2 and 3 coins can be made to get any amount x (1≤ x≤ 6).\n\n  * To get 1 use the packet with 1 coin. \n  * To get 2 use the packet with 2 coins. \n  * To get 3 use the packet with 3 coins. \n  * To get 4 use packets with 1 and 3 coins. \n  * To get 5 use packets with 2 and 3 coins \n  * To get 6 use all packets. \n\n\n\nIn the second example, two packets with 1 and 1 coins can be made to get any amount x (1≤ x≤ 2).", "grammar": {"answer": null}}
{"name": "710_E. Generate a String", "description": "zscoder wants to generate an input file for some programming competition problem.\n\nHis input is a string consisting of n letters 'a'. He is too lazy to write a generator so he will manually generate the input in a text editor.\n\nInitially, the text editor is empty. It takes him x seconds to insert or delete a letter 'a' from the text file and y seconds to copy the contents of the entire text file, and duplicate it.\n\nzscoder wants to find the minimum amount of time needed for him to create the input file of exactly n letters 'a'. Help him to determine the amount of time needed to generate the input.\n\nInput\n\nThe only line contains three integers n, x and y (1 ≤ n ≤ 107, 1 ≤ x, y ≤ 109) — the number of letters 'a' in the input file and the parameters from the problem statement.\n\nOutput\n\nPrint the only integer t — the minimum amount of time needed to generate the input file.\n\nExamples\n\nInput\n\n8 1 1\n\n\nOutput\n\n4\n\n\nInput\n\n8 1 10\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "288_C. Polo the Penguin and XOR operation", "description": "Little penguin Polo likes permutations. But most of all he likes permutations of integers from 0 to n, inclusive.\n\nFor permutation p = p0, p1, ..., pn, Polo has defined its beauty — number <image>.\n\nExpression <image> means applying the operation of bitwise excluding \"OR\" to numbers x and y. This operation exists in all modern programming languages, for example, in language C++ and Java it is represented as \"^\" and in Pascal — as \"xor\".\n\nHelp him find among all permutations of integers from 0 to n the permutation with the maximum beauty.\n\nInput\n\nThe single line contains a positive integer n (1 ≤ n ≤ 106).\n\nOutput\n\nIn the first line print integer m the maximum possible beauty. In the second line print any permutation of integers from 0 to n with the beauty equal to m.\n\nIf there are several suitable permutations, you are allowed to print any of them.\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n20\n0 2 1 4 3", "grammar": {"answer": null}}
{"name": "1198_F. GCD Groups 2", "description": "You are given an array of n integers. You need to split all integers into two groups so that the GCD of all integers in the first group is equal to one and the GCD of all integers in the second group is equal to one.\n\nThe GCD of a group of integers is the largest non-negative integer that divides all the integers in the group.\n\nBoth groups have to be non-empty.\n\nInput\n\nThe first line contains a single integer n (2 ≤ n ≤ 10^5).\n\nThe second line contains n integers a_1, a_2, …, a_n (1 ≤ a_i ≤ 10^9) — the elements of the array.\n\nOutput\n\nIn the first line print \"YES\" (without quotes), if it is possible to split the integers into two groups as required, and \"NO\" (without quotes) otherwise.\n\nIf it is possible to split the integers, in the second line print n integers, where the i-th integer is equal to 1 if the integer a_i should be in the first group, and 2 otherwise.\n\nIf there are multiple solutions, print any.\n\nExamples\n\nInput\n\n\n4\n2 3 6 7\n\n\nOutput\n\n\nYES\n2 2 1 1 \n\n\nInput\n\n\n5\n6 15 35 77 22\n\n\nOutput\n\n\nYES\n2 1 2 1 1 \n\n\nInput\n\n\n5\n6 10 15 1000 75\n\n\nOutput\n\n\nNO", "grammar": {"answer": null}}
{"name": "96_B. Lucky Numbers (easy)", "description": "Petya loves lucky numbers. Everybody knows that positive integers are lucky if their decimal representation doesn't contain digits other than 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.\n\nLucky number is super lucky if it's decimal representation contains equal amount of digits 4 and 7. For example, numbers 47, 7744, 474477 are super lucky and 4, 744, 467 are not.\n\nOne day Petya came across a positive integer n. Help him to find the least super lucky number which is not less than n.\n\nInput\n\nThe only line contains a positive integer n (1 ≤ n ≤ 109). This number doesn't have leading zeroes.\n\nOutput\n\nOutput the least super lucky number that is more than or equal to n.\n\nPlease, do not use the %lld specificator to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specificator.\n\nExamples\n\nInput\n\n4500\n\n\nOutput\n\n4747\n\n\nInput\n\n47\n\n\nOutput\n\n47", "grammar": {"answer": null}}
{"name": "p03137 AtCoder Beginner Contest 117 - Streamline", "description": "We will play a one-player game using a number line and N pieces.\n\nFirst, we place each of these pieces at some integer coordinate.\n\nHere, multiple pieces can be placed at the same coordinate.\n\nOur objective is to visit all of the M coordinates X_1, X_2, ..., X_M with these pieces, by repeating the following move:\n\nMove: Choose a piece and let x be its coordinate. Put that piece at coordinate x+1 or x-1.\n\nNote that the coordinates where we initially place the pieces are already regarded as visited.\n\nFind the minimum number of moves required to achieve the objective.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 10^5\n* -10^5 \\leq X_i \\leq 10^5\n* X_1, X_2, ..., X_M are all different.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nX_1 X_2 ... X_M\n\n\nOutput\n\nFind the minimum number of moves required to achieve the objective.\n\nExamples\n\nInput\n\n2 5\n10 12 1 2 14\n\n\nOutput\n\n5\n\n\nInput\n\n3 7\n-10 -3 0 9 -100 2 17\n\n\nOutput\n\n19\n\n\nInput\n\n100 1\n-100000\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02753 AtCoder Beginner Contest 158 - Station and Bus", "description": "In AtCoder City, there are three stations numbered 1, 2, and 3.\n\nEach of these stations is operated by one of the two railway companies, A and B. A string S of length 3 represents which company operates each station. If S_i is `A`, Company A operates Station i; if S_i is `B`, Company B operates Station i.\n\nTo improve the transportation condition, for each pair of a station operated by Company A and one operated by Company B, there will be a bus service connecting them.\n\nDetermine if there is a pair of stations that will be connected by a bus service.\n\nConstraints\n\n* Each character of S is `A` or `B`.\n* |S| = 3\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nIf there is a pair of stations that will be connected by a bus service, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\nABA\n\n\nOutput\n\nYes\n\n\nInput\n\nBBA\n\n\nOutput\n\nYes\n\n\nInput\n\nBBB\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p03564 AtCoder Beginner Contest 076 - Addition and Multiplication", "description": "Square1001 has seen an electric bulletin board displaying the integer 1. He can perform the following operations A and B to change this value:\n\n* Operation A: The displayed value is doubled.\n* Operation B: The displayed value increases by K.\n\n\n\nSquare1001 needs to perform these operations N times in total. Find the minimum possible value displayed in the board after N operations.\n\nConstraints\n\n* 1 \\leq N, K \\leq 10\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nK\n\n\nOutput\n\nPrint the minimum possible value displayed in the board after N operations.\n\nExamples\n\nInput\n\n4\n3\n\n\nOutput\n\n10\n\n\nInput\n\n10\n10\n\n\nOutput\n\n76", "grammar": {"answer": null}}
{"name": "840_D. Destiny", "description": "Once, Leha found in the left pocket an array consisting of n integers, and in the right pocket q queries of the form l r k. If there are queries, then they must be answered. Answer for the query is minimal x such that x occurs in the interval l r strictly more than <image> times or  - 1 if there is no such number. Help Leha with such a difficult task.\n\nInput\n\nFirst line of input data contains two integers n and q (1 ≤ n, q ≤ 3·105) — number of elements in the array and number of queries respectively.\n\nNext line contains n integers a1, a2, ..., an (1 ≤ ai ≤ n) — Leha's array.\n\nEach of next q lines contains three integers l, r and k (1 ≤ l ≤ r ≤ n, 2 ≤ k ≤ 5) — description of the queries.\n\nOutput\n\nOutput answer for each query in new line.\n\nExamples\n\nInput\n\n4 2\n1 1 2 2\n1 3 2\n1 4 2\n\n\nOutput\n\n1\n-1\n\n\nInput\n\n5 3\n1 2 1 3 2\n2 5 3\n1 2 3\n5 5 2\n\n\nOutput\n\n2\n1\n2", "grammar": {"answer": null}}
{"name": "p02983 AtCoder Beginner Contest 133 - Remainder Minimization 2019", "description": "You are given two non-negative integers L and R. We will choose two integers i and j such that L \\leq i < j \\leq R. Find the minimum possible value of (i \\times j) \\mbox{ mod } 2019.\n\nConstraints\n\n* All values in input are integers.\n* 0 \\leq L < R \\leq 2 \\times 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nL R\n\n\nOutput\n\nPrint the minimum possible value of (i \\times j) \\mbox{ mod } 2019 when i and j are chosen under the given condition.\n\nExamples\n\nInput\n\n2020 2040\n\n\nOutput\n\n2\n\n\nInput\n\n4 5\n\n\nOutput\n\n20", "grammar": {"answer": null}}
{"name": "p01869 28", "description": "Problem statement\n\nCards with ranks of $ 2 $ and $ 8 $ are powerful in card game millionaires. Therefore, we call an integer consisting of only the numbers $ 2 $ and $ 8 $ in $ 10 $ decimal notation a good integer. The best integers are listed from the smallest to $ 2, 8, 22, 28, 82, 88, \\ cdots $.\n\nLet $ n $ be a positive integer. When $ n $ can be expressed in the form of a product of good integers, find the maximum product. If you can't, output $ -1 $.\n\nConstraint\n\n$ 1 \\ leq n \\ leq 10 ^ {18} $\n\nsample\n\nSample input 1\n\n\n1\n\n\nSample output 1\n\n\n-1\n\n\nSample input 2\n\n\n2\n\n\nSample output 2\n\n\n1\n\n\nSample input 3\n\n\n88\n\n\nSample output 3\n\n\n3\n\n\nIt can be expressed as $ 2 \\ times 2 \\ times 22 $.\n\nSample input 4\n\n\n100\n\n\nSample output 4\n\n\n-1\n\n\nSample input 5\n\n\n173553147234869248\n\n\nSample output 5\n\n\n11\n\n\nIt can be expressed as $ 2 ^ 6 \\ times 28 \\ times 2222 ^ 3 \\ times 8828 $.\n\n\n\ninput\n\n$ n $\n\noutput\n\nPrint the answer on the $ 1 $ line.\n\nExample\n\nInput\n\n1\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p02567 AtCoder Library Practice Contest - Segment Tree", "description": "You are given an array a_0, a_1, ..., a_{N-1} of length N. Process Q queries of the following types.\n\nThe type of i-th query is represented by T_i.\n\n* T_i=1: You are given two integers X_i,V_i. Replace the value of A_{X_i} with V_i.\n* T_i=2: You are given two integers L_i,R_i. Calculate the maximum value among A_{L_i},A_{L_i+1},\\cdots,A_{R_i}.\n* T_i=3: You are given two integers X_i,V_i. Calculate the minimum j such that X_i \\leq j \\leq N, V_i \\leq A_j. If there is no such j, answer j=N+1 instead.\n\nConstraints\n\n* 1 \\leq N \\leq 2 \\times 10^5\n* 0 \\leq A_i \\leq 10^9\n* 1 \\leq Q \\leq 2 \\times 10^5\n* 1 \\leq T_i \\leq 3\n* 1 \\leq X_i \\leq N, 0 \\leq V_i \\leq 10^9 (T_i=1,3)\n* 1 \\leq L_i \\leq R_i \\leq N (T_i=2)\n* All values in Input are integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN Q\nA_1 A_2 \\cdots A_N\nFirst query\nSecond query\n\\vdots\nQ-th query\n\n\nEach query is given in the following format:\n\nIf T_i=1,3,\n\n\nT_i X_i V_i\n\n\nIf T_i=2,\n\n\nT_i L_i R_i\n\n\nOutput\n\nFor each query with T_i=2, 3, print the answer.\n\nExample\n\nInput\n\n5 5\n1 2 3 2 1\n2 1 5\n3 2 3\n1 3 1\n2 2 4\n3 1 3\n\n\nOutput\n\n3\n3\n2\n6", "grammar": {"answer": null}}
{"name": "p00937 Sibling Rivalry", "description": "Example\n\nInput\n\n3 3 1 2 4\n1 2\n2 3\n3 1\n\n\nOutput\n\nIMPOSSIBLE", "grammar": {"answer": null}}
{"name": "p03109 AtCoder Beginner Contest 119 - Still TBD", "description": "You are given a string S as input. This represents a valid date in the year 2019 in the `yyyy/mm/dd` format. (For example, April 30, 2019 is represented as `2019/04/30`.)\n\nWrite a program that prints `Heisei` if the date represented by S is not later than April 30, 2019, and prints `TBD` otherwise.\n\nConstraints\n\n* S is a string that represents a valid date in the year 2019 in the `yyyy/mm/dd` format.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint `Heisei` if the date represented by S is not later than April 30, 2019, and print `TBD` otherwise.\n\nExamples\n\nInput\n\n2019/04/30\n\n\nOutput\n\nHeisei\n\n\nInput\n\n2019/11/01\n\n\nOutput\n\nTBD", "grammar": {"answer": null}}
{"name": "p02435 Stack", "description": "Stack is a container of elements that are inserted and deleted according to LIFO (Last In First Out).\n\nFor $n$ stack $S_i$ ($i = 0, 1, ..., n-1$), perform a sequence of the following operations.\n\n* push($t$, $x$): Insert an integer $x$ to $S_t$.\n* top($t$): Report the value which should be deleted next from $S_t$. If $S_t$ is empty, do nothing.\n* pop($t$): Delete an element from $S_t$. If $S_t$ is empty, do nothing.\n\n\n\nIn the initial state, all stacks are empty.\n\nConstraints\n\n* $1 \\leq n \\leq 1,000$\n* $1 \\leq q \\leq 200,000$\n* $-1,000,000,000 \\leq x \\leq 1,000,000,000$\n\nInput\n\nThe input is given in the following format.\n\n\n$n \\; q$\n$query_1$\n$query_2$\n:\n$query_q$\n\n\nEach query $query_i$ is given by\n\n\n0 $t$ $x$\n\n\nor\n\n\n1 $t$\n\n\nor\n\n\n2 $t$\n\n\nwhere the first digits 0, 1 and 2 represent push, top and pop operations respectively.\n\nOutput\n\nFor each top operation, print an integer in a line.\n\nExample\n\nInput\n\n3 9\n0 0 1\n0 0 2\n0 0 3\n0 2 4\n0 2 5\n1 0\n1 2\n2 0\n1 0\n\n\nOutput\n\n3\n5\n2", "grammar": {"answer": null}}
{"name": "1003_A. Polycarp's Pockets", "description": "Polycarp has n coins, the value of the i-th coin is a_i. Polycarp wants to distribute all the coins between his pockets, but he cannot put two coins with the same value into the same pocket.\n\nFor example, if Polycarp has got six coins represented as an array a = [1, 2, 4, 3, 3, 2], he can distribute the coins into two pockets as follows: [1, 2, 3], [2, 3, 4].\n\nPolycarp wants to distribute all the coins with the minimum number of used pockets. Help him to do that.\n\nInput\n\nThe first line of the input contains one integer n (1 ≤ n ≤ 100) — the number of coins.\n\nThe second line of the input contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ 100) — values of coins.\n\nOutput\n\nPrint only one integer — the minimum number of pockets Polycarp needs to distribute all the coins so no two coins with the same value are put into the same pocket.\n\nExamples\n\nInput\n\n6\n1 2 4 3 3 2\n\n\nOutput\n\n2\n\n\nInput\n\n1\n100\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "171_G. Mysterious numbers - 2", "description": "\n\nInput\n\nThe only line of input contains three integers a1, a2, a3 (1 ≤ a1, a2, a3 ≤ 20), separated by spaces.\n\nOutput\n\nOutput a single integer.\n\nExamples\n\nInput\n\n2 3 2\n\n\nOutput\n\n5\n\n\nInput\n\n13 14 1\n\n\nOutput\n\n14\n\n\nInput\n\n14 5 9\n\n\nOutput\n\n464\n\n\nInput\n\n17 18 3\n\n\nOutput\n\n53", "grammar": {"answer": null}}
{"name": "723_A. The New Year: Meeting Friends", "description": "There are three friend living on the straight line Ox in Lineland. The first friend lives at the point x1, the second friend lives at the point x2, and the third friend lives at the point x3. They plan to celebrate the New Year together, so they need to meet at one point. What is the minimum total distance they have to travel in order to meet at some point and celebrate the New Year?\n\nIt's guaranteed that the optimal answer is always integer.\n\nInput\n\nThe first line of the input contains three distinct integers x1, x2 and x3 (1 ≤ x1, x2, x3 ≤ 100) — the coordinates of the houses of the first, the second and the third friends respectively. \n\nOutput\n\nPrint one integer — the minimum total distance the friends need to travel in order to meet together.\n\nExamples\n\nInput\n\n7 1 4\n\n\nOutput\n\n6\n\n\nInput\n\n30 20 10\n\n\nOutput\n\n20\n\nNote\n\nIn the first sample, friends should meet at the point 4. Thus, the first friend has to travel the distance of 3 (from the point 7 to the point 4), the second friend also has to travel the distance of 3 (from the point 1 to the point 4), while the third friend should not go anywhere because he lives at the point 4.", "grammar": {"answer": null}}
{"name": "p00006 Reverse Sequence", "description": "Write a program which reverses a given string str.\n\n\n\nInput\n\nstr (the size of str ≤ 20) is given in a line.\n\nOutput\n\nPrint the reversed str in a line.\n\nExample\n\nInput\n\nw32nimda\n\n\nOutput\n\nadmin23w", "grammar": {"answer": null}}
{"name": "p03854 AtCoder Beginner Contest 049 - Daydream", "description": "You are given a string S consisting of lowercase English letters. Another string T is initially empty. Determine whether it is possible to obtain S = T by performing the following operation an arbitrary number of times:\n\n* Append one of the following at the end of T: `dream`, `dreamer`, `erase` and `eraser`.\n\nConstraints\n\n* 1≦|S|≦10^5\n* S consists of lowercase English letters.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nIf it is possible to obtain S = T, print `YES`. Otherwise, print `NO`.\n\nExamples\n\nInput\n\nerasedream\n\n\nOutput\n\nYES\n\n\nInput\n\ndreameraser\n\n\nOutput\n\nYES\n\n\nInput\n\ndreamerer\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p02534 ACL Beginner Contest - Repeat ACL", "description": "You are given an integer K. Print the string obtained by repeating the string `ACL` K times and concatenating them.\n\nFor example, if K = 3, print `ACLACLACL`.\n\nConstraints\n\n* 1 \\leq K \\leq 5\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK\n\n\nOutput\n\nPrint the string obtained by repeating the string `ACL` K times and concatenating them.\n\nExample\n\nInput\n\n3\n\n\nOutput\n\nACLACLACL", "grammar": {"answer": null}}
{"name": "22_A. Second Order Statistics", "description": "Once Bob needed to find the second order statistics of a sequence of integer numbers. Lets choose each number from the sequence exactly once and sort them. The value on the second position is the second order statistics of the given sequence. In other words it is the smallest element strictly greater than the minimum. Help Bob solve this problem.\n\nInput\n\nThe first input line contains integer n (1 ≤ n ≤ 100) — amount of numbers in the sequence. The second line contains n space-separated integer numbers — elements of the sequence. These numbers don't exceed 100 in absolute value.\n\nOutput\n\nIf the given sequence has the second order statistics, output this order statistics, otherwise output NO.\n\nExamples\n\nInput\n\n4\n1 2 2 -4\n\n\nOutput\n\n1\n\n\nInput\n\n5\n1 2 3 1 1\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p03440 AtCoder Petrozavodsk Contest 001 - Forest", "description": "You are given a forest with N vertices and M edges. The vertices are numbered 0 through N-1. The edges are given in the format (x_i,y_i), which means that Vertex x_i and y_i are connected by an edge.\n\nEach vertex i has a value a_i. You want to add edges in the given forest so that the forest becomes connected. To add an edge, you choose two different vertices i and j, then span an edge between i and j. This operation costs a_i + a_j dollars, and afterward neither Vertex i nor j can be selected again.\n\nFind the minimum total cost required to make the forest connected, or print `Impossible` if it is impossible.\n\nConstraints\n\n* 1 ≤ N ≤ 100,000\n* 0 ≤ M ≤ N-1\n* 1 ≤ a_i ≤ 10^9\n* 0 ≤ x_i,y_i ≤ N-1\n* The given graph is a forest.\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\na_0 a_1 .. a_{N-1}\nx_1 y_1\nx_2 y_2\n:\nx_M y_M\n\n\nOutput\n\nPrint the minimum total cost required to make the forest connected, or print `Impossible` if it is impossible.\n\nExamples\n\nInput\n\n7 5\n1 2 3 4 5 6 7\n3 0\n4 0\n1 2\n1 3\n5 6\n\n\nOutput\n\n7\n\n\nInput\n\n5 0\n3 1 4 1 5\n\n\nOutput\n\nImpossible\n\n\nInput\n\n1 0\n5\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "558_E. A Simple Task", "description": "This task is very simple. Given a string S of length n and q queries each query is on the format i j k which means sort the substring consisting of the characters from i to j in non-decreasing order if k = 1 or in non-increasing order if k = 0.\n\nOutput the final string after applying the queries.\n\nInput\n\nThe first line will contain two integers n, q (1 ≤ n ≤ 105, 0 ≤ q ≤ 50 000), the length of the string and the number of queries respectively. \n\nNext line contains a string S itself. It contains only lowercase English letters.\n\nNext q lines will contain three integers each i, j, k (1 ≤ i ≤ j ≤ n, <image>).\n\nOutput\n\nOutput one line, the string S after applying the queries.\n\nExamples\n\nInput\n\n10 5\nabacdabcda\n7 10 0\n5 8 1\n1 4 0\n3 6 0\n7 10 1\n\n\nOutput\n\ncbcaaaabdd\n\nInput\n\n10 1\nagjucbvdfk\n1 10 1\n\n\nOutput\n\nabcdfgjkuv\n\nNote\n\nFirst sample test explanation:\n\n<image>\n\n<image>\n\n<image>\n\n<image>\n\n<image>", "grammar": {"answer": null}}
{"name": "p01887 Pipe Fitter and the Fierce Dogs", "description": "Example\n\nInput\n\n5 5 4\n6\n3 2\n4 2\n5 2\n1 4\n3 4\n5 4\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "320_D. Psychos in a Line", "description": "There are n psychos standing in a line. Each psycho is assigned a unique integer from 1 to n. At each step every psycho who has an id greater than the psycho to his right (if exists) kills his right neighbor in the line. Note that a psycho might kill and get killed at the same step. \n\nYou're given the initial arrangement of the psychos in the line. Calculate how many steps are needed to the moment of time such, that nobody kills his neighbor after that moment. Look notes to understand the statement more precise.\n\nInput\n\nThe first line of input contains integer n denoting the number of psychos, (1 ≤ n ≤ 105). In the second line there will be a list of n space separated distinct integers each in range 1 to n, inclusive — ids of the psychos in the line from left to right.\n\nOutput\n\nPrint the number of steps, so that the line remains the same afterward.\n\nExamples\n\nInput\n\n10\n10 9 7 8 6 5 3 4 2 1\n\n\nOutput\n\n2\n\n\nInput\n\n6\n1 2 3 4 5 6\n\n\nOutput\n\n0\n\nNote\n\nIn the first sample line of the psychos transforms as follows: [10 9 7 8 6 5 3 4 2 1]  →  [10 8 4] →  [10]. So, there are two steps.", "grammar": {"answer": null}}
{"name": "1520_D. Same Differences", "description": "You are given an array a of n integers. Count the number of pairs of indices (i, j) such that i < j and a_j - a_i = j - i.\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 10^4). Then t test cases follow.\n\nThe first line of each test case contains one integer n (1 ≤ n ≤ 2 ⋅ 10^5).\n\nThe second line of each test case contains n integers a_1, a_2, …, a_n (1 ≤ a_i ≤ n) — array a.\n\nIt is guaranteed that the sum of n over all test cases does not exceed 2 ⋅ 10^5.\n\nOutput\n\nFor each test case output the number of pairs of indices (i, j) such that i < j and a_j - a_i = j - i.\n\nExample\n\nInput\n\n\n4\n6\n3 5 1 4 6 6\n3\n1 2 3\n4\n1 3 3 4\n6\n1 6 3 4 5 6\n\n\nOutput\n\n\n1\n3\n3\n10", "grammar": {"answer": null}}
{"name": "p00927 Space Golf", "description": "Example\n\nInput\n\n100 1 0\n50 100\n\n\nOutput\n\n14.57738", "grammar": {"answer": null}}
{"name": "p03970 CODE FESTIVAL 2016 qual B - Signboard", "description": "CODE FESTIVAL 2016 is going to be held. For the occasion, Mr. Takahashi decided to make a signboard.\n\nHe intended to write `CODEFESTIVAL2016` on it, but he mistakenly wrote a different string S. Fortunately, the string he wrote was the correct length.\n\nSo Mr. Takahashi decided to perform an operation that replaces a certain character with another in the minimum number of iterations, changing the string to `CODEFESTIVAL2016`.\n\nFind the minimum number of iterations for the rewrite operation.\n\nConstraints\n\n* S is 16 characters long.\n* S consists of uppercase and lowercase alphabet letters and numerals.\n\nInput\n\nInputs are provided from Standard Input in the following form.\n\n\nS\n\n\nOutput\n\nOutput an integer representing the minimum number of iterations needed for the rewrite operation.\n\nExamples\n\nInput\n\nC0DEFESTIVAL2O16\n\n\nOutput\n\n2\n\n\nInput\n\nFESTIVAL2016CODE\n\n\nOutput\n\n16", "grammar": {"answer": null}}
{"name": "p02012 Sum of QQ", "description": "You received a card with an integer $S$ and a multiplication table of infinite size. All the elements in the table are integers, and an integer at the $i$-th row from the top and the $j$-th column from the left is $A_{i,j} = i \\times j$ ($i,j \\geq 1$). The table has infinite size, i.e., the number of the rows and the number of the columns are infinite.\n\nYou love rectangular regions of the table in which the sum of numbers is $S$. Your task is to count the number of integer tuples $(a, b, c, d)$ that satisfies $1 \\leq a \\leq b, 1 \\leq c \\leq d$ and $\\sum_{i=a}^b \\sum_{j=c}^d A_{i,j} = S$.\n\n\n\nInput\n\nThe input consists of a single test case of the following form.\n\n\n$S$\n\n\nThe first line consists of one integer $S$ ($1 \\leq S \\leq 10^5$), representing the summation of rectangular regions you have to find.\n\nOutput\n\nPrint the number of rectangular regions whose summation is $S$ in one line.\n\nExamples\n\nInput\n\n25\n\n\nOutput\n\n10\n\n\nInput\n\n1\n\n\nOutput\n\n1\n\n\nInput\n\n5\n\n\nOutput\n\n4\n\n\nInput\n\n83160\n\n\nOutput\n\n5120", "grammar": {"answer": null}}
{"name": "691_A. Fashion in Berland", "description": "According to rules of the Berland fashion, a jacket should be fastened by all the buttons except only one, but not necessarily it should be the last one. Also if the jacket has only one button, it should be fastened, so the jacket will not swinging open.\n\nYou are given a jacket with n buttons. Determine if it is fastened in a right way.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 1000) — the number of buttons on the jacket.\n\nThe second line contains n integers ai (0 ≤ ai ≤ 1). The number ai = 0 if the i-th button is not fastened. Otherwise ai = 1.\n\nOutput\n\nIn the only line print the word \"YES\" if the jacket is fastened in a right way. Otherwise print the word \"NO\".\n\nExamples\n\nInput\n\n3\n1 0 1\n\n\nOutput\n\nYES\n\n\nInput\n\n3\n1 0 0\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p02908 AtCoder Grand Contest 038 - Two Permutations", "description": "Snuke has permutations (P_0,P_1,\\cdots,P_{N-1}) and (Q_0,Q_1,\\cdots,Q_{N-1}) of (0,1,\\cdots,N-1).\n\nNow, he will make new permutations A and B of (0,1,\\cdots,N-1), under the following conditions:\n\n* For each i (0 \\leq i \\leq N-1), A_i should be i or P_i.\n* For each i (0 \\leq i \\leq N-1), B_i should be i or Q_i.\n\n\n\nLet us define the distance of permutations A and B as the number of indices i such that A_i \\neq B_i. Find the maximum possible distance of A and B.\n\nConstraints\n\n* 1 \\leq N \\leq 100000\n* 0 \\leq P_i \\leq N-1\n* P_0,P_1,\\cdots,P_{N-1} are all different.\n* 0 \\leq Q_i \\leq N-1\n* Q_0,Q_1,\\cdots,Q_{N-1} are all different.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nP_0 P_1 \\cdots P_{N-1}\nQ_0 Q_1 \\cdots Q_{N-1}\n\n\nOutput\n\nPrint the maximum possible distance of A and B.\n\nExamples\n\nInput\n\n4\n2 1 3 0\n0 2 3 1\n\n\nOutput\n\n3\n\n\nInput\n\n10\n0 4 5 3 7 8 2 1 9 6\n3 8 5 6 4 0 2 1 7 9\n\n\nOutput\n\n8\n\n\nInput\n\n32\n22 31 30 29 7 17 16 3 14 9 19 11 2 5 10 1 25 18 15 24 20 0 12 21 27 4 26 28 8 6 23 13\n22 3 2 7 17 9 16 4 14 8 19 26 28 5 10 1 25 18 15 13 11 0 12 23 21 20 29 24 27 6 30 31\n\n\nOutput\n\n28", "grammar": {"answer": null}}
{"name": "1400_E. Clear the Multiset", "description": "You have a multiset containing several integers. Initially, it contains a_1 elements equal to 1, a_2 elements equal to 2, ..., a_n elements equal to n.\n\nYou may apply two types of operations:\n\n  * choose two integers l and r (l ≤ r), then remove one occurrence of l, one occurrence of l + 1, ..., one occurrence of r from the multiset. This operation can be applied only if each number from l to r occurs at least once in the multiset; \n  * choose two integers i and x (x ≥ 1), then remove x occurrences of i from the multiset. This operation can be applied only if the multiset contains at least x occurrences of i. \n\n\n\nWhat is the minimum number of operations required to delete all elements from the multiset?\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 5000).\n\nThe second line contains n integers a_1, a_2, ..., a_n (0 ≤ a_i ≤ 10^9).\n\nOutput\n\nPrint one integer — the minimum number of operations required to delete all elements from the multiset.\n\nExamples\n\nInput\n\n\n4\n1 4 1 1\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n5\n1 0 1 0 1\n\n\nOutput\n\n\n3", "grammar": {"answer": null}}
{"name": "784_A. Numbers Joke", "description": "\n\nInput\n\nThe input contains a single integer a (1 ≤ a ≤ 30).\n\nOutput\n\nOutput a single integer.\n\nExample\n\nInput\n\n3\n\n\nOutput\n\n27", "grammar": {"answer": null}}
{"name": "p01821 Identity Function", "description": "Example\n\nInput\n\n3\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "656_A. Da Vinci Powers", "description": "\n\nInput\n\nThe input contains a single integer a (0 ≤ a ≤ 35).\n\nOutput\n\nOutput a single integer.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n8\n\n\nInput\n\n10\n\n\nOutput\n\n1024", "grammar": {"answer": null}}
{"name": "388_D. Fox and Perfect Sets", "description": "Fox Ciel studies number theory.\n\nShe thinks a non-empty set S contains non-negative integers is perfect if and only if for any <image> (a can be equal to b), <image>. Where operation xor means exclusive or operation (http://en.wikipedia.org/wiki/Exclusive_or).\n\nPlease calculate the number of perfect sets consisting of integers not greater than k. The answer can be very large, so print it modulo 1000000007 (109 + 7).\n\nInput\n\nThe first line contains an integer k (0 ≤ k ≤ 109).\n\nOutput\n\nPrint a single integer — the number of required sets modulo 1000000007 (109 + 7).\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n2\n\n\nInput\n\n2\n\n\nOutput\n\n3\n\n\nInput\n\n3\n\n\nOutput\n\n5\n\n\nInput\n\n4\n\n\nOutput\n\n6\n\nNote\n\nIn example 1, there are 2 such sets: {0} and {0, 1}. Note that {1} is not a perfect set since 1 xor 1 = 0 and {1} doesn't contain zero.\n\nIn example 4, there are 6 such sets: {0}, {0, 1}, {0, 2}, {0, 3}, {0, 4} and {0, 1, 2, 3}.", "grammar": {"answer": null}}
{"name": "p03072 AtCoder Beginner Contest 124 - Great Ocean View", "description": "There are N mountains ranging from east to west, and an ocean to the west.\n\nAt the top of each mountain, there is an inn. You have decided to choose where to stay from these inns.\n\nThe height of the i-th mountain from the west is H_i.\n\nYou can certainly see the ocean from the inn at the top of the westmost mountain.\n\nFor the inn at the top of the i-th mountain from the west (i = 2, 3, ..., N), you can see the ocean if and only if H_1 \\leq H_i, H_2 \\leq H_i, ..., and H_{i-1} \\leq H_i.\n\nFrom how many of these N inns can you see the ocean?\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 20\n* 1 \\leq H_i \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nH_1 H_2 ... H_N\n\n\nOutput\n\nPrint the number of inns from which you can see the ocean.\n\nExamples\n\nInput\n\n4\n6 5 6 8\n\n\nOutput\n\n3\n\n\nInput\n\n5\n4 5 3 5 4\n\n\nOutput\n\n3\n\n\nInput\n\n5\n9 5 6 8 4\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "1389_A. LCM Problem", "description": "Let LCM(x, y) be the minimum positive integer that is divisible by both x and y. For example, LCM(13, 37) = 481, LCM(9, 6) = 18.\n\nYou are given two integers l and r. Find two integers x and y such that l ≤ x < y ≤ r and l ≤ LCM(x, y) ≤ r.\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 10000) — the number of test cases.\n\nEach test case is represented by one line containing two integers l and r (1 ≤ l < r ≤ 10^9).\n\nOutput\n\nFor each test case, print two integers:\n\n  * if it is impossible to find integers x and y meeting the constraints in the statement, print two integers equal to -1; \n  * otherwise, print the values of x and y (if there are multiple valid answers, you may print any of them). \n\nExample\n\nInput\n\n\n4\n1 1337\n13 69\n2 4\n88 89\n\n\nOutput\n\n\n6 7\n14 21\n2 4\n-1 -1", "grammar": {"answer": null}}
{"name": "959_A. Mahmoud and Ehab and the even-odd game", "description": "Mahmoud and Ehab play a game called the even-odd game. Ehab chooses his favorite integer n and then they take turns, starting from Mahmoud. In each player's turn, he has to choose an integer a and subtract it from n such that:\n\n  * 1 ≤ a ≤ n. \n  * If it's Mahmoud's turn, a has to be even, but if it's Ehab's turn, a has to be odd. \n\n\n\nIf the current player can't choose any number satisfying the conditions, he loses. Can you determine the winner if they both play optimally?\n\nInput\n\nThe only line contains an integer n (1 ≤ n ≤ 109), the number at the beginning of the game.\n\nOutput\n\nOutput \"Mahmoud\" (without quotes) if Mahmoud wins and \"Ehab\" (without quotes) otherwise.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\nEhab\n\nInput\n\n2\n\n\nOutput\n\nMahmoud\n\nNote\n\nIn the first sample, Mahmoud can't choose any integer a initially because there is no positive even integer less than or equal to 1 so Ehab wins.\n\nIn the second sample, Mahmoud has to choose a = 2 and subtract it from n. It's Ehab's turn and n = 0. There is no positive odd integer less than or equal to 0 so Mahmoud wins.", "grammar": {"answer": null}}
{"name": "432_C. Prime Swaps", "description": "You have an array a[1], a[2], ..., a[n], containing distinct integers from 1 to n. Your task is to sort this array in increasing order with the following operation (you may need to apply it multiple times):\n\n  * choose two indexes, i and j (1 ≤ i < j ≤ n; (j - i + 1) is a prime number); \n  * swap the elements on positions i and j; in other words, you are allowed to apply the following sequence of assignments: tmp = a[i], a[i] = a[j], a[j] = tmp (tmp is a temporary variable). \n\n\n\nYou do not need to minimize the number of used operations. However, you need to make sure that there are at most 5n operations.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 105). The next line contains n distinct integers a[1], a[2], ..., a[n] (1 ≤ a[i] ≤ n).\n\nOutput\n\nIn the first line, print integer k (0 ≤ k ≤ 5n) — the number of used operations. Next, print the operations. Each operation must be printed as \"i j\" (1 ≤ i < j ≤ n; (j - i + 1) is a prime).\n\nIf there are multiple answers, you can print any of them.\n\nExamples\n\nInput\n\n3\n3 2 1\n\n\nOutput\n\n1\n1 3\n\n\nInput\n\n2\n1 2\n\n\nOutput\n\n0\n\n\nInput\n\n4\n4 2 3 1\n\n\nOutput\n\n3\n2 4\n1 2\n2 4", "grammar": {"answer": null}}
{"name": "p00376 Red Dragonfly", "description": "It’s still hot every day, but September has already come. It’s autumn according to the calendar. Looking around, I see two red dragonflies at rest on the wall in front of me. It’s autumn indeed.\n\nWhen two red dragonflies’ positional information as measured from the end of the wall is given, make a program to calculate the distance between their heads.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\n$x_1$ $x_2$\n\n\nThe input line provides dragonflies’ head positions $x_1$ and $x_2$ ($0 \\leq x_1, x_2 \\leq 100$) as integers.\n\nOutput\n\nOutput the distance between the two red dragonflies in a line.\n\nExamples\n\nInput\n\n20 30\n\n\nOutput\n\n10\n\n\nInput\n\n50 25\n\n\nOutput\n\n25\n\n\nInput\n\n25 25\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02575 AtCoder Beginner Contest 177 - I hate Shortest Path Problem", "description": "There is a grid of squares with H+1 horizontal rows and W vertical columns.\n\nYou will start at one of the squares in the top row and repeat moving one square right or down. However, for each integer i from 1 through H, you cannot move down from the A_i-th, (A_i + 1)-th, \\ldots, B_i-th squares from the left in the i-th row from the top.\n\nFor each integer k from 1 through H, find the minimum number of moves needed to reach one of the squares in the (k+1)-th row from the top. (The starting square can be chosen individually for each case.) If, starting from any square in the top row, none of the squares in the (k+1)-th row can be reached, print `-1` instead.\n\nConstraints\n\n* 1 \\leq H,W \\leq 2\\times 10^5\n* 1 \\leq A_i \\leq B_i \\leq W\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH W\nA_1 B_1\nA_2 B_2\n:\nA_H B_H\n\n\nOutput\n\nPrint H lines. The i-th line should contain the answer for the case k=i.\n\nExample\n\nInput\n\n4 4\n2 4\n1 1\n2 3\n2 4\n\n\nOutput\n\n1\n3\n6\n-1", "grammar": {"answer": null}}
{"name": "1176_A. Divide it!", "description": "You are given an integer n.\n\nYou can perform any of the following operations with this number an arbitrary (possibly, zero) number of times: \n\n  1. Replace n with n/2 if n is divisible by 2; \n  2. Replace n with 2n/3 if n is divisible by 3; \n  3. Replace n with 4n/5 if n is divisible by 5. \n\n\n\nFor example, you can replace 30 with 15 using the first operation, with 20 using the second operation or with 24 using the third operation.\n\nYour task is to find the minimum number of moves required to obtain 1 from n or say that it is impossible to do it.\n\nYou have to answer q independent queries.\n\nInput\n\nThe first line of the input contains one integer q (1 ≤ q ≤ 1000) — the number of queries.\n\nThe next q lines contain the queries. For each query you are given the integer number n (1 ≤ n ≤ 10^{18}).\n\nOutput\n\nPrint the answer for each query on a new line. If it is impossible to obtain 1 from n, print -1. Otherwise, print the minimum number of moves required to do it.\n\nExample\n\nInput\n\n\n7\n1\n10\n25\n30\n14\n27\n1000000000000000000\n\n\nOutput\n\n\n0\n4\n6\n6\n-1\n6\n72", "grammar": {"answer": null}}
{"name": "615_A. Bulbs", "description": "Vasya wants to turn on Christmas lights consisting of m bulbs. Initially, all bulbs are turned off. There are n buttons, each of them is connected to some set of bulbs. Vasya can press any of these buttons. When the button is pressed, it turns on all the bulbs it's connected to. Can Vasya light up all the bulbs?\n\nIf Vasya presses the button such that some bulbs connected to it are already turned on, they do not change their state, i.e. remain turned on.\n\nInput\n\nThe first line of the input contains integers n and m (1 ≤ n, m ≤ 100) — the number of buttons and the number of bulbs respectively. \n\nEach of the next n lines contains xi (0 ≤ xi ≤ m) — the number of bulbs that are turned on by the i-th button, and then xi numbers yij (1 ≤ yij ≤ m) — the numbers of these bulbs.\n\nOutput\n\nIf it's possible to turn on all m bulbs print \"YES\", otherwise print \"NO\".\n\nExamples\n\nInput\n\n3 4\n2 1 4\n3 1 3 1\n1 2\n\n\nOutput\n\nYES\n\n\nInput\n\n3 3\n1 1\n1 2\n1 1\n\n\nOutput\n\nNO\n\nNote\n\nIn the first sample you can press each button once and turn on all the bulbs. In the 2 sample it is impossible to turn on the 3-rd lamp.", "grammar": {"answer": null}}
{"name": "p02349 Range Add Query (RAQ)", "description": "Write a program which manipulates a sequence A = {a1, a2, . . . , an} with the following operations:\n\n* add(s, t, x): add x to as, as+1, ..., at.\n* get(i): output the value of ai.\n\n\n\nNote that the initial values of ai (i = 1, 2, . . . , n) are 0.\n\nConstraints\n\n* 1 ≤ n ≤ 100000\n* 1 ≤ q ≤ 100000\n* 1 ≤ s ≤ t ≤ n\n* 1 ≤ i ≤ n\n* 0 ≤ x ≤ 1000\n\nInput\n\n\nn q\nquery1\nquery2\n:\nqueryq\n\n\nIn the first line, n (the number of elements in A) and q (the number of queries) are given. Then, ith query queryi is given in the following format:\n\n\n0 s t x\n\n\nor\n\n\n1 t\n\n\nThe first digit represents the type of the query. '0' denotes add(s, t, x) and '1' denotes get(i).\n\nOutput\n\nFor each get operation, print the value.\n\nExamples\n\nInput\n\n3 5\n0 1 2 1\n0 2 3 2\n0 3 3 3\n1 2\n1 3\n\n\nOutput\n\n3\n5\n\n\nInput\n\n4 3\n1 2\n0 1 4 1\n1 2\n\n\nOutput\n\n0\n1", "grammar": {"answer": null}}
{"name": "476_A. Dreamoon and Stairs", "description": "Dreamoon wants to climb up a stair of n steps. He can climb 1 or 2 steps at each move. Dreamoon wants the number of moves to be a multiple of an integer m. \n\nWhat is the minimal number of moves making him climb to the top of the stairs that satisfies his condition?\n\nInput\n\nThe single line contains two space separated integers n, m (0 < n ≤ 10000, 1 < m ≤ 10).\n\nOutput\n\nPrint a single integer — the minimal number of moves being a multiple of m. If there is no way he can climb satisfying condition print  - 1 instead.\n\nExamples\n\nInput\n\n10 2\n\n\nOutput\n\n6\n\n\nInput\n\n3 5\n\n\nOutput\n\n-1\n\nNote\n\nFor the first sample, Dreamoon could climb in 6 moves with following sequence of steps: {2, 2, 2, 2, 1, 1}.\n\nFor the second sample, there are only three valid sequence of steps {2, 1}, {1, 2}, {1, 1, 1} with 2, 2, and 3 steps respectively. All these numbers are not multiples of 5.", "grammar": {"answer": null}}
{"name": "p02879 AtCoder Beginner Contest 144 - 9x9", "description": "Having learned the multiplication table, Takahashi can multiply two integers between 1 and 9 (inclusive) together. He cannot do any other calculation.\n\nGiven are two integers A and B.\n\nIf Takahashi can calculate A \\times B, print the result; if he cannot, print `-1` instead.\n\nConstraints\n\n* 1 \\leq A \\leq 20\n* 1 \\leq B \\leq 20\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nIf Takahashi can calculate A \\times B, print the result; if he cannot, print `-1`.\n\nExamples\n\nInput\n\n2 5\n\n\nOutput\n\n10\n\n\nInput\n\n5 10\n\n\nOutput\n\n-1\n\n\nInput\n\n9 9\n\n\nOutput\n\n81", "grammar": {"answer": null}}
{"name": "p02240 Connected Components", "description": "Write a program which reads relations in a SNS (Social Network Service), and judges that given pairs of users are reachable each other through the network.\n\nConstraints\n\n* $2 \\leq n \\leq 100,000$\n* $0 \\leq m \\leq 100,000$\n* $1 \\leq q \\leq 10,000$\n\nInput\n\nIn the first line, two integer $n$ and $m$ are given. $n$ is the number of users in the SNS and $m$ is the number of relations in the SNS. The users in the SNS are identified by IDs $0, 1, ..., n-1$.\n\nIn the following $m$ lines, the relations are given. Each relation is given by two integers $s$ and $t$ that represents $s$ and $t$ are friends (and reachable each other).\n\nIn the next line, the number of queries $q$ is given. In the following $q$ lines, $q$ queries are given respectively. Each query consists of two integers $s$ and $t$ separated by a space character.\n\nOutput\n\nFor each query, print \"yes\" if $t$ is reachable from $s$ through the social network, \"no\" otherwise.\n\nExample\n\nInput\n\n10 9\n0 1\n0 2\n3 4\n5 7\n5 6\n6 7\n6 8\n7 8\n8 9\n3\n0 1\n5 9\n1 3\n\n\nOutput\n\nyes\nyes\nno", "grammar": {"answer": null}}
{"name": "p02244 8 Queens Problem", "description": "The goal of 8 Queens Problem is to put eight queens on a chess-board such that none of them threatens any of others. A queen threatens the squares in the same row, in the same column, or on the same diagonals as shown in the following figure.\n\n<image>\n\n\nFor a given chess board where $k$ queens are already placed, find the solution of the 8 queens problem.\n\nConstraints\n\n* There is exactly one solution\n\nInput\n\nIn the first line, an integer $k$ is given. In the following $k$ lines, each square where a queen is already placed is given by two integers $r$ and $c$. $r$ and $c$ respectively denotes the row number and the column number. The row/column numbers start with 0.\n\nOutput\n\nPrint a $8 \\times 8$ chess board by strings where a square with a queen is represented by 'Q' and an empty square is represented by '.'.\n\nExample\n\nInput\n\n2\n2 2\n5 3\n\n\nOutput\n\n......Q.\nQ.......\n..Q.....\n.......Q\n.....Q..\n...Q....\n.Q......\n....Q...", "grammar": {"answer": null}}
{"name": "1047_D. Little C Loves 3 II", "description": "Little C loves number «3» very much. He loves all things about it.\n\nNow he is playing a game on a chessboard of size n × m. The cell in the x-th row and in the y-th column is called (x,y). Initially, The chessboard is empty. Each time, he places two chessmen on two different empty cells, the Manhattan distance between which is exactly 3. The Manhattan distance between two cells (x_i,y_i) and (x_j,y_j) is defined as |x_i-x_j|+|y_i-y_j|.\n\nHe want to place as many chessmen as possible on the chessboard. Please help him find the maximum number of chessmen he can place.\n\nInput\n\nA single line contains two integers n and m (1 ≤ n,m ≤ 10^9) — the number of rows and the number of columns of the chessboard.\n\nOutput\n\nPrint one integer — the maximum number of chessmen Little C can place.\n\nExamples\n\nInput\n\n2 2\n\n\nOutput\n\n0\n\nInput\n\n3 3\n\n\nOutput\n\n8\n\nNote\n\nIn the first example, the Manhattan distance between any two cells is smaller than 3, so the answer is 0.\n\nIn the second example, a possible solution is (1,1)(3,2), (1,2)(3,3), (2,1)(1,3), (3,1)(2,3).", "grammar": {"answer": null}}
{"name": "p02948 AtCoder Beginner Contest 137 - Summer Vacation", "description": "There are N one-off jobs available. If you take the i-th job and complete it, you will earn the reward of B_i after A_i days from the day you do it.\n\nYou can take and complete at most one of these jobs in a day.\n\nHowever, you cannot retake a job that you have already done.\n\nFind the maximum total reward that you can earn no later than M days from today.\n\nYou can already start working today.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 10^5\n* 1 \\leq A_i \\leq 10^5\n* 1 \\leq B_i \\leq 10^4\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nA_1 B_1\nA_2 B_2\n\\vdots\nA_N B_N\n\n\nOutput\n\nPrint the maximum total reward that you can earn no later than M days from today.\n\nExamples\n\nInput\n\n3 4\n4 3\n4 1\n2 2\n\n\nOutput\n\n5\n\n\nInput\n\n5 3\n1 2\n1 3\n1 4\n2 1\n2 3\n\n\nOutput\n\n10\n\n\nInput\n\n1 1\n2 1\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02899 AtCoder Beginner Contest 142 - Go to School", "description": "Takahashi is a teacher responsible for a class of N students.\n\nThe students are given distinct student numbers from 1 to N.\n\nToday, all the students entered the classroom at different times.\n\nAccording to Takahashi's record, there were A_i students in the classroom when student number i entered the classroom (including student number i).\n\nFrom these records, reconstruct the order in which the students entered the classroom.\n\nConstraints\n\n* 1 \\le N \\le 10^5\n* 1 \\le A_i \\le N\n* A_i \\neq A_j  (i \\neq j)\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 \\ldots A_N\n\n\nOutput\n\nPrint the student numbers of the students in the order the students entered the classroom.\n\nExamples\n\nInput\n\n3\n2 3 1\n\n\nOutput\n\n3 1 2\n\n\nInput\n\n5\n1 2 3 4 5\n\n\nOutput\n\n1 2 3 4 5\n\n\nInput\n\n8\n8 2 7 3 4 5 6 1\n\n\nOutput\n\n8 2 4 5 6 7 3 1", "grammar": {"answer": null}}
{"name": "p02897 AtCoder Beginner Contest 142 - Odds of Oddness", "description": "Given is an integer N.\n\nTakahashi chooses an integer a from the positive integers not greater than N with equal probability.\n\nFind the probability that a is odd.\n\nConstraints\n\n* 1 \\leq N \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the probability that a is odd. Your output will be considered correct when its absolute or relative error from the judge's output is at most 10^{-6}.\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n0.5000000000\n\n\nInput\n\n5\n\n\nOutput\n\n0.6000000000\n\n\nInput\n\n1\n\n\nOutput\n\n1.0000000000", "grammar": {"answer": null}}
{"name": "p02795 Keyence Programming Contest 2020 - Painting", "description": "We have a grid with H rows and W columns, where all the squares are initially white.\n\nYou will perform some number of painting operations on the grid. In one operation, you can do one of the following two actions:\n\n* Choose one row, then paint all the squares in that row black.\n* Choose one column, then paint all the squares in that column black.\n\n\n\nAt least how many operations do you need in order to have N or more black squares in the grid? It is guaranteed that, under the conditions in Constraints, having N or more black squares is always possible by performing some number of operations.\n\nConstraints\n\n* 1 \\leq H \\leq 100\n* 1 \\leq W \\leq 100\n* 1 \\leq N \\leq H \\times W\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH\nW\nN\n\n\nOutput\n\nPrint the minimum number of operations needed.\n\nExamples\n\nInput\n\n3\n7\n10\n\n\nOutput\n\n2\n\n\nInput\n\n14\n12\n112\n\n\nOutput\n\n8\n\n\nInput\n\n2\n100\n200\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p03248 AtCoder Regular Contest 103 - Tr/ee", "description": "You are given a string s of length n. Does a tree with n vertices that satisfies the following conditions exist?\n\n* The vertices are numbered 1,2,..., n.\n* The edges are numbered 1,2,..., n-1, and Edge i connects Vertex u_i and v_i.\n* If the i-th character in s is `1`, we can have a connected component of size i by removing one edge from the tree.\n* If the i-th character in s is `0`, we cannot have a connected component of size i by removing any one edge from the tree.\n\n\n\nIf such a tree exists, construct one such tree.\n\nConstraints\n\n* 2 \\leq n \\leq 10^5\n* s is a string of length n consisting of `0` and `1`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\ns\n\n\nOutput\n\nIf a tree with n vertices that satisfies the conditions does not exist, print `-1`.\n\nIf a tree with n vertices that satisfies the conditions exist, print n-1 lines. The i-th line should contain u_i and v_i with a space in between. If there are multiple trees that satisfy the conditions, any such tree will be accepted.\n\nExamples\n\nInput\n\n1111\n\n\nOutput\n\n-1\n\n\nInput\n\n1110\n\n\nOutput\n\n1 2\n2 3\n3 4\n\n\nInput\n\n1010\n\n\nOutput\n\n1 2\n1 3\n1 4", "grammar": {"answer": null}}
{"name": "p03904 CODE FESTIVAL 2016 Elimination Tournament Round 1 (Parallel) - Problem where Commas Separate Digits", "description": "You are given a string S consisting of digits between `1` and `9`, inclusive. You will insert at most K commas (`,`) into this string to separate it into multiple numbers.\n\nYour task is to minimize the maximum number among those produced by inserting commas. Find minimum possible such value.\n\nConstraints\n\n* 0 ≦ K < |S| ≦ 100,000\n* S consists of digits between `1` and `9`, inclusive.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nK\nS\n\n\nOutput\n\nPrint the minimum possible value.\n\nExamples\n\nInput\n\n2\n15267315\n\n\nOutput\n\n315\n\n\nInput\n\n0\n12456174517653111\n\n\nOutput\n\n12456174517653111\n\n\nInput\n\n8\n127356176351764127645176543176531763517635176531278461856198765816581726586715987216581\n\n\nOutput\n\n5317635176", "grammar": {"answer": null}}
{"name": "p02311 Common Tangent", "description": "Find common tangent lines of two circles $c1$ and $c2$.\n\nConstraints\n\n* $-1,000 \\leq c1x, c1y, c2x, c2y \\leq 1,000$\n* $1 \\leq c1r, c2r \\leq 1,000$\n* $c1$ and $c2$ are different\n\nInput\n\nCenter coordinates ($cix$, $ciy$) and radii $cir$ of two circles $c1$ are $c2$ are given in the following format.\n\n$c1x \\; c1y \\; c1r$\n$c2x \\; c2y \\; c2r$\n\nAll input values are given in integers.\n\nOutput\n\nPrint coordinates of the tangent points on circle $c1$ based on the following rules.\n\n* Print the coordinate with smaller $x$ first. In case of a tie, print the coordinate with smaller $y$ first.\n\n\n\nThe output values should be in a decimal fraction with an error less than 0.00001.\n\nExamples\n\nInput\n\n1 1 1\n6 2 2\n\n\nOutput\n\n0.6153846154 1.9230769231\n1.0000000000 0.0000000000\n1.4183420913 1.9082895434\n1.7355040625 0.3224796874\n\n\nInput\n\n1 2 1\n4 2 2\n\n\nOutput\n\n0.6666666667 1.0571909584\n0.6666666667 2.9428090416\n2.0000000000 2.0000000000\n\n\nInput\n\n1 2 1\n3 2 2\n\n\nOutput\n\n0.5000000000 1.1339745962\n0.5000000000 2.8660254038\n\n\nInput\n\n0 0 1\n1 0 2\n\n\nOutput\n\n-1.0000000000 0.0000000000\n\n\nInput\n\n0 0 1\n0 0 2\n\n\nOutput", "grammar": {"answer": null}}
{"name": "314_B. Sereja and Periods", "description": "Let's introduce the designation <image>, where x is a string, n is a positive integer and operation \" + \" is the string concatenation operation. For example, [abc, 2] = abcabc.\n\nWe'll say that string s can be obtained from string t, if we can remove some characters from string t and obtain string s. For example, strings ab and aсba can be obtained from string xacbac, and strings bx and aaa cannot be obtained from it.\n\nSereja has two strings, w = [a, b] and q = [c, d]. He wants to find such maximum integer p (p > 0), that [q, p] can be obtained from string w.\n\nInput\n\nThe first line contains two integers b, d (1 ≤ b, d ≤ 107). The second line contains string a. The third line contains string c. The given strings are not empty and consist of lowercase English letters. Their lengths do not exceed 100.\n\nOutput\n\nIn a single line print an integer — the largest number p. If the required value of p doesn't exist, print 0.\n\nExamples\n\nInput\n\n10 3\nabab\nbab\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "1520_C. Not Adjacent Matrix", "description": "We will consider the numbers a and b as adjacent if they differ by exactly one, that is, |a-b|=1.\n\nWe will consider cells of a square matrix n × n as adjacent if they have a common side, that is, for cell (r, c) cells (r, c-1), (r, c+1), (r-1, c) and (r+1, c) are adjacent to it.\n\nFor a given number n, construct a square matrix n × n such that: \n\n  * Each integer from 1 to n^2 occurs in this matrix exactly once; \n  * If (r_1, c_1) and (r_2, c_2) are adjacent cells, then the numbers written in them must not be adjacent. \n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 100). Then t test cases follow.\n\nEach test case is characterized by one integer n (1 ≤ n ≤ 100).\n\nOutput\n\nFor each test case, output: \n\n  * -1, if the required matrix does not exist; \n  * the required matrix, otherwise (any such matrix if many of them exist). \n\n\n\nThe matrix should be outputted as n lines, where each line contains n integers.\n\nExample\n\nInput\n\n\n3\n1\n2\n3\n\n\nOutput\n\n\n1\n-1\n2 9 7\n4 6 3\n1 8 5", "grammar": {"answer": null}}
{"name": "835_B. The number on the board", "description": "Some natural number was written on the board. Its sum of digits was not less than k. But you were distracted a bit, and someone changed this number to n, replacing some digits with others. It's known that the length of the number didn't change.\n\nYou have to find the minimum number of digits in which these two numbers can differ.\n\nInput\n\nThe first line contains integer k (1 ≤ k ≤ 109).\n\nThe second line contains integer n (1 ≤ n < 10100000).\n\nThere are no leading zeros in n. It's guaranteed that this situation is possible.\n\nOutput\n\nPrint the minimum number of digits in which the initial number and n can differ.\n\nExamples\n\nInput\n\n3\n11\n\n\nOutput\n\n1\n\n\nInput\n\n3\n99\n\n\nOutput\n\n0\n\nNote\n\nIn the first example, the initial number could be 12.\n\nIn the second example the sum of the digits of n is not less than k. The initial number could be equal to n.", "grammar": {"answer": null}}
{"name": "p03241 AtCoder Beginner Contest 112 - Partition", "description": "You are given integers N and M.\n\nConsider a sequence a of length N consisting of positive integers such that a_1 + a_2 + ... + a_N = M. Find the maximum possible value of the greatest common divisor of a_1, a_2, ..., a_N.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* N \\leq M \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\n\n\nOutput\n\nPrint the maximum possible value of the greatest common divisor of a sequence a_1, a_2, ..., a_N that satisfies the condition.\n\nExamples\n\nInput\n\n3 14\n\n\nOutput\n\n2\n\n\nInput\n\n10 123\n\n\nOutput\n\n3\n\n\nInput\n\n100000 1000000000\n\n\nOutput\n\n10000", "grammar": {"answer": null}}
{"name": "18_B. Platforms", "description": "In one one-dimensional world there are n platforms. Platform with index k (platforms are numbered from 1) is a segment with coordinates [(k - 1)m, (k - 1)m + l], and l < m. Grasshopper Bob starts to jump along the platforms from point 0, with each jump he moves exactly d units right. Find out the coordinate of the point, where Bob will fall down. The grasshopper falls down, if he finds himself not on the platform, but if he finds himself on the edge of the platform, he doesn't fall down.\n\nInput\n\nThe first input line contains 4 integer numbers n, d, m, l (1 ≤ n, d, m, l ≤ 106, l < m) — respectively: amount of platforms, length of the grasshopper Bob's jump, and numbers m and l needed to find coordinates of the k-th platform: [(k - 1)m, (k - 1)m + l].\n\nOutput\n\nOutput the coordinates of the point, where the grosshopper will fall down. Don't forget that if Bob finds himself on the platform edge, he doesn't fall down.\n\nExamples\n\nInput\n\n2 2 5 3\n\n\nOutput\n\n4\n\n\nInput\n\n5 4 11 8\n\n\nOutput\n\n20", "grammar": {"answer": null}}
{"name": "p02624 AtCoder Beginner Contest 172 - Sum of Divisors", "description": "For a positive integer X, let f(X) be the number of positive divisors of X.\n\nGiven a positive integer N, find \\sum_{K=1}^N K\\times f(K).\n\nConstraints\n\n* 1 \\leq N \\leq 10^7\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the value \\sum_{K=1}^N K\\times f(K).\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n23\n\n\nInput\n\n100\n\n\nOutput\n\n26879\n\n\nInput\n\n10000000\n\n\nOutput\n\n838627288460105", "grammar": {"answer": null}}
{"name": "612_C. Replace To Make Regular Bracket Sequence", "description": "You are given string s consists of opening and closing brackets of four kinds <>, {}, [], (). There are two types of brackets: opening and closing. You can replace any bracket by another of the same type. For example, you can replace < by the bracket {, but you can't replace it by ) or >.\n\nThe following definition of a regular bracket sequence is well-known, so you can be familiar with it.\n\nLet's define a regular bracket sequence (RBS). Empty string is RBS. Let s1 and s2 be a RBS then the strings <s1>s2, {s1}s2, [s1]s2, (s1)s2 are also RBS.\n\nFor example the string \"[[(){}]<>]\" is RBS, but the strings \"[)()\" and \"][()()\" are not.\n\nDetermine the least number of replaces to make the string s RBS.\n\nInput\n\nThe only line contains a non empty string s, consisting of only opening and closing brackets of four kinds. The length of s does not exceed 106.\n\nOutput\n\nIf it's impossible to get RBS from s print Impossible.\n\nOtherwise print the least number of replaces needed to get RBS from s.\n\nExamples\n\nInput\n\n[&lt;}){}\n\n\nOutput\n\n2\n\nInput\n\n{()}[]\n\n\nOutput\n\n0\n\nInput\n\n]]\n\n\nOutput\n\nImpossible", "grammar": {"answer": null}}
{"name": "p02732 AtCoder Beginner Contest 159 - Banned K", "description": "We have N balls. The i-th ball has an integer A_i written on it.\nFor each k=1, 2, ..., N, solve the following problem and print the answer.\n\n* Find the number of ways to choose two distinct balls (disregarding order) from the N-1 balls other than the k-th ball so that the integers written on them are equal.\n\nConstraints\n\n* 3 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq A_i \\leq N\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nFor each k=1,2,...,N, print a line containing the answer.\n\nExamples\n\nInput\n\n5\n1 1 2 1 2\n\n\nOutput\n\n2\n2\n3\n2\n3\n\n\nInput\n\n4\n1 2 3 4\n\n\nOutput\n\n0\n0\n0\n0\n\n\nInput\n\n5\n3 3 3 3 3\n\n\nOutput\n\n6\n6\n6\n6\n6\n\n\nInput\n\n8\n1 2 1 4 2 1 4 1\n\n\nOutput\n\n5\n7\n5\n7\n7\n5\n7\n5", "grammar": {"answer": null}}
{"name": "p03644 AtCoder Beginner Contest 068 - Break Number", "description": "Takahashi loves numbers divisible by 2.\n\nYou are given a positive integer N. Among the integers between 1 and N (inclusive), find the one that can be divisible by 2 for the most number of times. The solution is always unique.\n\nHere, the number of times an integer can be divisible by 2, is how many times the integer can be divided by 2 without remainder.\n\nFor example,\n\n* 6 can be divided by 2 once: 6 -> 3.\n* 8 can be divided by 2 three times: 8 -> 4 -> 2 -> 1.\n* 3 can be divided by 2 zero times.\n\nConstraints\n\n* 1 ≤ N ≤ 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n7\n\n\nOutput\n\n4\n\n\nInput\n\n32\n\n\nOutput\n\n32\n\n\nInput\n\n1\n\n\nOutput\n\n1\n\n\nInput\n\n100\n\n\nOutput\n\n64", "grammar": {"answer": null}}
{"name": "1312_D. Count the Arrays", "description": "Your task is to calculate the number of arrays such that:\n\n  * each array contains n elements; \n  * each element is an integer from 1 to m; \n  * for each array, there is exactly one pair of equal elements; \n  * for each array a, there exists an index i such that the array is strictly ascending before the i-th element and strictly descending after it (formally, it means that a_j < a_{j + 1}, if j < i, and a_j > a_{j + 1}, if j ≥ i). \n\nInput\n\nThe first line contains two integers n and m (2 ≤ n ≤ m ≤ 2 ⋅ 10^5).\n\nOutput\n\nPrint one integer — the number of arrays that meet all of the aforementioned conditions, taken modulo 998244353.\n\nExamples\n\nInput\n\n\n3 4\n\n\nOutput\n\n\n6\n\n\nInput\n\n\n3 5\n\n\nOutput\n\n\n10\n\n\nInput\n\n\n42 1337\n\n\nOutput\n\n\n806066790\n\n\nInput\n\n\n100000 200000\n\n\nOutput\n\n\n707899035\n\nNote\n\nThe arrays in the first example are:\n\n  * [1, 2, 1]; \n  * [1, 3, 1]; \n  * [1, 4, 1]; \n  * [2, 3, 2]; \n  * [2, 4, 2]; \n  * [3, 4, 3]. ", "grammar": {"answer": null}}
{"name": "p03133 Yahoo Programming Contest 2019 - Odd Subrectangles", "description": "There is a square grid with N rows and M columns. Each square contains an integer: 0 or 1. The square at the i-th row from the top and the j-th column from the left contains a_{ij}.\n\nAmong the 2^{N+M} possible pairs of a subset A of the rows and a subset B of the columns, find the number of the pairs that satisfy the following condition, modulo 998244353:\n\n* The sum of the |A||B| numbers contained in the intersection of the rows belonging to A and the columns belonging to B, is odd.\n\nConstraints\n\n* 1 \\leq N,M \\leq 300\n* 0 \\leq a_{i,j} \\leq 1(1\\leq i\\leq N,1\\leq j\\leq M)\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\na_{11} ... a_{1M}\n:\na_{N1} ... a_{NM}\n\n\nOutput\n\nPrint the number of the pairs of a subset of the rows and a subset of the columns that satisfy the condition, modulo 998244353.\n\nExamples\n\nInput\n\n2 2\n0 1\n1 0\n\n\nOutput\n\n6\n\n\nInput\n\n2 3\n0 0 0\n0 1 0\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "p00051 Differential II", "description": "When you enter 8 numbers from 0 to 9, write a program that outputs the difference between the largest integer and the smallest integer that can sort the 8 numbers. The number that can be sorted may start from 0, such as 00135569.\n\n\n\nInput\n\nGiven multiple datasets. The number of datasets n (n ≤ 50) is given on the first line. Then n rows of data are given. Each data is a sequence of 8 numbers (0 to 9 numbers).\n\nOutput\n\nFor each dataset, output the difference between the largest and smallest integers that can be rearranged in the entered numbers on one line.\n\nExample\n\nInput\n\n2\n65539010\n65539010\n\n\nOutput\n\n96417531\n96417531", "grammar": {"answer": null}}
{"name": "1095_B. Array Stabilization", "description": "You are given an array a consisting of n integer numbers.\n\nLet instability of the array be the following value: max_{i = 1}^{n} a_i - min_{i = 1}^{n} a_i.\n\nYou have to remove exactly one element from this array to minimize instability of the resulting (n-1)-elements array. Your task is to calculate the minimum possible instability.\n\nInput\n\nThe first line of the input contains one integer n (2 ≤ n ≤ 10^5) — the number of elements in the array a.\n\nThe second line of the input contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ 10^5) — elements of the array a.\n\nOutput\n\nPrint one integer — the minimum possible instability of the array if you have to remove exactly one element from the array a.\n\nExamples\n\nInput\n\n\n4\n1 3 3 7\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n2\n1 100000\n\n\nOutput\n\n\n0\n\nNote\n\nIn the first example you can remove 7 then instability of the remaining array will be 3 - 1 = 2.\n\nIn the second example you can remove either 1 or 100000 then instability of the remaining array will be 100000 - 100000 = 0 and 1 - 1 = 0 correspondingly.", "grammar": {"answer": null}}
{"name": "140_A. New Year Table", "description": "Gerald is setting the New Year table. The table has the form of a circle; its radius equals R. Gerald invited many guests and is concerned whether the table has enough space for plates for all those guests. Consider all plates to be round and have the same radii that equal r. Each plate must be completely inside the table and must touch the edge of the table. Of course, the plates must not intersect, but they can touch each other. Help Gerald determine whether the table is large enough for n plates.\n\nInput\n\nThe first line contains three integers n, R and r (1 ≤ n ≤ 100, 1 ≤ r, R ≤ 1000) — the number of plates, the radius of the table and the plates' radius.\n\nOutput\n\nPrint \"YES\" (without the quotes) if it is possible to place n plates on the table by the rules given above. If it is impossible, print \"NO\".\n\nRemember, that each plate must touch the edge of the table. \n\nExamples\n\nInput\n\n4 10 4\n\n\nOutput\n\nYES\n\n\nInput\n\n5 10 4\n\n\nOutput\n\nNO\n\n\nInput\n\n1 10 10\n\n\nOutput\n\nYES\n\nNote\n\nThe possible arrangement of the plates for the first sample is: \n\n<image>", "grammar": {"answer": null}}
{"name": "1078_D. Chattering", "description": "There are n parrots standing in a circle. Each parrot has a certain level of respect among other parrots, namely r_i. When a parrot with respect level x starts chattering, x neighbours to the right and to the left of it start repeating the same words in 1 second. Their neighbours then start repeating as well, and so on, until all the birds begin to chatter.\n\nYou are given the respect levels of all parrots. For each parrot answer a question: if this certain parrot starts chattering, how many seconds will pass until all other birds will start repeating it?\n\nInput\n\nIn the first line of input there is a single integer n, the number of parrots (1 ≤ n ≤ 10^5).\n\nIn the next line of input there are n integers r_1, ..., r_n, the respect levels of parrots in order they stand in the circle (1 ≤ r_i ≤ n).\n\nOutput\n\nPrint n integers. i-th of them should equal the number of seconds that is needed for all parrots to start chattering if the i-th parrot is the first to start.\n\nExamples\n\nInput\n\n\n4\n1 1 4 1\n\n\nOutput\n\n\n2 2 1 2 \n\n\nInput\n\n\n8\n1 2 2 1 5 1 3 1\n\n\nOutput\n\n\n3 3 2 2 1 2 2 3 ", "grammar": {"answer": null}}
{"name": "760_A. Petr and a calendar", "description": "Petr wants to make a calendar for current month. For this purpose he draws a table in which columns correspond to weeks (a week is seven consequent days from Monday to Sunday), rows correspond to weekdays, and cells contain dates. For example, a calendar for January 2017 should look like on the picture:\n\n<image>\n\nPetr wants to know how many columns his table should have given the month and the weekday of the first date of that month? Assume that the year is non-leap.\n\nInput\n\nThe only line contain two integers m and d (1 ≤ m ≤ 12, 1 ≤ d ≤ 7) — the number of month (January is the first month, December is the twelfth) and the weekday of the first date of this month (1 is Monday, 7 is Sunday).\n\nOutput\n\nPrint single integer: the number of columns the table should have.\n\nExamples\n\nInput\n\n1 7\n\n\nOutput\n\n6\n\n\nInput\n\n1 1\n\n\nOutput\n\n5\n\n\nInput\n\n11 6\n\n\nOutput\n\n5\n\nNote\n\nThe first example corresponds to the January 2017 shown on the picture in the statements.\n\nIn the second example 1-st January is Monday, so the whole month fits into 5 columns.\n\nIn the third example 1-st November is Saturday and 5 columns is enough.", "grammar": {"answer": null}}
{"name": "1458_A. Row GCD", "description": "You are given two positive integer sequences a_1, …, a_n and b_1, …, b_m. For each j = 1, …, m find the greatest common divisor of a_1 + b_j, …, a_n + b_j.\n\nInput\n\nThe first line contains two integers n and m (1 ≤ n, m ≤ 2 ⋅ 10^5).\n\nThe second line contains n integers a_1, …, a_n (1 ≤ a_i ≤ 10^{18}).\n\nThe third line contains m integers b_1, …, b_m (1 ≤ b_j ≤ 10^{18}).\n\nOutput\n\nPrint m integers. The j-th of them should be equal to GCD(a_1 + b_j, …, a_n + b_j).\n\nExample\n\nInput\n\n\n4 4\n1 25 121 169\n1 2 7 23\n\n\nOutput\n\n\n2 3 8 24", "grammar": {"answer": null}}
{"name": "p01479 Chicken or the Egg", "description": "Time Limit: 8 sec / Memory Limit: 64 MB\n\n\n\n\n\nExample\n\nInput\n\neggchickenegg\n\n\nOutput\n\negg", "grammar": {"answer": null}}
{"name": "432_D. Prefixes and Suffixes", "description": "You have a string s = s1s2...s|s|, where |s| is the length of string s, and si its i-th character. \n\nLet's introduce several definitions:\n\n  * A substring s[i..j] (1 ≤ i ≤ j ≤ |s|) of string s is string sisi + 1...sj. \n  * The prefix of string s of length l (1 ≤ l ≤ |s|) is string s[1..l]. \n  * The suffix of string s of length l (1 ≤ l ≤ |s|) is string s[|s| - l + 1..|s|]. \n\n\n\nYour task is, for any prefix of string s which matches a suffix of string s, print the number of times it occurs in string s as a substring.\n\nInput\n\nThe single line contains a sequence of characters s1s2...s|s| (1 ≤ |s| ≤ 105) — string s. The string only consists of uppercase English letters.\n\nOutput\n\nIn the first line, print integer k (0 ≤ k ≤ |s|) — the number of prefixes that match a suffix of string s. Next print k lines, in each line print two integers li ci. Numbers li ci mean that the prefix of the length li matches the suffix of length li and occurs in string s as a substring ci times. Print pairs li ci in the order of increasing li.\n\nExamples\n\nInput\n\nABACABA\n\n\nOutput\n\n3\n1 4\n3 2\n7 1\n\n\nInput\n\nAAA\n\n\nOutput\n\n3\n1 3\n2 2\n3 1", "grammar": {"answer": null}}
{"name": "983_A. Finite or not?", "description": "You are given several queries. Each query consists of three integers p, q and b. You need to answer whether the result of p/q in notation with base b is a finite fraction.\n\nA fraction in notation with base b is finite if it contains finite number of numerals after the decimal point. It is also possible that a fraction has zero numerals after the decimal point.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 10^5) — the number of queries.\n\nNext n lines contain queries, one per line. Each line contains three integers p, q, and b (0 ≤ p ≤ 10^{18}, 1 ≤ q ≤ 10^{18}, 2 ≤ b ≤ 10^{18}). All numbers are given in notation with base 10.\n\nOutput\n\nFor each question, in a separate line, print Finite if the fraction is finite and Infinite otherwise.\n\nExamples\n\nInput\n\n2\n6 12 10\n4 3 10\n\n\nOutput\n\nFinite\nInfinite\n\n\nInput\n\n4\n1 1 2\n9 36 2\n4 12 3\n3 5 4\n\n\nOutput\n\nFinite\nFinite\nFinite\nInfinite\n\nNote\n\n6/12 = 1/2 = 0,5_{10}\n\n4/3 = 1,(3)_{10}\n\n9/36 = 1/4 = 0,01_2\n\n4/12 = 1/3 = 0,1_3 ", "grammar": {"answer": null}}
{"name": "267_B. Dominoes", "description": "You have a set of dominoes. Each domino is a rectangular tile with a line dividing its face into two square ends. Can you put all dominoes in a line one by one from left to right so that any two dominoes touched with the sides that had the same number of points? You can rotate the dominoes, changing the left and the right side (domino \"1-4\" turns into \"4-1\").\n\nInput\n\nThe first line contains number n (1 ≤ n ≤ 100). Next n lines contains the dominoes. Each of these lines contains two numbers — the number of points (spots) on the left and the right half, correspondingly. The numbers of points (spots) are non-negative integers from 0 to 6.\n\nOutput\n\nPrint \"No solution\", if it is impossible to arrange the dominoes in the required manner. If the solution exists, then describe any way to arrange the dominoes. You put the dominoes from left to right. In each of n lines print the index of the domino to put in the corresponding position and then, after a space, character \"+\" (if you don't need to turn the domino) or \"–\" (if you need to turn it).\n\nExamples\n\nInput\n\n5\n1 2\n2 4\n2 4\n6 4\n2 1\n\n\nOutput\n\n2 -\n1 -\n5 -\n3 +\n4 -", "grammar": {"answer": null}}
{"name": "597_A. Divisibility", "description": "Find the number of k-divisible numbers on the segment [a, b]. In other words you need to find the number of such integer values x that a ≤ x ≤ b and x is divisible by k.\n\nInput\n\nThe only line contains three space-separated integers k, a and b (1 ≤ k ≤ 1018; - 1018 ≤ a ≤ b ≤ 1018).\n\nOutput\n\nPrint the required number.\n\nExamples\n\nInput\n\n1 1 10\n\n\nOutput\n\n10\n\n\nInput\n\n2 -4 4\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "708_A. Letters Cyclic Shift", "description": "You are given a non-empty string s consisting of lowercase English letters. You have to pick exactly one non-empty substring of s and shift all its letters 'z' <image> 'y' <image> 'x' <image> 'b' <image> 'a' <image> 'z'. In other words, each character is replaced with the previous character of English alphabet and 'a' is replaced with 'z'.\n\nWhat is the lexicographically minimum string that can be obtained from s by performing this shift exactly once?\n\nInput\n\nThe only line of the input contains the string s (1 ≤ |s| ≤ 100 000) consisting of lowercase English letters.\n\nOutput\n\nPrint the lexicographically minimum string that can be obtained from s by shifting letters of exactly one non-empty substring.\n\nExamples\n\nInput\n\ncodeforces\n\n\nOutput\n\nbncdenqbdr\n\n\nInput\n\nabacaba\n\n\nOutput\n\naaacaba\n\nNote\n\nString s is lexicographically smaller than some other string t of the same length if there exists some 1 ≤ i ≤ |s|, such that s1 = t1, s2 = t2, ..., si - 1 = ti - 1, and si < ti.", "grammar": {"answer": null}}
{"name": "134_A. Average Numbers", "description": "You are given a sequence of positive integers a1, a2, ..., an. Find all such indices i, that the i-th element equals the arithmetic mean of all other elements (that is all elements except for this one).\n\nInput\n\nThe first line contains the integer n (2 ≤ n ≤ 2·105). The second line contains elements of the sequence a1, a2, ..., an (1 ≤ ai ≤ 1000). All the elements are positive integers.\n\nOutput\n\nPrint on the first line the number of the sought indices. Print on the second line the sought indices in the increasing order. All indices are integers from 1 to n.\n\nIf the sought elements do not exist, then the first output line should contain number 0. In this case you may either not print the second line or print an empty line.\n\nExamples\n\nInput\n\n5\n1 2 3 4 5\n\n\nOutput\n\n1\n3 \n\nInput\n\n4\n50 50 50 50\n\n\nOutput\n\n4\n1 2 3 4 ", "grammar": {"answer": null}}
{"name": "1368_B. Codeforces Subsequences", "description": "Karl likes Codeforces and subsequences. He wants to find a string of lowercase English letters that contains at least k subsequences codeforces. Out of all possible strings, Karl wants to find a shortest one.\n\nFormally, a codeforces subsequence of a string s is a subset of ten characters of s that read codeforces from left to right. For example, codeforces contains codeforces a single time, while codeforcesisawesome contains codeforces four times: codeforcesisawesome, codeforcesisawesome, codeforcesisawesome, codeforcesisawesome.\n\nHelp Karl find any shortest string that contains at least k codeforces subsequences.\n\nInput\n\nThe only line contains a single integer k (1 ≤ k ≤ 10^{16}).\n\nOutput\n\nPrint a shortest string of lowercase English letters that contains at least k codeforces subsequences. If there are several such strings, print any of them.\n\nExamples\n\nInput\n\n\n1\n\n\nOutput\n\n\ncodeforces\n\n\nInput\n\n\n3\n\n\nOutput\n\n\ncodeforcesss", "grammar": {"answer": null}}
{"name": "1206_D. Shortest Cycle", "description": "You are given n integer numbers a_1, a_2, ..., a_n. Consider graph on n nodes, in which nodes i, j (i≠ j) are connected if and only if, a_i AND a_j≠ 0, where AND denotes the [bitwise AND operation](https://en.wikipedia.org/wiki/Bitwise_operation#AND).\n\nFind the length of the shortest cycle in this graph or determine that it doesn't have cycles at all.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 10^5) — number of numbers.\n\nThe second line contains n integer numbers a_1, a_2, ..., a_n (0 ≤ a_i ≤ 10^{18}).\n\nOutput\n\nIf the graph doesn't have any cycles, output -1. Else output the length of the shortest cycle.\n\nExamples\n\nInput\n\n\n4\n3 6 28 9\n\n\nOutput\n\n\n4\n\nInput\n\n\n5\n5 12 9 16 48\n\n\nOutput\n\n\n3\n\nInput\n\n\n4\n1 2 4 8\n\n\nOutput\n\n\n-1\n\nNote\n\nIn the first example, the shortest cycle is (9, 3, 6, 28).\n\nIn the second example, the shortest cycle is (5, 12, 9).\n\nThe graph has no cycles in the third example.", "grammar": {"answer": null}}
{"name": "1145_C. Mystery Circuit", "description": "<image>\n\nInput\n\nThe input contains a single integer a (0 ≤ a ≤ 15).\n\nOutput\n\nOutput a single integer.\n\nExample\n\nInput\n\n\n3\n\n\nOutput\n\n\n13", "grammar": {"answer": null}}
{"name": "p02418 Ring", "description": "Write a program which finds a pattern $p$ in a ring shaped text $s$.\n\n\n<image>\n\nConstraints\n\n* $1 \\leq $ length of $p \\leq $ length of $s \\leq 100$\n* $s$ and $p$ consists of lower-case letters\n\nInput\n\nIn the first line, the text $s$ is given.\nIn the second line, the pattern $p$ is given.\n\nOutput\n\nIf $p$ is in $s$, print Yes in a line, otherwise No.\n\nExamples\n\nInput\n\nvanceknowledgetoad\nadvance\n\n\nOutput\n\nYes\n\n\nInput\n\nvanceknowledgetoad\nadvanced\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p01832 Shifting a Matrix", "description": "Example\n\nInput\n\n3 2\nR1\n\n\nOutput\n\n3 1 2\n4 5 6\n7 8 9", "grammar": {"answer": null}}
{"name": "349_B. Color the Fence", "description": "Igor has fallen in love with Tanya. Now Igor wants to show his feelings and write a number on the fence opposite to Tanya's house. Igor thinks that the larger the number is, the more chance to win Tanya's heart he has. \n\nUnfortunately, Igor could only get v liters of paint. He did the math and concluded that digit d requires ad liters of paint. Besides, Igor heard that Tanya doesn't like zeroes. That's why Igor won't use them in his number.\n\nHelp Igor find the maximum number he can write on the fence.\n\nInput\n\nThe first line contains a positive integer v (0 ≤ v ≤ 106). The second line contains nine positive integers a1, a2, ..., a9 (1 ≤ ai ≤ 105).\n\nOutput\n\nPrint the maximum number Igor can write on the fence. If he has too little paint for any digit (so, he cannot write anything), print -1.\n\nExamples\n\nInput\n\n5\n5 4 3 2 1 2 3 4 5\n\n\nOutput\n\n55555\n\n\nInput\n\n2\n9 11 1 12 5 8 9 10 6\n\n\nOutput\n\n33\n\n\nInput\n\n0\n1 1 1 1 1 1 1 1 1\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p02571 AtCoder Beginner Contest 177 - Substring", "description": "Given are two strings S and T.\n\nLet us change some of the characters in S so that T will be a substring of S.\n\nAt least how many characters do we need to change?\n\nHere, a substring is a consecutive subsequence. For example, `xxx` is a substring of `yxxxy`, but not a substring of `xxyxx`.\n\nConstraints\n\n* The lengths of S and T are each at least 1 and at most 1000.\n* The length of T is at most that of S.\n* S and T consist of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\nT\n\n\nOutput\n\nPrint the minimum number of characters in S that need to be changed.\n\nExamples\n\nInput\n\ncabacc\nabc\n\n\nOutput\n\n1\n\n\nInput\n\ncodeforces\natcoder\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p00378 Heat Strokes", "description": "We have had record hot temperatures this summer. To avoid heat stroke, you decided to buy a quantity of drinking water at the nearby supermarket. Two types of bottled water, 1 and 0.5 liter, are on sale at respective prices there. You have a definite quantity in your mind, but are willing to buy a quantity larger than that if: no combination of these bottles meets the quantity, or, the total price becomes lower.\n\nGiven the prices for each bottle of water and the total quantity needed, make a program to seek the lowest price to buy greater than or equal to the quantity required.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\n$A$ $B$ $X$\n\n\nThe first line provides the prices for a 1-liter bottle $A$ ($1\\leq A \\leq 1000$), 500-milliliter bottle $B$ ($1 \\leq B \\leq 1000$), and the total water quantity needed $X$ ($1 \\leq X \\leq 20000$). All these values are given as integers, and the quantity of water in milliliters.\n\nOutput\n\nOutput the total price.\n\nExamples\n\nInput\n\n180 100 2400\n\n\nOutput\n\n460\n\n\nInput\n\n200 90 2018\n\n\nOutput\n\n450", "grammar": {"answer": null}}
{"name": "520_B. Two Buttons", "description": "Vasya has found a strange device. On the front panel of a device there are: a red button, a blue button and a display showing some positive integer. After clicking the red button, device multiplies the displayed number by two. After clicking the blue button, device subtracts one from the number on the display. If at some point the number stops being positive, the device breaks down. The display can show arbitrarily large numbers. Initially, the display shows number n.\n\nBob wants to get number m on the display. What minimum number of clicks he has to make in order to achieve this result?\n\nInput\n\nThe first and the only line of the input contains two distinct integers n and m (1 ≤ n, m ≤ 104), separated by a space .\n\nOutput\n\nPrint a single number — the minimum number of times one needs to push the button required to get the number m out of number n.\n\nExamples\n\nInput\n\n4 6\n\n\nOutput\n\n2\n\n\nInput\n\n10 1\n\n\nOutput\n\n9\n\nNote\n\nIn the first example you need to push the blue button once, and then push the red button once.\n\nIn the second example, doubling the number is unnecessary, so we need to push the blue button nine times.", "grammar": {"answer": null}}
{"name": "p02711 AtCoder Beginner Contest 162 - Lucky 7", "description": "Given is a three-digit integer N. Does N contain the digit 7?\n\nIf so, print `Yes`; otherwise, print `No`.\n\nConstraints\n\n* 100 \\leq N \\leq 999\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nIf N contains the digit 7, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n117\n\n\nOutput\n\nYes\n\n\nInput\n\n123\n\n\nOutput\n\nNo\n\n\nInput\n\n777\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "846_F. Random Query", "description": "You are given an array a consisting of n positive integers. You pick two integer numbers l and r from 1 to n, inclusive (numbers are picked randomly, equiprobably and independently). If l > r, then you swap values of l and r. You have to calculate the expected value of the number of unique elements in segment of the array from index l to index r, inclusive (1-indexed).\n\nInput\n\nThe first line contains one integer number n (1 ≤ n ≤ 106). The second line contains n integer numbers a1, a2, ... an (1 ≤ ai ≤ 106) — elements of the array.\n\nOutput\n\nPrint one number — the expected number of unique elements in chosen segment. \n\nYour answer will be considered correct if its absolute or relative error doesn't exceed 10 - 4 — formally, the answer is correct if <image>, where x is jury's answer, and y is your answer.\n\nExamples\n\nInput\n\n2\n1 2\n\n\nOutput\n\n1.500000\n\n\nInput\n\n2\n2 2\n\n\nOutput\n\n1.000000", "grammar": {"answer": null}}
{"name": "p03105 AtCoder Beginner Contest 120 - Favorite Sound", "description": "Takahashi likes the sound when he buys a drink from a vending machine.\n\nThat sound can be heard by spending A yen (the currency of Japan) each time.\n\nTakahashi has B yen. He will hear the sound as many times as he can with that money, but at most C times, as he would be satisfied at that time.\n\nHow many times will he hear the sound?\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq A, B, C \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C\n\n\nOutput\n\nPrint the number of times Takahashi will hear his favorite sound.\n\nExamples\n\nInput\n\n2 11 4\n\n\nOutput\n\n4\n\n\nInput\n\n3 9 5\n\n\nOutput\n\n3\n\n\nInput\n\n100 1 10\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "710_B. Optimal Point on a Line", "description": "You are given n points on a line with their coordinates xi. Find the point x so the sum of distances to the given points is minimal.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 3·105) — the number of points on the line.\n\nThe second line contains n integers xi ( - 109 ≤ xi ≤ 109) — the coordinates of the given n points.\n\nOutput\n\nPrint the only integer x — the position of the optimal point on the line. If there are several optimal points print the position of the leftmost one. It is guaranteed that the answer is always the integer.\n\nExample\n\nInput\n\n4\n1 2 3 4\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "688_B. Lovely Palindromes", "description": "Pari has a friend who loves palindrome numbers. A palindrome number is a number that reads the same forward or backward. For example 12321, 100001 and 1 are palindrome numbers, while 112 and 1021 are not.\n\nPari is trying to love them too, but only very special and gifted people can understand the beauty behind palindrome numbers. Pari loves integers with even length (i.e. the numbers with even number of digits), so she tries to see a lot of big palindrome numbers with even length (like a 2-digit 11 or 6-digit 122221), so maybe she could see something in them.\n\nNow Pari asks you to write a program that gets a huge integer n from the input and tells what is the n-th even-length positive palindrome number?\n\nInput\n\nThe only line of the input contains a single integer n (1 ≤ n ≤ 10100 000).\n\nOutput\n\nPrint the n-th even-length palindrome number.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n11\n\n\nInput\n\n10\n\n\nOutput\n\n1001\n\nNote\n\nThe first 10 even-length palindrome numbers are 11, 22, 33, ... , 88, 99 and 1001.", "grammar": {"answer": null}}
{"name": "p02291 Reflection", "description": "For given three points p1, p2, p, find the reflection point x of p onto p1p2.\n\n<image>\n\nConstraints\n\n* 1 ≤ q ≤ 1000\n* -10000 ≤ xi, yi ≤ 10000\n* p1 and p2 are not identical.\n\nInput\n\n\nxp1 yp1 xp2 yp2\nq\nxp0 yp0\nxp1 yp1\n...\nxpq−1 ypq−1\n\n\nIn the first line, integer coordinates of p1 and p2 are given. Then, q queries are given for integer coordinates of p.\n\nOutput\n\nFor each query, print the coordinate of the reflection point x. The output values should be in a decimal fraction with an error less than 0.00000001.\n\nExamples\n\nInput\n\n0 0 2 0\n3\n-1 1\n0 1\n1 1\n\n\nOutput\n\n-1.0000000000 -1.0000000000\n0.0000000000 -1.0000000000\n1.0000000000 -1.0000000000\n\n\nInput\n\n0 0 3 4\n3\n2 5\n1 4\n0 3\n\n\nOutput\n\n4.2400000000 3.3200000000\n3.5600000000 2.0800000000\n2.8800000000 0.8400000000", "grammar": {"answer": null}}
{"name": "235_A. LCM Challenge", "description": "Some days ago, I learned the concept of LCM (least common multiple). I've played with it for several times and I want to make a big number with it.\n\nBut I also don't want to use many numbers, so I'll choose three positive integers (they don't have to be distinct) which are not greater than n. Can you help me to find the maximum possible least common multiple of these three integers?\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 106) — the n mentioned in the statement.\n\nOutput\n\nPrint a single integer — the maximum possible LCM of three not necessarily distinct positive integers that are not greater than n.\n\nExamples\n\nInput\n\n9\n\n\nOutput\n\n504\n\n\nInput\n\n7\n\n\nOutput\n\n210\n\nNote\n\nThe least common multiple of some positive integers is the least positive integer which is multiple for each of them.\n\nThe result may become very large, 32-bit integer won't be enough. So using 64-bit integers is recommended.\n\nFor the last example, we can chose numbers 7, 6, 5 and the LCM of them is 7·6·5 = 210. It is the maximum value we can get.", "grammar": {"answer": null}}
{"name": "47_B. Coins", "description": "One day Vasya came across three Berland coins. They didn't have any numbers that's why Vasya didn't understand how their denominations differ. He supposed that if one coin is heavier than the other one, then it should be worth more. Vasya weighed all the three pairs of coins on pan balance scales and told you the results. Find out how the deminations of the coins differ or if Vasya has a mistake in the weighting results. No two coins are equal.\n\nInput\n\nThe input data contains the results of all the weighting, one result on each line. It is guaranteed that every coin pair was weighted exactly once. Vasya labelled the coins with letters «A», «B» and «C». Each result is a line that appears as (letter)(> or < sign)(letter). For example, if coin \"A\" proved lighter than coin \"B\", the result of the weighting is A<B.\n\nOutput\n\nIt the results are contradictory, print Impossible. Otherwise, print without spaces the rearrangement of letters «A», «B» and «C» which represent the coins in the increasing order of their weights.\n\nExamples\n\nInput\n\nA&gt;B\nC&lt;B\nA&gt;C\n\n\nOutput\n\nCBA\n\nInput\n\nA&lt;B\nB&gt;C\nC&gt;A\n\n\nOutput\n\nACB", "grammar": {"answer": null}}
{"name": "p01780 Breadth-First Search by Foxpower", "description": "Example\n\nInput\n\n4\n1 1 2\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "1511_D. Min Cost String", "description": "Let's define the cost of a string s as the number of index pairs i and j (1 ≤ i < j < |s|) such that s_i = s_j and s_{i+1} = s_{j+1}.\n\nYou are given two positive integers n and k. Among all strings with length n that contain only the first k characters of the Latin alphabet, find a string with minimum possible cost. If there are multiple such strings with minimum cost — find any of them.\n\nInput\n\nThe only line contains two integers n and k (1 ≤ n ≤ 2 ⋅ 10^5; 1 ≤ k ≤ 26).\n\nOutput\n\nPrint the string s such that it consists of n characters, each its character is one of the k first Latin letters, and it has the minimum possible cost among all these strings. If there are multiple such strings — print any of them.\n\nExamples\n\nInput\n\n\n9 4\n\n\nOutput\n\n\naabacadbb\n\n\nInput\n\n\n5 1\n\n\nOutput\n\n\naaaaa\n\nInput\n\n\n10 26\n\n\nOutput\n\n\ncodeforces", "grammar": {"answer": null}}
{"name": "p02699 AtCoder Beginner Contest 164 - Sheep and Wolves", "description": "There are S sheep and W wolves.\n\nIf the number of wolves is greater than or equal to that of sheep, the wolves will attack the sheep.\n\nIf the wolves will attack the sheep, print `unsafe`; otherwise, print `safe`.\n\nConstraints\n\n* 1 \\leq S \\leq 100\n* 1 \\leq W \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS W\n\n\nOutput\n\nIf the wolves will attack the sheep, print `unsafe`; otherwise, print `safe`.\n\nExamples\n\nInput\n\n4 5\n\n\nOutput\n\nunsafe\n\n\nInput\n\n100 2\n\n\nOutput\n\nsafe\n\n\nInput\n\n10 10\n\n\nOutput\n\nunsafe", "grammar": {"answer": null}}
{"name": "p02546 AtCoder Beginner Contest 179 - Plural Form", "description": "In the Kingdom of AtCoder, people use a language called Taknese, which uses lowercase English letters.\n\nIn Taknese, the plural form of a noun is spelled based on the following rules:\n\n* If a noun's singular form does not end with `s`, append `s` to the end of the singular form.\n* If a noun's singular form ends with `s`, append `es` to the end of the singular form.\n\n\n\nYou are given the singular form S of a Taknese noun. Output its plural form.\n\nConstraints\n\n* S is a string of length 1 between 1000, inclusive.\n* S contains only lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the plural form of the given Taknese word.\n\nExamples\n\nInput\n\napple\n\n\nOutput\n\napples\n\n\nInput\n\nbus\n\n\nOutput\n\nbuses\n\n\nInput\n\nbox\n\n\nOutput\n\nboxs", "grammar": {"answer": null}}
{"name": "p01795 ICPC Teams", "description": "Example\n\nInput\n\n2 2\n1 2 0\n3 4 1\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p03399 AtCoder Beginner Contest 092 - Traveling Budget", "description": "You planned a trip using trains and buses. The train fare will be A yen (the currency of Japan) if you buy ordinary tickets along the way, and B yen if you buy an unlimited ticket. Similarly, the bus fare will be C yen if you buy ordinary tickets along the way, and D yen if you buy an unlimited ticket.\n\nFind the minimum total fare when the optimal choices are made for trains and buses.\n\nConstraints\n\n* 1 \\leq A \\leq 1 000\n* 1 \\leq B \\leq 1 000\n* 1 \\leq C \\leq 1 000\n* 1 \\leq D \\leq 1 000\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA\nB\nC\nD\n\n\nOutput\n\nPrint the minimum total fare.\n\nExamples\n\nInput\n\n600\n300\n220\n420\n\n\nOutput\n\n520\n\n\nInput\n\n555\n555\n400\n200\n\n\nOutput\n\n755\n\n\nInput\n\n549\n817\n715\n603\n\n\nOutput\n\n1152", "grammar": {"answer": null}}
{"name": "p03085 AtCoder Beginner Contest 122 - Double Helix", "description": "On the Planet AtCoder, there are four types of bases: `A`, `C`, `G` and `T`. `A` bonds with `T`, and `C` bonds with `G`.\n\nYou are given a letter b as input, which is `A`, `C`, `G` or `T`. Write a program that prints the letter representing the base that bonds with the base b.\n\nConstraints\n\n* b is one of the letters `A`, `C`, `G` and `T`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nb\n\n\nOutput\n\nPrint the letter representing the base that bonds with the base b.\n\nExamples\n\nInput\n\nA\n\n\nOutput\n\nT\n\n\nInput\n\nG\n\n\nOutput\n\nC", "grammar": {"answer": null}}
{"name": "p02380 Triangle", "description": "For given two sides of a triangle a and b and the angle C between them, calculate the following properties:\n\n* S: Area of the triangle\n* L: The length of the circumference of the triangle\n* h: The height of the triangle with side a as a bottom edge\n\n\n\nInput\n\nThe length of a, the length of b and the angle C are given in integers.\n\nOutput\n\nPrint S, L and h in a line respectively. The output should not contain an absolute error greater than 10-4.\n\nExample\n\nInput\n\n4 3 90\n\n\nOutput\n\n6.00000000\n12.00000000\n3.00000000", "grammar": {"answer": null}}
{"name": "p02326 Largest Square", "description": "Given a matrix (H × W) which contains only 1 and 0, find the area of the largest square matrix which only contains 0s.\n\nConstraints\n\n* 1 ≤ H, W ≤ 1,400\n\nInput\n\n\nH W\nc1,1 c1,2 ... c1,W\nc2,1 c2,2 ... c2,W\n:\ncH,1 cH,2 ... cH,W\n\n\nIn the first line, two integers H and W separated by a space character are given. In the following H lines, ci,j, elements of the H × W matrix, are given.\n\nOutput\n\nPrint the area (the number of 0s) of the largest square.\n\nExample\n\nInput\n\n4 5\n0 0 1 0 0\n1 0 0 0 0\n0 0 0 1 0\n0 0 0 1 0\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "1203_C. Common Divisors", "description": "You are given an array a consisting of n integers.\n\nYour task is to say the number of such positive integers x such that x divides each number from the array. In other words, you have to find the number of common divisors of all elements in the array.\n\nFor example, if the array a will be [2, 4, 6, 2, 10], then 1 and 2 divide each number from the array (so the answer for this test is 2).\n\nInput\n\nThe first line of the input contains one integer n (1 ≤ n ≤ 4 ⋅ 10^5) — the number of elements in a.\n\nThe second line of the input contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ 10^{12}), where a_i is the i-th element of a.\n\nOutput\n\nPrint one integer — the number of such positive integers x such that x divides each number from the given array (in other words, the answer is the number of common divisors of all elements in the array).\n\nExamples\n\nInput\n\n\n5\n1 2 3 4 5\n\n\nOutput\n\n\n1\n\n\nInput\n\n\n6\n6 90 12 18 30 18\n\n\nOutput\n\n\n4", "grammar": {"answer": null}}
{"name": "246_B. Increase and Decrease", "description": "Polycarpus has an array, consisting of n integers a1, a2, ..., an. Polycarpus likes it when numbers in an array match. That's why he wants the array to have as many equal numbers as possible. For that Polycarpus performs the following operation multiple times:\n\n  * he chooses two elements of the array ai, aj (i ≠ j); \n  * he simultaneously increases number ai by 1 and decreases number aj by 1, that is, executes ai = ai + 1 and aj = aj - 1. \n\n\n\nThe given operation changes exactly two distinct array elements. Polycarpus can apply the described operation an infinite number of times. \n\nNow he wants to know what maximum number of equal array elements he can get if he performs an arbitrary number of such operation. Help Polycarpus.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 105) — the array size. The second line contains space-separated integers a1, a2, ..., an (|ai| ≤ 104) — the original array.\n\nOutput\n\nPrint a single integer — the maximum number of equal array elements he can get if he performs an arbitrary number of the given operation.\n\nExamples\n\nInput\n\n2\n2 1\n\n\nOutput\n\n1\n\n\nInput\n\n3\n1 4 1\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p03264 AtCoder Beginner Contest 108 - Pair", "description": "Find the number of ways to choose a pair of an even number and an odd number from the positive integers between 1 and K (inclusive). The order does not matter.\n\nConstraints\n\n* 2\\leq K\\leq 100\n* K is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK\n\n\nOutput\n\nPrint the number of ways to choose a pair of an even number and an odd number from the positive integers between 1 and K (inclusive).\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n2\n\n\nInput\n\n6\n\n\nOutput\n\n9\n\n\nInput\n\n11\n\n\nOutput\n\n30\n\n\nInput\n\n50\n\n\nOutput\n\n625", "grammar": {"answer": null}}
{"name": "479_A. Expression", "description": "Petya studies in a school and he adores Maths. His class has been studying arithmetic expressions. On the last class the teacher wrote three positive integers a, b, c on the blackboard. The task was to insert signs of operations '+' and '*', and probably brackets between the numbers so that the value of the resulting expression is as large as possible. Let's consider an example: assume that the teacher wrote numbers 1, 2 and 3 on the blackboard. Here are some ways of placing signs and brackets:\n\n  * 1+2*3=7 \n  * 1*(2+3)=5 \n  * 1*2*3=6 \n  * (1+2)*3=9 \n\n\n\nNote that you can insert operation signs only between a and b, and between b and c, that is, you cannot swap integers. For instance, in the given sample you cannot get expression (1+3)*2.\n\nIt's easy to see that the maximum value that you can obtain is 9.\n\nYour task is: given a, b and c print the maximum value that you can get.\n\nInput\n\nThe input contains three integers a, b and c, each on a single line (1 ≤ a, b, c ≤ 10).\n\nOutput\n\nPrint the maximum value of the expression that you can obtain.\n\nExamples\n\nInput\n\n1\n2\n3\n\n\nOutput\n\n9\n\n\nInput\n\n2\n10\n3\n\n\nOutput\n\n60", "grammar": {"answer": null}}
{"name": "920_F. SUM and REPLACE", "description": "Let D(x) be the number of positive divisors of a positive integer x. For example, D(2) = 2 (2 is divisible by 1 and 2), D(6) = 4 (6 is divisible by 1, 2, 3 and 6).\n\nYou are given an array a of n integers. You have to process two types of queries:\n\n  1. REPLACE l r — for every <image> replace ai with D(ai); \n  2. SUM l r — calculate <image>. \n\n\n\nPrint the answer for each SUM query.\n\nInput\n\nThe first line contains two integers n and m (1 ≤ n, m ≤ 3·105) — the number of elements in the array and the number of queries to process, respectively.\n\nThe second line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 106) — the elements of the array.\n\nThen m lines follow, each containing 3 integers ti, li, ri denoting i-th query. If ti = 1, then i-th query is REPLACE li ri, otherwise it's SUM li ri (1 ≤ ti ≤ 2, 1 ≤ li ≤ ri ≤ n).\n\nThere is at least one SUM query.\n\nOutput\n\nFor each SUM query print the answer to it.\n\nExample\n\nInput\n\n7 6\n6 4 1 10 3 2 4\n2 1 7\n2 4 5\n1 3 5\n2 4 4\n1 5 7\n2 1 7\n\n\nOutput\n\n30\n13\n4\n22", "grammar": {"answer": null}}
{"name": "p03170 Educational DP Contest - Stones", "description": "There is a set A = \\\\{ a_1, a_2, \\ldots, a_N \\\\} consisting of N positive integers. Taro and Jiro will play the following game against each other.\n\nInitially, we have a pile consisting of K stones. The two players perform the following operation alternately, starting from Taro:\n\n* Choose an element x in A, and remove exactly x stones from the pile.\n\n\n\nA player loses when he becomes unable to play. Assuming that both players play optimally, determine the winner.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 100\n* 1 \\leq K \\leq 10^5\n* 1 \\leq a_1 < a_2 < \\cdots < a_N \\leq K\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\na_1 a_2 \\ldots a_N\n\n\nOutput\n\nIf Taro will win, print `First`; if Jiro will win, print `Second`.\n\nExamples\n\nInput\n\n2 4\n2 3\n\n\nOutput\n\nFirst\n\n\nInput\n\n2 5\n2 3\n\n\nOutput\n\nSecond\n\n\nInput\n\n2 7\n2 3\n\n\nOutput\n\nFirst\n\n\nInput\n\n3 20\n1 2 3\n\n\nOutput\n\nSecond\n\n\nInput\n\n3 21\n1 2 3\n\n\nOutput\n\nFirst\n\n\nInput\n\n1 100000\n1\n\n\nOutput\n\nSecond", "grammar": {"answer": null}}
{"name": "p02251 Change Making", "description": "You want to make change for $ n $ cents. Assuming that you have infinite supply of coins of 1, 5, 10 and / or 25 cents coins respectively, find the minimum number of coins you need.\n\nConstraints\n\n* $ 1 \\ le n \\ le 10 ^ 9 $\n\nInput\n\n\n$ n $\n\n\nThe integer $ n $ is given in a line.\n\noutput\n\nPrint the minimum number of coins you need in a line.\n\nExamples\n\nInput\n\n100\n\n\nOutput\n\n4\n\n\nInput\n\n54321\n\n\nOutput\n\n2175", "grammar": {"answer": null}}
{"name": "122_A. Lucky Division", "description": "Petya loves lucky numbers. Everybody knows that lucky numbers are positive integers whose decimal representation contains only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.\n\nPetya calls a number almost lucky if it could be evenly divided by some lucky number. Help him find out if the given number n is almost lucky.\n\nInput\n\nThe single line contains an integer n (1 ≤ n ≤ 1000) — the number that needs to be checked.\n\nOutput\n\nIn the only line print \"YES\" (without the quotes), if number n is almost lucky. Otherwise, print \"NO\" (without the quotes).\n\nExamples\n\nInput\n\n47\n\n\nOutput\n\nYES\n\n\nInput\n\n16\n\n\nOutput\n\nYES\n\n\nInput\n\n78\n\n\nOutput\n\nNO\n\nNote\n\nNote that all lucky numbers are almost lucky as any number is evenly divisible by itself.\n\nIn the first sample 47 is a lucky number. In the second sample 16 is divisible by 4.", "grammar": {"answer": null}}
{"name": "p00064 Secret Number", "description": "The new PIN is hard to remember. I was told that I shouldn't take notes, but I don't think I can remember them. Therefore, I decided to embed a numerical value in the text and make a note of the PIN. Here, the sum of all the numbers is the PIN.\n\nCreate a program that reads the memorandum and outputs the PIN code.\n\n\n\nInput\n\nSentences with embedded positive integers are given over multiple lines. Each line is a character string containing single-byte alphanumeric characters, symbols, and spaces, or a blank line. However, you are guaranteed to enter no more than 80 characters per line and a PIN of 10,000 or less.\n\nOutput\n\nThe PIN (the sum of positive integers in the text) is output on one line.\n\nExample\n\nInput\n\nThereare100yenonthetable.Iam17yearsold.\nIshouldgohomeat6pm.\n\n\nOutput\n\n123", "grammar": {"answer": null}}
{"name": "p01750 Hyperrectangle", "description": "Sunuke received a d-dimensional hypercube with a side length of l1 × ... × ld as a birthday present. Sunuke placed this rectangular parallelepiped so that the range of the i-th coordinate was 0 or more and li or less, and ate the part that satisfied x1 + ... + xd ≤ s. However, xi represents the i-th coordinate. If the volume of the part eaten by Sunuke is V, it can be proved that d! V (V multiplied by the factorial of d) is an integer. Find the remainder of d! V divided by 1,000,000,007.\n\nConstraints\n\n* 2 ≤ d ≤ 300\n* 1 ≤ li ≤ 300\n* 0 ≤ s ≤ $ \\ sum l_ {i} $\n* All inputs are integers\n\nInput\n\n\nd\nl1\n.. ..\nld\ns\n\n\nOutput\n\nOutput d! V divided by 1,000,000,007.\n\nExamples\n\nInput\n\n2\n6\n3\n4\n\n\nOutput\n\n15\n\n\nInput\n\n5\n12\n34\n56\n78\n90\n123\n\n\nOutput\n\n433127538", "grammar": {"answer": null}}
{"name": "p03534 CODE FESTIVAL 2017 Final (Parallel) - Palindrome-phobia", "description": "Snuke has a string S consisting of three kinds of letters: `a`, `b` and `c`.\n\nHe has a phobia for palindromes, and wants to permute the characters in S so that S will not contain a palindrome of length 2 or more as a substring. Determine whether this is possible.\n\nConstraints\n\n* 1 \\leq |S| \\leq 10^5\n* S consists of `a`, `b` and `c`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nIf the objective is achievable, print `YES`; if it is unachievable, print `NO`.\n\nExamples\n\nInput\n\nabac\n\n\nOutput\n\nYES\n\n\nInput\n\naba\n\n\nOutput\n\nNO\n\n\nInput\n\nbabacccabab\n\n\nOutput\n\nYES", "grammar": {"answer": null}}
{"name": "p02234 Matrix Chain Multiplication", "description": "The goal of the matrix-chain multiplication problem is to find the most efficient way to multiply given $n$ matrices $M_1, M_2, M_3,...,M_n$.\n\nWrite a program which reads dimensions of $M_i$, and finds the minimum number of scalar multiplications to compute the maxrix-chain multiplication $M_1M_2...M_n$.\n\nConstraints\n\n* $1 \\leq n \\leq 100$\n* $1 \\leq r, c \\leq 100$\n\nInput\n\nIn the first line, an integer $n$ is given. In the following $n$ lines, the dimension of matrix $M_i$ ($i = 1...n$) is given by two integers $r$ and $c$ which respectively represents the number of rows and columns of $M_i$.\n\nOutput\n\nPrint the minimum number of scalar multiplication in a line.\n\nExample\n\nInput\n\n6\n30 35\n35 15\n15 5\n5 10\n10 20\n20 25\n\n\nOutput\n\n15125", "grammar": {"answer": null}}
{"name": "911_G. Mass Change Queries", "description": "You are given an array a consisting of n integers. You have to process q queries to this array; each query is given as four numbers l, r, x and y, denoting that for every i such that l ≤ i ≤ r and ai = x you have to set ai equal to y.\n\nPrint the array after all queries are processed.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 200000) — the size of array a.\n\nThe second line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 100) — the elements of array a.\n\nThe third line contains one integer q (1 ≤ q ≤ 200000) — the number of queries you have to process.\n\nThen q lines follow. i-th line contains four integers l, r, x and y denoting i-th query (1 ≤ l ≤ r ≤ n, 1 ≤ x, y ≤ 100).\n\nOutput\n\nPrint n integers — elements of array a after all changes are made.\n\nExample\n\nInput\n\n5\n1 2 3 4 5\n3\n3 5 3 5\n1 5 5 1\n1 5 1 5\n\n\nOutput\n\n5 2 5 4 5 ", "grammar": {"answer": null}}
{"name": "p02937 AtCoder Beginner Contest 138 - Strings of Impurity", "description": "Given are two strings s and t consisting of lowercase English letters. Determine if there exists an integer i satisfying the following condition, and find the minimum such i if it exists.\n\n* Let s' be the concatenation of 10^{100} copies of s. t is a subsequence of the string {s'}_1{s'}_2\\ldots{s'}_i (the first i characters in s').\n\nConstraints\n\n* 1 \\leq |s| \\leq 10^5\n* 1 \\leq |t| \\leq 10^5\n* s and t consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\ns\nt\n\n\nOutput\n\nIf there exists an integer i satisfying the following condition, print the minimum such i; otherwise, print `-1`.\n\nExamples\n\nInput\n\ncontest\nson\n\n\nOutput\n\n10\n\n\nInput\n\ncontest\nprogramming\n\n\nOutput\n\n-1\n\n\nInput\n\ncontest\nsentence\n\n\nOutput\n\n33", "grammar": {"answer": null}}
{"name": "p03136 AtCoder Beginner Contest 117 - Polygon", "description": "Determine if an N-sided polygon (not necessarily convex) with sides of length L_1, L_2, ..., L_N can be drawn in a two-dimensional plane.\n\nYou can use the following theorem:\n\nTheorem: an N-sided polygon satisfying the condition can be drawn if and only if the longest side is strictly shorter than the sum of the lengths of the other N-1 sides.\n\nConstraints\n\n* All values in input are integers.\n* 3 \\leq N \\leq 10\n* 1 \\leq L_i \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nL_1 L_2 ... L_N\n\n\nOutput\n\nIf an N-sided polygon satisfying the condition can be drawn, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n4\n3 8 5 1\n\n\nOutput\n\nYes\n\n\nInput\n\n4\n3 8 4 1\n\n\nOutput\n\nNo\n\n\nInput\n\n10\n1 8 10 5 8 12 34 100 11 3\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "25_A. IQ test", "description": "Bob is preparing to pass IQ test. The most frequent task in this test is to find out which one of the given n numbers differs from the others. Bob observed that one number usually differs from the others in evenness. Help Bob — to check his answers, he needs a program that among the given n numbers finds one that is different in evenness.\n\nInput\n\nThe first line contains integer n (3 ≤ n ≤ 100) — amount of numbers in the task. The second line contains n space-separated natural numbers, not exceeding 100. It is guaranteed, that exactly one of these numbers differs from the others in evenness.\n\nOutput\n\nOutput index of number that differs from the others in evenness. Numbers are numbered from 1 in the input order.\n\nExamples\n\nInput\n\n5\n2 4 7 8 10\n\n\nOutput\n\n3\n\n\nInput\n\n4\n1 2 1 1\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "290_D. Orange", "description": "<image>\n\nInput\n\nThe first line of the input is a string (between 1 and 50 characters long, inclusive). Each character will be a letter of English alphabet, lowercase or uppercase.\n\nThe second line of the input is an integer between 0 and 26, inclusive.\n\nOutput\n\nOutput the required string.\n\nExamples\n\nInput\n\nAprilFool\n14\n\n\nOutput\n\nAprILFooL", "grammar": {"answer": null}}
{"name": "959_D. Mahmoud and Ehab and another array construction task", "description": "Mahmoud has an array a consisting of n integers. He asked Ehab to find another array b of the same length such that:\n\n  * b is lexicographically greater than or equal to a. \n  * bi ≥ 2. \n  * b is pairwise coprime: for every 1 ≤ i < j ≤ n, bi and bj are coprime, i. e. GCD(bi, bj) = 1, where GCD(w, z) is the greatest common divisor of w and z. \n\n\n\nEhab wants to choose a special array so he wants the lexicographically minimal array between all the variants. Can you find it?\n\nAn array x is lexicographically greater than an array y if there exists an index i such than xi > yi and xj = yj for all 1 ≤ j < i. An array x is equal to an array y if xi = yi for all 1 ≤ i ≤ n.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 105), the number of elements in a and b.\n\nThe second line contains n integers a1, a2, ..., an (2 ≤ ai ≤ 105), the elements of a.\n\nOutput\n\nOutput n space-separated integers, the i-th of them representing bi.\n\nExamples\n\nInput\n\n5\n2 3 5 4 13\n\n\nOutput\n\n2 3 5 7 11 \n\nInput\n\n3\n10 3 7\n\n\nOutput\n\n10 3 7 \n\nNote\n\nNote that in the second sample, the array is already pairwise coprime so we printed it.", "grammar": {"answer": null}}
{"name": "p02862 AtCoder Beginner Contest 145 - Knight", "description": "There is a knight - the chess piece - at the origin (0, 0) of a two-dimensional grid.\n\nWhen the knight is at the square (i, j), it can be moved to either (i+1,j+2) or (i+2, j+1).\n\nIn how many ways can the knight reach the square (X, Y)?\n\nFind the number of ways modulo 10^9 + 7.\n\nConstraints\n\n* 1 \\leq X \\leq 10^6\n* 1 \\leq Y \\leq 10^6\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX Y\n\n\nOutput\n\nPrint the number of ways for the knight to reach (X, Y) from (0, 0), modulo 10^9 + 7.\n\nExamples\n\nInput\n\n3 3\n\n\nOutput\n\n2\n\n\nInput\n\n2 2\n\n\nOutput\n\n0\n\n\nInput\n\n999999 999999\n\n\nOutput\n\n151840682", "grammar": {"answer": null}}
{"name": "p02352 RMQ and RAQ", "description": "Write a program which manipulates a sequence $A$ = {$a_0, a_1, ..., a_{n-1}$} with the following operations:\n\n* $add(s, t, x)$ : add $x$ to $a_s, a_{s+1}, ..., a_t$.\n* $find(s, t)$ : report the minimum value in $a_s, a_{s+1}, ..., a_t$.\n\n\n\nNote that the initial values of $a_i ( i = 0, 1, ..., n-1 )$ are 0.\n\nConstraints\n\n* $1 ≤ n ≤ 100000$\n* $1 ≤ q ≤ 100000$\n* $0 ≤ s ≤ t < n$\n* $-1000 ≤ x ≤ 1000$\n\nInput\n\n\n$n$ $q$\n$query_1$\n$query_2$\n:\n$query_q$\n\n\nIn the first line, $n$ (the number of elements in $A$) and $q$ (the number of queries) are given. Then, $i$th query $query_i$ is given in the following format:\n\n\n0 $s$ $t$ $x$\n\n\nor\n\n\n1 $s$ $t$\n\n\nThe first digit represents the type of the query. '0' denotes $add(s, t, x)$ and '1' denotes $find(s, t)$.\n\nOutput\n\nFor each $find$ query, print the minimum value.\n\nExample\n\nInput\n\n6 7\n0 1 3 1\n0 2 4 -2\n1 0 5\n1 0 1\n0 3 5 3\n1 3 4\n1 0 5\n\n\nOutput\n\n-2\n0\n1\n-1", "grammar": {"answer": null}}
{"name": "p02683 AtCoder Beginner Contest 167 - Skill Up", "description": "Constraints\n\n* All values in input are integers.\n* 1\\leq N, M\\leq 12\n* 1\\leq X\\leq 10^5\n* 1\\leq C_i \\leq 10^5\n* 0\\leq A_{i, j} \\leq 10^5\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M X\nC_1 A_{1,1} A_{1,2} \\cdots A_{1,M}\nC_2 A_{2,1} A_{2,2} \\cdots A_{2,M}\n\\vdots\nC_N A_{N,1} A_{N,2} \\cdots A_{N,M}\n\n\nOutput\n\nIf the objective is not achievable, print `-1`; otherwise, print the minimum amount of money needed to achieve it.\n\nExamples\n\nInput\n\n3 3 10\n60 2 2 4\n70 8 7 9\n50 2 3 9\n\n\nOutput\n\n120\n\n\nInput\n\n3 3 10\n100 3 1 4\n100 1 5 9\n100 2 6 5\n\n\nOutput\n\n-1\n\n\nInput\n\n8 5 22\n100 3 7 5 3 1\n164 4 5 2 7 8\n334 7 2 7 2 9\n234 4 7 2 8 2\n541 5 4 3 3 6\n235 4 8 6 9 7\n394 3 6 1 6 2\n872 8 4 3 7 2\n\n\nOutput\n\n1067", "grammar": {"answer": null}}
{"name": "p02150 Milk", "description": "Problem\n\nIf you bring an empty bottle of $ a $ milk, you can exchange it for a new bottle of $ b $ milk.\nHow many bottles of milk can Mr. Kawabayashi, who initially has a bottle of $ x $ milk, drink? Output the remainder after dividing by $ 1000000007 $.\n\nConstraints\n\nThe input satisfies the following conditions.\n\n* $ 1 \\ leq a \\ leq 10 ^ {15} $\n* $ 0 \\ leq b \\ lt a $\n* $ 0 \\ leq x \\ leq 10 ^ {15} $\n\nInput\n\nThe input is given in the following format.\n\n\n$ a $ $ b $ $ x $\n\n\nThree integers $ a $, $ b $, $ x $ are given, separated by spaces.\n\nOutput\n\nPrint the answer on one line.\n\nExamples\n\nInput\n\n3 1 5\n\n\nOutput\n\n7\n\n\nInput\n\n3 2 5\n\n\nOutput\n\n11\n\n\nInput\n\n82 69 64\n\n\nOutput\n\n64\n\n\nInput\n\n316250877917604 316250877917599 681260158257385\n\n\nOutput\n\n62687552", "grammar": {"answer": null}}
{"name": "p03127 AtCoder Beginner Contest 118 - Monsters Battle Royale", "description": "There are N monsters, numbered 1, 2, ..., N.\n\nInitially, the health of Monster i is A_i.\n\nBelow, a monster with at least 1 health is called alive.\n\nUntil there is only one alive monster, the following is repeated:\n\n* A random alive monster attacks another random alive monster.\n* As a result, the health of the monster attacked is reduced by the amount equal to the current health of the monster attacking.\n\n\n\nFind the minimum possible final health of the last monster alive.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 10^5\n* 1 \\leq A_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the minimum possible final health of the last monster alive.\n\nExamples\n\nInput\n\n4\n2 10 8 40\n\n\nOutput\n\n2\n\n\nInput\n\n4\n5 13 8 1000000000\n\n\nOutput\n\n1\n\n\nInput\n\n3\n1000000000 1000000000 1000000000\n\n\nOutput\n\n1000000000", "grammar": {"answer": null}}
{"name": "p02260 Selection Sort", "description": "Write a program of the Selection Sort algorithm which sorts a sequence A in ascending order. The algorithm should be based on the following pseudocode:\n\n\nSelectionSort(A)\n1 for i = 0 to A.length-1\n2     mini = i\n3     for j = i to A.length-1\n4         if A[j] < A[mini]\n5             mini = j\n6     swap A[i] and A[mini]\n\n\nNote that, indices for array elements are based on 0-origin.\n\nYour program should also print the number of swap operations defined in line 6 of the pseudocode in the case where i ≠ mini.\n\nConstraints\n\n1 ≤ N ≤ 100\n\nInput\n\nThe first line of the input includes an integer N, the number of elements in the sequence.\n\nIn the second line, N elements of the sequence are given separated by space characters.\n\nOutput\n\nThe output consists of 2 lines.\n\nIn the first line, please print the sorted sequence. Two contiguous elements of the sequence should be separated by a space character.\n\nIn the second line, please print the number of swap operations.\n\nExamples\n\nInput\n\n6\n5 6 4 2 1 3\n\n\nOutput\n\n1 2 3 4 5 6\n4\n\n\nInput\n\n6\n5 2 4 6 1 3\n\n\nOutput\n\n1 2 3 4 5 6\n3", "grammar": {"answer": null}}
{"name": "617_D. Polyline", "description": "There are three points marked on the coordinate plane. The goal is to make a simple polyline, without self-intersections and self-touches, such that it passes through all these points. Also, the polyline must consist of only segments parallel to the coordinate axes. You are to find the minimum number of segments this polyline may consist of.\n\nInput\n\nEach of the three lines of the input contains two integers. The i-th line contains integers xi and yi ( - 109 ≤ xi, yi ≤ 109) — the coordinates of the i-th point. It is guaranteed that all points are distinct.\n\nOutput\n\nPrint a single number — the minimum possible number of segments of the polyline.\n\nExamples\n\nInput\n\n1 -1\n1 1\n1 2\n\n\nOutput\n\n1\n\n\nInput\n\n-1 -1\n-1 3\n4 3\n\n\nOutput\n\n2\n\n\nInput\n\n1 1\n2 3\n3 2\n\n\nOutput\n\n3\n\nNote\n\nThe variant of the polyline in the first sample: <image> The variant of the polyline in the second sample: <image> The variant of the polyline in the third sample: <image>", "grammar": {"answer": null}}
{"name": "p02301 Diameter of a Convex Polygon", "description": "Find the diameter of a convex polygon g. In other words, find a pair of points that have maximum distance between them.\n\nConstraints\n\n* 3 ≤ n ≤ 80000\n* -100 ≤ xi, yi ≤ 100\n* No point in the g will occur more than once.\n\nInput\n\n\nn\nx1 y1\nx2 y2\n:\nxn yn\n\n\nThe first integer n is the number of points in g.\n\nIn the following lines, the coordinate of the i-th point pi is given by two real numbers xi and yi. The coordinates of points are given in the order of counter-clockwise visit of them. Each value is a real number with at most 6 digits after the decimal point.\n\nOutput\n\nPrint the diameter of g in a line. The output values should be in a decimal fraction with an error less than 0.000001.\n\nExamples\n\nInput\n\n3\n0.0 0.0\n4.0 0.0\n2.0 2.0\n\n\nOutput\n\n4.00\n\n\nInput\n\n4\n0.0 0.0\n1.0 0.0\n1.0 1.0\n0.0 1.0\n\n\nOutput\n\n1.414213562373", "grammar": {"answer": null}}
{"name": "p03242 AtCoder Beginner Contest 111 - AtCoder Beginner Contest 999", "description": "Cat Snuke is learning to write characters. Today, he practiced writing digits `1` and `9`, but he did it the other way around.\n\nYou are given a three-digit integer n written by Snuke. Print the integer obtained by replacing each digit `1` with `9` and each digit `9` with `1` in n.\n\nConstraints\n\n* 111 \\leq n \\leq 999\n* n is an integer consisting of digits `1` and `9`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nn\n\n\nOutput\n\nPrint the integer obtained by replacing each occurrence of `1` with `9` and each occurrence of `9` with `1` in n.\n\nExamples\n\nInput\n\n119\n\n\nOutput\n\n991\n\n\nInput\n\n999\n\n\nOutput\n\n111", "grammar": {"answer": null}}
{"name": "p02437 Priority Queue", "description": "Priority queue is a container of elements which the element with the highest priority should be extracted first.\n\nFor $n$ priority queues $Q_i$ ($i = 0, 1, ..., n-1$) of integers, perform a sequence of the following operations.\n\n* insert($t$, $x$): Insert $x$ to $Q_t$.\n* getMax($t$): Report the maximum value in $Q_t$. If $Q_t$ is empty, do nothing.\n* deleteMax($t$): Delete the maximum element from $Q_t$. If $Q_t$ is empty, do nothing.\n\n\n\nIn the initial state, all queues are empty.\n\nConstraints\n\n* $1 \\leq n \\leq 1,000$\n* $1 \\leq q \\leq 200,000$\n* $-1,000,000,000 \\leq x \\leq 1,000,000,000$\n\nInput\n\nThe input is given in the following format.\n\n\n$n \\; q$\n$query_1$\n$query_2$\n:\n$query_q$\n\n\nEach query $query_i$ is given by\n\n\n0 $t$ $x$\n\n\nor\n\n\n1 $t$\n\n\nor\n\n\n2 $t$\n\n\nwhere the first digits 0, 1 and 2 represent insert, getMax and deleteMax operations respectively.\n\nOutput\n\nFor each getMax operation, print an integer in a line.\n\nExample\n\nInput\n\n2 10\n0 0 3\n0 0 9\n0 0 1\n1 0\n2 0\n1 0\n0 0 4\n1 0\n0 1 8\n1 1\n\n\nOutput\n\n9\n3\n4\n8", "grammar": {"answer": null}}
{"name": "424_A. Squats", "description": "Pasha has many hamsters and he makes them work out. Today, n hamsters (n is even) came to work out. The hamsters lined up and each hamster either sat down or stood up.\n\nFor another exercise, Pasha needs exactly <image> hamsters to stand up and the other hamsters to sit down. In one minute, Pasha can make some hamster ether sit down or stand up. How many minutes will he need to get what he wants if he acts optimally well?\n\nInput\n\nThe first line contains integer n (2 ≤ n ≤ 200; n is even). The next line contains n characters without spaces. These characters describe the hamsters' position: the i-th character equals 'X', if the i-th hamster in the row is standing, and 'x', if he is sitting.\n\nOutput\n\nIn the first line, print a single integer — the minimum required number of minutes. In the second line, print a string that describes the hamsters' position after Pasha makes the required changes. If there are multiple optimal positions, print any of them.\n\nExamples\n\nInput\n\n4\nxxXx\n\n\nOutput\n\n1\nXxXx\n\n\nInput\n\n2\nXX\n\n\nOutput\n\n1\nxX\n\n\nInput\n\n6\nxXXxXx\n\n\nOutput\n\n0\nxXXxXx", "grammar": {"answer": null}}
{"name": "p03153 KEYENCE Programming Contest 2019 - Connecting Cities", "description": "There are N cities in Republic of AtCoder. The size of the i-th city is A_{i}. Takahashi would like to build N-1 bidirectional roads connecting two cities so that any city can be reached from any other city by using these roads.\n\nAssume that the cost of building a road connecting the i-th city and the j-th city is |i-j| \\times D + A_{i} + A_{j}. For Takahashi, find the minimum possible total cost to achieve the objective.\n\nConstraints\n\n* 1 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq D \\leq 10^9\n* 1 \\leq A_{i} \\leq 10^9\n* A_{i} and D are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN D\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the minimum possible total cost.\n\nExamples\n\nInput\n\n3 1\n1 100 1\n\n\nOutput\n\n106\n\n\nInput\n\n3 1000\n1 100 1\n\n\nOutput\n\n2202\n\n\nInput\n\n6 14\n25 171 7 1 17 162\n\n\nOutput\n\n497\n\n\nInput\n\n12 5\n43 94 27 3 69 99 56 25 8 15 46 8\n\n\nOutput\n\n658", "grammar": {"answer": null}}
{"name": "p02369 Cycle Detection for a Directed Graph", "description": "Find a cycle in a directed graph G(V, E).\n\nConstraints\n\n* 1 ≤ |V| ≤ 100\n* 0 ≤ |E| ≤ 1,000\n* si ≠ ti\n\nInput\n\nA directed graph G is given in the following format:\n\n\n|V| |E|\ns0 t0\ns1 t1\n:\ns|E|-1 t|E|-1\n\n\n|V| is the number of nodes and |E| is the number of edges in the graph. The graph nodes are named with the numbers 0, 1,..., |V|-1 respectively.\n\nsi and ti represent source and target nodes of i-th edge (directed).\n\nOutput\n\nPrint 1 if G has cycle(s), 0 otherwise.\n\nExamples\n\nInput\n\n3 3\n0 1\n0 2\n1 2\n\n\nOutput\n\n0\n\n\nInput\n\n3 3\n0 1\n1 2\n2 0\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p03679 AtCoder Beginner Contest 065 - Expired?", "description": "Takahashi has a strong stomach. He never gets a stomachache from eating something whose \"best-by\" date is at most X days earlier. He gets a stomachache if the \"best-by\" date of the food is X+1 or more days earlier, though.\n\nOther than that, he finds the food delicious if he eats it not later than the \"best-by\" date. Otherwise, he does not find it delicious.\n\nTakahashi bought some food A days before the \"best-by\" date, and ate it B days after he bought it.\n\nWrite a program that outputs `delicious` if he found it delicious, `safe` if he did not found it delicious but did not get a stomachache either, and `dangerous` if he got a stomachache.\n\nConstraints\n\n* 1 ≤ X,A,B ≤ 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX A B\n\n\nOutput\n\nPrint `delicious` if Takahashi found the food delicious; print `safe` if he neither found it delicious nor got a stomachache; print `dangerous` if he got a stomachache.\n\nExamples\n\nInput\n\n4 3 6\n\n\nOutput\n\nsafe\n\n\nInput\n\n6 5 1\n\n\nOutput\n\ndelicious\n\n\nInput\n\n3 7 12\n\n\nOutput\n\ndangerous", "grammar": {"answer": null}}
{"name": "939_A. Love Triangle", "description": "As you could know there are no male planes nor female planes. However, each plane on Earth likes some other plane. There are n planes on Earth, numbered from 1 to n, and the plane with number i likes the plane with number fi, where 1 ≤ fi ≤ n and fi ≠ i.\n\nWe call a love triangle a situation in which plane A likes plane B, plane B likes plane C and plane C likes plane A. Find out if there is any love triangle on Earth.\n\nInput\n\nThe first line contains a single integer n (2 ≤ n ≤ 5000) — the number of planes.\n\nThe second line contains n integers f1, f2, ..., fn (1 ≤ fi ≤ n, fi ≠ i), meaning that the i-th plane likes the fi-th.\n\nOutput\n\nOutput «YES» if there is a love triangle consisting of planes on Earth. Otherwise, output «NO».\n\nYou can output any letter in lower case or in upper case.\n\nExamples\n\nInput\n\n5\n2 4 5 1 3\n\n\nOutput\n\nYES\n\n\nInput\n\n5\n5 5 5 5 1\n\n\nOutput\n\nNO\n\nNote\n\nIn first example plane 2 likes plane 4, plane 4 likes plane 1, plane 1 likes plane 2 and that is a love triangle.\n\nIn second example there are no love triangles.", "grammar": {"answer": null}}
{"name": "279_E. Beautiful Decomposition", "description": "Valera considers a number beautiful, if it equals 2k or -2k for some integer k (k ≥ 0). Recently, the math teacher asked Valera to represent number n as the sum of beautiful numbers. As Valera is really greedy, he wants to complete the task using as few beautiful numbers as possible. \n\nHelp Valera and find, how many numbers he is going to need. In other words, if you look at all decompositions of the number n into beautiful summands, you need to find the size of the decomposition which has the fewest summands.\n\nInput\n\nThe first line contains string s (1 ≤ |s| ≤ 106), that is the binary representation of number n without leading zeroes (n > 0).\n\nOutput\n\nPrint a single integer — the minimum amount of beautiful numbers that give a total of n.\n\nExamples\n\nInput\n\n10\n\n\nOutput\n\n1\n\n\nInput\n\n111\n\n\nOutput\n\n2\n\n\nInput\n\n1101101\n\n\nOutput\n\n4\n\nNote\n\nIn the first sample n = 2 is a beautiful number.\n\nIn the second sample n = 7 and Valera can decompose it into sum 23 + ( - 20).\n\nIn the third sample n = 109 can be decomposed into the sum of four summands as follows: 27 + ( - 24) + ( - 22) + 20.", "grammar": {"answer": null}}
{"name": "p02689 AtCoder Beginner Contest 166 - Peaks", "description": "There are N observatories in AtCoder Hill, called Obs. 1, Obs. 2, ..., Obs. N. The elevation of Obs. i is H_i. There are also M roads, each connecting two different observatories. Road j connects Obs. A_j and Obs. B_j.\n\nObs. i is said to be good when its elevation is higher than those of all observatories that can be reached from Obs. i using just one road. Note that Obs. i is also good when no observatory can be reached from Obs. i using just one road.\n\nHow many good observatories are there?\n\nConstraints\n\n* 2 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 10^5\n* 1 \\leq H_i \\leq 10^9\n* 1 \\leq A_i,B_i \\leq N\n* A_i \\neq B_i\n* Multiple roads may connect the same pair of observatories.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nH_1 H_2 ... H_N\nA_1 B_1\nA_2 B_2\n:\nA_M B_M\n\n\nOutput\n\nPrint the number of good observatories.\n\nExamples\n\nInput\n\n4 3\n1 2 3 4\n1 3\n2 3\n2 4\n\n\nOutput\n\n2\n\n\nInput\n\n6 5\n8 6 9 1 2 1\n1 3\n4 2\n4 3\n4 6\n4 6\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p02329 Coin Combination Problem", "description": "You have 4 bags A, B, C and D each of which includes N coins (there are totally 4N coins). Values of the coins in each bag are ai, bi, ci and di respectively.\n\nFind the number of combinations that result when you choose one coin from each bag (totally 4 coins) in such a way that the total value of the coins is V. You should distinguish the coins in a bag.\n\nConstraints\n\n* 1 ≤ N ≤ 1000\n* 1 ≤ ai, bi, ci, di ≤ 1016\n* 1 ≤ V ≤ 1016\n* All input values are given in integers\n\nInput\n\nThe input is given in the following format.\n\n\nN V\na1 a2 ... aN\nb1 b2 ... bN\nc1 c2 ... cN\nd1 d2 ... dN\n\n\nOutput\n\nPrint the number of combinations in a line.\n\nExamples\n\nInput\n\n3 14\n3 1 2\n4 8 2\n1 2 3\n7 3 2\n\n\nOutput\n\n9\n\n\nInput\n\n5 4\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n\n\nOutput\n\n625", "grammar": {"answer": null}}
{"name": "913_A. Modular Exponentiation", "description": "The following problem is well-known: given integers n and m, calculate\n\n<image>, \n\nwhere 2n = 2·2·...·2 (n factors), and <image> denotes the remainder of division of x by y.\n\nYou are asked to solve the \"reverse\" problem. Given integers n and m, calculate\n\n<image>. \n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 108).\n\nThe second line contains a single integer m (1 ≤ m ≤ 108).\n\nOutput\n\nOutput a single integer — the value of <image>.\n\nExamples\n\nInput\n\n4\n42\n\n\nOutput\n\n10\n\n\nInput\n\n1\n58\n\n\nOutput\n\n0\n\n\nInput\n\n98765432\n23456789\n\n\nOutput\n\n23456789\n\nNote\n\nIn the first example, the remainder of division of 42 by 24 = 16 is equal to 10.\n\nIn the second example, 58 is divisible by 21 = 2 without remainder, and the answer is 0.", "grammar": {"answer": null}}
{"name": "1084_C. The Fair Nut and String", "description": "The Fair Nut found a string s. The string consists of lowercase Latin letters. The Nut is a curious guy, so he wants to find the number of strictly increasing sequences p_1, p_2, …, p_k, such that: \n\n  1. For each i (1 ≤ i ≤ k), s_{p_i} = 'a'. \n  2. For each i (1 ≤ i < k), there is such j that p_i < j < p_{i + 1} and s_j = 'b'. \n\n\n\nThe Nut is upset because he doesn't know how to find the number. Help him.\n\nThis number should be calculated modulo 10^9 + 7.\n\nInput\n\nThe first line contains the string s (1 ≤ |s| ≤ 10^5) consisting of lowercase Latin letters.\n\nOutput\n\nIn a single line print the answer to the problem — the number of such sequences p_1, p_2, …, p_k modulo 10^9 + 7.\n\nExamples\n\nInput\n\nabbaa\n\n\nOutput\n\n5\n\nInput\n\nbaaaa\n\n\nOutput\n\n4\n\nInput\n\nagaa\n\n\nOutput\n\n3\n\nNote\n\nIn the first example, there are 5 possible sequences. [1], [4], [5], [1, 4], [1, 5].\n\nIn the second example, there are 4 possible sequences. [2], [3], [4], [5].\n\nIn the third example, there are 3 possible sequences. [1], [3], [4].", "grammar": {"answer": null}}
{"name": "57_A. Square Earth?", "description": "Meg the Rabbit decided to do something nice, specifically — to determine the shortest distance between two points on the surface of our planet. But Meg... what can you say, she wants everything simple. So, she already regards our planet as a two-dimensional circle. No, wait, it's even worse — as a square of side n. Thus, the task has been reduced to finding the shortest path between two dots on a square (the path should go through the square sides). To simplify the task let us consider the vertices of the square to lie at points whose coordinates are: (0, 0), (n, 0), (0, n) and (n, n).\n\nInput\n\nThe single line contains 5 space-separated integers: n, x1, y1, x2, y2 (1 ≤ n ≤ 1000, 0 ≤ x1, y1, x2, y2 ≤ n) which correspondingly represent a side of the square, the coordinates of the first point and the coordinates of the second point. It is guaranteed that the points lie on the sides of the square.\n\nOutput\n\nYou must print on a single line the shortest distance between the points.\n\nExamples\n\nInput\n\n2 0 0 1 0\n\n\nOutput\n\n1\n\n\nInput\n\n2 0 1 2 1\n\n\nOutput\n\n4\n\n\nInput\n\n100 0 0 100 100\n\n\nOutput\n\n200", "grammar": {"answer": null}}
{"name": "p03038 AtCoder Beginner Contest 127 - Integer Cards", "description": "You have N cards. On the i-th card, an integer A_i is written.\n\nFor each j = 1, 2, ..., M in this order, you will perform the following operation once:\n\nOperation: Choose at most B_j cards (possibly zero). Replace the integer written on each chosen card with C_j.\n\nFind the maximum possible sum of the integers written on the N cards after the M operations.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 10^5\n* 1 \\leq A_i, C_i \\leq 10^9\n* 1 \\leq B_i \\leq N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nA_1 A_2 ... A_N\nB_1 C_1\nB_2 C_2\n\\vdots\nB_M C_M\n\n\nOutput\n\nPrint the maximum possible sum of the integers written on the N cards after the M operations.\n\nExamples\n\nInput\n\n3 2\n5 1 4\n2 3\n1 5\n\n\nOutput\n\n14\n\n\nInput\n\n10 3\n1 8 5 7 100 4 52 33 13 5\n3 10\n4 30\n1 4\n\n\nOutput\n\n338\n\n\nInput\n\n3 2\n100 100 100\n3 99\n3 99\n\n\nOutput\n\n300\n\n\nInput\n\n11 3\n1 1 1 1 1 1 1 1 1 1 1\n3 1000000000\n4 1000000000\n3 1000000000\n\n\nOutput\n\n10000000001", "grammar": {"answer": null}}
{"name": "p02768 AtCoder Beginner Contest 156 - Bouquet", "description": "Akari has n kinds of flowers, one of each kind.\n\nShe is going to choose one or more of these flowers to make a bouquet.\n\nHowever, she hates two numbers a and b, so the number of flowers in the bouquet cannot be a or b.\n\nHow many different bouquets are there that Akari can make?\n\nFind the count modulo (10^9 + 7).\n\nHere, two bouquets are considered different when there is a flower that is used in one of the bouquets but not in the other bouquet.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq n \\leq 10^9\n* 1 \\leq a < b \\leq \\textrm{min}(n, 2 \\times 10^5)\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nn a b\n\n\nOutput\n\nPrint the number of bouquets that Akari can make, modulo (10^9 + 7). (If there are no such bouquets, print `0`.)\n\nExamples\n\nInput\n\n4 1 3\n\n\nOutput\n\n7\n\n\nInput\n\n1000000000 141421 173205\n\n\nOutput\n\n34076506", "grammar": {"answer": null}}
{"name": "p03799 AtCoder Regular Contest 069 - Scc Puzzle", "description": "Snuke loves puzzles.\n\nToday, he is working on a puzzle using `S`- and `c`-shaped pieces. In this puzzle, you can combine two `c`-shaped pieces into one `S`-shaped piece, as shown in the figure below:\n\n9b0bd546db9f28b4093d417b8f274124.png\n\nSnuke decided to create as many `Scc` groups as possible by putting together one `S`-shaped piece and two `c`-shaped pieces.\n\nFind the maximum number of `Scc` groups that can be created when Snuke has N `S`-shaped pieces and M `c`-shaped pieces.\n\nConstraints\n\n* 1 ≤ N,M ≤ 10^{12}\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN M\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n1 6\n\n\nOutput\n\n2\n\n\nInput\n\n12345 678901\n\n\nOutput\n\n175897", "grammar": {"answer": null}}
{"name": "p03723 AtCoder Grand Contest 014 - Cookie Exchanges", "description": "Takahashi, Aoki and Snuke love cookies. They have A, B and C cookies, respectively. Now, they will exchange those cookies by repeating the action below:\n\n* Each person simultaneously divides his cookies in half and gives one half to each of the other two persons.\n\n\n\nThis action will be repeated until there is a person with odd number of cookies in hand.\n\nHow many times will they repeat this action? Note that the answer may not be finite.\n\nConstraints\n\n* 1 ≤ A,B,C ≤ 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C\n\n\nOutput\n\nPrint the number of times the action will be performed by the three people, if this number is finite. If it is infinite, print `-1` instead.\n\nExamples\n\nInput\n\n4 12 20\n\n\nOutput\n\n3\n\n\nInput\n\n14 14 14\n\n\nOutput\n\n-1\n\n\nInput\n\n454 414 444\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p03327 AtCoder Beginner Contest 099 - ABD", "description": "Decades have passed since the beginning of AtCoder Beginner Contest.\n\nThe contests are labeled as `ABC001`, `ABC002`, ... from the first round, but after the 999-th round `ABC999`, a problem occurred: how the future rounds should be labeled?\n\nIn the end, the labels for the rounds from the 1000-th to the 1998-th are decided: `ABD001`, `ABD002`, ..., `ABD999`.\n\nYou are given an integer N between 1 and 1998 (inclusive). Print the first three characters of the label of the N-th round of AtCoder Beginner Contest.\n\nConstraints\n\n* 1 \\leq N \\leq 1998\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the first three characters of the label of the N-th round of AtCoder Beginner Contest.\n\nExamples\n\nInput\n\n999\n\n\nOutput\n\nABC\n\n\nInput\n\n1000\n\n\nOutput\n\nABD\n\n\nInput\n\n1481\n\n\nOutput\n\nABD", "grammar": {"answer": null}}
{"name": "p03148 AtCoder Beginner Contest 116 - Various Sushi", "description": "There are N pieces of sushi. Each piece has two parameters: \"kind of topping\" t_i and \"deliciousness\" d_i. You are choosing K among these N pieces to eat. Your \"satisfaction\" here will be calculated as follows:\n\n* The satisfaction is the sum of the \"base total deliciousness\" and the \"variety bonus\".\n* The base total deliciousness is the sum of the deliciousness of the pieces you eat.\n* The variety bonus is x*x, where x is the number of different kinds of toppings of the pieces you eat.\n\n\n\nYou want to have as much satisfaction as possible. Find this maximum satisfaction.\n\nConstraints\n\n* 1 \\leq K \\leq N \\leq 10^5\n* 1 \\leq t_i \\leq N\n* 1 \\leq d_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nt_1 d_1\nt_2 d_2\n.\n.\n.\nt_N d_N\n\n\nOutput\n\nPrint the maximum satisfaction that you can obtain.\n\nExamples\n\nInput\n\n5 3\n1 9\n1 7\n2 6\n2 5\n3 1\n\n\nOutput\n\n26\n\n\nInput\n\n7 4\n1 1\n2 1\n3 1\n4 6\n4 5\n4 5\n4 5\n\n\nOutput\n\n25\n\n\nInput\n\n6 5\n5 1000000000\n2 990000000\n3 980000000\n6 970000000\n6 960000000\n4 950000000\n\n\nOutput\n\n4900000016", "grammar": {"answer": null}}
{"name": "p02459 Map: Search", "description": "For a dictionary $M$ that stores elements formed by a pair of a string key and an integer value, perform a sequence of the following operations. Note that each key in $M$ must be unique.\n\n* insert($key$, $x$): Insert an element formed by a pair of $key$ and $x$ to $M$. If there is an element with $key$, replace the corresponding value with $x$.\n* get($key$): Print the value with the specified $key$.\n\nConstraints\n\n* $1 \\leq q \\leq 200,000$\n* $1 \\leq x \\leq 1,000,000,000$\n* $1 \\leq $ length of $key$ $ \\leq 20$\n* $key$ consits of lower-case letter\n* For a get operation, the element with the specified key exists in $M$.\n\nInput\n\nThe input is given in the following format.\n\n\n$q$\n$query_1$\n$query_2$\n:\n$query_q$\n\n\nEach query $query_i$ is given by\n\n\n0 $key$ $x$\n\n\nor\n\n\n1 $key$\n\n\nwhere the first digits 0, 1 and 2 represent insert and get operations respectively.\n\nOutput\n\nFor each get operation, print an integer in a line.\n\nExample\n\nInput\n\n7\n0 blue 4\n0 red 1\n0 white 5\n1 red\n1 blue\n0 black 8\n1 black\n\n\nOutput\n\n1\n4\n8", "grammar": {"answer": null}}
{"name": "p02278 Minimum Cost Sort", "description": "You are given $n$ integers $w_i (i = 0, 1, ..., n-1)$ to be sorted in ascending order. You can swap two integers $w_i$ and $w_j$. Each swap operation has a cost, which is the sum of the two integers $w_i + w_j$. You can perform the operations any number of times.\n\nWrite a program which reports the minimal total cost to sort the given integers.\n\nConstraints\n\n* $1 \\leq n \\leq 1,000$\n* $0 \\leq w_i\\leq 10^4$\n* $w_i$ are all different\n\nInput\n\nIn the first line, an integer $n$ is given. In the second line, $n$ integers $w_i (i = 0, 1, 2, ... n-1)$ separated by space characters are given.\n\nOutput\n\nPrint the minimal cost in a line.\n\nExamples\n\nInput\n\n5\n1 5 3 4 2\n\n\nOutput\n\n7\n\n\nInput\n\n4\n4 3 2 1\n\n\nOutput\n\n10", "grammar": {"answer": null}}
{"name": "p02446 Unique", "description": "For a sequence of integers $A = \\\\{a_0, a_1, ..., a_{n-1}\\\\}$ which is sorted by ascending order, eliminate all equivalent elements.\n\nConstraints\n\n* $1 \\leq n \\leq 100,000$\n* $-1000,000,000 \\leq a_i \\leq 1,000,000,000$\n* $a_0 \\leq a_1 \\leq ... \\leq a_{n-1}$\n\nInput\n\nA sequence is given in the following format.\n\n\n$n$\n$a_0 \\; a_1 \\; ,..., \\; a_{n-1}$\n\n\nOutput\n\nPrint the sequence after eliminating equivalent elements in a line. Separate adjacency elements by a space character.\n\nExample\n\nInput\n\n4\n1 2 2 4\n\n\nOutput\n\n1 2 4", "grammar": {"answer": null}}
{"name": "p02416 Sum of Numbers", "description": "Write a program which reads an integer and prints sum of its digits.\n\n\n\nInput\n\nThe input consists of multiple datasets. For each dataset, an integer x is given in a line. The number of digits in x does not exceed 1000.\n\nThe input ends with a line including single zero. Your program should not process for this terminal symbol.\n\nOutput\n\nFor each dataset, print the sum of digits in x.\n\nExample\n\nInput\n\n123\n55\n1000\n0\n\n\nOutput\n\n6\n10\n1", "grammar": {"answer": null}}
{"name": "691_C. Exponential notation", "description": "You are given a positive decimal number x.\n\nYour task is to convert it to the \"simple exponential notation\".\n\nLet x = a·10b, where 1 ≤ a < 10, then in general case the \"simple exponential notation\" looks like \"aEb\". If b equals to zero, the part \"Eb\" should be skipped. If a is an integer, it should be written without decimal point. Also there should not be extra zeroes in a and b.\n\nInput\n\nThe only line contains the positive decimal number x. The length of the line will not exceed 106. Note that you are given too large number, so you can't use standard built-in data types \"float\", \"double\" and other.\n\nOutput\n\nPrint the only line — the \"simple exponential notation\" of the given number x.\n\nExamples\n\nInput\n\n16\n\n\nOutput\n\n1.6E1\n\n\nInput\n\n01.23400\n\n\nOutput\n\n1.234\n\n\nInput\n\n.100\n\n\nOutput\n\n1E-1\n\n\nInput\n\n100.\n\n\nOutput\n\n1E2", "grammar": {"answer": null}}
{"name": "1550_D. Excellent Arrays", "description": "Let's call an integer array a_1, a_2, ..., a_n good if a_i ≠ i for each i.\n\nLet F(a) be the number of pairs (i, j) (1 ≤ i < j ≤ n) such that a_i + a_j = i + j.\n\nLet's say that an array a_1, a_2, ..., a_n is excellent if: \n\n  * a is good; \n  * l ≤ a_i ≤ r for each i; \n  * F(a) is the maximum possible among all good arrays of size n. \n\n\n\nGiven n, l and r, calculate the number of excellent arrays modulo 10^9 + 7.\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 1000) — the number of test cases. \n\nThe first and only line of each test case contains three integers n, l, and r (2 ≤ n ≤ 2 ⋅ 10^5; -10^9 ≤ l ≤ 1; n ≤ r ≤ 10^9).\n\nIt's guaranteed that the sum of n doesn't exceed 2 ⋅ 10^5.\n\nOutput\n\nFor each test case, print the number of excellent arrays modulo 10^9 + 7.\n\nExample\n\nInput\n\n\n4\n3 0 3\n4 -3 5\n42 -33 55\n69 -42 146\n\n\nOutput\n\n\n4\n10\n143922563\n698570404\n\nNote\n\nIn the first test case, it can be proven that the maximum F(a) among all good arrays a is equal to 2. The excellent arrays are: \n\n  1. [2, 1, 2]; \n  2. [0, 3, 2]; \n  3. [2, 3, 2]; \n  4. [3, 0, 1]. ", "grammar": {"answer": null}}
{"name": "p02830 AtCoder Beginner Contest 148 - Strings with the Same Length", "description": "Given are strings s and t of length N each, both consisting of lowercase English letters.\n\nLet us form a new string by alternating the characters of S and the characters of T, as follows: the first character of S, the first character of T, the second character of S, the second character of T, ..., the N-th character of S, the N-th character of T. Print this new string.\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* |S| = |T| = N\n* S and T are strings consisting of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS T\n\n\nOutput\n\nPrint the string formed.\n\nExamples\n\nInput\n\n2\nip cc\n\n\nOutput\n\nicpc\n\n\nInput\n\n8\nhmhmnknk uuuuuuuu\n\n\nOutput\n\nhumuhumunukunuku\n\n\nInput\n\n5\naaaaa aaaaa\n\n\nOutput\n\naaaaaaaaaa", "grammar": {"answer": null}}
{"name": "21_C. Stripe 2", "description": "Once Bob took a paper stripe of n squares (the height of the stripe is 1 square). In each square he wrote an integer number, possibly negative. He became interested in how many ways exist to cut this stripe into three pieces so that the sum of numbers from each piece is equal to the sum of numbers from any other piece, and each piece contains positive integer amount of squares. Would you help Bob solve this problem?\n\nInput\n\nThe first input line contains integer n (1 ≤ n ≤ 105) — amount of squares in the stripe. The second line contains n space-separated numbers — they are the numbers written in the squares of the stripe. These numbers are integer and do not exceed 10000 in absolute value.\n\nOutput\n\nOutput the amount of ways to cut the stripe into three non-empty pieces so that the sum of numbers from each piece is equal to the sum of numbers from any other piece. Don't forget that it's allowed to cut the stripe along the squares' borders only.\n\nExamples\n\nInput\n\n4\n1 2 3 3\n\n\nOutput\n\n1\n\n\nInput\n\n5\n1 2 3 4 5\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02343 Disjoint Set: Union Find Tree", "description": "Write a program which manipulates a disjoint set S = {S1, S2, . . . , Sk}.\n\nFirst of all, the program should read an integer n, then make a disjoint set where each element consists of 0, 1, ... n−1 respectively.\n\nNext, the program should read an integer q and manipulate the set for q queries. There are two kinds of queries for different operations:\n\n* unite(x, y): unites sets that contain x and y, say Sx and Sy, into a new set.\n* same(x, y): determine whether x and y are in the same set.\n\nConstraints\n\n* 1 ≤ n ≤ 10000\n* 1 ≤ q ≤ 100000\n* x ≠ y\n\nInput\n\n\nn q\ncom1 x1 y1\ncom2 x2 y2\n...\ncomq xq yq\n\n\nIn the first line, n and q are given. Then, q queries are given where com represents the type of queries. '0' denotes unite and '1' denotes same operation.\n\nOutput\n\nFor each same operation, print 1 if x and y are in the same set, otherwise 0, in a line.\n\nExample\n\nInput\n\n5 12\n0 1 4\n0 2 3\n1 1 2\n1 3 4\n1 1 4\n1 3 2\n0 1 3\n1 2 4\n1 3 0\n0 0 4\n1 0 2\n1 3 0\n\n\nOutput\n\n0\n0\n1\n1\n1\n0\n1\n1", "grammar": {"answer": null}}
{"name": "p03331 AtCoder Grand Contest 025 - Digits Sum", "description": "Takahashi has two positive integers A and B.\n\nIt is known that A plus B equals N. Find the minimum possible value of \"the sum of the digits of A\" plus \"the sum of the digits of B\" (in base 10).\n\nConstraints\n\n* 2 ≤ N ≤ 10^5\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the minimum possible value of \"the sum of the digits of A\" plus \"the sum of the digits of B\".\n\nExamples\n\nInput\n\n15\n\n\nOutput\n\n6\n\n\nInput\n\n100000\n\n\nOutput\n\n10", "grammar": {"answer": null}}
{"name": "735_D. Taxes", "description": "Mr. Funt now lives in a country with a very specific tax laws. The total income of mr. Funt during this year is equal to n (n ≥ 2) burles and the amount of tax he has to pay is calculated as the maximum divisor of n (not equal to n, of course). For example, if n = 6 then Funt has to pay 3 burles, while for n = 25 he needs to pay 5 and if n = 2 he pays only 1 burle.\n\nAs mr. Funt is a very opportunistic person he wants to cheat a bit. In particular, he wants to split the initial n in several parts n1 + n2 + ... + nk = n (here k is arbitrary, even k = 1 is allowed) and pay the taxes for each part separately. He can't make some part equal to 1 because it will reveal him. So, the condition ni ≥ 2 should hold for all i from 1 to k.\n\nOstap Bender wonders, how many money Funt has to pay (i.e. minimal) if he chooses and optimal way to split n in parts.\n\nInput\n\nThe first line of the input contains a single integer n (2 ≤ n ≤ 2·109) — the total year income of mr. Funt.\n\nOutput\n\nPrint one integer — minimum possible number of burles that mr. Funt has to pay as a tax.\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n2\n\n\nInput\n\n27\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p03666 AtCoder Grand Contest 017 - Moderate Differences", "description": "There are N squares in a row. The leftmost square contains the integer A, and the rightmost contains the integer B. The other squares are empty.\n\nAohashi would like to fill the empty squares with integers so that the following condition is satisfied:\n\n* For any two adjacent squares, the (absolute) difference of the two integers in those squares is between C and D (inclusive).\n\n\n\nAs long as the condition is satisfied, it is allowed to use arbitrarily large or small integers to fill the squares. Determine whether it is possible to fill the squares under the condition.\n\nConstraints\n\n* 3 \\leq N \\leq 500000\n* 0 \\leq A \\leq 10^9\n* 0 \\leq B \\leq 10^9\n* 0 \\leq C \\leq D \\leq 10^9\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN A B C D\n\n\nOutput\n\nPrint `YES` if it is possible to fill the squares under the condition; print `NO` otherwise.\n\nExamples\n\nInput\n\n5 1 5 2 4\n\n\nOutput\n\nYES\n\n\nInput\n\n4 7 6 4 5\n\n\nOutput\n\nNO\n\n\nInput\n\n48792 105960835 681218449 90629745 90632170\n\n\nOutput\n\nNO\n\n\nInput\n\n491995 412925347 825318103 59999126 59999339\n\n\nOutput\n\nYES", "grammar": {"answer": null}}
{"name": "p01976 Anagram", "description": "problem\n\nGiven a sequence $ a_i $ of length $ N $. Output all integers $ K (1 \\ le K \\ le N) $ that satisfy the following conditions.\n\nCondition: Well sorted $ a_1, \\ cdots, a_K $ matches $ a_ {N-K + 1}, \\ cdots, a_N $.\n\n\n\n\n\nExample\n\nInput\n\n8\n5 2 4 9 4 9 2 5\n\n\nOutput\n\n1 2 4 6 7 8", "grammar": {"answer": null}}
{"name": "p01556 ConvexCut", "description": "A convex polygon consisting of N vertices is given. The coordinates of each vertex are represented counterclockwise by (X1, Y1), (X2, Y2), ……, (XN, YN). No matter what straight line passes through the point P, find the coordinates of the point P so that the areas of the two convex polygons obtained after cutting are equal.\n\nConstraints\n\n* All inputs are integers\n\n* 3 ≤ N ≤ 50\n\n* 0 ≤ | Xi |, | Yi | ≤ 1000000\n\n* The input polygon is a simple convex polygon.\n\n* The output must satisfy max (| X-cX |, | Y-cY |) ≤ 0.0001 when the output coordinates are (X, Y) and the exact solution is (cX, cY).\n\nInput\n\nThe input is given in the following format.\n\n> N\n> X1 Y1\n> X2 Y2\n> ……\n> XN YN\n>\n\nOutput\n\nIf there is a point that satisfies the condition of the problem statement, the coordinates of that point\n\n> X Y\n>\n\nOutput in the format of. If the point does not exist, output \"NA\" on one line.\n\nExamples\n\nInput\n\n4\n100 100\n0 100\n0 0\n100 0\n\n\nOutput\n\n50.00000 50.00000\n\n\nInput\n\n3\n100 100\n0 100\n0 0\n\n\nOutput\n\nNA", "grammar": {"answer": null}}
{"name": "p00003 Is it a Right Triangle?", "description": "Write a program which judges wheather given length of three side form a right triangle. Print \"YES\" if the given sides (integers) form a right triangle, \"NO\" if not so.\n\nConstraints\n\n* 1 ≤ length of the side ≤ 1,000\n* N ≤ 1,000\n\nInput\n\nInput consists of several data sets. In the first line, the number of data set, N is given. Then, N lines follow, each line corresponds to a data set. A data set consists of three integers separated by a single space.\n\nOutput\n\nFor each data set, print \"YES\" or \"NO\".\n\nExample\n\nInput\n\n3\n4 3 5\n4 3 6\n8 8 8\n\n\nOutput\n\nYES\nNO\nNO", "grammar": {"answer": null}}
{"name": "p02924 AtCoder Beginner Contest 139 - ModSum", "description": "For an integer N, we will choose a permutation \\\\{P_1, P_2, ..., P_N\\\\} of \\\\{1, 2, ..., N\\\\}.\n\nThen, for each i=1,2,...,N, let M_i be the remainder when i is divided by P_i.\n\nFind the maximum possible value of M_1 + M_2 + \\cdots + M_N.\n\nConstraints\n\n* N is an integer satisfying 1 \\leq N \\leq 10^9.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the maximum possible value of M_1 + M_2 + \\cdots + M_N.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n1\n\n\nInput\n\n13\n\n\nOutput\n\n78\n\n\nInput\n\n1\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "574_C. Bear and Poker", "description": "Limak is an old brown bear. He often plays poker with his friends. Today they went to a casino. There are n players (including Limak himself) and right now all of them have bids on the table. i-th of them has bid with size ai dollars.\n\nEach player can double his bid any number of times and triple his bid any number of times. The casino has a great jackpot for making all bids equal. Is it possible that Limak and his friends will win a jackpot?\n\nInput\n\nFirst line of input contains an integer n (2 ≤ n ≤ 105), the number of players.\n\nThe second line contains n integer numbers a1, a2, ..., an (1 ≤ ai ≤ 109) — the bids of players.\n\nOutput\n\nPrint \"Yes\" (without the quotes) if players can make their bids become equal, or \"No\" otherwise.\n\nExamples\n\nInput\n\n4\n75 150 75 50\n\n\nOutput\n\nYes\n\n\nInput\n\n3\n100 150 250\n\n\nOutput\n\nNo\n\nNote\n\nIn the first sample test first and third players should double their bids twice, second player should double his bid once and fourth player should both double and triple his bid.\n\nIt can be shown that in the second sample test there is no way to make all bids equal.", "grammar": {"answer": null}}
{"name": "1028_A. Find Square", "description": "Consider a table of size n × m, initially fully white. Rows are numbered 1 through n from top to bottom, columns 1 through m from left to right. Some square inside the table with odd side length was painted black. Find the center of this square.\n\nInput\n\nThe first line contains two integers n and m (1 ≤ n, m ≤ 115) — the number of rows and the number of columns in the table.\n\nThe i-th of the next n lines contains a string of m characters s_{i1} s_{i2} … s_{im} (s_{ij} is 'W' for white cells and 'B' for black cells), describing the i-th row of the table.\n\nOutput\n\nOutput two integers r and c (1 ≤ r ≤ n, 1 ≤ c ≤ m) separated by a space — the row and column numbers of the center of the black square.\n\nExamples\n\nInput\n\n5 6\nWWBBBW\nWWBBBW\nWWBBBW\nWWWWWW\nWWWWWW\n\n\nOutput\n\n2 4\n\n\nInput\n\n3 3\nWWW\nBWW\nWWW\n\n\nOutput\n\n2 1", "grammar": {"answer": null}}
{"name": "335_B. Palindrome", "description": "Given a string s, determine if it contains any palindrome of length exactly 100 as a subsequence. If it has any, print any one of them. If it doesn't have any, print a palindrome that is a subsequence of s and is as long as possible.\n\nInput\n\nThe only line of the input contains one string s of length n (1 ≤ n ≤ 5·104) containing only lowercase English letters.\n\nOutput\n\nIf s contains a palindrome of length exactly 100 as a subsequence, print any palindrome of length 100 which is a subsequence of s. If s doesn't contain any palindromes of length exactly 100, print a palindrome that is a subsequence of s and is as long as possible.\n\nIf there exists multiple answers, you are allowed to print any of them.\n\nExamples\n\nInput\n\nbbbabcbbb\n\n\nOutput\n\nbbbcbbb\n\n\nInput\n\nrquwmzexectvnbanemsmdufrg\n\n\nOutput\n\nrumenanemur\n\nNote\n\nA subsequence of a string is a string that can be derived from it by deleting some characters without changing the order of the remaining characters. A palindrome is a string that reads the same forward or backward.", "grammar": {"answer": null}}
{"name": "p02909 AtCoder Beginner Contest 141 - Weather Prediction", "description": "The weather in Takahashi's town changes day by day, in the following cycle: Sunny, Cloudy, Rainy, Sunny, Cloudy, Rainy, ...\n\nGiven is a string S representing the weather in the town today. Predict the weather tomorrow.\n\nConstraints\n\n* S is `Sunny`, `Cloudy`, or `Rainy`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint a string representing the expected weather tomorrow, in the same format in which input is given.\n\nExamples\n\nInput\n\nSunny\n\n\nOutput\n\nCloudy\n\n\nInput\n\nRainy\n\n\nOutput\n\nSunny", "grammar": {"answer": null}}
{"name": "p03293 AtCoder Beginner Contest 103 - String Rotation", "description": "You are given string S and T consisting of lowercase English letters.\n\nDetermine if S equals T after rotation.\n\nThat is, determine if S equals T after the following operation is performed some number of times:\n\nOperation: Let S = S_1 S_2 ... S_{|S|}. Change S to S_{|S|} S_1 S_2 ... S_{|S|-1}.\n\nHere, |X| denotes the length of the string X.\n\nConstraints\n\n* 2 \\leq |S| \\leq 100\n* |S| = |T|\n* S and T consist of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\nT\n\n\nOutput\n\nIf S equals T after rotation, print `Yes`; if it does not, print `No`.\n\nExamples\n\nInput\n\nkyoto\ntokyo\n\n\nOutput\n\nYes\n\n\nInput\n\nabc\narc\n\n\nOutput\n\nNo\n\n\nInput\n\naaaaaaaaaaaaaaab\naaaaaaaaaaaaaaab\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "p03478 AtCoder Beginner Contest 083 - Some Sums", "description": "Find the sum of the integers between 1 and N (inclusive), whose sum of digits written in base 10 is between A and B (inclusive).\n\nConstraints\n\n* 1 \\leq N \\leq 10^4\n* 1 \\leq A \\leq B \\leq 36\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN A B\n\n\nOutput\n\nPrint the sum of the integers between 1 and N (inclusive), whose sum of digits written in base 10 is between A and B (inclusive).\n\nExamples\n\nInput\n\n20 2 5\n\n\nOutput\n\n84\n\n\nInput\n\n10 1 2\n\n\nOutput\n\n13\n\n\nInput\n\n100 4 16\n\n\nOutput\n\n4554", "grammar": {"answer": null}}
{"name": "p02980 AtCoder Grand Contest 035 - Two Histograms", "description": "We have a square grid with N rows and M columns. Takahashi will write an integer in each of the squares, as follows:\n\n* First, write 0 in every square.\n* For each i=1,2,...,N, choose an integer k_i (0\\leq k_i\\leq M), and add 1 to each of the leftmost k_i squares in the i-th row.\n* For each j=1,2,...,M, choose an integer l_j (0\\leq l_j\\leq N), and add 1 to each of the topmost l_j squares in the j-th column.\n\n\n\nNow we have a grid where each square contains 0, 1, or 2. Find the number of different grids that can be made this way, modulo 998244353. We consider two grids different when there exists a square with different integers.\n\nConstraints\n\n* 1 \\leq N,M \\leq 5\\times 10^5\n* N and M are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\n\n\nOutput\n\nPrint the number of different grids that can be made, modulo 998244353.\n\nExamples\n\nInput\n\n1 2\n\n\nOutput\n\n8\n\n\nInput\n\n2 3\n\n\nOutput\n\n234\n\n\nInput\n\n10 7\n\n\nOutput\n\n995651918\n\n\nInput\n\n314159 265358\n\n\nOutput\n\n70273732", "grammar": {"answer": null}}
{"name": "863_A. Quasi-palindrome", "description": "Let quasi-palindromic number be such number that adding some leading zeros (possible none) to it produces a palindromic string. \n\nString t is called a palindrome, if it reads the same from left to right and from right to left.\n\nFor example, numbers 131 and 2010200 are quasi-palindromic, they can be transformed to strings \"131\" and \"002010200\", respectively, which are palindromes.\n\nYou are given some integer number x. Check if it's a quasi-palindromic number.\n\nInput\n\nThe first line contains one integer number x (1 ≤ x ≤ 109). This number is given without any leading zeroes.\n\nOutput\n\nPrint \"YES\" if number x is quasi-palindromic. Otherwise, print \"NO\" (without quotes).\n\nExamples\n\nInput\n\n131\n\n\nOutput\n\nYES\n\n\nInput\n\n320\n\n\nOutput\n\nNO\n\n\nInput\n\n2010200\n\n\nOutput\n\nYES", "grammar": {"answer": null}}
{"name": "1068_D. Array Without Local Maximums ", "description": "Ivan unexpectedly saw a present from one of his previous birthdays. It is array of n numbers from 1 to 200. Array is old and some numbers are hard to read. Ivan remembers that for all elements at least one of its neighbours ls not less than it, more formally:\n\na_{1} ≤ a_{2},\n\na_{n} ≤ a_{n-1} and\n\na_{i} ≤ max(a_{i-1},    a_{i+1}) for all i from 2 to n-1.\n\nIvan does not remember the array and asks to find the number of ways to restore it. Restored elements also should be integers from 1 to 200. Since the number of ways can be big, print it modulo 998244353.\n\nInput\n\nFirst line of input contains one integer n (2 ≤ n ≤ 10^{5}) — size of the array.\n\nSecond line of input contains n integers a_{i} — elements of array. Either a_{i} = -1 or 1 ≤ a_{i} ≤ 200. a_{i} = -1 means that i-th element can't be read.\n\nOutput\n\nPrint number of ways to restore the array modulo 998244353.\n\nExamples\n\nInput\n\n3\n1 -1 2\n\n\nOutput\n\n1\n\n\nInput\n\n2\n-1 -1\n\n\nOutput\n\n200\n\nNote\n\nIn the first example, only possible value of a_{2} is 2.\n\nIn the second example, a_{1} = a_{2} so there are 200 different values because all restored elements should be integers between 1 and 200. ", "grammar": {"answer": null}}
{"name": "365_A. Good Number", "description": "Let's call a number k-good if it contains all digits not exceeding k (0, ..., k). You've got a number k and an array a containing n numbers. Find out how many k-good numbers are in a (count each number every time it occurs in array a).\n\nInput\n\nThe first line contains integers n and k (1 ≤ n ≤ 100, 0 ≤ k ≤ 9). The i-th of the following n lines contains integer ai without leading zeroes (1 ≤ ai ≤ 109).\n\nOutput\n\nPrint a single integer — the number of k-good numbers in a.\n\nExamples\n\nInput\n\n10 6\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n\n\nOutput\n\n10\n\n\nInput\n\n2 1\n1\n10\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "804_E. The same permutation ", "description": "Seyyed and MoJaK are friends of Sajjad. Sajjad likes a permutation. Seyyed wants to change the permutation in a way that Sajjad won't like it. Seyyed thinks more swaps yield more probability to do that, so he makes MoJaK to perform a swap between every pair of positions (i, j), where i < j, exactly once. MoJaK doesn't like to upset Sajjad.\n\nGiven the permutation, determine whether it is possible to swap all pairs of positions so that the permutation stays the same. If it is possible find how to do that. \n\nInput\n\nThe first line contains single integer n (1 ≤ n ≤ 1000) — the size of the permutation.\n\nAs the permutation is not important, you can consider ai = i, where the permutation is a1, a2, ..., an.\n\nOutput\n\nIf it is not possible to swap all pairs of positions so that the permutation stays the same, print \"NO\",\n\nOtherwise print \"YES\", then print <image> lines: the i-th of these lines should contain two integers a and b (a < b) — the positions where the i-th swap is performed.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\nNO\n\n\nInput\n\n1\n\n\nOutput\n\nYES", "grammar": {"answer": null}}
{"name": "325_E. The Red Button", "description": "Piegirl found the red button. You have one last chance to change the inevitable end.\n\nThe circuit under the button consists of n nodes, numbered from 0 to n - 1. In order to deactivate the button, the n nodes must be disarmed in a particular order. Node 0 must be disarmed first. After disarming node i, the next node to be disarmed must be either node (2·i) modulo n or node (2·i) + 1 modulo n. The last node to be disarmed must be node 0. Node 0 must be disarmed twice, but all other nodes must be disarmed exactly once. \n\nYour task is to find any such order and print it. If there is no such order, print -1.\n\nInput\n\nInput consists of a single integer n (2 ≤ n ≤ 105).\n\nOutput\n\nPrint an order in which you can to disarm all nodes. If it is impossible, print -1 instead. If there are multiple orders, print any one of them.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n0 1 0\n\n\nInput\n\n3\n\n\nOutput\n\n-1\n\nInput\n\n4\n\n\nOutput\n\n0 1 3 2 0\n\n\nInput\n\n16\n\n\nOutput\n\n0 1 2 4 9 3 6 13 10 5 11 7 15 14 12 8 0", "grammar": {"answer": null}}
{"name": "484_A. Bits", "description": "Let's denote as <image> the number of bits set ('1' bits) in the binary representation of the non-negative integer x.\n\nYou are given multiple queries consisting of pairs of integers l and r. For each query, find the x, such that l ≤ x ≤ r, and <image> is maximum possible. If there are multiple such numbers find the smallest of them.\n\nInput\n\nThe first line contains integer n — the number of queries (1 ≤ n ≤ 10000).\n\nEach of the following n lines contain two integers li, ri — the arguments for the corresponding query (0 ≤ li ≤ ri ≤ 1018).\n\nOutput\n\nFor each query print the answer in a separate line.\n\nExamples\n\nInput\n\n3\n1 2\n2 4\n1 10\n\n\nOutput\n\n1\n3\n7\n\nNote\n\nThe binary representations of numbers from 1 to 10 are listed below:\n\n110 = 12\n\n210 = 102\n\n310 = 112\n\n410 = 1002\n\n510 = 1012\n\n610 = 1102\n\n710 = 1112\n\n810 = 10002\n\n910 = 10012\n\n1010 = 10102", "grammar": {"answer": null}}
{"name": "p03091 AtCoder Grand Contest 032 - Three Circuits", "description": "You are given a simple connected undirected graph consisting of N vertices and M edges. The vertices are numbered 1 to N, and the edges are numbered 1 to M.\n\nEdge i connects Vertex a_i and b_i bidirectionally.\n\nDetermine if three circuits (see Notes) can be formed using each of the edges exactly once.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N,M \\leq 10^{5}\n* 1 \\leq a_i, b_i \\leq N\n* The given graph is simple and connected.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\na_1 b_1\n:\na_M b_M\n\n\nOutput\n\nIf three circuits can be formed using each of the edges exactly once, print `Yes`; if they cannot, print `No`.\n\nExamples\n\nInput\n\n7 9\n1 2\n1 3\n2 3\n1 4\n1 5\n4 5\n1 6\n1 7\n6 7\n\n\nOutput\n\nYes\n\n\nInput\n\n3 3\n1 2\n2 3\n3 1\n\n\nOutput\n\nNo\n\n\nInput\n\n18 27\n17 7\n12 15\n18 17\n13 18\n13 6\n5 7\n7 1\n14 5\n15 11\n7 6\n1 9\n5 4\n18 16\n4 6\n7 2\n7 11\n6 3\n12 14\n5 2\n10 5\n7 8\n10 15\n3 15\n9 8\n7 15\n5 16\n18 15\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "p02450 Permutation Enumeration", "description": "For given an integer $n$, print all permutations of $\\\\{1, 2, ..., n\\\\}$ in lexicographic order.\n\nConstraints\n\n* $1 \\leq n \\leq 9$\n\nInput\n\nAn integer $n$ is given in a line.\n\nOutput\n\nPrint each permutation in a line in order. Separate adjacency elements by a space character.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n1 2\n2 1\n\n\nInput\n\n3\n\n\nOutput\n\n1 2 3\n1 3 2\n2 1 3\n2 3 1\n3 1 2\n3 2 1", "grammar": {"answer": null}}
{"name": "p03233 AtCoder Grand Contest 028 - Min Cost Cycle", "description": "We have a directed weighted graph with N vertices. Each vertex has two integers written on it, and the integers written on Vertex i are A_i and B_i.\n\nIn this graph, there is an edge from Vertex x to Vertex y for all pairs 1 \\leq x,y \\leq N, and its weight is {\\rm min}(A_x,B_y).\n\nWe will consider a directed cycle in this graph that visits every vertex exactly once. Find the minimum total weight of the edges in such a cycle.\n\nConstraints\n\n* 2 \\leq N \\leq 10^5\n* 1 \\leq A_i \\leq 10^9\n* 1 \\leq B_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 B_1\nA_2 B_2\n:\nA_N B_N\n\n\nOutput\n\nPrint the minimum total weight of the edges in such a cycle.\n\nExamples\n\nInput\n\n3\n1 5\n4 2\n6 3\n\n\nOutput\n\n7\n\n\nInput\n\n4\n1 5\n2 6\n3 7\n4 8\n\n\nOutput\n\n10\n\n\nInput\n\n6\n19 92\n64 64\n78 48\n57 33\n73 6\n95 73\n\n\nOutput\n\n227", "grammar": {"answer": null}}
{"name": "1331_D. Again?", "description": "\n\nInput\n\nThe only line of the input contains a 7-digit hexadecimal number. The first \"digit\" of the number is letter A, the rest of the \"digits\" are decimal digits 0-9.\n\nOutput\n\nOutput a single integer.\n\nExamples\n\nInput\n\n\nA278832\n\n\nOutput\n\n\n0\n\n\nInput\n\n\nA089956\n\n\nOutput\n\n\n0\n\n\nInput\n\n\nA089957\n\n\nOutput\n\n\n1\n\n\nInput\n\n\nA144045\n\n\nOutput\n\n\n1", "grammar": {"answer": null}}
{"name": "p02690 AtCoder Beginner Contest 166 - I hate Factorization", "description": "Give a pair of integers (A, B) such that A^5-B^5 = X. It is guaranteed that there exists such a pair for the given integer X.\n\nConstraints\n\n* 1 \\leq X \\leq 10^9\n* X is an integer.\n* There exists a pair of integers (A, B) satisfying the condition in Problem Statement.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX\n\n\nOutput\n\nPrint A and B, with space in between. If there are multiple pairs of integers (A, B) satisfying the condition, you may print any of them.\n\n\nA B\n\nOutput\n\nPrint A and B, with space in between. If there are multiple pairs of integers (A, B) satisfying the condition, you may print any of them.\n\n\nA B\n\nExamples\n\nInput\n\n33\n\n\nOutput\n\n2 -1\n\n\nInput\n\n1\n\n\nOutput\n\n0 -1", "grammar": {"answer": null}}
{"name": "p02632 AtCoder Beginner Contest 171 - Strivore", "description": "How many strings can be obtained by applying the following operation on a string S exactly K times: \"choose one lowercase English letter and insert it somewhere\"?\n\nThe answer can be enormous, so print it modulo (10^9+7).\n\nConstraints\n\n* K is an integer between 1 and 10^6 (inclusive).\n* S is a string of length between 1 and 10^6 (inclusive) consisting of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK\nS\n\n\nOutput\n\nPrint the number of strings satisfying the condition, modulo (10^9+7).\n\nExamples\n\nInput\n\n5\noof\n\n\nOutput\n\n575111451\n\n\nInput\n\n37564\nwhydidyoudesertme\n\n\nOutput\n\n318008117", "grammar": {"answer": null}}
{"name": "p03436 AtCoder Beginner Contest 088 - Grid Repainting", "description": "Constraints\n\n* H is an integer between 2 and 50 (inclusive).\n* W is an integer between 2 and 50 (inclusive).\n* s_{i, j} is `.` or `#` (1 \\leq i \\leq H, 1 \\leq j \\leq W).\n* s_{1, 1} and s_{H, W} are `.`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH W\ns_{1, 1}s_{1, 2}s_{1, 3} ... s_{1, W}\ns_{2, 1}s_{2, 2}s_{2, 3} ... s_{2, W}\n:   :\ns_{H, 1}s_{H, 2}s_{H, 3} ... s_{H, W}\n\n\nOutput\n\nPrint the maximum possible score that Snuke can achieve, or print -1 if the game cannot be completed.\n\nExamples\n\nInput\n\n3 3\n..#\n#..\n...\n\n\nOutput\n\n2\n\n\nInput\n\n3 3\n..#\n..\n...\n\n\nOutput\n\n2\n\n\nInput\n\n10 37\n.....................................\n...#...####...####..###...###...###..\n..#.#..#...#.##....#...#.#...#.#...#.\n..#.#..#...#.#.....#...#.#...#.#...#.\n.#...#.#..##.#.....#...#.#.###.#.###.\n.#####.####..#.....#...#..##....##...\n.#...#.#...#.#.....#...#.#...#.#...#.\n.#...#.#...#.##....#...#.#...#.#...#.\n.#...#.####...####..###...###...###..\n.....................................\n\n\nOutput\n\n209", "grammar": {"answer": null}}
{"name": "34_B. Sale", "description": "Once Bob got to a sale of old TV sets. There were n TV sets at that sale. TV set with index i costs ai bellars. Some TV sets have a negative price — their owners are ready to pay Bob if he buys their useless apparatus. Bob can «buy» any TV sets he wants. Though he's very strong, Bob can carry at most m TV sets, and he has no desire to go to the sale for the second time. Please, help Bob find out the maximum sum of money that he can earn.\n\nInput\n\nThe first line contains two space-separated integers n and m (1 ≤ m ≤ n ≤ 100) — amount of TV sets at the sale, and amount of TV sets that Bob can carry. The following line contains n space-separated integers ai ( - 1000 ≤ ai ≤ 1000) — prices of the TV sets. \n\nOutput\n\nOutput the only number — the maximum sum of money that Bob can earn, given that he can carry at most m TV sets.\n\nExamples\n\nInput\n\n5 3\n-6 0 35 -2 4\n\n\nOutput\n\n8\n\n\nInput\n\n4 2\n7 0 0 -7\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "1029_A. Many Equal Substrings", "description": "You are given a string t consisting of n lowercase Latin letters and an integer number k.\n\nLet's define a substring of some string s with indices from l to r as s[l ... r].\n\nYour task is to construct such string s of minimum possible length that there are exactly k positions i such that s[i ... i + n - 1] = t. In other words, your task is to construct such string s of minimum possible length that there are exactly k substrings of s equal to t.\n\nIt is guaranteed that the answer is always unique.\n\nInput\n\nThe first line of the input contains two integers n and k (1 ≤ n, k ≤ 50) — the length of the string t and the number of substrings.\n\nThe second line of the input contains the string t consisting of exactly n lowercase Latin letters.\n\nOutput\n\nPrint such string s of minimum possible length that there are exactly k substrings of s equal to t.\n\nIt is guaranteed that the answer is always unique.\n\nExamples\n\nInput\n\n3 4\naba\n\n\nOutput\n\nababababa\n\n\nInput\n\n3 2\ncat\n\n\nOutput\n\ncatcat", "grammar": {"answer": null}}
{"name": "p02258 Maximum Profit", "description": "You can obtain profits from foreign exchange margin transactions. For example, if you buy 1000 dollar at a rate of 100 yen per dollar, and sell them at a rate of 108 yen per dollar, you can obtain (108 - 100) × 1000 = 8000 yen.\n\nWrite a program which reads values of a currency $R_t$ at a certain time $t$ ($t = 0, 1, 2, ... n-1$), and reports the maximum value of $R_j - R_i$ where $j > i$ .\n\nConstraints\n\n* $2 \\leq n \\leq 200,000$\n* $1 \\leq R_t \\leq 10^9$\n\nInput\n\nThe first line contains an integer $n$. In the following $n$ lines, $R_t$ ($t = 0, 1, 2, ... n-1$) are given in order.\n\nOutput\n\nPrint the maximum value in a line.\n\nExamples\n\nInput\n\n6\n5\n3\n1\n3\n4\n3\n\n\nOutput\n\n3\n\n\nInput\n\n3\n4\n3\n2\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p03565 AtCoder Beginner Contest 076 - Dubious Document 2", "description": "E869120 found a chest which is likely to contain treasure.\nHowever, the chest is locked. In order to open it, he needs to enter a string S consisting of lowercase English letters.\nHe also found a string S', which turns out to be the string S with some of its letters (possibly all or none) replaced with `?`.\n\nOne more thing he found is a sheet of paper with the following facts written on it:\n\n* Condition 1: The string S contains a string T as a contiguous substring.\n* Condition 2: S is the lexicographically smallest string among the ones that satisfy Condition 1.\n\n\n\nPrint the string S.\nIf such a string does not exist, print `UNRESTORABLE`.\n\nConstraints\n\n* 1 \\leq |S'|, |T| \\leq 50\n* S' consists of lowercase English letters and `?`.\n* T consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\nT'\n\n\nOutput\n\nPrint the string S.\nIf such a string does not exist, print `UNRESTORABLE` instead.\n\nExamples\n\nInput\n\n?tc????\ncoder\n\n\nOutput\n\natcoder\n\n\nInput\n\n??p??d??\nabc\n\n\nOutput\n\nUNRESTORABLE", "grammar": {"answer": null}}
{"name": "p02791 AtCoder Beginner Contest 152 - Low Elements", "description": "Given is a permutation P_1, \\ldots, P_N of 1, \\ldots, N. Find the number of integers i (1 \\leq i \\leq N) that satisfy the following condition:\n\n* For any integer j (1 \\leq j \\leq i), P_i \\leq P_j.\n\nConstraints\n\n* 1 \\leq N \\leq 2 \\times 10^5\n* P_1, \\ldots, P_N is a permutation of 1, \\ldots, N.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nP_1 ... P_N\n\n\nOutput\n\nPrint the number of integers i that satisfy the condition.\n\nExamples\n\nInput\n\n5\n4 2 5 1 3\n\n\nOutput\n\n3\n\n\nInput\n\n4\n4 3 2 1\n\n\nOutput\n\n4\n\n\nInput\n\n6\n1 2 3 4 5 6\n\n\nOutput\n\n1\n\n\nInput\n\n8\n5 7 4 2 6 8 1 3\n\n\nOutput\n\n4\n\n\nInput\n\n1\n1\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "1417_C. k-Amazing Numbers", "description": "You are given an array a consisting of n integers numbered from 1 to n.\n\nLet's define the k-amazing number of the array as the minimum number that occurs in all of the subsegments of the array having length k (recall that a subsegment of a of length k is a contiguous part of a containing exactly k elements). If there is no integer occuring in all subsegments of length k for some value of k, then the k-amazing number is -1.\n\nFor each k from 1 to n calculate the k-amazing number of the array a.\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 1000) — the number of test cases. Then t test cases follow.\n\nThe first line of each test case contains one integer n (1 ≤ n ≤ 3 ⋅ 10^5) — the number of elements in the array. The second line contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ n) — the elements of the array. \n\nIt is guaranteed that the sum of n over all test cases does not exceed 3 ⋅ 10^5.\n\nOutput\n\nFor each test case print n integers, where the i-th integer is equal to the i-amazing number of the array.\n\nExample\n\nInput\n\n\n3\n5\n1 2 3 4 5\n5\n4 4 4 4 2\n6\n1 3 1 5 3 1\n\n\nOutput\n\n\n-1 -1 3 2 1 \n-1 4 4 4 2 \n-1 -1 1 1 1 1 ", "grammar": {"answer": null}}
{"name": "p02658 AtCoder Beginner Contest 169 - Multiplication 2", "description": "Given N integers A_1, ..., A_N, compute A_1 \\times ... \\times A_N.\n\nHowever, if the result exceeds 10^{18}, print `-1` instead.\n\nConstraints\n\n* 2 \\leq N \\leq 10^5\n* 0 \\leq A_i \\leq 10^{18}\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 ... A_N\n\n\nOutput\n\nPrint the value A_1 \\times ... \\times A_N as an integer, or `-1` if the value exceeds 10^{18}.\n\nExamples\n\nInput\n\n2\n1000000000 1000000000\n\n\nOutput\n\n1000000000000000000\n\n\nInput\n\n3\n101 9901 999999000001\n\n\nOutput\n\n-1\n\n\nInput\n\n31\n4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4 6 2 6 4 3 3 8 3 2 7 9 5 0\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "261_C. Maxim and Matrix", "description": "Maxim loves to fill in a matrix in a special manner. Here is a pseudocode of filling in a matrix of size (m + 1) × (m + 1):\n\n<image>\n\nMaxim asks you to count, how many numbers m (1 ≤ m ≤ n) are there, such that the sum of values in the cells in the row number m + 1 of the resulting matrix equals t.\n\nExpression (x xor y) means applying the operation of bitwise excluding \"OR\" to numbers x and y. The given operation exists in all modern programming languages. For example, in languages C++ and Java it is represented by character \"^\", in Pascal — by \"xor\".\n\nInput\n\nA single line contains two integers n and t (1 ≤ n, t ≤ 1012, t ≤ n + 1).\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nOutput\n\nIn a single line print a single integer — the answer to the problem. \n\nExamples\n\nInput\n\n1 1\n\n\nOutput\n\n1\n\n\nInput\n\n3 2\n\n\nOutput\n\n1\n\n\nInput\n\n3 3\n\n\nOutput\n\n0\n\n\nInput\n\n1000000000000 1048576\n\n\nOutput\n\n118606527258", "grammar": {"answer": null}}
{"name": "1096_C. Polygon for the Angle", "description": "You are given an angle ang. \n\nThe Jury asks You to find such regular n-gon (regular polygon with n vertices) that it has three vertices a, b and c (they can be non-consecutive) with \\angle{abc} = ang or report that there is no such n-gon.\n\n<image>\n\nIf there are several answers, print the minimal one. It is guarantied that if answer exists then it doesn't exceed 998244353.\n\nInput\n\nThe first line contains single integer T (1 ≤ T ≤ 180) — the number of queries. \n\nEach of the next T lines contains one integer ang (1 ≤ ang < 180) — the angle measured in degrees. \n\nOutput\n\nFor each query print single integer n (3 ≤ n ≤ 998244353) — minimal possible number of vertices in the regular n-gon or -1 if there is no such n.\n\nExample\n\nInput\n\n\n4\n54\n50\n2\n178\n\n\nOutput\n\n\n10\n18\n90\n180\n\nNote\n\nThe answer for the first query is on the picture above.\n\nThe answer for the second query is reached on a regular 18-gon. For example, \\angle{v_2 v_1 v_6} = 50^{\\circ}.\n\nThe example angle for the third query is \\angle{v_{11} v_{10} v_{12}} = 2^{\\circ}.\n\nIn the fourth query, minimal possible n is 180 (not 90).", "grammar": {"answer": null}}
{"name": "361_A. Levko and Table", "description": "Levko loves tables that consist of n rows and n columns very much. He especially loves beautiful tables. A table is beautiful to Levko if the sum of elements in each row and column of the table equals k.\n\nUnfortunately, he doesn't know any such table. Your task is to help him to find at least one of them. \n\nInput\n\nThe single line contains two integers, n and k (1 ≤ n ≤ 100, 1 ≤ k ≤ 1000).\n\nOutput\n\nPrint any beautiful table. Levko doesn't like too big numbers, so all elements of the table mustn't exceed 1000 in their absolute value.\n\nIf there are multiple suitable tables, you are allowed to print any of them.\n\nExamples\n\nInput\n\n2 4\n\n\nOutput\n\n1 3\n3 1\n\n\nInput\n\n4 7\n\n\nOutput\n\n2 1 0 4\n4 0 2 1\n1 3 3 0\n0 3 2 2\n\nNote\n\nIn the first sample the sum in the first row is 1 + 3 = 4, in the second row — 3 + 1 = 4, in the first column — 1 + 3 = 4 and in the second column — 3 + 1 = 4. There are other beautiful tables for this sample.\n\nIn the second sample the sum of elements in each row and each column equals 7. Besides, there are other tables that meet the statement requirements.", "grammar": {"answer": null}}
{"name": "p02786 AtCoder Beginner Contest 153 - Caracal vs Monster", "description": "Caracal is fighting with a monster.\n\nThe health of the monster is H.\n\nCaracal can attack by choosing one monster. When a monster is attacked, depending on that monster's health, the following happens:\n\n* If the monster's health is 1, it drops to 0.\n* If the monster's health, X, is greater than 1, that monster disappears. Then, two new monsters appear, each with the health of \\lfloor X/2 \\rfloor.\n\n\n\n(\\lfloor r \\rfloor denotes the greatest integer not exceeding r.)\n\nCaracal wins when the healths of all existing monsters become 0 or below.\n\nFind the minimum number of attacks Caracal needs to make before winning.\n\nConstraints\n\n* 1 \\leq H \\leq 10^{12}\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH\n\n\nOutput\n\nFind the minimum number of attacks Caracal needs to make before winning.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n3\n\n\nInput\n\n4\n\n\nOutput\n\n7\n\n\nInput\n\n1000000000000\n\n\nOutput\n\n1099511627775", "grammar": {"answer": null}}
{"name": "p02439 Min-Max", "description": "For given three integers $a, b, c$, print the minimum value and the maximum value.\n\nConstraints\n\n* $-1,000,000,000 \\leq a, b, c \\leq 1,000,000,000$\n\nInput\n\nThe input is given in the following format.\n\n\n$a \\; b \\; c\\;$\n\n\nThree integers $a, b, c$ are given in a line.\n\nOutput\n\nPrint the minimum and maximum values separated by a space in a line.\n\nExample\n\nInput\n\n4 5 3\n\n\nOutput\n\n3 5", "grammar": {"answer": null}}
{"name": "1156_D. 0-1-Tree", "description": "You are given a tree (an undirected connected acyclic graph) consisting of n vertices and n - 1 edges. A number is written on each edge, each number is either 0 (let's call such edges 0-edges) or 1 (those are 1-edges).\n\nLet's call an ordered pair of vertices (x, y) (x ≠ y) valid if, while traversing the simple path from x to y, we never go through a 0-edge after going through a 1-edge. Your task is to calculate the number of valid pairs in the tree.\n\nInput\n\nThe first line contains one integer n (2 ≤ n ≤ 200000) — the number of vertices in the tree.\n\nThen n - 1 lines follow, each denoting an edge of the tree. Each edge is represented by three integers x_i, y_i and c_i (1 ≤ x_i, y_i ≤ n, 0 ≤ c_i ≤ 1, x_i ≠ y_i) — the vertices connected by this edge and the number written on it, respectively.\n\nIt is guaranteed that the given edges form a tree.\n\nOutput\n\nPrint one integer — the number of valid pairs of vertices.\n\nExample\n\nInput\n\n\n7\n2 1 1\n3 2 0\n4 2 1\n5 2 0\n6 7 1\n7 2 1\n\n\nOutput\n\n\n34\n\nNote\n\nThe picture corresponding to the first example:\n\n<image>", "grammar": {"answer": null}}
{"name": "p02385 Dice III", "description": "Write a program which reads the two dices constructed in the same way as Dice I, and determines whether these two dices are identical. You can roll a dice in the same way as Dice I, and if all integers observed from the six directions are the same as that of another dice, these dices can be considered as identical.\n\nConstraints\n\n* $0 \\leq $ the integer assigned to a face $ \\leq 100$\n\nInput\n\nIn the first line, six integers assigned to faces of a dice are given in ascending order of their corresponding labels.\nIn the second line, six integers assigned to faces of another dice are given in ascending order of their corresponding labels.\n\nOutput\n\nPrint \"Yes\" if two dices are identical, otherwise \"No\" in a line.\n\nExamples\n\nInput\n\n1 2 3 4 5 6\n6 2 4 3 5 1\n\n\nOutput\n\nYes\n\n\nInput\n\n1 2 3 4 5 6\n6 5 4 3 2 1\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "230_B. T-primes", "description": "We know that prime numbers are positive integers that have exactly two distinct positive divisors. Similarly, we'll call a positive integer t Т-prime, if t has exactly three distinct positive divisors.\n\nYou are given an array of n positive integers. For each of them determine whether it is Т-prime or not.\n\nInput\n\nThe first line contains a single positive integer, n (1 ≤ n ≤ 105), showing how many numbers are in the array. The next line contains n space-separated integers xi (1 ≤ xi ≤ 1012).\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in С++. It is advised to use the cin, cout streams or the %I64d specifier.\n\nOutput\n\nPrint n lines: the i-th line should contain \"YES\" (without the quotes), if number xi is Т-prime, and \"NO\" (without the quotes), if it isn't.\n\nExamples\n\nInput\n\n3\n4 5 6\n\n\nOutput\n\nYES\nNO\nNO\n\nNote\n\nThe given test has three numbers. The first number 4 has exactly three divisors — 1, 2 and 4, thus the answer for this number is \"YES\". The second number 5 has two divisors (1 and 5), and the third number 6 has four divisors (1, 2, 3, 6), hence the answer for them is \"NO\".", "grammar": {"answer": null}}
{"name": "p02958 AtCoder Beginner Contest 135 - 0 or 1 Swap", "description": "We have a sequence p = {p_1,\\ p_2,\\ ...,\\ p_N} which is a permutation of {1,\\ 2,\\ ...,\\ N}.\n\nYou can perform the following operation at most once: choose integers i and j (1 \\leq i < j \\leq N), and swap p_i and p_j. Note that you can also choose not to perform it.\n\nPrint `YES` if you can sort p in ascending order in this way, and `NO` otherwise.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 50\n* p is a permutation of {1,\\ 2,\\ ...,\\ N}.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\np_1 p_2 ... p_N\n\n\nOutput\n\nPrint `YES` if you can sort p in ascending order in the way stated in the problem statement, and `NO` otherwise.\n\nExamples\n\nInput\n\n5\n5 2 3 4 1\n\n\nOutput\n\nYES\n\n\nInput\n\n5\n2 4 3 5 1\n\n\nOutput\n\nNO\n\n\nInput\n\n7\n1 2 3 4 5 6 7\n\n\nOutput\n\nYES", "grammar": {"answer": null}}
{"name": "1373_E. Sum of Digits", "description": "Let f(x) be the sum of digits of a decimal number x.\n\nFind the smallest non-negative integer x such that f(x) + f(x + 1) + ... + f(x + k) = n.\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 150) — the number of test cases.\n\nEach test case consists of one line containing two integers n and k (1 ≤ n ≤ 150, 0 ≤ k ≤ 9). \n\nOutput\n\nFor each test case, print one integer without leading zeroes. If there is no such x that f(x) + f(x + 1) + ... + f(x + k) = n, print -1; otherwise, print the minimum x meeting that constraint.\n\nExample\n\nInput\n\n\n7\n1 0\n1 1\n42 7\n13 7\n99 1\n99 0\n99 2\n\n\nOutput\n\n\n1\n0\n4\n-1\n599998\n99999999999\n7997", "grammar": {"answer": null}}
{"name": "p02912 AtCoder Beginner Contest 141 - Powerful Discount Tickets", "description": "Takahashi is going to buy N items one by one.\n\nThe price of the i-th item he buys is A_i yen (the currency of Japan).\n\nHe has M discount tickets, and he can use any number of them when buying an item.\n\nIf Y tickets are used when buying an item priced X yen, he can get the item for \\frac{X}{2^Y} (rounded down to the nearest integer) yen.\n\nWhat is the minimum amount of money required to buy all the items?\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N, M \\leq 10^5\n* 1 \\leq A_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the minimum amount of money required to buy all the items.\n\nExamples\n\nInput\n\n3 3\n2 13 8\n\n\nOutput\n\n9\n\n\nInput\n\n4 4\n1 9 3 5\n\n\nOutput\n\n6\n\n\nInput\n\n1 100000\n1000000000\n\n\nOutput\n\n0\n\n\nInput\n\n10 1\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n\n\nOutput\n\n9500000000", "grammar": {"answer": null}}
{"name": "p02348 Range Update Query (RUQ)", "description": "Write a program which manipulates a sequence A = {a0, a1, . . . , an−1} with the following operations:\n\n* update(s, t, x): change as, as+1, ..., at to x.\n* find(i): output the value of ai.\n\n\n\nNote that the initial values of ai (i = 0, 1, . . . , n−1) are 231-1.\n\nConstraints\n\n* 1 ≤ n ≤ 100000\n* 1 ≤ q ≤ 100000\n* 0 ≤ s ≤ t < n\n* 0 ≤ i < n\n* 0 ≤ x < 231−1\n\nInput\n\n\nn q\nquery1\nquery2\n:\nqueryq\n\n\nIn the first line, n (the number of elements in A) and q (the number of queries) are given. Then, ith query queryi is given in the following format:\n\n\n0 s t x\n\n\nor\n\n\n1 i\n\n\nThe first digit represents the type of the query. '0' denotes update(s, t, x) and '1' denotes find(i).\n\nOutput\n\nFor each find operation, print the value.\n\nExamples\n\nInput\n\n3 5\n0 0 1 1\n0 1 2 3\n0 2 2 2\n1 0\n1 1\n\n\nOutput\n\n1\n3\n\n\nInput\n\n1 3\n1 0\n0 0 0 5\n1 0\n\n\nOutput\n\n2147483647\n5", "grammar": {"answer": null}}
{"name": "797_A. k-Factorization", "description": "Given a positive integer n, find k integers (not necessary distinct) such that all these integers are strictly greater than 1, and their product is equal to n.\n\nInput\n\nThe first line contains two integers n and k (2 ≤ n ≤ 100000, 1 ≤ k ≤ 20).\n\nOutput\n\nIf it's impossible to find the representation of n as a product of k numbers, print -1.\n\nOtherwise, print k integers in any order. Their product must be equal to n. If there are multiple answers, print any of them.\n\nExamples\n\nInput\n\n100000 2\n\n\nOutput\n\n2 50000 \n\n\nInput\n\n100000 20\n\n\nOutput\n\n-1\n\n\nInput\n\n1024 5\n\n\nOutput\n\n2 64 2 2 2 ", "grammar": {"answer": null}}
{"name": "476_C. Dreamoon and Sums", "description": "Dreamoon loves summing up something for no reason. One day he obtains two integers a and b occasionally. He wants to calculate the sum of all nice integers. Positive integer x is called nice if <image> and <image>, where k is some integer number in range [1, a].\n\nBy <image> we denote the quotient of integer division of x and y. By <image> we denote the remainder of integer division of x and y. You can read more about these operations here: http://goo.gl/AcsXhT.\n\nThe answer may be large, so please print its remainder modulo 1 000 000 007 (109 + 7). Can you compute it faster than Dreamoon?\n\nInput\n\nThe single line of the input contains two integers a, b (1 ≤ a, b ≤ 107).\n\nOutput\n\nPrint a single integer representing the answer modulo 1 000 000 007 (109 + 7).\n\nExamples\n\nInput\n\n1 1\n\n\nOutput\n\n0\n\n\nInput\n\n2 2\n\n\nOutput\n\n8\n\nNote\n\nFor the first sample, there are no nice integers because <image> is always zero.\n\nFor the second sample, the set of nice integers is {3, 5}.", "grammar": {"answer": null}}
{"name": "379_A. New Year Candles", "description": "Vasily the Programmer loves romance, so this year he decided to illuminate his room with candles.\n\nVasily has a candles.When Vasily lights up a new candle, it first burns for an hour and then it goes out. Vasily is smart, so he can make b went out candles into a new candle. As a result, this new candle can be used like any other new candle.\n\nNow Vasily wonders: for how many hours can his candles light up the room if he acts optimally well? Help him find this number.\n\nInput\n\nThe single line contains two integers, a and b (1 ≤ a ≤ 1000; 2 ≤ b ≤ 1000).\n\nOutput\n\nPrint a single integer — the number of hours Vasily can light up the room for.\n\nExamples\n\nInput\n\n4 2\n\n\nOutput\n\n7\n\n\nInput\n\n6 3\n\n\nOutput\n\n8\n\nNote\n\nConsider the first sample. For the first four hours Vasily lights up new candles, then he uses four burned out candles to make two new ones and lights them up. When these candles go out (stop burning), Vasily can make another candle. Overall, Vasily can light up the room for 7 hours.", "grammar": {"answer": null}}
{"name": "p02910 AtCoder Beginner Contest 141 - Tap Dance", "description": "Takahashi will do a tap dance. The dance is described by a string S where each character is `L`, `R`, `U`, or `D`. These characters indicate the positions on which Takahashi should step. He will follow these instructions one by one in order, starting with the first character.\n\nS is said to be easily playable if and only if it satisfies both of the following conditions:\n\n* Every character in an odd position (1-st, 3-rd, 5-th, \\ldots) is `R`, `U`, or `D`.\n* Every character in an even position (2-nd, 4-th, 6-th, \\ldots) is `L`, `U`, or `D`.\n\n\n\nYour task is to print `Yes` if S is easily playable, and `No` otherwise.\n\nConstraints\n\n* S is a string of length between 1 and 100 (inclusive).\n* Each character of S is `L`, `R`, `U`, or `D`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint `Yes` if S is easily playable, and `No` otherwise.\n\nExamples\n\nInput\n\nRUDLUDR\n\n\nOutput\n\nYes\n\n\nInput\n\nDULL\n\n\nOutput\n\nNo\n\n\nInput\n\nUUUUUUUUUUUUUUU\n\n\nOutput\n\nYes\n\n\nInput\n\nULURU\n\n\nOutput\n\nNo\n\n\nInput\n\nRDULULDURURLRDULRLR\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "p03098 AtCoder Grand Contest 031 - A Sequence of Permutations", "description": "For two permutations p and q of the integers from 1 through N, let f(p,q) be the permutation that satisfies the following:\n\n* The p_i-th element (1 \\leq i \\leq N) in f(p,q) is q_i. Here, p_i and q_i respectively denote the i-th element in p and q.\n\n\n\nYou are given two permutations p and q of the integers from 1 through N. We will now define a sequence {a_n} of permutations of the integers from 1 through N, as follows:\n\n* a_1=p, a_2=q\n* a_{n+2}=f(a_n,a_{n+1}) ( n \\geq 1 )\n\n\n\nGiven a positive integer K, find a_K.\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* 1 \\leq K \\leq 10^9\n* p and q are permutations of the integers from 1 through N.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\np_1 ... p_N\nq_1 ... q_N\n\n\nOutput\n\nPrint N integers, with spaces in between. The i-th integer (1 \\leq i \\leq N) should be the i-th element in a_K.\n\nExamples\n\nInput\n\n3 3\n1 2 3\n3 2 1\n\n\nOutput\n\n3 2 1\n\n\nInput\n\n5 5\n4 5 1 2 3\n3 2 1 5 4\n\n\nOutput\n\n4 3 2 1 5\n\n\nInput\n\n10 1000000000\n7 10 6 5 4 2 9 1 3 8\n4 1 9 2 3 7 8 10 6 5\n\n\nOutput\n\n7 9 4 8 2 5 1 6 10 3", "grammar": {"answer": null}}
{"name": "p00019 Factorial", "description": "Write a program which reads an integer n and prints the factorial of n. You can assume that n ≤ 20.\n\n\n\nInput\n\nAn integer n (1 ≤ n ≤ 20) in a line.\n\nOutput\n\nPrint the factorial of n in a line.\n\nExample\n\nInput\n\n5\n\n\nOutput\n\n120", "grammar": {"answer": null}}
{"name": "p02702 AtCoder Beginner Contest 164 - Multiple of 2019", "description": "Given is a string S consisting of digits from `1` through `9`.\n\nFind the number of pairs of integers (i,j) (1 ≤ i ≤ j ≤ |S|) that satisfy the following condition:\n\nCondition: In base ten, the i-th through j-th characters of S form an integer that is a multiple of 2019.\n\nConstraints\n\n* 1 ≤ |S| ≤ 200000\n* S is a string consisting of digits from `1` through `9`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the number of pairs of integers (i,j) (1 ≤ i ≤ j ≤ |S|) that satisfy the condition.\n\nExamples\n\nInput\n\n1817181712114\n\n\nOutput\n\n3\n\n\nInput\n\n14282668646\n\n\nOutput\n\n2\n\n\nInput\n\n2119\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02904 AtCoder Grand Contest 038 - Sorting a Segment", "description": "Snuke has a permutation (P_0,P_1,\\cdots,P_{N-1}) of (0,1,\\cdots,N-1).\n\nNow, he will perform the following operation exactly once:\n\n* Choose K consecutive elements in P and sort them in ascending order.\n\n\n\nFind the number of permutations that can be produced as P after the operation.\n\nConstraints\n\n* 2 \\leq N \\leq 200000\n* 2 \\leq K \\leq N\n* 0 \\leq P_i \\leq N-1\n* P_0,P_1,\\cdots,P_{N-1} are all different.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nP_0 P_1 \\cdots P_{N-1}\n\n\nOutput\n\nPrint the number of permutations that can be produced as P after the operation.\n\nExamples\n\nInput\n\n5 3\n0 2 1 4 3\n\n\nOutput\n\n2\n\n\nInput\n\n4 4\n0 1 2 3\n\n\nOutput\n\n1\n\n\nInput\n\n10 4\n2 0 1 3 7 5 4 6 8 9\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "364_D. Ghd", "description": "John Doe offered his sister Jane Doe find the gcd of some set of numbers a.\n\nGcd is a positive integer g, such that all number from the set are evenly divisible by g and there isn't such g' (g' > g), that all numbers of the set are evenly divisible by g'.\n\nUnfortunately Jane couldn't cope with the task and John offered her to find the ghd of the same subset of numbers.\n\nGhd is a positive integer g, such that at least half of numbers from the set are evenly divisible by g and there isn't such g' (g' > g) that at least half of the numbers from the set are evenly divisible by g'.\n\nJane coped with the task for two hours. Please try it, too.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 106) showing how many numbers are in set a. The second line contains space-separated integers a1, a2, ..., an (1 ≤ ai ≤ 1012). Please note, that given set can contain equal numbers.\n\nPlease, do not write the %lld specifier to read or write 64-bit integers in С++. It is preferred to use the %I64d specifier.\n\nOutput\n\nPrint a single integer g — the Ghd of set a.\n\nExamples\n\nInput\n\n6\n6 2 3 4 5 6\n\n\nOutput\n\n3\n\n\nInput\n\n5\n5 5 6 10 15\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "840_C. On the Bench", "description": "A year ago on the bench in public park Leha found an array of n numbers. Leha believes that permutation p is right if for all 1 ≤ i < n condition, that api·api + 1 is not perfect square, holds. Leha wants to find number of right permutations modulo 109 + 7.\n\nInput\n\nFirst line of input data contains single integer n (1 ≤ n ≤ 300) — length of the array.\n\nNext line contains n integers a1, a2, ... , an (1 ≤ ai ≤ 109) — found array.\n\nOutput\n\nOutput single integer — number of right permutations modulo 109 + 7.\n\nExamples\n\nInput\n\n3\n1 2 4\n\n\nOutput\n\n2\n\n\nInput\n\n7\n5 2 4 2 4 1 1\n\n\nOutput\n\n144\n\nNote\n\nFor first example:\n\n[1, 2, 4] — right permutation, because 2 and 8 are not perfect squares.\n\n[1, 4, 2] — wrong permutation, because 4 is square of 2.\n\n[2, 1, 4] — wrong permutation, because 4 is square of 2.\n\n[2, 4, 1] — wrong permutation, because 4 is square of 2.\n\n[4, 1, 2] — wrong permutation, because 4 is square of 2.\n\n[4, 2, 1] — right permutation, because 8 and 2 are not perfect squares.", "grammar": {"answer": null}}
{"name": "1047_A. Little C Loves 3 I", "description": "Little C loves number «3» very much. He loves all things about it.\n\nNow he has a positive integer n. He wants to split n into 3 positive integers a,b,c, such that a+b+c=n and none of the 3 integers is a multiple of 3. Help him to find a solution.\n\nInput\n\nA single line containing one integer n (3 ≤ n ≤ 10^9) — the integer Little C has.\n\nOutput\n\nPrint 3 positive integers a,b,c in a single line, such that a+b+c=n and none of them is a multiple of 3.\n\nIt can be proved that there is at least one solution. If there are multiple solutions, print any of them.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n1 1 1\n\nInput\n\n233\n\nOutput\n\n77 77 79", "grammar": {"answer": null}}
{"name": "1389_F. Bicolored Segments", "description": "You are given n segments [l_1, r_1], [l_2, r_2], ..., [l_n, r_n]. Each segment has one of two colors: the i-th segment's color is t_i.\n\nLet's call a pair of segments i and j bad if the following two conditions are met:\n\n  * t_i ≠ t_j; \n  * the segments [l_i, r_i] and [l_j, r_j] intersect, embed or touch, i. e. there exists an integer x such that x ∈ [l_i, r_i] and x ∈ [l_j, r_j]. \n\n\n\nCalculate the maximum number of segments that can be selected from the given ones, so that there is no bad pair among the selected ones.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 2 ⋅ 10^5) — number of segments.\n\nThe next n lines contains three integers l_i, r_i, t_i (1 ≤ l_i ≤ r_i ≤ 10^9; t_i ∈ \\{1, 2\\}) — description of the i-th segment.\n\nOutput\n\nPrint the maximum number of segments that can be selected, so that there is no bad pair among the selected segments.\n\nExamples\n\nInput\n\n\n3\n1 3 1\n4 6 2\n2 5 1\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n5\n5 8 1\n1 3 2\n3 4 2\n6 6 1\n2 10 2\n\n\nOutput\n\n\n4\n\n\nInput\n\n\n7\n19 20 1\n13 15 2\n6 11 2\n4 10 1\n14 17 1\n13 13 2\n5 9 1\n\n\nOutput\n\n\n5", "grammar": {"answer": null}}
{"name": "p03424 AtCoder Beginner Contest 089 - Hina Arare", "description": "In Japan, people make offerings called hina arare, colorful crackers, on March 3.\n\nWe have a bag that contains N hina arare. (From here, we call them arare.)\n\nIt is known that the bag either contains arare in three colors: pink, white and green, or contains arare in four colors: pink, white, green and yellow.\n\nWe have taken out the arare in the bag one by one, and the color of the i-th arare was S_i, where colors are represented as follows - pink: `P`, white: `W`, green: `G`, yellow: `Y`.\n\nIf the number of colors of the arare in the bag was three, print `Three`; if the number of colors was four, print `Four`.\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* S_i is `P`, `W`, `G` or `Y`.\n* There always exist i, j and k such that S_i=`P`, S_j=`W` and S_k=`G`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS_1 S_2 ... S_N\n\n\nOutput\n\nIf the number of colors of the arare in the bag was three, print `Three`; if the number of colors was four, print `Four`.\n\nExamples\n\nInput\n\n6\nG W Y P Y W\n\n\nOutput\n\nFour\n\n\nInput\n\n9\nG W W G P W P G G\n\n\nOutput\n\nThree\n\n\nInput\n\n8\nP Y W G Y W Y Y\n\n\nOutput\n\nFour", "grammar": {"answer": null}}
{"name": "p02667 NOMURA Programming Competition 2020 - Binary Programming", "description": "Takahashi has an empty string S and a variable x whose initial value is 0.\n\nAlso, we have a string T consisting of `0` and `1`.\n\nNow, Takahashi will do the operation with the following two steps |T| times.\n\n* Insert a `0` or a `1` at any position of S of his choice.\n* Then, increment x by the sum of the digits in the odd positions (first, third, fifth, ...) of S. For example, if S is `01101`, the digits in the odd positions are `0`, `1`, `1` from left to right, so x is incremented by 2.\n\n\n\nPrint the maximum possible final value of x in a sequence of operations such that S equals T in the end.\n\nConstraints\n\n* 1 \\leq |T| \\leq 2 \\times 10^5\n* T consists of `0` and `1`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nT\n\n\nOutput\n\nPrint the maximum possible final value of x in a sequence of operations such that S equals T in the end.\n\nExamples\n\nInput\n\n1101\n\n\nOutput\n\n5\n\n\nInput\n\n0111101101\n\n\nOutput\n\n26", "grammar": {"answer": null}}
{"name": "p03733 AtCoder Regular Contest 073 - Sentou", "description": "In a public bath, there is a shower which emits water for T seconds when the switch is pushed.\n\nIf the switch is pushed when the shower is already emitting water, from that moment it will be emitting water for T seconds. Note that it does not mean that the shower emits water for T additional seconds.\n\nN people will push the switch while passing by the shower. The i-th person will push the switch t_i seconds after the first person pushes it.\n\nHow long will the shower emit water in total?\n\nConstraints\n\n* 1 ≤ N ≤ 200,000\n* 1 ≤ T ≤ 10^9\n* 0 = t_1 < t_2 < t_3 < , ..., < t_{N-1} < t_N ≤ 10^9\n* T and each t_i are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN T\nt_1 t_2 ... t_N\n\n\nOutput\n\nAssume that the shower will emit water for a total of X seconds. Print X.\n\nExamples\n\nInput\n\n2 4\n0 3\n\n\nOutput\n\n7\n\n\nInput\n\n2 4\n0 5\n\n\nOutput\n\n8\n\n\nInput\n\n4 1000000000\n0 1000 1000000 1000000000\n\n\nOutput\n\n2000000000\n\n\nInput\n\n1 1\n0\n\n\nOutput\n\n1\n\n\nInput\n\n9 10\n0 3 5 7 100 110 200 300 311\n\n\nOutput\n\n67", "grammar": {"answer": null}}
{"name": "p03597 AtCoder Beginner Contest 074 - Bichrome Cells", "description": "We have an N \\times N square grid.\n\nWe will paint each square in the grid either black or white.\n\nIf we paint exactly A squares white, how many squares will be painted black?\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* 0 \\leq A \\leq N^2\n\nInputs\n\nInput is given from Standard Input in the following format:\n\n\nN\nA\n\n\nOutputs\n\nPrint the number of squares that will be painted black.\n\nExamples\n\nInput\n\n3\n4\n\n\nOutput\n\n5\n\n\nInput\n\n19\n100\n\n\nOutput\n\n261\n\n\nInput\n\n10\n0\n\n\nOutput\n\n100", "grammar": {"answer": null}}
{"name": "478_C. Table Decorations", "description": "You have r red, g green and b blue balloons. To decorate a single table for the banquet you need exactly three balloons. Three balloons attached to some table shouldn't have the same color. What maximum number t of tables can be decorated if we know number of balloons of each color?\n\nYour task is to write a program that for given values r, g and b will find the maximum number t of tables, that can be decorated in the required manner.\n\nInput\n\nThe single line contains three integers r, g and b (0 ≤ r, g, b ≤ 2·109) — the number of red, green and blue baloons respectively. The numbers are separated by exactly one space.\n\nOutput\n\nPrint a single integer t — the maximum number of tables that can be decorated in the required manner.\n\nExamples\n\nInput\n\n5 4 3\n\n\nOutput\n\n4\n\n\nInput\n\n1 1 1\n\n\nOutput\n\n1\n\n\nInput\n\n2 3 3\n\n\nOutput\n\n2\n\nNote\n\nIn the first sample you can decorate the tables with the following balloon sets: \"rgg\", \"gbb\", \"brr\", \"rrg\", where \"r\", \"g\" and \"b\" represent the red, green and blue balls, respectively.", "grammar": {"answer": null}}
{"name": "710_A. King Moves", "description": "The only king stands on the standard chess board. You are given his position in format \"cd\", where c is the column from 'a' to 'h' and d is the row from '1' to '8'. Find the number of moves permitted for the king.\n\nCheck the king's moves here https://en.wikipedia.org/wiki/King_(chess).\n\n<image> King moves from the position e4\n\nInput\n\nThe only line contains the king's position in the format \"cd\", where 'c' is the column from 'a' to 'h' and 'd' is the row from '1' to '8'.\n\nOutput\n\nPrint the only integer x — the number of moves permitted for the king.\n\nExample\n\nInput\n\ne4\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "409_H. A + B Strikes Back", "description": "A + B is often used as an example of the easiest problem possible to show some contest platform. However, some scientists have observed that sometimes this problem is not so easy to get accepted. Want to try?\n\nInput\n\nThe input contains two integers a and b (0 ≤ a, b ≤ 103), separated by a single space.\n\nOutput\n\nOutput the sum of the given integers.\n\nExamples\n\nInput\n\n5 14\n\n\nOutput\n\n19\n\n\nInput\n\n381 492\n\n\nOutput\n\n873", "grammar": {"answer": null}}
{"name": "579_F. LCS Again", "description": "You are given a string S of length n with each character being one of the first m lowercase English letters. \n\nCalculate how many different strings T of length n composed from the first m lowercase English letters exist such that the length of LCS (longest common subsequence) between S and T is n - 1.\n\nRecall that LCS of two strings S and T is the longest string C such that C both in S and T as a subsequence.\n\nInput\n\nThe first line contains two numbers n and m denoting the length of string S and number of first English lowercase characters forming the character set for strings (1 ≤ n ≤ 100 000, 2 ≤ m ≤ 26).\n\nThe second line contains string S.\n\nOutput\n\nPrint the only line containing the answer.\n\nExamples\n\nInput\n\n3 3\naaa\n\n\nOutput\n\n6\n\n\nInput\n\n3 3\naab\n\n\nOutput\n\n11\n\n\nInput\n\n1 2\na\n\n\nOutput\n\n1\n\n\nInput\n\n10 9\nabacadefgh\n\n\nOutput\n\n789\n\nNote\n\nFor the first sample, the 6 possible strings T are: aab, aac, aba, aca, baa, caa. \n\nFor the second sample, the 11 possible strings T are: aaa, aac, aba, abb, abc, aca, acb, baa, bab, caa, cab.\n\nFor the third sample, the only possible string T is b.", "grammar": {"answer": null}}
{"name": "1268_A. Long Beautiful Integer", "description": "You are given an integer x of n digits a_1, a_2, …, a_n, which make up its decimal notation in order from left to right.\n\nAlso, you are given a positive integer k < n.\n\nLet's call integer b_1, b_2, …, b_m beautiful if b_i = b_{i+k} for each i, such that 1 ≤ i ≤ m - k.\n\nYou need to find the smallest beautiful integer y, such that y ≥ x. \n\nInput\n\nThe first line of input contains two integers n, k (2 ≤ n ≤ 200 000, 1 ≤ k < n): the number of digits in x and k.\n\nThe next line of input contains n digits a_1, a_2, …, a_n (a_1 ≠ 0, 0 ≤ a_i ≤ 9): digits of x.\n\nOutput\n\nIn the first line print one integer m: the number of digits in y.\n\nIn the next line print m digits b_1, b_2, …, b_m (b_1 ≠ 0, 0 ≤ b_i ≤ 9): digits of y.\n\nExamples\n\nInput\n\n\n3 2\n353\n\n\nOutput\n\n\n3\n353\n\n\nInput\n\n\n4 2\n1234\n\n\nOutput\n\n\n4\n1313", "grammar": {"answer": null}}
{"name": "p02460 Map: Delete", "description": "For a dictionary $M$ that stores elements formed by a pair of a string key and an integer value, perform a sequence of the following operations. Note that each key in $M$ must be unique.\n\n* insert($key$, $x$): Insert an element formed by a pair of $key$ and $x$ to $M$.\n* get($key$): Print the value with the specified $key$. Print 0 if there is no such element.\n* delete($key$): Delete the element with the specified $key$.\n\nConstraints\n\n* $1 \\leq q \\leq 200,000$\n* $1 \\leq x \\leq 1,000,000,000$\n* $1 \\leq $ length of $key$ $ \\leq 20$\n* $key$ consits of lower case letters\n\nInput\n\nThe input is given in the following format.\n\n\n$q$\n$query_1$\n$query_2$\n:\n$query_q$\n\n\nEach query $query_i$ is given by\n\n\n0 $key$ $x$\n\n\nor\n\n\n1 $key$\n\n\nor\n\n\n2 $key$\n\n\nwhere the first digits 0, 1 and 2 represent insert, get and delete operations respectively.\n\nOutput\n\nFor each get operation, print an integer in a line.\n\nExample\n\nInput\n\n8\n0 blue 4\n0 red 1\n0 white 5\n1 red\n1 blue\n2 red\n1 black\n1 red\n\n\nOutput\n\n1\n4\n0\n0", "grammar": {"answer": null}}
{"name": "275_A. Lights Out", "description": "Lenny is playing a game on a 3 × 3 grid of lights. In the beginning of the game all lights are switched on. Pressing any of the lights will toggle it and all side-adjacent lights. The goal of the game is to switch all the lights off. We consider the toggling as follows: if the light was switched on then it will be switched off, if it was switched off then it will be switched on.\n\nLenny has spent some time playing with the grid and by now he has pressed each light a certain number of times. Given the number of times each light is pressed, you have to print the current state of each light.\n\nInput\n\nThe input consists of three rows. Each row contains three integers each between 0 to 100 inclusive. The j-th number in the i-th row is the number of times the j-th light of the i-th row of the grid is pressed.\n\nOutput\n\nPrint three lines, each containing three characters. The j-th character of the i-th line is \"1\" if and only if the corresponding light is switched on, otherwise it's \"0\".\n\nExamples\n\nInput\n\n1 0 0\n0 0 0\n0 0 1\n\n\nOutput\n\n001\n010\n100\n\n\nInput\n\n1 0 1\n8 8 8\n2 0 3\n\n\nOutput\n\n010\n011\n100", "grammar": {"answer": null}}
{"name": "p02741 Panasonic Programming Contest 2020 - Kth Term", "description": "Print the K-th element of the following sequence of length 32:\n\n\n1, 1, 1, 2, 1, 2, 1, 5, 2, 2, 1, 5, 1, 2, 1, 14, 1, 5, 1, 5, 2, 2, 1, 15, 2, 2, 5, 4, 1, 4, 1, 51\n\nConstraints\n\n* 1 \\leq K \\leq 32\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK\n\n\nOutput\n\nPrint the K-th element.\n\nExamples\n\nInput\n\n6\n\n\nOutput\n\n2\n\n\nInput\n\n27\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p01881 Help the Princess!", "description": "Example\n\nInput\n\n2 4\n%.@\\$\n..\\$\\$\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "932_G. Palindrome Partition", "description": "Given a string s, find the number of ways to split s to substrings such that if there are k substrings (p1, p2, p3, ..., pk) in partition, then pi = pk - i + 1 for all i (1 ≤ i ≤ k) and k is even.\n\nSince the number of ways can be large, print it modulo 109 + 7.\n\nInput\n\nThe only line of input contains a string s (2 ≤ |s| ≤ 106) of even length consisting of lowercase Latin letters. \n\nOutput\n\nPrint one integer, the number of ways of partitioning the string modulo 109 + 7.\n\nExamples\n\nInput\n\nabcdcdab\n\n\nOutput\n\n1\n\nInput\n\nabbababababbab\n\n\nOutput\n\n3\n\nNote\n\nIn the first case, the only way to partition the string is ab|cd|cd|ab.\n\nIn the second case, the string can be partitioned as ab|b|ab|ab|ab|ab|b|ab or ab|b|abab|abab|b|ab or abbab|ab|ab|abbab.", "grammar": {"answer": null}}
{"name": "p03392 AtCoder Regular Contest 094 - Normalization", "description": "You are given a string S consisting of `a`,`b` and `c`. Find the number of strings that can be possibly obtained by repeatedly performing the following operation zero or more times, modulo 998244353:\n\n* Choose an integer i such that 1\\leq i\\leq |S|-1 and the i-th and (i+1)-th characters in S are different. Replace each of the i-th and (i+1)-th characters in S with the character that differs from both of them (among `a`, `b` and `c`).\n\nConstraints\n\n* 2 \\leq |S| \\leq 2 × 10^5\n* S consists of `a`, `b` and `c`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the number of strings that can be possibly obtained by repeatedly performing the operation, modulo 998244353.\n\nExamples\n\nInput\n\nabc\n\n\nOutput\n\n3\n\n\nInput\n\nabbac\n\n\nOutput\n\n65\n\n\nInput\n\nbabacabac\n\n\nOutput\n\n6310\n\n\nInput\n\nababacbcacbacacbcbbcbbacbaccacbacbacba\n\n\nOutput\n\n148010497", "grammar": {"answer": null}}
{"name": "p03898 CODE FESTIVAL 2016 Relay (Parallel) - Problem on Tree", "description": "There is a tree with N vertices, numbered 1 through N.\n\nThe i-th of the N-1 edges connects the vertices p_i and q_i.\n\nAmong the sequences of distinct vertices v_1, v_2, ..., v_M that satisfy the following condition, find the maximum value of M.\n\n* For every 1 \\leq i < M, the path connecting the vertices v_i and v_{i+1} do not contain any vertex in v, except for v_i and v_{i+1}.\n\nConstraints\n\n* 2 \\leq N \\leq 10^5\n* 1 \\leq p_i, q_i \\leq N\n* The given graph is a tree.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\np_1 q_1\np_2 q_2\n:\np_{N-1} q_{N-1}\n\n\nOutput\n\nPrint the maximum value of M, the number of elements, among the sequences of vertices that satisfy the condition.\n\nExamples\n\nInput\n\n4\n1 2\n2 3\n2 4\n\n\nOutput\n\n3\n\n\nInput\n\n10\n7 9\n1 2\n6 4\n8 1\n3 7\n6 5\n2 10\n9 6\n2 6\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "p03202 AtCoder Grand Contest 029 - Lexicographic constraints", "description": "There are N strings arranged in a row. It is known that, for any two adjacent strings, the string to the left is lexicographically smaller than the string to the right. That is, S_1<S_2<...<S_N holds lexicographically, where S_i is the i-th string from the left.\n\nAt least how many different characters are contained in S_1,S_2,...,S_N, if the length of S_i is known to be A_i?\n\nConstraints\n\n* 1 \\leq N \\leq 2\\times 10^5\n* 1 \\leq A_i \\leq 10^9\n* A_i is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the minimum possible number of different characters contained in the strings.\n\nExamples\n\nInput\n\n3\n3 2 1\n\n\nOutput\n\n2\n\n\nInput\n\n5\n2 3 2 1 2\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "270_A. Fancy Fence", "description": "Emuskald needs a fence around his farm, but he is too lazy to build it himself. So he purchased a fence-building robot.\n\nHe wants the fence to be a regular polygon. The robot builds the fence along a single path, but it can only make fence corners at a single angle a.\n\nWill the robot be able to build the fence Emuskald wants? In other words, is there a regular polygon which angles are equal to a?\n\nInput\n\nThe first line of input contains an integer t (0 < t < 180) — the number of tests. Each of the following t lines contains a single integer a (0 < a < 180) — the angle the robot can make corners at measured in degrees.\n\nOutput\n\nFor each test, output on a single line \"YES\" (without quotes), if the robot can build a fence Emuskald wants, and \"NO\" (without quotes), if it is impossible.\n\nExamples\n\nInput\n\n3\n30\n60\n90\n\n\nOutput\n\nNO\nYES\nYES\n\nNote\n\nIn the first test case, it is impossible to build the fence, since there is no regular polygon with angle <image>.\n\nIn the second test case, the fence is a regular triangle, and in the last test case — a square.", "grammar": {"answer": null}}
{"name": "919_E. Congruence Equation", "description": "Given an integer x. Your task is to find out how many positive integers n (1 ≤ n ≤ x) satisfy $$$n ⋅ a^n ≡ b   (mod\\;p), where a, b, p$$$ are all known constants.\n\nInput\n\nThe only line contains four integers a,b,p,x (2 ≤ p ≤ 10^6+3, 1 ≤ a,b < p, 1 ≤ x ≤ 10^{12}). It is guaranteed that p is a prime.\n\nOutput\n\nPrint a single integer: the number of possible answers n.\n\nExamples\n\nInput\n\n2 3 5 8\n\n\nOutput\n\n2\n\n\nInput\n\n4 6 7 13\n\n\nOutput\n\n1\n\n\nInput\n\n233 233 10007 1\n\n\nOutput\n\n1\n\nNote\n\nIn the first sample, we can see that n=2 and n=8 are possible answers.", "grammar": {"answer": null}}
{"name": "887_A. Div. 64", "description": "Top-model Izabella participates in the competition. She wants to impress judges and show her mathematical skills.\n\nHer problem is following: for given string, consisting of only 0 and 1, tell if it's possible to remove some digits in such a way, that remaining number is a representation of some positive integer, divisible by 64, in the binary numerical system.\n\nInput\n\nIn the only line given a non-empty binary string s with length up to 100.\n\nOutput\n\nPrint «yes» (without quotes) if it's possible to remove digits required way and «no» otherwise.\n\nExamples\n\nInput\n\n100010001\n\n\nOutput\n\nyes\n\nInput\n\n100\n\n\nOutput\n\nno\n\nNote\n\nIn the first test case, you can get string 1 000 000 after removing two ones which is a representation of number 64 in the binary numerical system.\n\nYou can read more about binary numeral system representation here: <https://en.wikipedia.org/wiki/Binary_system>", "grammar": {"answer": null}}
{"name": "813_F. Bipartite Checking", "description": "You are given an undirected graph consisting of n vertices. Initially there are no edges in the graph. Also you are given q queries, each query either adds one undirected edge to the graph or removes it. After each query you have to check if the resulting graph is bipartite (that is, you can paint all vertices of the graph into two colors so that there is no edge connecting two vertices of the same color).\n\nInput\n\nThe first line contains two integers n and q (2 ≤ n, q ≤ 100000).\n\nThen q lines follow. ith line contains two numbers xi and yi (1 ≤ xi < yi ≤ n). These numbers describe ith query: if there is an edge between vertices xi and yi, then remove it, otherwise add it.\n\nOutput\n\nPrint q lines. ith line must contain YES if the graph is bipartite after ith query, and NO otherwise.\n\nExample\n\nInput\n\n3 5\n2 3\n1 3\n1 2\n1 2\n1 2\n\n\nOutput\n\nYES\nYES\nNO\nYES\nNO", "grammar": {"answer": null}}
{"name": "p03999 AtCoder Beginner Contest 045 - Many Formulas", "description": "You are given a string S consisting of digits between `1` and `9`, inclusive. You can insert the letter `+` into some of the positions (possibly none) between two letters in this string. Here, `+` must not occur consecutively after insertion.\n\nAll strings that can be obtained in this way can be evaluated as formulas.\n\nEvaluate all possible formulas, and print the sum of the results.\n\nConstraints\n\n* 1 \\leq |S| \\leq 10\n* All letters in S are digits between `1` and `9`, inclusive.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the sum of the evaluated value over all possible formulas.\n\nExamples\n\nInput\n\n125\n\n\nOutput\n\n176\n\n\nInput\n\n9999999999\n\n\nOutput\n\n12656242944", "grammar": {"answer": null}}
{"name": "p03687 AtCoder Grand Contest 016 - Shrinking", "description": "Snuke can change a string t of length N into a string t' of length N - 1 under the following rule:\n\n* For each i (1 ≤ i ≤ N - 1), the i-th character of t' must be either the i-th or (i + 1)-th character of t.\n\n\n\nThere is a string s consisting of lowercase English letters. Snuke's objective is to apply the above operation to s repeatedly so that all the characters in s are the same. Find the minimum necessary number of operations.\n\nConstraints\n\n* 1 ≤ |s| ≤ 100\n* s consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\ns\n\n\nOutput\n\nPrint the minimum necessary number of operations to achieve the objective.\n\nExamples\n\nInput\n\nserval\n\n\nOutput\n\n3\n\n\nInput\n\njackal\n\n\nOutput\n\n2\n\n\nInput\n\nzzz\n\n\nOutput\n\n0\n\n\nInput\n\nwhbrjpjyhsrywlqjxdbrbaomnw\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "1396_A. Multiples of Length", "description": "You are given an array a of n integers.\n\nYou want to make all elements of a equal to zero by doing the following operation exactly three times:\n\n  * Select a segment, for each number in this segment we can add a multiple of len to it, where len is the length of this segment (added integers can be different). \n\n\n\nIt can be proven that it is always possible to make all elements of a equal to zero.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 100 000): the number of elements of the array.\n\nThe second line contains n elements of an array a separated by spaces: a_1, a_2, ..., a_n (-10^9 ≤ a_i ≤ 10^9).\n\nOutput\n\nThe output should contain six lines representing three operations.\n\nFor each operation, print two lines:\n\n  * The first line contains two integers l, r (1 ≤ l ≤ r ≤ n): the bounds of the selected segment.\n\n  * The second line contains r-l+1 integers b_l, b_{l+1}, ..., b_r (-10^{18} ≤ b_i ≤ 10^{18}): the numbers to add to a_l, a_{l+1}, …, a_r, respectively; b_i should be divisible by r - l + 1.\n\nExample\n\nInput\n\n\n4\n1 3 2 4\n\n\nOutput\n\n\n1 1 \n-1\n3 4\n4 2\n2 4\n-3 -6 -6", "grammar": {"answer": null}}
{"name": "p02941 AtCoder Grand Contest 037 - Numbers on a Circle", "description": "There are N positive integers arranged in a circle.\n\nNow, the i-th number is A_i. Takahashi wants the i-th number to be B_i. For this objective, he will repeatedly perform the following operation:\n\n* Choose an integer i such that 1 \\leq i \\leq N.\n* Let a, b, c be the (i-1)-th, i-th, and (i+1)-th numbers, respectively. Replace the i-th number with a+b+c.\n\n\n\nHere the 0-th number is the N-th number, and the (N+1)-th number is the 1-st number.\n\nDetermine if Takahashi can achieve his objective. If the answer is yes, find the minimum number of operations required.\n\nConstraints\n\n* 3 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq A_i, B_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\nB_1 B_2 ... B_N\n\n\nOutput\n\nPrint the minimum number of operations required, or `-1` if the objective cannot be achieved.\n\nExamples\n\nInput\n\n3\n1 1 1\n13 5 7\n\n\nOutput\n\n4\n\n\nInput\n\n4\n1 2 3 4\n2 3 4 5\n\n\nOutput\n\n-1\n\n\nInput\n\n5\n5 6 5 2 1\n9817 1108 6890 4343 8704\n\n\nOutput\n\n25", "grammar": {"answer": null}}
{"name": "886_F. Symmetric Projections", "description": "You are given a set of n points on the plane. A line containing the origin is called good, if projection of the given set to this line forms a symmetric multiset of points. Find the total number of good lines.\n\nMultiset is a set where equal elements are allowed.\n\nMultiset is called symmetric, if there is a point P on the plane such that the multiset is [centrally symmetric](https://en.wikipedia.org/wiki/Point_reflection) in respect of point P.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 2000) — the number of points in the set.\n\nEach of the next n lines contains two integers xi and yi ( - 106 ≤ xi, yi ≤ 106) — the coordinates of the points. It is guaranteed that no two points coincide.\n\nOutput\n\nIf there are infinitely many good lines, print -1.\n\nOtherwise, print single integer — the number of good lines.\n\nExamples\n\nInput\n\n3\n1 2\n2 1\n3 3\n\n\nOutput\n\n3\n\n\nInput\n\n2\n4 3\n1 2\n\n\nOutput\n\n-1\n\nNote\n\nPicture to the first sample test:\n\n<image>\n\nIn the second sample, any line containing the origin is good.", "grammar": {"answer": null}}
{"name": "p02361 Single Source Shortest Path", "description": "For a given weighted graph G(V, E) and a source r, find the source shortest path to each vertex from the source (SSSP: Single Source Shortest Path).\n\nConstraints\n\n* 1 ≤ |V| ≤ 100000\n* 0 ≤ di ≤ 10000\n* 0 ≤ |E| ≤ 500000\n* There are no parallel edges\n* There are no self-loops\n\nInput\n\nAn edge-weighted graph G (V, E) and the source r.\n\n\n|V| |E| r\ns0 t0 d0\ns1 t1 d1\n:\ns|E|-1 t|E|-1 d|E|-1\n\n\n|V| is the number of vertices and |E| is the number of edges in G. The graph vertices are named with the numbers 0, 1,..., |V|-1 respectively. r is the source of the graph.\n\nsi and ti represent source and target vertices of i-th edge (directed) and di represents the cost of the i-th edge.\n\nOutput\n\nPrint the costs of SSSP in the following format.\n\n\nc0\nc1\n:\nc|V|-1\n\n\nThe output consists of |V| lines. Print the cost of the shortest path from the source r to each vertex 0, 1, ... |V|-1 in order. If there is no path from the source to a vertex, print INF.\n\nExamples\n\nInput\n\n4 5 0\n0 1 1\n0 2 4\n1 2 2\n2 3 1\n1 3 5\n\n\nOutput\n\n0\n1\n3\n4\n\n\nInput\n\n4 6 1\n0 1 1\n0 2 4\n2 0 1\n1 2 2\n3 1 1\n3 2 5\n\n\nOutput\n\n3\n0\n2\nINF", "grammar": {"answer": null}}
{"name": "1057_B. DDoS", "description": "We get more and more news about DDoS-attacks of popular websites.\n\nArseny is an admin and he thinks that a website is under a DDoS-attack if the total number of requests for a some period of time exceeds 100 ⋅ t, where t — the number of seconds in this time segment. \n\nArseny knows statistics on the number of requests per second since the server is booted. He knows the sequence r_1, r_2, ..., r_n, where r_i — the number of requests in the i-th second after boot. \n\nDetermine the length of the longest continuous period of time, which Arseny considers to be a DDoS-attack. A seeking time period should not go beyond the boundaries of the segment [1, n].\n\nInput\n\nThe first line contains n (1 ≤ n ≤ 5000) — number of seconds since server has been booted. The second line contains sequence of integers r_1, r_2, ..., r_n (0 ≤ r_i ≤ 5000), r_i — number of requests in the i-th second.\n\nOutput\n\nPrint the only integer number — the length of the longest time period which is considered to be a DDoS-attack by Arseny. If it doesn't exist print 0.\n\nExamples\n\nInput\n\n5\n100 200 1 1 1\n\n\nOutput\n\n3\n\n\nInput\n\n5\n1 2 3 4 5\n\n\nOutput\n\n0\n\n\nInput\n\n2\n101 99\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "1188_D. Make Equal", "description": "You are given n numbers a_1, a_2, ..., a_n. In one operation we can add to any one of those numbers a nonnegative integer power of 2.\n\nWhat is the smallest number of operations we need to perform to make all n numbers equal? It can be proved that under given constraints it doesn't exceed 10^{18}.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 10^5).\n\nThe second line contains n integers a_1, a_2, …, a_n (0 ≤ a_i ≤ 10^{17}).\n\nOutput\n\nOutput exactly one integer — the smallest number of operations we need to perform to make all n numbers equal.\n\nExamples\n\nInput\n\n\n4\n228 228 228 228\n\n\nOutput\n\n\n0\n\nInput\n\n\n3\n2 2 8\n\n\nOutput\n\n\n3\n\nNote\n\nIn the first example, all numbers are already equal. So the needed number of operation is 0.\n\nIn the second example, we can apply the operation 3 times: add 8 to first 2, add 8 to second 2, add 2 to 8, making all numbers equal to 10. It can be proved that we can't make all numbers equal in less than 3 operations.", "grammar": {"answer": null}}
{"name": "p03062 AtCoder Beginner Contest 125 - Flipping Signs", "description": "There are N integers, A_1, A_2, ..., A_N, arranged in a row in this order.\n\nYou can perform the following operation on this integer sequence any number of times:\n\nOperation: Choose an integer i satisfying 1 \\leq i \\leq N-1. Multiply both A_i and A_{i+1} by -1.\n\nLet B_1, B_2, ..., B_N be the integer sequence after your operations.\n\nFind the maximum possible value of B_1 + B_2 + ... + B_N.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 10^5\n* -10^9 \\leq A_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the maximum possible value of B_1 + B_2 + ... + B_N.\n\nExamples\n\nInput\n\n3\n-10 5 -4\n\n\nOutput\n\n19\n\n\nInput\n\n5\n10 -4 -8 -11 3\n\n\nOutput\n\n30\n\n\nInput\n\n11\n-1000000000 1000000000 -1000000000 1000000000 -1000000000 0 1000000000 -1000000000 1000000000 -1000000000 1000000000\n\n\nOutput\n\n10000000000", "grammar": {"answer": null}}
{"name": "p03580 CODE FESTIVAL 2017 qual B - 101 to 010", "description": "N cells are arranged in a row. Some of them may contain tokens. You are given a string s that consists of `0`s and `1`s. If the i-th character of s is `1`, the i-th cell (from left) contains a token. Otherwise, it doesn't contain a token.\n\nSnuke wants to perform the following operation as many times as possible. In each operation, he chooses three consecutive cells. Let's call the cells X, Y, Z from left to right. In order for the operation to be valid, both X and Z must contain tokens and Y must not contain a token. Then, he removes these two tokens and puts a new token on Y.\n\nHow many operations can he perform if he performs operations in the optimal way?\n\nConstraints\n\n* 1 \\leq N \\leq 500,000\n* |s| = N\n* Each character in s is either `0` or `1`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\ns\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n7\n1010101\n\n\nOutput\n\n2\n\n\nInput\n\n50\n10101000010011011110001001111110000101010111100110\n\n\nOutput\n\n10", "grammar": {"answer": null}}
{"name": "1349_F1. Slime and Sequences (Easy Version)", "description": "Note that the only differences between easy and hard versions are the constraints on n and the time limit. You can make hacks only if all versions are solved.\n\nSlime is interested in sequences. He defined good positive integer sequences p of length n as follows:\n\n  * For each k>1 that presents in p, there should be at least one pair of indices i,j, such that 1 ≤ i < j ≤ n, p_i = k - 1 and p_j = k.\n\n\n\nFor the given integer n, the set of all good sequences of length n is s_n. For the fixed integer k and the sequence p, let f_p(k) be the number of times that k appears in p. For each k from 1 to n, Slime wants to know the following value:\n\n$$$\\left(∑_{p∈ s_n} f_p(k)\\right)\\ mod\\ 998 244 353$$$\n\nInput\n\nThe first line contains one integer n\\ (1≤ n≤ 5000).\n\nOutput\n\nPrint n integers, the i-th of them should be equal to \\left(∑_{p∈ s_n} f_p(i)\\right)\\ mod\\ 998 244 353.\n\nExamples\n\nInput\n\n\n2\n\n\nOutput\n\n\n3 1 \n\n\nInput\n\n\n3\n\n\nOutput\n\n\n10 7 1 \n\n\nInput\n\n\n1\n\n\nOutput\n\n\n1 \n\nNote\n\nIn the first example, s=\\{[1,1],[1,2]\\}.\n\nIn the second example, s=\\{[1,1,1],[1,1,2],[1,2,1],[1,2,2],[2,1,2],[1,2,3]\\}.\n\nIn the third example, s=\\{[1]\\}.", "grammar": {"answer": null}}
{"name": "p03675 AtCoder Regular Contest 077 - pushpush", "description": "You are given an integer sequence of length n, a_1, ..., a_n. Let us consider performing the following n operations on an empty sequence b.\n\nThe i-th operation is as follows:\n\n1. Append a_i to the end of b.\n2. Reverse the order of the elements in b.\n\n\n\nFind the sequence b obtained after these n operations.\n\nConstraints\n\n* 1 \\leq n \\leq 2\\times 10^5\n* 0 \\leq a_i \\leq 10^9\n* n and a_i are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nn\na_1 a_2 ... a_n\n\n\nOutput\n\nPrint n integers in a line with spaces in between. The i-th integer should be b_i.\n\nExamples\n\nInput\n\n4\n1 2 3 4\n\n\nOutput\n\n4 2 1 3\n\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n3 1 2\n\n\nInput\n\n1\n1000000000\n\n\nOutput\n\n1000000000\n\n\nInput\n\n6\n0 6 7 6 7 0\n\n\nOutput\n\n0 6 6 0 7 7", "grammar": {"answer": null}}
{"name": "p04031 AtCoder Beginner Contest 043 - Be Together", "description": "Evi has N integers a_1,a_2,..,a_N. His objective is to have N equal integers by transforming some of them.\n\nHe may transform each integer at most once. Transforming an integer x into another integer y costs him (x-y)^2 dollars. Even if a_i=a_j (i≠j), he has to pay the cost separately for transforming each of them (See Sample 2).\n\nFind the minimum total cost to achieve his objective.\n\nConstraints\n\n* 1≦N≦100\n* -100≦a_i≦100\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the minimum total cost to achieve Evi's objective.\n\nExamples\n\nInput\n\n2\n4 8\n\n\nOutput\n\n8\n\n\nInput\n\n3\n1 1 3\n\n\nOutput\n\n3\n\n\nInput\n\n3\n4 2 5\n\n\nOutput\n\n5\n\n\nInput\n\n4\n-100 -100 -100 -100\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03556 AtCoder Beginner Contest 077 - Around Square", "description": "Find the largest square number not exceeding N. Here, a square number is an integer that can be represented as the square of an integer.\n\nConstraints\n\n* 1 \\leq N \\leq 10^9\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the largest square number not exceeding N.\n\nExamples\n\nInput\n\n10\n\n\nOutput\n\n9\n\n\nInput\n\n81\n\n\nOutput\n\n81\n\n\nInput\n\n271828182\n\n\nOutput\n\n271821169", "grammar": {"answer": null}}
{"name": "p03268 AtCoder Regular Contest 102 - Triangular Relationship", "description": "You are given integers N and K. Find the number of triples (a,b,c) of positive integers not greater than N such that a+b,b+c and c+a are all multiples of K. The order of a,b,c does matter, and some of them can be the same.\n\nConstraints\n\n* 1 \\leq N,K \\leq 2\\times 10^5\n* N and K are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\n\n\nOutput\n\nPrint the number of triples (a,b,c) of positive integers not greater than N such that a+b,b+c and c+a are all multiples of K.\n\nExamples\n\nInput\n\n3 2\n\n\nOutput\n\n9\n\n\nInput\n\n5 3\n\n\nOutput\n\n1\n\n\nInput\n\n31415 9265\n\n\nOutput\n\n27\n\n\nInput\n\n35897 932\n\n\nOutput\n\n114191", "grammar": {"answer": null}}
{"name": "p02555 AtCoder Beginner Contest 178 - Redistribution", "description": "Given is an integer S. Find how many sequences there are whose terms are all integers greater than or equal to 3, and whose sum is equal to S. The answer can be very large, so output it modulo 10^9 + 7.\n\nConstraints\n\n* 1 \\leq S \\leq 2000\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n7\n\n\nOutput\n\n3\n\n\nInput\n\n2\n\n\nOutput\n\n0\n\n\nInput\n\n1729\n\n\nOutput\n\n294867501", "grammar": {"answer": null}}
{"name": "p02981 AtCoder Beginner Contest 133 - T or T", "description": "N of us are going on a trip, by train or taxi.\n\nThe train will cost each of us A yen (the currency of Japan).\n\nThe taxi will cost us a total of B yen.\n\nHow much is our minimum total travel expense?\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 20\n* 1 \\leq A \\leq 50\n* 1 \\leq B \\leq 50\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN A B\n\n\nOutput\n\nPrint an integer representing the minimum total travel expense.\n\nExamples\n\nInput\n\n4 2 9\n\n\nOutput\n\n8\n\n\nInput\n\n4 2 7\n\n\nOutput\n\n7\n\n\nInput\n\n4 2 8\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "630_P. Area of a Star", "description": "It was decided in IT City to distinguish successes of local IT companies by awards in the form of stars covered with gold from one side. To order the stars it is necessary to estimate order cost that depends on the area of gold-plating. Write a program that can calculate the area of a star.\n\nA \"star\" figure having n ≥ 5 corners where n is a prime number is constructed the following way. On the circle of radius r n points are selected so that the distances between the adjacent ones are equal. Then every point is connected by a segment with two maximally distant points. All areas bounded by the segments parts are the figure parts.\n\n<image>\n\nInput\n\nThe only line of the input contains two integers n (5 ≤ n < 109, n is prime) and r (1 ≤ r ≤ 109) — the number of the star corners and the radius of the circumcircle correspondingly.\n\nOutput\n\nOutput one number — the star area. The relative error of your answer should not be greater than 10 - 7.\n\nExamples\n\nInput\n\n7 10\n\n\nOutput\n\n108.395919545675", "grammar": {"answer": null}}
{"name": "584_C. Marina and Vasya", "description": "Marina loves strings of the same length and Vasya loves when there is a third string, different from them in exactly t characters. Help Vasya find at least one such string.\n\nMore formally, you are given two strings s1, s2 of length n and number t. Let's denote as f(a, b) the number of characters in which strings a and b are different. Then your task will be to find any string s3 of length n, such that f(s1, s3) = f(s2, s3) = t. If there is no such string, print  - 1.\n\nInput\n\nThe first line contains two integers n and t (1 ≤ n ≤ 105, 0 ≤ t ≤ n).\n\nThe second line contains string s1 of length n, consisting of lowercase English letters.\n\nThe third line contain string s2 of length n, consisting of lowercase English letters.\n\nOutput\n\nPrint a string of length n, differing from string s1 and from s2 in exactly t characters. Your string should consist only from lowercase English letters. If such string doesn't exist, print -1.\n\nExamples\n\nInput\n\n3 2\nabc\nxyc\n\n\nOutput\n\nayd\n\nInput\n\n1 0\nc\nb\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "513_B1. Permutations", "description": "You are given a permutation p of numbers 1, 2, ..., n. Let's define f(p) as the following sum:\n\n<image>\n\nFind the lexicographically m-th permutation of length n in the set of permutations having the maximum possible value of f(p).\n\nInput\n\nThe single line of input contains two integers n and m (1 ≤ m ≤ cntn), where cntn is the number of permutations of length n with maximum possible value of f(p).\n\nThe problem consists of two subproblems. The subproblems have different constraints on the input. You will get some score for the correct submission of the subproblem. The description of the subproblems follows.\n\n  * In subproblem B1 (3 points), the constraint 1 ≤ n ≤ 8 will hold. \n  * In subproblem B2 (4 points), the constraint 1 ≤ n ≤ 50 will hold. \n\nOutput\n\nOutput n number forming the required permutation.\n\nExamples\n\nInput\n\n2 2\n\n\nOutput\n\n2 1 \n\n\nInput\n\n3 2\n\n\nOutput\n\n1 3 2 \n\nNote\n\nIn the first example, both permutations of numbers {1, 2} yield maximum possible f(p) which is equal to 4. Among them, (2, 1) comes second in lexicographical order.", "grammar": {"answer": null}}
{"name": "p02038 Tanuki and Fox", "description": "problem\n\nThere is a mysterious device $ M $, and if you put Tanuki and Fox in this device, one animal will come out from the device (hereinafter, Tanuki will be $ T $ and Fox will be $ F $).\n\n$ M (x, y) $ represents an animal that came out by putting animals in the device $ M $ in the order of $ x, y $.\n\nAs a result of various trials, the following was found.\n\n\n$ M (T, T) = T $\n$ M (T, F) = F $\n$ M (F, T) = T $\n$ M (F, F) = T $\n\n\n\nYou put the animals in a row $ P_1, P_2, ..., P_N $ into the device as follows.\n$ M (.... M (M (P_1, P_2), P_3) ...., P_N) $\n\nAnswer the last animal that appears.\n\n\n\noutput\n\nOutput the last animal character $ T $ or $ F $, and also a newline at the end.\n\nExample\n\nInput\n\n3\nF T T\n\n\nOutput\n\nT", "grammar": {"answer": null}}
{"name": "p00439 Maximum Sum", "description": "problem\n\nGiven a sequence of n integers a1, a2, ..., an and a positive integer k (1 ≤ k ≤ n), then the sum of k consecutive integers Si = ai + ai + Create a program that outputs the maximum value of 1 + ... + ai + k-1 (1 ≤ i ≤ n --k + 1).\n\n\n\ninput\n\nThe input consists of multiple datasets. Each dataset is given in the following format. The input ends on a line containing two zeros.\n\nOn the first line, the positive integer n (1 ≤ n ≤ 100000) and the positive integer k (1 ≤ k ≤ n) are written in this order, separated by blanks. The first + i lines after the second line. (1 ≤ i ≤ n) contains the i-th term ai (-10000 ≤ ai ≤ 10000) in the sequence. Of the scoring data, 60% of the points are n ≤ 5000, k ≤ 1000. Meet.\n\nThe number of datasets does not exceed 5.\n\noutput\n\nThe maximum value of Si is output to one line for each data set.\n\nExamples\n\nInput\n\n5 3\n2\n5\n-4\n10\n3\n0 0\n\n\nOutput\n\n11\n\n\nInput\n\nNone\n\n\nOutput\n\nNone", "grammar": {"answer": null}}
{"name": "346_C. Number Transformation II", "description": "You are given a sequence of positive integers x1, x2, ..., xn and two non-negative integers a and b. Your task is to transform a into b. To do that, you can perform the following moves:\n\n  * subtract 1 from the current a; \n  * subtract a mod xi (1 ≤ i ≤ n) from the current a. \n\n\n\nOperation a mod xi means taking the remainder after division of number a by number xi.\n\nNow you want to know the minimum number of moves needed to transform a into b.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 105). The second line contains n space-separated integers x1, x2, ..., xn (2 ≤ xi ≤ 109). The third line contains two integers a and b (0 ≤ b ≤ a ≤ 109, a - b ≤ 106).\n\nOutput\n\nPrint a single integer — the required minimum number of moves needed to transform number a into number b.\n\nExamples\n\nInput\n\n3\n3 4 5\n30 17\n\n\nOutput\n\n6\n\n\nInput\n\n3\n5 6 7\n1000 200\n\n\nOutput\n\n206", "grammar": {"answer": null}}
{"name": "p00128 Abacus", "description": "<image>\n\n\nAt the request of a friend who started learning abacus, you decided to create a program to display the abacus beads. Create a program that takes a certain number as input and outputs a row of abacus beads. However, the number of digits of the abacus to be displayed is 5 digits, and the arrangement of beads from 0 to 9 is as follows using'*' (half-width asterisk),''(half-width blank), and'=' (half-width equal). It shall be expressed as.\n\n<image>\n\n\n\nInput\n\nMultiple test cases are given. Up to 5 digits (integer) are given on one line for each test case.\n\nThe number of test cases does not exceed 1024.\n\nOutput\n\nOutput the abacus bead arrangement for each test case. Insert a blank line between the test cases.\n\nExample\n\nInput\n\n2006\n1111\n\n\nOutput\n\n****\n    *\n=====\n *  *\n****\n* ***\n*****\n*****\n\n*****\n\n=====\n ****\n*\n*****\n*****\n*****", "grammar": {"answer": null}}
{"name": "p03826 AtCoder Beginner Contest 052 - Two Rectangles", "description": "There are two rectangles. The lengths of the vertical sides of the first rectangle are A, and the lengths of the horizontal sides of the first rectangle are B. The lengths of the vertical sides of the second rectangle are C, and the lengths of the horizontal sides of the second rectangle are D.\n\nPrint the area of the rectangle with the larger area. If the two rectangles have equal areas, print that area.\n\nConstraints\n\n* All input values are integers.\n* 1≤A≤10^4\n* 1≤B≤10^4\n* 1≤C≤10^4\n* 1≤D≤10^4\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nA B C D\n\n\nOutput\n\nPrint the area of the rectangle with the larger area. If the two rectangles have equal areas, print that area.\n\nExamples\n\nInput\n\n3 5 2 7\n\n\nOutput\n\n15\n\n\nInput\n\n100 600 200 300\n\n\nOutput\n\n60000", "grammar": {"answer": null}}
{"name": "359_B. Permutation", "description": "A permutation p is an ordered group of numbers p1, p2, ..., pn, consisting of n distinct positive integers, each is no more than n. We'll define number n as the length of permutation p1, p2, ..., pn.\n\nSimon has a positive integer n and a non-negative integer k, such that 2k ≤ n. Help him find permutation a of length 2n, such that it meets this equation: <image>.\n\nInput\n\nThe first line contains two integers n and k (1 ≤ n ≤ 50000, 0 ≤ 2k ≤ n).\n\nOutput\n\nPrint 2n integers a1, a2, ..., a2n — the required permutation a. It is guaranteed that the solution exists. If there are multiple solutions, you can print any of them.\n\nExamples\n\nInput\n\n1 0\n\n\nOutput\n\n1 2\n\nInput\n\n2 1\n\n\nOutput\n\n3 2 1 4\n\n\nInput\n\n4 0\n\n\nOutput\n\n2 7 4 6 1 3 5 8\n\nNote\n\nRecord |x| represents the absolute value of number x. \n\nIn the first sample |1 - 2| - |1 - 2| = 0.\n\nIn the second sample |3 - 2| + |1 - 4| - |3 - 2 + 1 - 4| = 1 + 3 - 2 = 2.\n\nIn the third sample |2 - 7| + |4 - 6| + |1 - 3| + |5 - 8| - |2 - 7 + 4 - 6 + 1 - 3 + 5 - 8| = 12 - 12 = 0.", "grammar": {"answer": null}}
{"name": "p03888 CODE FESTIVAL 2016 Relay (Parallel) - Equivalent Resistance", "description": "In an electric circuit, when two resistors R_1 and R_2 are connected in parallel, the equivalent resistance R_3 can be derived from the following formula:\n\n* \\frac{1}{R_1} + \\frac{1}{R_2} = \\frac{1}{R_3}\n\n\n\nGiven R_1 and R_2, find R_3.\n\nConstraints\n\n* 1 \\leq R_1, R_2 \\leq 100\n* R_1 and R_2 are integers.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nR_1 R_2\n\n\nOutput\n\nPrint the value of R_3.\n\nThe output is considered correct if the absolute or relative error is at most 10^{-6}.\n\nExamples\n\nInput\n\n2 3\n\n\nOutput\n\n1.2000000000\n\n\nInput\n\n100 99\n\n\nOutput\n\n49.7487437186", "grammar": {"answer": null}}
{"name": "278_D. Set of Points", "description": "Convexity of a set of points on the plane is the size of the largest subset of points that form a convex polygon. Your task is to build a set of n points with the convexity of exactly m. Your set of points should not contain three points that lie on a straight line.\n\nInput\n\nThe single line contains two integers n and m (3 ≤ m ≤ 100, m ≤ n ≤ 2m).\n\nOutput\n\nIf there is no solution, print \"-1\". Otherwise, print n pairs of integers — the coordinates of points of any set with the convexity of m. The coordinates shouldn't exceed 108 in their absolute value.\n\nExamples\n\nInput\n\n4 3\n\n\nOutput\n\n0 0\n3 0\n0 3\n1 1\n\n\nInput\n\n6 3\n\n\nOutput\n\n-1\n\n\nInput\n\n6 6\n\n\nOutput\n\n10 0\n-10 0\n10 1\n9 1\n9 -1\n0 -2\n\n\nInput\n\n7 4\n\n\nOutput\n\n176166 6377\n709276 539564\n654734 174109\n910147 434207\n790497 366519\n606663 21061\n859328 886001", "grammar": {"answer": null}}
{"name": "1505_B. DMCA", "description": "Many people are aware of DMCA – Digital Millennium Copyright Act. But another recently proposed DMCA – Digital Millennium Calculation Act – is much less known.\n\nIn this problem you need to find a root of a number according to this new DMCA law.\n\nInput\n\nThe input contains a single integer a (1 ≤ a ≤ 1000000).\n\nOutput\n\nOutput the result – an integer number.\n\nExamples\n\nInput\n\n\n1\n\n\nOutput\n\n\n1\n\n\nInput\n\n\n81\n\n\nOutput\n\n\n9", "grammar": {"answer": null}}
{"name": "509_A. Maximum in Table", "description": "An n × n table a is defined as follows:\n\n  * The first row and the first column contain ones, that is: ai, 1 = a1, i = 1 for all i = 1, 2, ..., n. \n  * Each of the remaining numbers in the table is equal to the sum of the number above it and the number to the left of it. In other words, the remaining elements are defined by the formula ai, j = ai - 1, j + ai, j - 1. \n\n\n\nThese conditions define all the values in the table.\n\nYou are given a number n. You need to determine the maximum value in the n × n table defined by the rules above.\n\nInput\n\nThe only line of input contains a positive integer n (1 ≤ n ≤ 10) — the number of rows and columns of the table.\n\nOutput\n\nPrint a single line containing a positive integer m — the maximum value in the table.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n1\n\nInput\n\n5\n\n\nOutput\n\n70\n\nNote\n\nIn the second test the rows of the table look as follows: \n\n{1, 1, 1, 1, 1},  {1, 2, 3, 4, 5},  {1, 3, 6, 10, 15},  {1, 4, 10, 20, 35},  {1, 5, 15, 35, 70}.", "grammar": {"answer": null}}
{"name": "p00101 Aizu PR", "description": "An English booklet has been created for publicizing Aizu to the world. When you read it carefully, you found a misnomer (an error in writing) on the last name of Masayuki Hoshina, the lord of the Aizu domain. The booklet says \"Hoshino\" not \"Hoshina\".\n\nYour task is to write a program which replace all the words \"Hoshino\" with \"Hoshina\". You can assume that the number of characters in a text is less than or equal to 1000.\n\n\n\nInput\n\nThe input consists of several datasets. There will be the number of datasets n in the first line. There will be n lines. A line consisting of english texts will be given for each dataset.\n\nOutput\n\nFor each dataset, print the converted texts in a line.\n\nExample\n\nInput\n\n3\nHoshino\nHashino\nMasayuki Hoshino was the grandson of Ieyasu Tokugawa.\n\n\nOutput\n\nHoshina\nHashino\nMasayuki Hoshina was the grandson of Ieyasu Tokugawa.", "grammar": {"answer": null}}
{"name": "p03197 CADDi 2018 - Harlequin", "description": "There is an apple tree that bears apples of N colors. The N colors of these apples are numbered 1 to N, and there are a_i apples of Color i.\n\nYou and Lunlun the dachshund alternately perform the following operation (starting from you):\n\n* Choose one or more apples from the tree and eat them. Here, the apples chosen at the same time must all have different colors.\n\n\n\nThe one who eats the last apple from the tree will be declared winner. If both you and Lunlun play optimally, which will win?\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* 1 \\leq a_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1\na_2\n:\na_N\n\n\nOutput\n\nIf you will win, print `first`; if Lunlun will win, print `second`.\n\nExamples\n\nInput\n\n2\n1\n2\n\n\nOutput\n\nfirst\n\n\nInput\n\n3\n100000\n30000\n20000\n\n\nOutput\n\nsecond", "grammar": {"answer": null}}
{"name": "883_H. Palindromic Cut", "description": "Kolya has a string s of length n consisting of lowercase and uppercase Latin letters and digits.\n\nHe wants to rearrange the symbols in s and cut it into the minimum number of parts so that each part is a palindrome and all parts have the same lengths. A palindrome is a string which reads the same backward as forward, such as madam or racecar.\n\nYour task is to help Kolya and determine the minimum number of palindromes of equal lengths to cut s into, if it is allowed to rearrange letters in s before cuttings.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 4·105) — the length of string s.\n\nThe second line contains a string s of length n consisting of lowercase and uppercase Latin letters and digits.\n\nOutput\n\nPrint to the first line an integer k — minimum number of palindromes into which you can cut a given string.\n\nPrint to the second line k strings — the palindromes themselves. Separate them by a space. You are allowed to print palindromes in arbitrary order. All of them should have the same length.\n\nExamples\n\nInput\n\n6\naabaac\n\n\nOutput\n\n2\naba aca \n\nInput\n\n8\n0rTrT022\n\n\nOutput\n\n1\n02TrrT20 \n\nInput\n\n2\naA\n\n\nOutput\n\n2\na A ", "grammar": {"answer": null}}
{"name": "710_D. Two Arithmetic Progressions", "description": "You are given two arithmetic progressions: a1k + b1 and a2l + b2. Find the number of integers x such that L ≤ x ≤ R and x = a1k' + b1 = a2l' + b2, for some integers k', l' ≥ 0.\n\nInput\n\nThe only line contains six integers a1, b1, a2, b2, L, R (0 < a1, a2 ≤ 2·109, - 2·109 ≤ b1, b2, L, R ≤ 2·109, L ≤ R).\n\nOutput\n\nPrint the desired number of integers x.\n\nExamples\n\nInput\n\n2 0 3 3 5 21\n\n\nOutput\n\n3\n\n\nInput\n\n2 4 3 0 6 17\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p00020 Capitalize", "description": "Write a program which replace all the lower-case letters of a given text with the corresponding captital letters.\n\n\n\nInput\n\nA text including lower-case letters, periods, and space is given in a line. The number of characters in the text is less than or equal to 200.\n\nOutput\n\nPrint the converted text.\n\nExample\n\nInput\n\nthis is a pen.\n\n\nOutput\n\nTHIS IS A PEN.", "grammar": {"answer": null}}
{"name": "171_C. A Piece of Cake", "description": "How to make a cake you'll never eat.\n\nIngredients. \n\n  * 2 carrots\n  * 0 calories\n  * 100 g chocolate spread\n  * 1 pack of flour\n  * 1 egg\n\n\n\nMethod. \n\n  1. Put calories into the mixing bowl.\n  2. Take carrots from refrigerator.\n  3. Chop carrots.\n  4. Take chocolate spread from refrigerator.\n  5. Put chocolate spread into the mixing bowl.\n  6. Combine pack of flour into the mixing bowl.\n  7. Fold chocolate spread into the mixing bowl.\n  8. Add chocolate spread into the mixing bowl.\n  9. Put pack of flour into the mixing bowl.\n  10. Add egg into the mixing bowl.\n  11. Fold pack of flour into the mixing bowl.\n  12. Chop carrots until choped.\n  13. Pour contents of the mixing bowl into the baking dish.\n\n\n\nServes 1.\n\nInput\n\nThe only line of input contains a sequence of integers a0, a1, ... (1 ≤ a0 ≤ 100, 0 ≤ ai ≤ 1000 for i ≥ 1).\n\nOutput\n\nOutput a single integer.\n\nExamples\n\nInput\n\n4 1 2 3 4\n\n\nOutput\n\n30", "grammar": {"answer": null}}
{"name": "p02755 AtCoder Beginner Contest 158 - Tax Increase", "description": "Find the price of a product before tax such that, when the consumption tax rate is 8 percent and 10 percent, the amount of consumption tax levied on it is A yen and B yen, respectively. (Yen is the currency of Japan.)\n\nHere, the price before tax must be a positive integer, and the amount of consumption tax is rounded down to the nearest integer.\n\nIf multiple prices satisfy the condition, print the lowest such price; if no price satisfies the condition, print `-1`.\n\nConstraints\n\n* 1 \\leq A \\leq B \\leq 100\n* A and B are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nIf there is a price that satisfies the condition, print an integer representing the lowest such price; otherwise, print `-1`.\n\nExamples\n\nInput\n\n2 2\n\n\nOutput\n\n25\n\n\nInput\n\n8 10\n\n\nOutput\n\n100\n\n\nInput\n\n19 99\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p02177 iff", "description": "problem\n\nThere are $ N $ propositions, named $ 1, 2, \\ cdots, N $, respectively. Also, $ M $ information about the propositions is given. The $ i $ th information is \"$ a_i $$\". Given in the form \"b_i $\", which means that $ a_i $ is $ b_i $. (\"If\" is a logical conditional and the transition law holds.) $ For each proposition $ i $ Output all propositions that have the same value as i $ in ascending order. However, proposition $ i $ and proposition $ i $ are always the same value. Proposition $ X $ and proposition $ Y $ have the same value as \"$ if $ X $\". It means \"Y $\" and \"$ X $ if $ Y $\".\n\n\n\noutput\n\nOn the $ i $ line, output all propositions that have the same value as the proposition $ i $, separated by blanks in ascending order. Also, output a line break at the end of each line.\n\nExample\n\nInput\n\n5 2\n1 2\n2 1\n\n\nOutput\n\n1 2\n1 2\n3\n4\n5", "grammar": {"answer": null}}
{"name": "p00139 Snakes", "description": "In a world, a mysterious snake made of only letters lives. Two types of snakes are currently identified, type A and type B, but there may be other types as well.\n\nFor class A, after \">'\" is followed by one or more \"=\", \"#\" comes, and after the same number of \"=\" as before, \"~\" (half-width tilde) finish.\n\nClass B ends with \"~~\" after \"> ^\" followed by one or more \"Q =\".\n\n\nExample of type A:>'==== # ==== ~>'== # == ~\n\n\n\nExample of B type:> ^ Q = Q = Q = Q = ~~> ^ Q = Q = ~~\n\n\nReceives a snake as character string data, determines what kind it is, and outputs \"A\" for type A, \"B\" for type B, and \"NA\" for other types. Please create a program to do.\n\n\n\nInput\n\nThe input is given in the following format:\n\n\nn\nS1\nS2\n::\nSn\n\n\nThe number of snakes identified on the first line n (1 ≤ n ≤ 10000), and the following n lines contain the i-th snake string Si (200 characters or less, without spaces) on each line. Is given to.\n\nOutput\n\nPrint the i-th snake type A, B or NA on line i.\n\nExample\n\nInput\n\n3\n>'======#======~\n>^Q=Q=Q=Q=Q=Q=Q=Q=Q=~~\n>'===#====~\n\n\nOutput\n\nA\nB\nNA", "grammar": {"answer": null}}
{"name": "p02761 AtCoder Beginner Contest 157 - Guess The Number", "description": "If there is an integer not less than 0 satisfying the following conditions, print the smallest such integer; otherwise, print `-1`.\n\n* The integer has exactly N digits in base ten. (We assume 0 to be a 1-digit integer. For other integers, leading zeros are not allowed.)\n* The s_i-th digit from the left is c_i. \\left(i = 1, 2, \\cdots, M\\right)\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 3\n* 0 \\leq M \\leq 5\n* 1 \\leq s_i \\leq N\n* 0 \\leq c_i \\leq 9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\ns_1 c_1\n\\vdots\ns_M c_M\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3 3\n1 7\n3 2\n1 7\n\n\nOutput\n\n702\n\n\nInput\n\n3 2\n2 1\n2 3\n\n\nOutput\n\n-1\n\n\nInput\n\n3 1\n1 0\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p03633 AtCoder Beginner Contest 070 - Multiple Clocks", "description": "We have N clocks. The hand of the i-th clock (1≤i≤N) rotates through 360° in exactly T_i seconds.\nInitially, the hand of every clock stands still, pointing directly upward.\nNow, Dolphin starts all the clocks simultaneously.\nIn how many seconds will the hand of every clock point directly upward again?\n\nConstraints\n\n* 1≤N≤100\n* 1≤T_i≤10^{18}\n* All input values are integers.\n* The correct answer is at most 10^{18} seconds.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nT_1\n:\nT_N\n\n\nOutput\n\nPrint the number of seconds after which the hand of every clock point directly upward again.\n\nExamples\n\nInput\n\n2\n2\n3\n\n\nOutput\n\n6\n\n\nInput\n\n5\n2\n5\n10\n1000000000000000000\n1000000000000000000\n\n\nOutput\n\n1000000000000000000", "grammar": {"answer": null}}
{"name": "p03796 AtCoder Beginner Contest 055 - Training Camp", "description": "Snuke loves working out. He is now exercising N times.\n\nBefore he starts exercising, his power is 1. After he exercises for the i-th time, his power gets multiplied by i.\n\nFind Snuke's power after he exercises N times. Since the answer can be extremely large, print the answer modulo 10^{9}+7.\n\nConstraints\n\n* 1 ≤ N ≤ 10^{5}\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the answer modulo 10^{9}+7.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n6\n\n\nInput\n\n10\n\n\nOutput\n\n3628800\n\n\nInput\n\n100000\n\n\nOutput\n\n457992974", "grammar": {"answer": null}}
{"name": "900_C. Remove Extra One", "description": "You are given a permutation p of length n. Remove one element from permutation to make the number of records the maximum possible.\n\nWe remind that in a sequence of numbers a1, a2, ..., ak the element ai is a record if for every integer j (1 ≤ j < i) the following holds: aj < ai. \n\nInput\n\nThe first line contains the only integer n (1 ≤ n ≤ 105) — the length of the permutation.\n\nThe second line contains n integers p1, p2, ..., pn (1 ≤ pi ≤ n) — the permutation. All the integers are distinct.\n\nOutput\n\nPrint the only integer — the element that should be removed to make the number of records the maximum possible. If there are multiple such elements, print the smallest one.\n\nExamples\n\nInput\n\n1\n1\n\n\nOutput\n\n1\n\n\nInput\n\n5\n5 1 2 3 4\n\n\nOutput\n\n5\n\nNote\n\nIn the first example the only element can be removed.", "grammar": {"answer": null}}
{"name": "1225_A. Forgetting Things", "description": "Kolya is very absent-minded. Today his math teacher asked him to solve a simple problem with the equation a + 1 = b with positive integers a and b, but Kolya forgot the numbers a and b. He does, however, remember that the first (leftmost) digit of a was d_a, and the first (leftmost) digit of b was d_b.\n\nCan you reconstruct any equation a + 1 = b that satisfies this property? It may be possible that Kolya misremembers the digits, and there is no suitable equation, in which case report so.\n\nInput\n\nThe only line contains two space-separated digits d_a and d_b (1 ≤ d_a, d_b ≤ 9).\n\nOutput\n\nIf there is no equation a + 1 = b with positive integers a and b such that the first digit of a is d_a, and the first digit of b is d_b, print a single number -1.\n\nOtherwise, print any suitable a and b that both are positive and do not exceed 10^9. It is guaranteed that if a solution exists, there also exists a solution with both numbers not exceeding 10^9.\n\nExamples\n\nInput\n\n\n1 2\n\n\nOutput\n\n\n199 200\n\n\nInput\n\n\n4 4\n\n\nOutput\n\n\n412 413\n\n\nInput\n\n\n5 7\n\n\nOutput\n\n\n-1\n\n\nInput\n\n\n6 2\n\n\nOutput\n\n\n-1", "grammar": {"answer": null}}
{"name": "p02723 AtCoder Beginner Contest 160 - Coffee", "description": "A string of length 6 consisting of lowercase English letters is said to be coffee-like if and only if its 3-rd and 4-th characters are equal and its 5-th and 6-th characters are also equal.\nGiven a string S, determine whether it is coffee-like.\n\nConstraints\n\n* S is a string of length 6 consisting of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nIf S is coffee-like, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\nsippuu\n\n\nOutput\n\nYes\n\n\nInput\n\niphone\n\n\nOutput\n\nNo\n\n\nInput\n\ncoffee\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "635_C. XOR Equation", "description": "Two positive integers a and b have a sum of s and a bitwise XOR of x. How many possible values are there for the ordered pair (a, b)?\n\nInput\n\nThe first line of the input contains two integers s and x (2 ≤ s ≤ 1012, 0 ≤ x ≤ 1012), the sum and bitwise xor of the pair of positive integers, respectively.\n\nOutput\n\nPrint a single integer, the number of solutions to the given conditions. If no solutions exist, print 0.\n\nExamples\n\nInput\n\n9 5\n\n\nOutput\n\n4\n\n\nInput\n\n3 3\n\n\nOutput\n\n2\n\n\nInput\n\n5 2\n\n\nOutput\n\n0\n\nNote\n\nIn the first sample, we have the following solutions: (2, 7), (3, 6), (6, 3), (7, 2).\n\nIn the second sample, the only solutions are (1, 2) and (2, 1).", "grammar": {"answer": null}}
{"name": "p03821 AtCoder Grand Contest 009 - Multiple Array", "description": "There are an integer sequence A_1,...,A_N consisting of N terms, and N buttons. When the i-th (1 ≦ i ≦ N) button is pressed, the values of the i terms from the first through the i-th are all incremented by 1.\n\nThere is also another integer sequence B_1,...,B_N. Takahashi will push the buttons some number of times so that for every i, A_i will be a multiple of B_i.\n\nFind the minimum number of times Takahashi will press the buttons.\n\nConstraints\n\n* All input values are integers.\n* 1 ≦ N ≦ 10^5\n* 0 ≦ A_i ≦ 10^9(1 ≦ i ≦ N)\n* 1 ≦ B_i ≦ 10^9(1 ≦ i ≦ N)\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nA_1 B_1\n:\nA_N B_N\n\n\nOutput\n\nPrint an integer representing the minimum number of times Takahashi will press the buttons.\n\nExamples\n\nInput\n\n3\n3 5\n2 7\n9 4\n\n\nOutput\n\n7\n\n\nInput\n\n7\n3 1\n4 1\n5 9\n2 6\n5 3\n5 8\n9 7\n\n\nOutput\n\n22", "grammar": {"answer": null}}
{"name": "663_A. Rebus", "description": "You are given a rebus of form ? + ? - ? + ? = n, consisting of only question marks, separated by arithmetic operation '+' and '-', equality and positive integer n. The goal is to replace each question mark with some positive integer from 1 to n, such that equality holds.\n\nInput\n\nThe only line of the input contains a rebus. It's guaranteed that it contains no more than 100 question marks, integer n is positive and doesn't exceed 1 000 000, all letters and integers are separated by spaces, arithmetic operations are located only between question marks.\n\nOutput\n\nThe first line of the output should contain \"Possible\" (without quotes) if rebus has a solution and \"Impossible\" (without quotes) otherwise.\n\nIf the answer exists, the second line should contain any valid rebus with question marks replaced by integers from 1 to n. Follow the format given in the samples.\n\nExamples\n\nInput\n\n? + ? - ? + ? + ? = 42\n\n\nOutput\n\nPossible\n9 + 13 - 39 + 28 + 31 = 42\n\n\nInput\n\n? - ? = 1\n\n\nOutput\n\nImpossible\n\n\nInput\n\n? = 1000000\n\n\nOutput\n\nPossible\n1000000 = 1000000", "grammar": {"answer": null}}
{"name": "p02345 Range Minimum Query (RMQ)", "description": "Write a program which manipulates a sequence A = {a0, a1, . . . , an-1} with the following operations:\n\n* find(s, t): report the minimum element in as, as+1, . . . ,at.\n* update(i, x): change ai to x.\n\n\n\nNote that the initial values of ai (i = 0, 1, . . . , n−1) are 231-1.\n\nConstraints\n\n* 1 ≤ n ≤ 100000\n* 1 ≤ q ≤ 100000\n* If comi is 0, then 0 ≤ xi < n, 0 ≤ yi < 231-1.\n* If comi is 1, then 0 ≤ xi < n, 0 ≤ yi < n.\n\nInput\n\n\nn q\ncom0 x0 y0\ncom1 x1 y1\n...\ncomq−1 xq−1 yq−1\n\n\nIn the first line, n (the number of elements in A) and q (the number of queries) are given. Then, q queries are given where com represents the type of queries. '0' denotes update(xi, yi) and '1' denotes find(xi, yi).\n\nOutput\n\nFor each find operation, print the minimum element.\n\nExamples\n\nInput\n\n3 5\n0 0 1\n0 1 2\n0 2 3\n1 0 2\n1 1 2\n\n\nOutput\n\n1\n2\n\n\nInput\n\n1 3\n1 0 0\n0 0 5\n1 0 0\n\n\nOutput\n\n2147483647\n5", "grammar": {"answer": null}}
{"name": "600_D. Area of Two Circles' Intersection", "description": "You are given two circles. Find the area of their intersection.\n\nInput\n\nThe first line contains three integers x1, y1, r1 ( - 109 ≤ x1, y1 ≤ 109, 1 ≤ r1 ≤ 109) — the position of the center and the radius of the first circle.\n\nThe second line contains three integers x2, y2, r2 ( - 109 ≤ x2, y2 ≤ 109, 1 ≤ r2 ≤ 109) — the position of the center and the radius of the second circle.\n\nOutput\n\nPrint the area of the intersection of the circles. The answer will be considered correct if the absolute or relative error doesn't exceed 10 - 6.\n\nExamples\n\nInput\n\n0 0 4\n6 0 4\n\n\nOutput\n\n7.25298806364175601379\n\n\nInput\n\n0 0 5\n11 0 5\n\n\nOutput\n\n0.00000000000000000000", "grammar": {"answer": null}}
{"name": "p03107 AtCoder Beginner Contest 120 - Unification", "description": "There are N cubes stacked vertically on a desk.\n\nYou are given a string S of length N. The color of the i-th cube from the bottom is red if the i-th character in S is `0`, and blue if that character is `1`.\n\nYou can perform the following operation any number of times: choose a red cube and a blue cube that are adjacent, and remove them. Here, the cubes that were stacked on the removed cubes will fall down onto the object below them.\n\nAt most how many cubes can be removed?\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* |S| = N\n* Each character in S is `0` or `1`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the maximum number of cubes that can be removed.\n\nExamples\n\nInput\n\n0011\n\n\nOutput\n\n4\n\n\nInput\n\n11011010001011\n\n\nOutput\n\n12\n\n\nInput\n\n0\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "1182_E. Product Oriented Recurrence", "description": "Let f_{x} = c^{2x-6} ⋅ f_{x-1} ⋅ f_{x-2} ⋅ f_{x-3} for x ≥ 4.\n\nYou have given integers n, f_{1}, f_{2}, f_{3}, and c. Find f_{n} mod (10^{9}+7).\n\nInput\n\nThe only line contains five integers n, f_{1}, f_{2}, f_{3}, and c (4 ≤ n ≤ 10^{18}, 1 ≤ f_{1}, f_{2}, f_{3}, c ≤ 10^{9}).\n\nOutput\n\nPrint f_{n} mod (10^{9} + 7).\n\nExamples\n\nInput\n\n\n5 1 2 5 3\n\n\nOutput\n\n\n72900\n\n\nInput\n\n\n17 97 41 37 11\n\n\nOutput\n\n\n317451037\n\nNote\n\nIn the first example, f_{4} = 90, f_{5} = 72900.\n\nIn the second example, f_{17} ≈ 2.28 × 10^{29587}.", "grammar": {"answer": null}}
{"name": "p03476 AtCoder Beginner Contest 084 - 2017-like Number", "description": "We say that a odd number N is similar to 2017 when both N and (N+1)/2 are prime.\n\nYou are given Q queries.\n\nIn the i-th query, given two odd numbers l_i and r_i, find the number of odd numbers x similar to 2017 such that l_i ≤ x ≤ r_i.\n\nConstraints\n\n* 1≤Q≤10^5\n* 1≤l_i≤r_i≤10^5\n* l_i and r_i are odd.\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nQ\nl_1 r_1\n:\nl_Q r_Q\n\n\nOutput\n\nPrint Q lines. The i-th line (1≤i≤Q) should contain the response to the i-th query.\n\nExamples\n\nInput\n\n1\n3 7\n\n\nOutput\n\n2\n\n\nInput\n\n4\n13 13\n7 11\n7 11\n2017 2017\n\n\nOutput\n\n1\n0\n0\n1\n\n\nInput\n\n6\n1 53\n13 91\n37 55\n19 51\n73 91\n13 49\n\n\nOutput\n\n4\n4\n1\n1\n1\n2", "grammar": {"answer": null}}
{"name": "p00109 Smart Calculator", "description": "Your task is to write a program which reads an expression and evaluates it.\n\n* The expression consists of numerical values, operators and parentheses, and the ends with '='.\n* The operators includes +, - , *, / where respectively represents, addition, subtraction, multiplication and division.\n* Precedence of the operators is based on usual laws. That is one should perform all multiplication and division first, then addition and subtraction. When two operators have the same precedence, they are applied from left to right.\n* You may assume that there is no division by zero.\n* All calculation is performed as integers, and after the decimal point should be truncated\n* Length of the expression will not exceed 100.\n* -1 × 109 ≤ intermediate results of computation ≤ 109\n\n\n\nInput\n\nThe input is a sequence of datasets. The first line contains an integer n which represents the number of datasets. There will be n lines where each line contains an expression.\n\nOutput\n\nFor each datasets, prints the result of calculation.\n\nExample\n\nInput\n\n2\n4-2*3=\n4*(8+4+3)=\n\n\nOutput\n\n-2\n60", "grammar": {"answer": null}}
{"name": "p03433 AtCoder Beginner Contest 088 - Infinite Coins", "description": "E869120 has A 1-yen coins and infinitely many 500-yen coins.\nDetermine if he can pay exactly N yen using only these coins.\n\nConstraints\n\n* N is an integer between 1 and 10000 (inclusive).\n* A is an integer between 0 and 1000 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA\n\n\nOutput\n\nIf E869120 can pay exactly N yen using only his 1-yen and 500-yen coins, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n2018\n218\n\n\nOutput\n\nYes\n\n\nInput\n\n2763\n0\n\n\nOutput\n\nNo\n\n\nInput\n\n37\n514\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "p03082 ExaWizards 2019 - Modulo Operations", "description": "Snuke has a blackboard and a set S consisting of N integers. The i-th element in S is S_i.\n\nHe wrote an integer X on the blackboard, then performed the following operation N times:\n\n* Choose one element from S and remove it.\n* Let x be the number written on the blackboard now, and y be the integer removed from S. Replace the number on the blackboard with x \\bmod {y}.\n\n\n\nThere are N! possible orders in which the elements are removed from S. For each of them, find the number that would be written on the blackboard after the N operations, and compute the sum of all those N! numbers modulo 10^{9}+7.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 200\n* 1 \\leq S_i, X \\leq 10^{5}\n* S_i are pairwise distinct.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN X\nS_1 S_2 \\ldots S_{N}\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n2 19\n3 7\n\n\nOutput\n\n3\n\n\nInput\n\n5 82\n22 11 6 5 13\n\n\nOutput\n\n288\n\n\nInput\n\n10 100000\n50000 50001 50002 50003 50004 50005 50006 50007 50008 50009\n\n\nOutput\n\n279669259", "grammar": {"answer": null}}
{"name": "955_F. Heaps", "description": "You're given a tree with n vertices rooted at 1.\n\nWe say that there's a k-ary heap of depth m located at u if the following holds:\n\n  * For m = 1 u itself is a k-ary heap of depth 1. \n  * For m > 1 vertex u is a k-ary heap of depth m if at least k of its children are k-ary heaps of depth at least m - 1. \n\n\n\nDenote dpk(u) as maximum depth of k-ary heap in the subtree of u (including u). Your goal is to compute <image>.\n\nInput\n\nThe first line contains an integer n denoting the size of the tree (2 ≤ n ≤ 3·105). \n\nThe next n - 1 lines contain two integers u, v each, describing vertices connected by i-th edge.\n\nIt's guaranteed that the given configuration forms a tree.\n\nOutput\n\nOutput the answer to the task.\n\nExamples\n\nInput\n\n4\n1 3\n2 3\n4 3\n\n\nOutput\n\n21\n\n\nInput\n\n4\n1 2\n2 3\n3 4\n\n\nOutput\n\n22\n\nNote\n\nConsider sample case one.\n\nFor k ≥ 3 all dpk will be equal to 1.\n\nFor k = 2 dpk is 2 if <image> and 1 otherwise.\n\nFor k = 1 dpk values are (3, 1, 2, 1) respectively.\n\nTo sum up, 4·1 + 4·1 + 2·2 + 2·1 + 3 + 1 + 2 + 1 = 21.", "grammar": {"answer": null}}
{"name": "p01601 Palindromic Number", "description": "Palindrome\n\nProblem Statement\n\nFind the number of palindromes closest to the integer n.\n\nNote that the non-negative integer x is the number of palindromes, which means that the character string in which x is expressed in decimal notation and the character string in which it is inverted are equal.\nFor example, 0,7,33,10301 is the number of palindromes, and 32,90,1010 is not the number of palindromes.\n\nConstraints\n\n* 1 ≤ n ≤ 10 ^ 4\n\nInput\n\nInput follows the following format. All given numbers are integers.\n\n\nn\n\nOutput\n\nOutput the number of palindromes closest to n.\nIf there are multiple such numbers, output the smallest one.\n\nExamples\n\nInput\n\n13\n\n\nOutput\n\n11\n\n\nInput\n\n7447\n\n\nOutput\n\n7447\n\n\nInput\n\n106\n\n\nOutput\n\n101", "grammar": {"answer": null}}
{"name": "454_B. Little Pony and Sort by Shift", "description": "One day, Twilight Sparkle is interested in how to sort a sequence of integers a1, a2, ..., an in non-decreasing order. Being a young unicorn, the only operation she can perform is a unit shift. That is, she can move the last element of the sequence to its beginning:\n\na1, a2, ..., an → an, a1, a2, ..., an - 1.\n\nHelp Twilight Sparkle to calculate: what is the minimum number of operations that she needs to sort the sequence?\n\nInput\n\nThe first line contains an integer n (2 ≤ n ≤ 105). The second line contains n integer numbers a1, a2, ..., an (1 ≤ ai ≤ 105).\n\nOutput\n\nIf it's impossible to sort the sequence output -1. Otherwise output the minimum number of operations Twilight Sparkle needs to sort it.\n\nExamples\n\nInput\n\n2\n2 1\n\n\nOutput\n\n1\n\n\nInput\n\n3\n1 3 2\n\n\nOutput\n\n-1\n\n\nInput\n\n2\n1 2\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03705 AtCoder Grand Contest 015 - A+...+B Problem", "description": "Snuke has N integers. Among them, the smallest is A, and the largest is B. We are interested in the sum of those N integers. How many different possible sums there are?\n\nConstraints\n\n* 1 ≤ N,A,B ≤ 10^9\n* A and B are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN A B\n\n\nOutput\n\nPrint the number of the different possible sums.\n\nExamples\n\nInput\n\n4 4 6\n\n\nOutput\n\n5\n\n\nInput\n\n5 4 3\n\n\nOutput\n\n0\n\n\nInput\n\n1 7 10\n\n\nOutput\n\n0\n\n\nInput\n\n1 3 3\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "946_C. String Transformation", "description": "You are given a string s consisting of |s| small english letters.\n\nIn one move you can replace any character of this string to the next character in alphabetical order (a will be replaced with b, s will be replaced with t, etc.). You cannot replace letter z with any other letter.\n\nYour target is to make some number of moves (not necessary minimal) to get string abcdefghijklmnopqrstuvwxyz (english alphabet) as a subsequence. Subsequence of the string is the string that is obtained by deleting characters at some positions. You need to print the string that will be obtained from the given string and will be contain english alphabet as a subsequence or say that it is impossible.\n\nInput\n\nThe only one line of the input consisting of the string s consisting of |s| (1 ≤ |s| ≤ 105) small english letters.\n\nOutput\n\nIf you can get a string that can be obtained from the given string and will contain english alphabet as a subsequence, print it. Otherwise print «-1» (without quotes).\n\nExamples\n\nInput\n\naacceeggiikkmmooqqssuuwwyy\n\n\nOutput\n\nabcdefghijklmnopqrstuvwxyz\n\n\nInput\n\nthereisnoanswer\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "301_E. Yaroslav and Arrangements", "description": "Yaroslav calls an array of r integers a1, a2, ..., ar good, if it meets the following conditions: |a1 - a2| = 1, |a2 - a3| = 1, ..., |ar - 1 - ar| = 1, |ar - a1| = 1, at that <image>. \n\nAn array of integers b1, b2, ..., br is called great, if it meets the following conditions:\n\n  1. The elements in it do not decrease (bi ≤ bi + 1). \n  2. If the inequalities 1 ≤ r ≤ n and 1 ≤ bi ≤ m hold. \n  3. If we can rearrange its elements and get at least one and at most k distinct good arrays. \n\n\n\nYaroslav has three integers n, m, k. He needs to count the number of distinct great arrays. Help Yaroslav! As the answer may be rather large, print the remainder after dividing it by 1000000007 (109 + 7).\n\nTwo arrays are considered distinct if there is a position in which they have distinct numbers.\n\nInput\n\nThe single line contains three integers n, m, k (1 ≤ n, m, k ≤ 100).\n\nOutput\n\nIn a single line print the remainder after dividing the answer to the problem by number 1000000007 (109 + 7).\n\nExamples\n\nInput\n\n1 1 1\n\n\nOutput\n\n0\n\n\nInput\n\n3 3 3\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02554 AtCoder Beginner Contest 178 - Ubiquity", "description": "How many integer sequences A_1,A_2,\\ldots,A_N of length N satisfy all of the following conditions?\n\n* 0 \\leq A_i \\leq 9\n* There exists some i such that A_i=0 holds.\n* There exists some i such that A_i=9 holds.\n\n\n\nThe answer can be very large, so output it modulo 10^9 + 7.\n\nConstraints\n\n* 1 \\leq N \\leq 10^6\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the answer modulo 10^9 + 7.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n2\n\n\nInput\n\n1\n\n\nOutput\n\n0\n\n\nInput\n\n869121\n\n\nOutput\n\n2511445", "grammar": {"answer": null}}
{"name": "p03043 AtCoder Beginner Contest 126 - Dice and Coin", "description": "Snuke has a fair N-sided die that shows the integers from 1 to N with equal probability and a fair coin. He will play the following game with them:\n\n1. Throw the die. The current score is the result of the die.\n2. As long as the score is between 1 and K-1 (inclusive), keep flipping the coin. The score is doubled each time the coin lands heads up, and the score becomes 0 if the coin lands tails up.\n3. The game ends when the score becomes 0 or becomes K or above. Snuke wins if the score is K or above, and loses if the score is 0.\n\n\n\nYou are given N and K. Find the probability that Snuke wins the game.\n\nConstraints\n\n* 1 ≤ N ≤ 10^5\n* 1 ≤ K ≤ 10^5\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\n\n\nOutput\n\nPrint the probability that Snuke wins the game. The output is considered correct when the absolute or relative error is at most 10^{-9}.\n\nExamples\n\nInput\n\n3 10\n\n\nOutput\n\n0.145833333333\n\n\nInput\n\n100000 5\n\n\nOutput\n\n0.999973749998", "grammar": {"answer": null}}
{"name": "578_D. LCS Again", "description": "You are given a string S of length n with each character being one of the first m lowercase English letters. \n\nCalculate how many different strings T of length n composed from the first m lowercase English letters exist such that the length of LCS (longest common subsequence) between S and T is n - 1.\n\nRecall that LCS of two strings S and T is the longest string C such that C both in S and T as a subsequence.\n\nInput\n\nThe first line contains two numbers n and m denoting the length of string S and number of first English lowercase characters forming the character set for strings (1 ≤ n ≤ 100 000, 2 ≤ m ≤ 26).\n\nThe second line contains string S.\n\nOutput\n\nPrint the only line containing the answer.\n\nExamples\n\nInput\n\n3 3\naaa\n\n\nOutput\n\n6\n\n\nInput\n\n3 3\naab\n\n\nOutput\n\n11\n\n\nInput\n\n1 2\na\n\n\nOutput\n\n1\n\n\nInput\n\n10 9\nabacadefgh\n\n\nOutput\n\n789\n\nNote\n\nFor the first sample, the 6 possible strings T are: aab, aac, aba, aca, baa, caa. \n\nFor the second sample, the 11 possible strings T are: aaa, aac, aba, abb, abc, aca, acb, baa, bab, caa, cab.\n\nFor the third sample, the only possible string T is b.", "grammar": {"answer": null}}
{"name": "984_A. Game", "description": "Two players play a game.\n\nInitially there are n integers a_1, a_2, …, a_n written on the board. Each turn a player selects one number and erases it from the board. This continues until there is only one number left on the board, i. e. n - 1 turns are made. The first player makes the first move, then players alternate turns.\n\nThe first player wants to minimize the last number that would be left on the board, while the second player wants to maximize it.\n\nYou want to know what number will be left on the board after n - 1 turns if both players make optimal moves.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 1000) — the number of numbers on the board.\n\nThe second line contains n integers a_1, a_2, …, a_n (1 ≤ a_i ≤ 10^6).\n\nOutput\n\nPrint one number that will be left on the board.\n\nExamples\n\nInput\n\n3\n2 1 3\n\n\nOutput\n\n2\n\nInput\n\n3\n2 2 2\n\n\nOutput\n\n2\n\nNote\n\nIn the first sample, the first player erases 3 and the second erases 1. 2 is left on the board.\n\nIn the second sample, 2 is left on the board regardless of the actions of the players.", "grammar": {"answer": null}}
{"name": "p02407 Reversing Numbers", "description": "Write a program which reads a sequence and prints it in the reverse order.\n\nNote\n\n解説\n\nConstraints\n\n* n ≤ 100\n* 0 ≤ ai < 1000\n\nInput\n\nThe input is given in the following format:\n\n\nn\na1 a2 . . . an\n\n\nn is the size of the sequence and ai is the ith element of the sequence.\n\nOutput\n\nPrint the reversed sequence in a line. Print a single space character between adjacent elements (Note that your program should not put a space character after the last element).\n\nExamples\n\nInput\n\n5\n1 2 3 4 5\n\n\nOutput\n\n5 4 3 2 1\n\n\nInput\n\n8\n3 3 4 4 5 8 7 9\n\n\nOutput\n\n9 7 8 5 4 4 3 3", "grammar": {"answer": null}}
{"name": "p03385 AtCoder Beginner Contest 093 - abc of ABC", "description": "You are given a string S of length 3 consisting of `a`, `b` and `c`. Determine if S can be obtained by permuting `abc`.\n\nConstraints\n\n* |S|=3\n* S consists of `a`, `b` and `c`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nIf S can be obtained by permuting `abc`, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\nbac\n\n\nOutput\n\nYes\n\n\nInput\n\nbab\n\n\nOutput\n\nNo\n\n\nInput\n\nabc\n\n\nOutput\n\nYes\n\n\nInput\n\naaa\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "429_D. Tricky Function", "description": "Iahub and Sorin are the best competitive programmers in their town. However, they can't both qualify to an important contest. The selection will be made with the help of a single problem. Blatnatalag, a friend of Iahub, managed to get hold of the problem before the contest. Because he wants to make sure Iahub will be the one qualified, he tells Iahub the following task.\n\nYou're given an (1-based) array a with n elements. Let's define function f(i, j) (1 ≤ i, j ≤ n) as (i - j)2 + g(i, j)2. Function g is calculated by the following pseudo-code:\n    \n    \n      \n    int g(int i, int j) {  \n        int sum = 0;  \n        for (int k = min(i, j) + 1; k <= max(i, j); k = k + 1)  \n            sum = sum + a[k];  \n        return sum;  \n    }  \n    \n\nFind a value mini ≠ j f(i, j).\n\nProbably by now Iahub already figured out the solution to this problem. Can you?\n\nInput\n\nThe first line of input contains a single integer n (2 ≤ n ≤ 100000). Next line contains n integers a[1], a[2], ..., a[n] ( - 104 ≤ a[i] ≤ 104). \n\nOutput\n\nOutput a single integer — the value of mini ≠ j f(i, j).\n\nExamples\n\nInput\n\n4\n1 0 0 -1\n\n\nOutput\n\n1\n\n\nInput\n\n2\n1 -1\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p03421 AtCoder Regular Contest 091 - LISDL", "description": "Determine if there exists a sequence obtained by permuting 1,2,...,N that satisfies the following conditions:\n\n* The length of its longest increasing subsequence is A.\n* The length of its longest decreasing subsequence is B.\n\n\n\nIf it exists, construct one such sequence.\n\nConstraints\n\n* 1 \\leq N,A,B \\leq 3\\times 10^5\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN A B\n\n\nOutput\n\nIf there are no sequences that satisfy the conditions, print `-1`.\n\nOtherwise, print N integers. The i-th integer should be the i-th element of the sequence that you constructed.\n\nExamples\n\nInput\n\n5 3 2\n\n\nOutput\n\n2 4 1 5 3\n\n\nInput\n\n7 7 1\n\n\nOutput\n\n1 2 3 4 5 6 7\n\n\nInput\n\n300000 300000 300000\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p02253 Activity Selection Problem", "description": "There are $ n $ acitivities with start times $ \\\\ {s_i \\\\} $ and finish times $ \\\\ {t_i \\\\} $. Assuming that a person can only work on a single activity at a time, find the maximum number of activities that can be performed by a single person.\n\nConstraints\n\n* $ 1 \\ le n \\ le 10 ^ 5 $\n* $ 1 \\ le s_i \\ lt t_i \\ le 10 ^ 9 (1 \\ le i \\ le n) $\n\nInput\n\n\n$ n $\n$ s_1 $ $ t_1 $\n$ s_2 $ $ t_2 $\n::\n$ s_n $ $ t_n $\n\n\nThe first line consists of the integer $ n $. In the following $ n $ lines, the start time $ s_i $ and the finish time $ t_i $ of the activity $ i $ are given.\n\noutput\n\nPrint the maximum number of activities in a line.\n\nExamples\n\nInput\n\n5\n1 2\n3 9\n3 5\n5 9\n6 8\n\n\nOutput\n\n3\n\n\nInput\n\n3\n1 5\n3 4\n2 5\n\n\nOutput\n\n1\n\n\nInput\n\n3\n1 2\n2 3\n3 4\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "317_D. Game with Powers", "description": "Vasya and Petya wrote down all integers from 1 to n to play the \"powers\" game (n can be quite large; however, Vasya and Petya are not confused by this fact).\n\nPlayers choose numbers in turn (Vasya chooses first). If some number x is chosen at the current turn, it is forbidden to choose x or all of its other positive integer powers (that is, x2, x3, ...) at the next turns. For instance, if the number 9 is chosen at the first turn, one cannot choose 9 or 81 later, while it is still allowed to choose 3 or 27. The one who cannot make a move loses.\n\nWho wins if both Vasya and Petya play optimally?\n\nInput\n\nInput contains single integer n (1 ≤ n ≤ 109).\n\nOutput\n\nPrint the name of the winner — \"Vasya\" or \"Petya\" (without quotes).\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\nVasya\n\n\nInput\n\n2\n\n\nOutput\n\nPetya\n\n\nInput\n\n8\n\n\nOutput\n\nPetya\n\nNote\n\nIn the first sample Vasya will choose 1 and win immediately.\n\nIn the second sample no matter which number Vasya chooses during his first turn, Petya can choose the remaining number and win.", "grammar": {"answer": null}}
{"name": "825_A. Binary Protocol", "description": "Polycarp has just invented a new binary protocol for data transmission. He is encoding positive integer decimal number to binary string using following algorithm:\n\n  * Each digit is represented with number of '1' characters equal to the value of that digit (for 0 it is zero ones). \n  * Digits are written one by one in order corresponding to number and separated by single '0' character. \n\n\n\nThough Polycarp learnt how to encode the numbers, he has no idea how to decode them back. Help him calculate the decoded number.\n\nInput\n\nThe first line contains one integer number n (1 ≤ n ≤ 89) — length of the string s.\n\nThe second line contains string s — sequence of '0' and '1' characters, number in its encoded format. It is guaranteed that the number corresponding to the string is positive and doesn't exceed 109. The string always starts with '1'.\n\nOutput\n\nPrint the decoded number.\n\nExamples\n\nInput\n\n3\n111\n\n\nOutput\n\n3\n\n\nInput\n\n9\n110011101\n\n\nOutput\n\n2031", "grammar": {"answer": null}}
{"name": "1194_G. Another Meme Problem", "description": "Let's call a fraction x/y good if there exists at least one another fraction (x')/(y') such that x/y = (x')/(y'), 1 ≤ x', y' ≤ 9, the digit denoting x' is contained in the decimal representation of x, and the digit denoting y' is contained in the decimal representation of y. For example, 26/13 is a good fraction, because 26/13 = 2/1.\n\nYou are given an integer number n. Please calculate the number of good fractions x/y such that 1 ≤ x ≤ n and 1 ≤ y ≤ n. The answer may be really large, so print it modulo 998244353.\n\nInput\n\nThe only line of the input contains one integer n (1 ≤ n < 10^{100}).\n\nOutput\n\nPrint the number of good fractions x/y such that 1 ≤ x ≤ n and 1 ≤ y ≤ n. The answer may be really large, so print it modulo 998244353.\n\nExamples\n\nInput\n\n\n42\n\n\nOutput\n\n\n150\n\n\nInput\n\n\n3141592653589793238462643383279\n\n\nOutput\n\n\n459925407", "grammar": {"answer": null}}
{"name": "837_E. Vasya's Function", "description": "Vasya is studying number theory. He has denoted a function f(a, b) such that:\n\n  * f(a, 0) = 0; \n  * f(a, b) = 1 + f(a, b - gcd(a, b)), where gcd(a, b) is the greatest common divisor of a and b. \n\n\n\nVasya has two numbers x and y, and he wants to calculate f(x, y). He tried to do it by himself, but found out that calculating this function the way he wants to do that might take very long time. So he decided to ask you to implement a program that will calculate this function swiftly.\n\nInput\n\nThe first line contains two integer numbers x and y (1 ≤ x, y ≤ 1012).\n\nOutput\n\nPrint f(x, y).\n\nExamples\n\nInput\n\n3 5\n\n\nOutput\n\n3\n\n\nInput\n\n6 3\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p00943 Routing a Marathon Race", "description": "Example\n\nInput\n\n6 6\n3\n1\n9\n4\n3\n6\n1 2\n1 4\n2 6\n5 4\n6 5\n3 2\n\n\nOutput\n\n17", "grammar": {"answer": null}}
{"name": "p02717 AtCoder Beginner Contest 161 - ABC Swap", "description": "We have three boxes A, B, and C, each of which contains an integer.\nCurrently, the boxes A, B, and C contain the integers X, Y, and Z, respectively.\nWe will now do the operations below in order. Find the content of each box afterward.\n\n* Swap the contents of the boxes A and B\n* Swap the contents of the boxes A and C\n\nConstraints\n\n* 1 \\leq X,Y,Z \\leq 100\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX Y Z\n\n\nOutput\n\nPrint the integers contained in the boxes A, B, and C, in this order, with space in between.\n\nExamples\n\nInput\n\n1 2 3\n\n\nOutput\n\n3 1 2\n\n\nInput\n\n100 100 100\n\n\nOutput\n\n100 100 100\n\n\nInput\n\n41 59 31\n\n\nOutput\n\n31 41 59", "grammar": {"answer": null}}
{"name": "606_C. Sorting Railway Cars", "description": "An infinitely long railway has a train consisting of n cars, numbered from 1 to n (the numbers of all the cars are distinct) and positioned in arbitrary order. David Blaine wants to sort the railway cars in the order of increasing numbers. In one move he can make one of the cars disappear from its place and teleport it either to the beginning of the train, or to the end of the train, at his desire. What is the minimum number of actions David Blaine needs to perform in order to sort the train?\n\nInput\n\nThe first line of the input contains integer n (1 ≤ n ≤ 100 000) — the number of cars in the train. \n\nThe second line contains n integers pi (1 ≤ pi ≤ n, pi ≠ pj if i ≠ j) — the sequence of the numbers of the cars in the train.\n\nOutput\n\nPrint a single integer — the minimum number of actions needed to sort the railway cars.\n\nExamples\n\nInput\n\n5\n4 1 2 5 3\n\n\nOutput\n\n2\n\n\nInput\n\n4\n4 1 3 2\n\n\nOutput\n\n2\n\nNote\n\nIn the first sample you need first to teleport the 4-th car, and then the 5-th car to the end of the train.", "grammar": {"answer": null}}
{"name": "p03471 AtCoder Beginner Contest 085 - Otoshidama", "description": "The commonly used bills in Japan are 10000-yen, 5000-yen and 1000-yen bills. Below, the word \"bill\" refers to only these.\n\nAccording to Aohashi, he received an otoshidama (New Year money gift) envelope from his grandfather that contained N bills for a total of Y yen, but he may be lying. Determine whether such a situation is possible, and if it is, find a possible set of bills contained in the envelope. Assume that his grandfather is rich enough, and the envelope was large enough.\n\nConstraints\n\n* 1 ≤ N ≤ 2000\n* 1000 ≤ Y ≤ 2 × 10^7\n* N is an integer.\n* Y is a multiple of 1000.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN Y\n\n\nOutput\n\nIf the total value of N bills cannot be Y yen, print `-1 -1 -1`.\n\nIf the total value of N bills can be Y yen, let one such set of bills be \"x 10000-yen bills, y 5000-yen bills and z 1000-yen bills\", and print x, y, z with spaces in between. If there are multiple possibilities, any of them may be printed.\n\nExamples\n\nInput\n\n9 45000\n\n\nOutput\n\n4 0 5\n\n\nInput\n\n20 196000\n\n\nOutput\n\n-1 -1 -1\n\n\nInput\n\n1000 1234000\n\n\nOutput\n\n14 27 959\n\n\nInput\n\n2000 20000000\n\n\nOutput\n\n2000 0 0", "grammar": {"answer": null}}
{"name": "1485_C. Floor and Mod", "description": "A pair of positive integers (a,b) is called special if ⌊ a/b ⌋ = a mod b. Here, ⌊ a/b ⌋ is the result of the integer division between a and b, while a mod b is its remainder.\n\nYou are given two integers x and y. Find the number of special pairs (a,b) such that 1≤ a ≤ x and 1 ≤ b ≤ y.\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 100) — the number of test cases.\n\nThe only line of the description of each test case contains two integers x, y (1 ≤ x,y ≤ 10^9).\n\nOutput\n\nFor each test case print the answer on a single line.\n\nExample\n\nInput\n\n\n9\n3 4\n2 100\n4 3\n50 3\n12 4\n69 420\n12345 6789\n123456 789\n12345678 9\n\n\nOutput\n\n\n1\n0\n2\n3\n5\n141\n53384\n160909\n36\n\nNote\n\nIn the first test case, the only special pair is (3, 2).\n\nIn the second test case, there are no special pairs.\n\nIn the third test case, there are two special pairs: (3, 2) and (4, 3).", "grammar": {"answer": null}}
{"name": "45_D. Event Dates", "description": "On a history lesson the teacher asked Vasya to name the dates when n famous events took place. He doesn't remembers the exact dates but he remembers a segment of days [li, ri] (inclusive) on which the event could have taken place. However Vasya also remembers that there was at most one event in one day. Help him choose such n dates of famous events that will fulfill both conditions. It is guaranteed that it is possible.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 100) — the number of known events. Then follow n lines containing two integers li and ri each (1 ≤ li ≤ ri ≤ 107) — the earliest acceptable date and the latest acceptable date of the i-th event.\n\nOutput\n\nPrint n numbers — the dates on which the events took place. If there are several solutions, print any of them. It is guaranteed that a solution exists.\n\nExamples\n\nInput\n\n3\n1 2\n2 3\n3 4\n\n\nOutput\n\n1 2 3 \n\n\nInput\n\n2\n1 3\n1 3\n\n\nOutput\n\n1 2 ", "grammar": {"answer": null}}
{"name": "452_F. Permutation", "description": "You are given a permutation of numbers from 1 to n. Determine whether there's a pair of integers a, b (1 ≤ a, b ≤ n; a ≠ b) such that the element <image> (note, that it is usual division, not integer one) is between a and b in this permutation.\n\nInput\n\nFirst line consists of a single integer n (1 ≤ n ≤ 300000) — the size of permutation.\n\nSecond line contains n integers — the permutation itself.\n\nOutput\n\nPrint \"YES\", if such a pair exists, \"NO\" otherwise (in both cases without quotes, the answer is case insensitive).\n\nExamples\n\nInput\n\n4\n1 3 4 2\n\n\nOutput\n\nNO\n\n\nInput\n\n5\n1 5 2 4 3\n\n\nOutput\n\nYES\n\nNote\n\nIn the second example 2 is between 1 and 3. Additionally 4 is between 3 and 5.", "grammar": {"answer": null}}
{"name": "p03149 KEYENCE Programming Contest 2019 - Beginning", "description": "You are given four digits N_1, N_2, N_3 and N_4. Determine if these can be arranged into the sequence of digits \"1974\".\n\nConstraints\n\n* 0 \\leq N_1, N_2, N_3, N_4 \\leq 9\n* N_1, N_2, N_3 and N_4 are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN_1 N_2 N_3 N_4\n\n\nOutput\n\nIf N_1, N_2, N_3 and N_4 can be arranged into the sequence of digits \"1974\", print `YES`; if they cannot, print `NO`.\n\nExamples\n\nInput\n\n1 7 9 4\n\n\nOutput\n\nYES\n\n\nInput\n\n1 9 7 4\n\n\nOutput\n\nYES\n\n\nInput\n\n1 2 9 1\n\n\nOutput\n\nNO\n\n\nInput\n\n4 9 0 8\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "802_F. Marmots (hard)", "description": "Your task is the exact same as for the easy version. But this time, the marmots subtract the village's population P from their random number before responding to Heidi's request.\n\nAlso, there are now villages with as few as a single inhabitant, meaning that <image>.\n\nCan you help Heidi find out whether a village follows a Poisson or a uniform distribution?\n\nInput\n\nSame as for the easy and medium versions. But remember that now 1 ≤ P ≤ 1000 and that the marmots may provide positive as well as negative integers.\n\nOutput\n\nOutput one line per village, in the same order as provided in the input. The village's line shall state poisson if the village's distribution is of the Poisson type, and uniform if the answers came from a uniform distribution.", "grammar": {"answer": null}}
{"name": "1423_K. Lonely Numbers", "description": "In number world, two different numbers are friends if they have a lot in common, but also each one has unique perks.\n\nMore precisely, two different numbers a and b are friends if gcd(a,b), (a)/(gcd(a,b)), (b)/(gcd(a,b)) can form sides of a triangle.\n\nThree numbers a, b and c can form sides of a triangle if a + b > c, b + c > a and c + a > b.\n\nIn a group of numbers, a number is lonely if it doesn't have any friends in that group.\n\nGiven a group of numbers containing all numbers from 1, 2, 3, ..., n, how many numbers in that group are lonely?\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 10^6) - number of test cases.\n\nOn next line there are t numbers, n_i (1 ≤ n_i ≤ 10^6) - meaning that in case i you should solve for numbers 1, 2, 3, ..., n_i.\n\nOutput\n\nFor each test case, print the answer on separate lines: number of lonely numbers in group 1, 2, 3, ..., n_i.\n\nExample\n\nInput\n\n\n3\n1 5 10\n\n\nOutput\n\n\n1\n3\n3\n\nNote\n\nFor first test case, 1 is the only number and therefore lonely.\n\nFor second test case where n=5, numbers 1, 3 and 5 are lonely.\n\nFor third test case where n=10, numbers 1, 5 and 7 are lonely.", "grammar": {"answer": null}}
{"name": "p02020 Tea Party", "description": "F: Tea Party\n\nYun decided to hold a tea party at the company.\n\nThe shop sells $ N $ sets of bread, each containing $ A_1, A_2, A_3, \\ dots, A_N $.\n\nYun decided to make a sandwich by combining two breads into a pair.\n\nYun-san is very careful, so I want to make sure that I don't have any leftover bread.\n\nCalculate how many sandwiches you can make at most.\n\ninput\n\nThe first line is given the integer $ N $.\n\nOn the second line, $ N $ integers $ A_1, A_2, A_3, \\ dots, A_N $ are given, separated by blanks.\n\noutput\n\nOutput the maximum number of sandwiches you can make. However, insert a line break at the end.\n\nConstraint\n\n* $ N $ is an integer greater than or equal to $ 1 $ and less than or equal to $ 100 $\n* $ A_1, A_2, A_3, \\ dots, A_N $ are integers between $ 1 $ and $ 100 $\n\n\n\nInput example 1\n\n\nFive\n2 3 5 6 7\n\n\nOutput example 1\n\n\nTen\n\n\nBuy the first, third, fourth, and fifth sets to get $ 20 $ in bread.\n\nIf you buy all the sets, you will end up with $ 23 $ of bread and you will have a surplus.\n\nInput example 2\n\n\nFour\n3 5 6 8\n\n\nOutput example 2\n\n\n11\n\n\n\n\n\n\nExample\n\nInput\n\n5\n2 3 5 6 7\n\n\nOutput\n\n10", "grammar": {"answer": null}}
{"name": "p02809 Dwango Programming Contest 6th - Arrangement", "description": "Niwango has N cards, numbered 1,2,\\ldots,N. He will now arrange these cards in a row.\n\nNiwango wants to know if there is a way to arrange the cards while satisfying all the N conditions below. To help him, determine whether such a way exists. If the answer is yes, also find the lexicographically smallest such arrangement.\n\n* To the immediate right of Card 1 (if any) is NOT Card a_1.\n* To the immediate right of Card 2 (if any) is NOT Card a_2.\n* \\vdots\n* To the immediate right of Card N (if any) is NOT Card a_N.\n\nConstraints\n\n* 2 \\leq N \\leq 10^{5}\n* 1 \\leq a_i \\leq N\n* a_i \\neq i\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 \\ldots a_N\n\n\nOutput\n\nIf no arrangements satisfy the conditions, print `-1`. If such arrangements exist, print the lexicographically smallest such arrangement, in the following format:\n\n\nb_1 b_2 \\ldots b_N\n\n\nHere, b_i represents the i-th card from the left.\n\nExamples\n\nInput\n\n4\n2 3 4 1\n\n\nOutput\n\n1 3 2 4\n\n\nInput\n\n2\n2 1\n\n\nOutput\n\n-1\n\n\nInput\n\n13\n2 3 4 5 6 7 8 9 10 11 12 13 12\n\n\nOutput\n\n1 3 2 4 6 5 7 9 8 10 12 11 13", "grammar": {"answer": null}}
{"name": "p02848 AtCoder Beginner Contest 146 - ROT N", "description": "We have a string S consisting of uppercase English letters. Additionally, an integer N will be given.\n\nShift each character of S by N in alphabetical order (see below), and print the resulting string.\n\nWe assume that `A` follows `Z`. For example, shifting `A` by 2 results in `C` (`A` \\to `B` \\to `C`), and shifting `Y` by 3 results in `B` (`Y` \\to `Z` \\to `A` \\to `B`).\n\nConstraints\n\n* 0 \\leq N \\leq 26\n* 1 \\leq |S| \\leq 10^4\n* S consists of uppercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS\n\n\nOutput\n\nPrint the string resulting from shifting each character of S by N in alphabetical order.\n\nExamples\n\nInput\n\n2\nABCXYZ\n\n\nOutput\n\nCDEZAB\n\n\nInput\n\n0\nABCXYZ\n\n\nOutput\n\nABCXYZ\n\n\nInput\n\n13\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\n\nOutput\n\nNOPQRSTUVWXYZABCDEFGHIJKLM", "grammar": {"answer": null}}
{"name": "579_A. Raising Bacteria", "description": "You are a lover of bacteria. You want to raise some bacteria in a box. \n\nInitially, the box is empty. Each morning, you can put any number of bacteria into the box. And each night, every bacterium in the box will split into two bacteria. You hope to see exactly x bacteria in the box at some moment. \n\nWhat is the minimum number of bacteria you need to put into the box across those days?\n\nInput\n\nThe only line containing one integer x (1 ≤ x ≤ 109).\n\nOutput\n\nThe only line containing one integer: the answer.\n\nExamples\n\nInput\n\n5\n\n\nOutput\n\n2\n\n\nInput\n\n8\n\n\nOutput\n\n1\n\nNote\n\nFor the first sample, we can add one bacterium in the box in the first day morning and at the third morning there will be 4 bacteria in the box. Now we put one more resulting 5 in the box. We added 2 bacteria in the process so the answer is 2.\n\nFor the second sample, we can put one in the first morning and in the 4-th morning there will be 8 in the box. So the answer is 1.", "grammar": {"answer": null}}
{"name": "p02880 AtCoder Beginner Contest 144 - 81", "description": "Having learned the multiplication table, Takahashi can multiply two integers between 1 and 9 (inclusive) together.\n\nGiven an integer N, determine whether N can be represented as the product of two integers between 1 and 9. If it can, print `Yes`; if it cannot, print `No`.\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nIf N can be represented as the product of two integers between 1 and 9 (inclusive), print `Yes`; if it cannot, print `No`.\n\nExamples\n\nInput\n\n10\n\n\nOutput\n\nYes\n\n\nInput\n\n50\n\n\nOutput\n\nNo\n\n\nInput\n\n81\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "449_C. Jzzhu and Apples", "description": "Jzzhu has picked n apples from his big apple tree. All the apples are numbered from 1 to n. Now he wants to sell them to an apple store. \n\nJzzhu will pack his apples into groups and then sell them. Each group must contain two apples, and the greatest common divisor of numbers of the apples in each group must be greater than 1. Of course, each apple can be part of at most one group.\n\nJzzhu wonders how to get the maximum possible number of groups. Can you help him?\n\nInput\n\nA single integer n (1 ≤ n ≤ 105), the number of the apples.\n\nOutput\n\nThe first line must contain a single integer m, representing the maximum number of groups he can get. Each of the next m lines must contain two integers — the numbers of apples in the current group.\n\nIf there are several optimal answers you can print any of them.\n\nExamples\n\nInput\n\n6\n\n\nOutput\n\n2\n6 3\n2 4\n\n\nInput\n\n9\n\n\nOutput\n\n3\n9 3\n2 4\n6 8\n\n\nInput\n\n2\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "122_C. Lucky Sum", "description": "Petya loves lucky numbers. Everybody knows that lucky numbers are positive integers whose decimal representation contains only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.\n\nLet next(x) be the minimum lucky number which is larger than or equals x. Petya is interested what is the value of the expression next(l) + next(l + 1) + ... + next(r - 1) + next(r). Help him solve this problem.\n\nInput\n\nThe single line contains two integers l and r (1 ≤ l ≤ r ≤ 109) — the left and right interval limits.\n\nOutput\n\nIn the single line print the only number — the sum next(l) + next(l + 1) + ... + next(r - 1) + next(r).\n\nPlease do not use the %lld specificator to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specificator.\n\nExamples\n\nInput\n\n2 7\n\n\nOutput\n\n33\n\n\nInput\n\n7 7\n\n\nOutput\n\n7\n\nNote\n\nIn the first sample: next(2) + next(3) + next(4) + next(5) + next(6) + next(7) = 4 + 4 + 4 + 7 + 7 + 7 = 33\n\nIn the second sample: next(7) = 7", "grammar": {"answer": null}}
{"name": "802_E. Marmots (medium)", "description": "Good job! Now that Heidi is able to distinguish between Poisson and uniform distributions, she is in a good position to actually estimate the populations.\n\nCan you help Heidi estimate each village's population?\n\nInput\n\nSame as the easy version.\n\nOutput\n\nOutput one line per village, in the same order as provided in the input, containing your (integer) population estimate.\n\nYour answer is considered correct if it is an integer that falls into the interval <image>, where P is the real population of the village, used to create the distribution (either Poisson or uniform) from which the marmots drew their answers.", "grammar": {"answer": null}}
{"name": "p04011 AtCoder Beginner Contest 044 - Tak and Hotels (ABC Edit)", "description": "There is a hotel with the following accommodation fee:\n\n* X yen (the currency of Japan) per night, for the first K nights\n* Y yen per night, for the (K+1)-th and subsequent nights\n\n\n\nTak is staying at this hotel for N consecutive nights. Find his total accommodation fee.\n\nConstraints\n\n* 1 \\leq N, K \\leq 10000\n* 1 \\leq Y < X \\leq 10000\n* N,\\,K,\\,X,\\,Y are integers.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nK\nX\nY\n\n\nOutput\n\nPrint Tak's total accommodation fee.\n\nExamples\n\nInput\n\n5\n3\n10000\n9000\n\n\nOutput\n\n48000\n\n\nInput\n\n2\n3\n10000\n9000\n\n\nOutput\n\n20000", "grammar": {"answer": null}}
{"name": "1198_D. Rectangle Painting 1", "description": "There is a square grid of size n × n. Some cells are colored in black, all others are colored in white. In one operation you can select some rectangle and color all its cells in white. It costs max(h, w) to color a rectangle of size h × w. You are to make all cells white for minimum total cost.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 50) — the size of the square grid.\n\nEach of the next n lines contains a string of length n, consisting of characters '.' and '#'. The j-th character of the i-th line is '#' if the cell with coordinates (i, j) is black, otherwise it is white.\n\nOutput\n\nPrint a single integer — the minimum total cost to paint all cells in white.\n\nExamples\n\nInput\n\n\n3\n###\n#.#\n###\n\n\nOutput\n\n\n3\n\n\nInput\n\n\n3\n...\n...\n...\n\n\nOutput\n\n\n0\n\n\nInput\n\n\n4\n#...\n....\n....\n#...\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n5\n#...#\n.#.#.\n.....\n.#...\n#....\n\n\nOutput\n\n\n5\n\nNote\n\nThe examples and some of optimal solutions are shown on the pictures below.\n\n<image>", "grammar": {"answer": null}}
{"name": "p02933 AtCoder Beginner Contest 138 - Red or Not", "description": "You will be given an integer a and a string s consisting of lowercase English letters as input.\n\nWrite a program that prints s if a is not less than 3200 and prints `red` if a is less than 3200.\n\nConstraints\n\n* 2800 \\leq a < 5000\n* s is a string of length between 1 and 10 (inclusive).\n* Each character of s is a lowercase English letter.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\na\ns\n\n\nOutput\n\nIf a is not less than 3200, print s; if a is less than 3200, print `red`.\n\nExamples\n\nInput\n\n3200\npink\n\n\nOutput\n\npink\n\n\nInput\n\n3199\npink\n\n\nOutput\n\nred\n\n\nInput\n\n4049\nred\n\n\nOutput\n\nred", "grammar": {"answer": null}}
{"name": "28_B. pSort", "description": "One day n cells of some array decided to play the following game. Initially each cell contains a number which is equal to it's ordinal number (starting from 1). Also each cell determined it's favourite number. On it's move i-th cell can exchange it's value with the value of some other j-th cell, if |i - j| = di, where di is a favourite number of i-th cell. Cells make moves in any order, the number of moves is unlimited.\n\nThe favourite number of each cell will be given to you. You will also be given a permutation of numbers from 1 to n. You are to determine whether the game could move to this state.\n\nInput\n\nThe first line contains positive integer n (1 ≤ n ≤ 100) — the number of cells in the array. The second line contains n distinct integers from 1 to n — permutation. The last line contains n integers from 1 to n — favourite numbers of the cells.\n\nOutput\n\nIf the given state is reachable in the described game, output YES, otherwise NO.\n\nExamples\n\nInput\n\n5\n5 4 3 2 1\n1 1 1 1 1\n\n\nOutput\n\nYES\n\n\nInput\n\n7\n4 3 5 1 2 7 6\n4 6 6 1 6 6 1\n\n\nOutput\n\nNO\n\n\nInput\n\n7\n4 2 5 1 3 7 6\n4 6 6 1 6 6 1\n\n\nOutput\n\nYES", "grammar": {"answer": null}}
{"name": "p03775 AtCoder Beginner Contest 057 - Digits in Multiplication", "description": "You are given an integer N.\nFor two positive integers A and B, we will define F(A,B) as the larger of the following: the number of digits in the decimal notation of A, and the number of digits in the decimal notation of B.\nFor example, F(3,11) = 2 since 3 has one digit and 11 has two digits.\nFind the minimum value of F(A,B) as (A,B) ranges over all pairs of positive integers such that N = A \\times B.\n\nConstraints\n\n* 1 \\leq N \\leq 10^{10}\n* N is an integer.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the minimum value of F(A,B) as (A,B) ranges over all pairs of positive integers such that N = A \\times B.\n\nExamples\n\nInput\n\n10000\n\n\nOutput\n\n3\n\n\nInput\n\n1000003\n\n\nOutput\n\n7\n\n\nInput\n\n9876543210\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p02452 Includes", "description": "For given two sequneces $A = \\\\{a_0, a_1, ..., a_{n-1}\\\\}$ and $B = \\\\{b_0, b_1, ..., b_{m-1}\\\\}$, determine whether all elements of $B$ are included in $A$. Note that, elements of $A$ and $B$ are sorted by ascending order respectively.\n\nConstraints\n\n* $1 \\leq n, m \\leq 200,000$\n* $-1,000,000,000 \\leq a_0 < a_1 < ... < a_{n-1} \\leq 1,000,000,000$\n* $-1,000,000,000 \\leq b_0 < b_1 < ... < b_{m-1} \\leq 1,000,000,000$\n\nInput\n\nThe input is given in the following format.\n\n\n$n$\n$a_0 \\; a_1 \\; ,..., \\; a_{n-1}$\n$m$\n$b_0 \\; b_1 \\; ,..., \\; b_{m-1}$\n\n\nThe number of elements in $A$ and its elements $a_i$ are given in the first and second lines respectively. The number of elements in $B$ and its elements $b_i$ are given in the third and fourth lines respectively.\n\nOutput\n\nPrint 1, if $A$ contains all elements of $B$, otherwise 0.\n\nExamples\n\nInput\n\n4\n1 2 3 4\n2\n2 4\n\n\nOutput\n\n1\n\n\nInput\n\n4\n1 2 3 4\n3\n1 2 5\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p00054 Sum of Nth decimal places", "description": "Assume that a, b, and n are all positive integers. Let f (i) be the i-th fraction of the fraction a / b (0 ≤ f (i) ≤ 9). At this time, let s be the sum of f (i) from i = 1 to n.\n\ns = f (1) + f (2) + ... + f (n)\n\n\nCreate a program that reads a, b, n, outputs s, and exits.\n\n\n\nInput\n\nThe input consists of multiple datasets. For each dataset, three integers a (1 ≤ a ≤ 1000), b (1 ≤ b ≤ 10000), n (1 ≤ n ≤ 100) are given on one line, separated by blanks.\n\nThe number of datasets does not exceed 100.\n\nOutput\n\nPrints s on one line for each dataset.\n\nExample\n\nInput\n\n1 2 3\n2 3 4\n5 4 3\n4 3 2\n\n\nOutput\n\n5\n24\n7\n6", "grammar": {"answer": null}}
{"name": "914_G. Sum the Fibonacci", "description": "You are given an array s of n non-negative integers.\n\nA 5-tuple of integers (a, b, c, d, e) is said to be valid if it satisfies the following conditions: \n\n  * 1 ≤ a, b, c, d, e ≤ n\n  * (sa | sb) & sc & (sd ^ se) = 2i for some integer i\n  * sa & sb = 0\n\n\n\nHere, '|' is the bitwise OR, '&' is the bitwise AND and '^' is the bitwise XOR operation.\n\nFind the sum of f(sa|sb) * f(sc) * f(sd^se) over all valid 5-tuples (a, b, c, d, e), where f(i) is the i-th Fibonnaci number (f(0) = 0, f(1) = 1, f(i) = f(i - 1) + f(i - 2)).\n\nSince answer can be is huge output it modulo 109 + 7.\n\nInput\n\nThe first line of input contains an integer n (1 ≤ n ≤ 106).\n\nThe second line of input contains n integers si (0 ≤ si < 217).\n\nOutput\n\nOutput the sum as described above, modulo 109 + 7\n\nExamples\n\nInput\n\n2\n1 2\n\n\nOutput\n\n32\n\n\nInput\n\n3\n7 4 1\n\n\nOutput\n\n3520\n\n\nInput\n\n10\n1 3 0 7 3 7 6 5 7 5\n\n\nOutput\n\n1235424\n\n\nInput\n\n10\n50 9 11 44 39 40 5 39 23 7\n\n\nOutput\n\n113860062", "grammar": {"answer": null}}
{"name": "p03816 AtCoder Beginner Contest 053 - Card Eater", "description": "Snuke has decided to play a game using cards. He has a deck consisting of N cards. On the i-th card from the top, an integer A_i is written.\n\nHe will perform the operation described below zero or more times, so that the values written on the remaining cards will be pairwise distinct. Find the maximum possible number of remaining cards. Here, N is odd, which guarantees that at least one card can be kept.\n\nOperation: Take out three arbitrary cards from the deck. Among those three cards, eat two: one with the largest value, and another with the smallest value. Then, return the remaining one card to the deck.\n\nConstraints\n\n* 3 ≦ N ≦ 10^{5}\n* N is odd.\n* 1 ≦ A_i ≦ 10^{5}\n* A_i is an integer.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 A_3 ... A_{N}\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n5\n1 2 1 3 7\n\n\nOutput\n\n3\n\n\nInput\n\n15\n1 3 5 2 1 3 2 8 8 6 2 6 11 1 1\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "1268_B. Domino for Young", "description": "You are given a Young diagram. \n\nGiven diagram is a histogram with n columns of lengths a_1, a_2, …, a_n (a_1 ≥ a_2 ≥ … ≥ a_n ≥ 1).\n\n<image> Young diagram for a=[3,2,2,2,1].\n\nYour goal is to find the largest number of non-overlapping dominos that you can draw inside of this histogram, a domino is a 1 × 2 or 2 × 1 rectangle.\n\nInput\n\nThe first line of input contain one integer n (1 ≤ n ≤ 300 000): the number of columns in the given histogram.\n\nThe next line of input contains n integers a_1, a_2, …, a_n (1 ≤ a_i ≤ 300 000, a_i ≥ a_{i+1}): the lengths of columns.\n\nOutput\n\nOutput one integer: the largest number of non-overlapping dominos that you can draw inside of the given Young diagram.\n\nExample\n\nInput\n\n\n5\n3 2 2 2 1\n\n\nOutput\n\n\n4\n\nNote\n\nSome of the possible solutions for the example:\n\n<image> <image>", "grammar": {"answer": null}}
{"name": "1303_A. Erasing Zeroes", "description": "You are given a string s. Each character is either 0 or 1.\n\nYou want all 1's in the string to form a contiguous subsegment. For example, if the string is 0, 1, 00111 or 01111100, then all 1's form a contiguous subsegment, and if the string is 0101, 100001 or 11111111111101, then this condition is not met.\n\nYou may erase some (possibly none) 0's from the string. What is the minimum number of 0's that you have to erase?\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 100) — the number of test cases.\n\nThen t lines follow, each representing a test case. Each line contains one string s (1 ≤ |s| ≤ 100); each character of s is either 0 or 1.\n\nOutput\n\nPrint t integers, where the i-th integer is the answer to the i-th testcase (the minimum number of 0's that you have to erase from s).\n\nExample\n\nInput\n\n\n3\n010011\n0\n1111000\n\n\nOutput\n\n\n2\n0\n0\n\nNote\n\nIn the first test case you have to delete the third and forth symbols from string 010011 (it turns into 0111).", "grammar": {"answer": null}}
{"name": "p02774 AtCoder Beginner Contest 155 - Pairs", "description": "We have N integers A_1, A_2, ..., A_N.\n\nThere are \\frac{N(N-1)}{2} ways to choose two of them and form a pair. If we compute the product of each of those pairs and sort the results in ascending order, what will be the K-th number in that list?\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq K \\leq \\frac{N(N-1)}{2}\n* -10^9 \\leq A_i \\leq 10^9\\ (1 \\leq i \\leq N)\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nA_1 A_2 \\dots A_N\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n4 3\n3 3 -4 -2\n\n\nOutput\n\n-6\n\n\nInput\n\n10 40\n5 4 3 2 -1 0 0 0 0 0\n\n\nOutput\n\n6\n\n\nInput\n\n30 413\n-170202098 -268409015 537203564 983211703 21608710 -443999067 -937727165 -97596546 -372334013 398994917 -972141167 798607104 -949068442 -959948616 37909651 0 886627544 -20098238 0 -948955241 0 -214720580 277222296 -18897162 834475626 0 -425610555 110117526 663621752 0\n\n\nOutput\n\n448283280358331064", "grammar": {"answer": null}}
{"name": "237_C. Primes on Interval", "description": "You've decided to carry out a survey in the theory of prime numbers. Let us remind you that a prime number is a positive integer that has exactly two distinct positive integer divisors.\n\nConsider positive integers a, a + 1, ..., b (a ≤ b). You want to find the minimum integer l (1 ≤ l ≤ b - a + 1) such that for any integer x (a ≤ x ≤ b - l + 1) among l integers x, x + 1, ..., x + l - 1 there are at least k prime numbers. \n\nFind and print the required minimum l. If no value l meets the described limitations, print -1.\n\nInput\n\nA single line contains three space-separated integers a, b, k (1 ≤ a, b, k ≤ 106; a ≤ b).\n\nOutput\n\nIn a single line print a single integer — the required minimum l. If there's no solution, print -1.\n\nExamples\n\nInput\n\n2 4 2\n\n\nOutput\n\n3\n\n\nInput\n\n6 13 1\n\n\nOutput\n\n4\n\n\nInput\n\n1 4 3\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "952_D. I'm Feeling Lucky!", "description": "<image>\n\nYou have one chip and one chance to play roulette. Are you feeling lucky?\n\nOutput\n\nPrint your bet. Your chip must be placed entirely within some square (not on an edge or a corner shared by adjacent squares).", "grammar": {"answer": null}}
{"name": "p00097 Sum of Integers II", "description": "Write a program that extracts n different numbers from the numbers 0 to 100 and outputs the number of combinations that add up to s. Each n number is from 0 to 100, and the same number cannot be used in one combination. For example, if n is 3 and s is 6, the combination of the three numbers totaling 6 is\n\n\n1 + 2 + 3 = 6\n0 + 1 + 5 = 6\n0 + 2 + 4 = 6\n\n\nThere are three ways.\n\n\n\nInput\n\nGiven multiple datasets. For each dataset, n (1 ≤ n ≤ 9) and s (0 ≤ s ≤ 1000) are given on one line, separated by a space. When both n and s are 0, it is the end of the input.\n\nThe number of datasets does not exceed 50.\n\nOutput\n\nFor each dataset, output the number of combinations in which the sum of n integers is s on one line.\n\nNo input is given with more than 1010 combinations.\n\nExample\n\nInput\n\n3 6\n3 1\n0 0\n\n\nOutput\n\n3\n0", "grammar": {"answer": null}}
{"name": "p02477 Multiplication of Big Integers II", "description": "Multiplication of Big Integers II\n\nGiven two integers $A$ and $B$, compute the product, $A \\times B$.\n\nInput\n\nTwo integers $A$ and $B$ separated by a space character are given in a line.\n\nOutput\n\nPrint the product in a line.\n\nConstraints\n\n* $-1 \\times 10^{200000} \\leq A, B \\leq 10^{200000}$\n\n\n\nSample Input 1\n\n\n5 8\n\n\nSample Output 1\n\n\n40\n\n\nSample Input 2\n\n\n100 25\n\n\nSample Output 2\n\n\n2500\n\n\nSample Input 3\n\n\n-1 0\n\n\nSample Output 3\n\n\n0\n\n\nSample Input 4\n\n\n12 -3\n\n\nSample Output 4\n\n\n-36\n\n\n\n\n\n\nExample\n\nInput\n\n5 8\n\n\nOutput\n\n40", "grammar": {"answer": null}}
{"name": "837_A. Text Volume", "description": "You are given a text of single-space separated words, consisting of small and capital Latin letters.\n\nVolume of the word is number of capital letters in the word. Volume of the text is maximum volume of all words in the text.\n\nCalculate the volume of the given text.\n\nInput\n\nThe first line contains one integer number n (1 ≤ n ≤ 200) — length of the text.\n\nThe second line contains text of single-space separated words s1, s2, ..., si, consisting only of small and capital Latin letters.\n\nOutput\n\nPrint one integer number — volume of text.\n\nExamples\n\nInput\n\n7\nNonZERO\n\n\nOutput\n\n5\n\n\nInput\n\n24\nthis is zero answer text\n\n\nOutput\n\n0\n\n\nInput\n\n24\nHarbour Space University\n\n\nOutput\n\n1\n\nNote\n\nIn the first example there is only one word, there are 5 capital letters in it.\n\nIn the second example all of the words contain 0 capital letters.", "grammar": {"answer": null}}
{"name": "p02356 The Number of Windows", "description": "For a given array $a_1, a_2, a_3, ... , a_N$ of $N$ elements and $Q$ integers $x_i$ as queries, for each query, print the number of combinations of two integers $(l, r)$ which satisfies the condition: $1 \\leq l \\leq r \\leq N$ and $a_l + a_{l+1} + ... + a_{r-1} + a_r \\leq x_i$.\n\nConstraints\n\n* $1 \\leq N \\leq 10^5$\n* $1 \\leq Q \\leq 500$\n* $1 \\leq a_i \\leq 10^9$\n* $1 \\leq x_i \\leq 10^{14}$\n\nInput\n\nThe input is given in the following format.\n\n$N$ $Q$\n$a_1$ $a_2$ ... $a_N$\n$x_1$ $x_2$ ... $x_Q$\n\nOutput\n\nFor each query, print the number of combinations in a line.\n\nExample\n\nInput\n\n6 5\n1 2 3 4 5 6\n6 9 12 21 15\n\n\nOutput\n\n9\n12\n15\n21\n18", "grammar": {"answer": null}}
{"name": "p00000 QQ", "description": "Write a program which prints multiplication tables in the following format:\n\n\n1x1=1\n1x2=2\n.\n.\n9x8=72\n9x9=81\n\n\n\n\nInput\n\nNo input.\n\nOutput\n\n\n1x1=1\n1x2=2\n.\n.\n9x8=72\n9x9=81\n\n\nExample\n\nInput\n\n\n\n\nOutput", "grammar": {"answer": null}}
{"name": "571_E. Geometric Progressions", "description": "Geometric progression with the first element a and common ratio b is a sequence of numbers a, ab, ab2, ab3, ....\n\nYou are given n integer geometric progressions. Your task is to find the smallest integer x, that is the element of all the given progressions, or else state that such integer does not exist.\n\nInput\n\nThe first line contains integer (1 ≤ n ≤ 100) — the number of geometric progressions. \n\nNext n lines contain pairs of integers a, b (1 ≤ a, b ≤ 109), that are the first element and the common ratio of the corresponding geometric progression.\n\nOutput\n\nIf the intersection of all progressions is empty, then print  - 1, otherwise print the remainder of the minimal positive integer number belonging to all progressions modulo 1000000007 (109 + 7).\n\nExamples\n\nInput\n\n2\n2 2\n4 1\n\n\nOutput\n\n4\n\n\nInput\n\n2\n2 2\n3 3\n\n\nOutput\n\n-1\n\nNote\n\nIn the second sample test one of the progressions contains only powers of two, the other one contains only powers of three.", "grammar": {"answer": null}}
{"name": "p03606 AtCoder Beginner Contest 073 - Theater", "description": "Joisino is working as a receptionist at a theater.\n\nThe theater has 100000 seats, numbered from 1 to 100000.\n\nAccording to her memo, N groups of audiences have come so far, and the i-th group occupies the consecutive seats from Seat l_i to Seat r_i (inclusive).\n\nHow many people are sitting at the theater now?\n\nConstraints\n\n* 1≤N≤1000\n* 1≤l_i≤r_i≤100000\n* No seat is occupied by more than one person.\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nl_1 r_1\n:\nl_N r_N\n\n\nOutput\n\nPrint the number of people sitting at the theater.\n\nExamples\n\nInput\n\n1\n24 30\n\n\nOutput\n\n7\n\n\nInput\n\n2\n6 8\n3 3\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p03497 AtCoder Regular Contest 086 - Not so Diverse", "description": "Takahashi has N balls. Initially, an integer A_i is written on the i-th ball.\n\nHe would like to rewrite the integer on some balls so that there are at most K different integers written on the N balls.\n\nFind the minimum number of balls that Takahashi needs to rewrite the integers on them.\n\nConstraints\n\n* 1 \\leq K \\leq N \\leq 200000\n* 1 \\leq A_i \\leq N\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the minimum number of balls that Takahashi needs to rewrite the integers on them.\n\nExamples\n\nInput\n\n5 2\n1 1 2 2 5\n\n\nOutput\n\n1\n\n\nInput\n\n4 4\n1 1 2 2\n\n\nOutput\n\n0\n\n\nInput\n\n10 3\n5 1 3 2 4 1 1 2 3 4\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p03668 AtCoder Grand Contest 017 - Game on Tree", "description": "There is a tree with N vertices numbered 1, 2, ..., N. The edges of the tree are denoted by (x_i, y_i).\n\nOn this tree, Alice and Bob play a game against each other. Starting from Alice, they alternately perform the following operation:\n\n* Select an existing edge and remove it from the tree, disconnecting it into two separate connected components. Then, remove the component that does not contain Vertex 1.\n\n\n\nA player loses the game when he/she is unable to perform the operation. Determine the winner of the game assuming that both players play optimally.\n\nConstraints\n\n* 2 \\leq N \\leq 100000\n* 1 \\leq x_i, y_i \\leq N\n* The given graph is a tree.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nx_1 y_1\nx_2 y_2\n:\nx_{N-1} y_{N-1}\n\n\nOutput\n\nPrint `Alice` if Alice wins; print `Bob` if Bob wins.\n\nExamples\n\nInput\n\n5\n1 2\n2 3\n2 4\n4 5\n\n\nOutput\n\nAlice\n\n\nInput\n\n5\n1 2\n2 3\n1 4\n4 5\n\n\nOutput\n\nBob\n\n\nInput\n\n6\n1 2\n2 4\n5 1\n6 3\n3 2\n\n\nOutput\n\nAlice\n\n\nInput\n\n7\n1 2\n3 7\n4 6\n2 3\n2 4\n1 5\n\n\nOutput\n\nBob", "grammar": {"answer": null}}
{"name": "p03214 Dwango Programming Contest V - Thumbnail", "description": "Niwango-kun is an employee of Dwango Co., Ltd.\nOne day, he is asked to generate a thumbnail from a video a user submitted.\nTo generate a thumbnail, he needs to select a frame of the video according to the following procedure:\n\n* Get an integer N and N integers a_0, a_1, ..., a_{N-1} as inputs. N denotes the number of the frames of the video, and each a_i denotes the representation of the i-th frame of the video.\n* Select t-th frame whose representation a_t is nearest to the average of all frame representations.\n* If there are multiple such frames, select the frame with the smallest index.\n\n\n\nFind the index t of the frame he should select to generate a thumbnail.\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* 1 \\leq a_i \\leq 100\n* All numbers given in input are integers\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_{0} a_{1} ... a_{N-1}\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n1\n\n\nInput\n\n4\n2 5 2 5\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p01558 Substring", "description": "Given a string of length n s = s1, s2,…, sn and m queries. Each query qk (1 ≤ k ≤ m) is one of four types, \"L ++\", \"L-\", \"R ++\", \"R-\", and l [for the kth query qk. k] and r [k] are defined below.\n\n* L ++: l [k] = l [k-1] + 1, r [k] = r [k-1]\n\n* L-: l [k] = l [k-1] -1, r [k] = r [k-1]\n\n* R ++: l [k] = l [k-1], r [k] = r [k-1] +1\n\n* R-: l [k] = l [k-1], r [k] = r [k-1] -1\n\n\n\n\nHowever, l [0] = r [0] = 1.\n\nAt this time, how many kinds of character strings are created for m substrings sl [k], sl [k] + 1,…, sr [k] -1, sr [k] (1 ≤ k ≤ m). Answer if you can.\n\nConstraints\n\n* The string s consists of a lowercase alphabet\n\n* 1 ≤ n ≤ 3 x 105\n\n* 1 ≤ m ≤ 3 × 105\n\n* qk (1 ≤ k ≤ m) is one of \"L ++\", \"L-\", \"R ++\", \"R-\"\n\n* 1 ≤ l [k] ≤ r [k] ≤ n (1 ≤ k ≤ m)\n\nInput\n\nInput is given in the following format\n\n> n m\n> s\n> q1\n> q2\n>…\n> qm\n>\n\nOutput\n\nOutput the solution of the problem on one line\n\nExamples\n\nInput\n\n5 4\nabcde\nR++\nR++\nL++\nL--\n\n\nOutput\n\n3\n\n\nInput\n\n4 6\nabab\nR++\nL++\nR++\nL++\nR++\nL++\n\n\nOutput\n\n4\n\n\nInput\n\n10 13\naacacbabac\nR++\nR++\nL++\nR++\nR++\nL++\nL++\nR++\nR++\nL--\nL--\nR--\nR--\n\n\nOutput\n\n11", "grammar": {"answer": null}}
{"name": "32_C. Flea", "description": "It is known that fleas in Berland can jump only vertically and horizontally, and the length of the jump is always equal to s centimeters. A flea has found herself at the center of some cell of the checked board of the size n × m centimeters (each cell is 1 × 1 centimeters). She can jump as she wishes for an arbitrary number of times, she can even visit a cell more than once. The only restriction is that she cannot jump out of the board.\n\nThe flea can count the amount of cells that she can reach from the starting position (x, y). Let's denote this amount by dx, y. Your task is to find the number of such starting positions (x, y), which have the maximum possible value of dx, y.\n\nInput\n\nThe first line contains three integers n, m, s (1 ≤ n, m, s ≤ 106) — length of the board, width of the board and length of the flea's jump.\n\nOutput\n\nOutput the only integer — the number of the required starting positions of the flea.\n\nExamples\n\nInput\n\n2 3 1000000\n\n\nOutput\n\n6\n\n\nInput\n\n3 3 2\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p03862 AtCoder Beginner Contest 048 - Boxes and Candies", "description": "There are N boxes arranged in a row. Initially, the i-th box from the left contains a_i candies.\n\nSnuke can perform the following operation any number of times:\n\n* Choose a box containing at least one candy, and eat one of the candies in the chosen box.\n\n\n\nHis objective is as follows:\n\n* Any two neighboring boxes contain at most x candies in total.\n\n\n\nFind the minimum number of operations required to achieve the objective.\n\nConstraints\n\n* 2 ≤ N ≤ 10^5\n* 0 ≤ a_i ≤ 10^9\n* 0 ≤ x ≤ 10^9\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN x\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the minimum number of operations required to achieve the objective.\n\nExamples\n\nInput\n\n3 3\n2 2 2\n\n\nOutput\n\n1\n\n\nInput\n\n6 1\n1 6 1 2 0 4\n\n\nOutput\n\n11\n\n\nInput\n\n5 9\n3 1 4 1 5\n\n\nOutput\n\n0\n\n\nInput\n\n2 0\n5 5\n\n\nOutput\n\n10", "grammar": {"answer": null}}
{"name": "1283_A. Minutes Before the New Year", "description": "New Year is coming and you are excited to know how many minutes remain before the New Year. You know that currently the clock shows h hours and m minutes, where 0 ≤ hh < 24 and 0 ≤ mm < 60. We use 24-hour time format!\n\nYour task is to find the number of minutes before the New Year. You know that New Year comes when the clock shows 0 hours and 0 minutes.\n\nYou have to answer t independent test cases.\n\nInput\n\nThe first line of the input contains one integer t (1 ≤ t ≤ 1439) — the number of test cases.\n\nThe following t lines describe test cases. The i-th line contains the time as two integers h and m (0 ≤ h < 24, 0 ≤ m < 60). It is guaranteed that this time is not a midnight, i.e. the following two conditions can't be met at the same time: h=0 and m=0. It is guaranteed that both h and m are given without leading zeros.\n\nOutput\n\nFor each test case, print the answer on it — the number of minutes before the New Year.\n\nExample\n\nInput\n\n\n5\n23 55\n23 0\n0 1\n4 20\n23 59\n\n\nOutput\n\n\n5\n60\n1439\n1180\n1", "grammar": {"answer": null}}
{"name": "p02622 AtCoder Beginner Contest 172 - Minor Change", "description": "Given are strings S and T. Consider changing S to T by repeating the operation below. Find the minimum number of operations required to do so.\n\nOperation: Choose one character of S and replace it with a different character.\n\nConstraints\n\n* S and T have lengths between 1 and 2\\times 10^5 (inclusive).\n* S and T consists of lowercase English letters.\n* S and T have equal lengths.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\nT\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\ncupofcoffee\ncupofhottea\n\n\nOutput\n\n4\n\n\nInput\n\nabcde\nbcdea\n\n\nOutput\n\n5\n\n\nInput\n\napple\napple\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "946_A. Partition", "description": "You are given a sequence a consisting of n integers. You may partition this sequence into two sequences b and c in such a way that every element belongs exactly to one of these sequences. \n\nLet B be the sum of elements belonging to b, and C be the sum of elements belonging to c (if some of these sequences is empty, then its sum is 0). What is the maximum possible value of B - C?\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 100) — the number of elements in a.\n\nThe second line contains n integers a1, a2, ..., an ( - 100 ≤ ai ≤ 100) — the elements of sequence a.\n\nOutput\n\nPrint the maximum possible value of B - C, where B is the sum of elements of sequence b, and C is the sum of elements of sequence c.\n\nExamples\n\nInput\n\n3\n1 -2 0\n\n\nOutput\n\n3\n\n\nInput\n\n6\n16 23 16 15 42 8\n\n\nOutput\n\n120\n\nNote\n\nIn the first example we may choose b = {1, 0}, c = { - 2}. Then B = 1, C = - 2, B - C = 3.\n\nIn the second example we choose b = {16, 23, 16, 15, 42, 8}, c = {} (an empty sequence). Then B = 120, C = 0, B - C = 120.", "grammar": {"answer": null}}
{"name": "714_A. Meeting of Old Friends", "description": "Today an outstanding event is going to happen in the forest — hedgehog Filya will come to his old fried Sonya!\n\nSonya is an owl and she sleeps during the day and stay awake from minute l1 to minute r1 inclusive. Also, during the minute k she prinks and is unavailable for Filya.\n\nFilya works a lot and he plans to visit Sonya from minute l2 to minute r2 inclusive.\n\nCalculate the number of minutes they will be able to spend together.\n\nInput\n\nThe only line of the input contains integers l1, r1, l2, r2 and k (1 ≤ l1, r1, l2, r2, k ≤ 1018, l1 ≤ r1, l2 ≤ r2), providing the segments of time for Sonya and Filya and the moment of time when Sonya prinks.\n\nOutput\n\nPrint one integer — the number of minutes Sonya and Filya will be able to spend together.\n\nExamples\n\nInput\n\n1 10 9 20 1\n\n\nOutput\n\n2\n\n\nInput\n\n1 100 50 200 75\n\n\nOutput\n\n50\n\nNote\n\nIn the first sample, they will be together during minutes 9 and 10.\n\nIn the second sample, they will be together from minute 50 to minute 74 and from minute 76 to minute 100.", "grammar": {"answer": null}}
{"name": "p03152 KEYENCE Programming Contest 2019 - Double Landscape", "description": "Consider writing each of the integers from 1 to N \\times M in a grid with N rows and M columns, without duplicates. Takahashi thinks it is not fun enough, and he will write the numbers under the following conditions:\n\n* The largest among the values in the i-th row (1 \\leq i \\leq N) is A_i.\n* The largest among the values in the j-th column (1 \\leq j \\leq M) is B_j.\n\n\n\nFor him, find the number of ways to write the numbers under these conditions, modulo 10^9 + 7.\n\nConstraints\n\n* 1 \\leq N \\leq 1000\n* 1 \\leq M \\leq 1000\n* 1 \\leq A_i \\leq N \\times M\n* 1 \\leq B_j \\leq N \\times M\n* A_i and B_j are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nA_1 A_2 ... A_{N}\nB_1 B_2 ... B_{M}\n\n\nOutput\n\nPrint the number of ways to write the numbers under the conditions, modulo 10^9 + 7.\n\nExamples\n\nInput\n\n2 2\n4 3\n3 4\n\n\nOutput\n\n2\n\n\nInput\n\n3 3\n5 9 7\n3 6 9\n\n\nOutput\n\n0\n\n\nInput\n\n2 2\n4 4\n4 4\n\n\nOutput\n\n0\n\n\nInput\n\n14 13\n158 167 181 147 178 151 179 182 176 169 180 129 175 168\n181 150 178 179 167 180 176 169 182 177 175 159 173\n\n\nOutput\n\n343772227", "grammar": {"answer": null}}
{"name": "p01054 String Conversion", "description": "Problem\n\nJennifer and Marian presented Carla with the string S.\nHowever, Carla is not happy to receive the string S.\nI wanted the string T.\nThe three decided to work together to change the string S to the string T.\n\n\nJennifer first sorts the letters in any order.\n\nMarian then exchanges the lowercase letters of the two alphabets any number of times.\nThis operation exchanges all the same characters in the string, for example:\n\n\n* aab-> Swap a and b-> bba\n* aab-> Swap a and c-> ccb\n\n\n\nFinally, Carla replaces one character with another and repeats until T.\nJennifer and Marian decided to try to reduce the number of Carla replacements.\nFind the minimum number of replacements that Carla makes.\n\nConstraints\n\n* 1 ≤ n ≤ 105\n* S and T contain only'a'~'z'\n* | S | = | T | = n\n\nInput\n\n\nn\nS\nT\n\n\nThe length n of the string is given on the first line.\nThe character string S is given on the second line, and the character string T is given on the third line.\n\nOutput\n\nPrint the minimum number of Carla replacements on one line.\n\nExamples\n\nInput\n\n3\nabc\nxyz\n\n\nOutput\n\n0\n\n\nInput\n\n5\naaabb\nxyxyz\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "764_A. Taymyr is calling you", "description": "Comrade Dujikov is busy choosing artists for Timofey's birthday and is recieving calls from Taymyr from Ilia-alpinist.\n\nIlia-alpinist calls every n minutes, i.e. in minutes n, 2n, 3n and so on. Artists come to the comrade every m minutes, i.e. in minutes m, 2m, 3m and so on. The day is z minutes long, i.e. the day consists of minutes 1, 2, ..., z. How many artists should be killed so that there are no artists in the room when Ilia calls? Consider that a call and a talk with an artist take exactly one minute.\n\nInput\n\nThe only string contains three integers — n, m and z (1 ≤ n, m, z ≤ 104).\n\nOutput\n\nPrint single integer — the minimum number of artists that should be killed so that there are no artists in the room when Ilia calls.\n\nExamples\n\nInput\n\n1 1 10\n\n\nOutput\n\n10\n\n\nInput\n\n1 2 5\n\n\nOutput\n\n2\n\n\nInput\n\n2 3 9\n\n\nOutput\n\n1\n\nNote\n\nTaymyr is a place in the north of Russia.\n\nIn the first test the artists come each minute, as well as the calls, so we need to kill all of them.\n\nIn the second test we need to kill artists which come on the second and the fourth minutes.\n\nIn the third test — only the artist which comes on the sixth minute. ", "grammar": {"answer": null}}
{"name": "p02354 The Smallest Window I", "description": "For a given array $a_1, a_2, a_3, ... , a_N$ of $N$ elements and an integer $S$, find the smallest sub-array size (smallest window length) where the sum of the sub-array is greater than or equal to $S$. If there is not such sub-array, report 0.\n\nConstraints\n\n* $1 \\leq N \\leq 10^5$\n* $1 \\leq S \\leq 10^9$\n* $1 \\leq a_i \\leq 10^4$\n\nInput\n\nThe input is given in the following format.\n\n$N$ $S$\n$a_1$ $a_2$ ... $a_N$\n\nOutput\n\nPrint the smallest sub-array size in a line.\n\nExamples\n\nInput\n\n6 4\n1 2 1 2 3 2\n\n\nOutput\n\n2\n\n\nInput\n\n6 6\n1 2 1 2 3 2\n\n\nOutput\n\n3\n\n\nInput\n\n3 7\n1 2 3\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02431 Vector", "description": "For a dynamic array $A = \\\\{a_0, a_1, ...\\\\}$ of integers, perform a sequence of the following operations:\n\n* pushBack($x$): add element $x$ at the end of $A$\n* randomAccess($p$):print element $a_p$\n* popBack(): delete the last element of $A$\n\n\n\n$A$ is a 0-origin array and it is empty in the initial state.\n\nConstraints\n\n* $1 \\leq q \\leq 200,000$\n* $0 \\leq p < $ the size of $A$\n* $-1,000,000,000 \\leq x \\leq 1,000,000,000$\n\nInput\n\nThe input is given in the following format.\n\n\n$q$\n$query_1$\n$query_2$\n:\n$query_q$\n\n\nEach query $query_i$ is given by\n\n\n0 $x$\n\n\nor\n\n\n1 $p$\n\n\nor\n\n\n2\n\n\nwhere the first digits 0, 1 and 2 represent pushBack, randomAccess and popBack operations respectively.\n\nrandomAccess and popBack operations will not be given for an empty array.\n\nOutput\n\nFor each randomAccess, print $a_p$ in a line.\n\nExample\n\nInput\n\n8\n0 1\n0 2\n0 3\n2\n0 4\n1 0\n1 1\n1 2\n\n\nOutput\n\n1\n2\n4", "grammar": {"answer": null}}
{"name": "p03777 AtCoder Beginner Contest 056 - HonestOrDishonest", "description": "Two deer, AtCoDeer and TopCoDeer, are playing a game called Honest or Dishonest. In this game, an honest player always tells the truth, and an dishonest player always tell lies. You are given two characters a and b as the input. Each of them is either `H` or `D`, and carries the following information:\n\nIf a=`H`, AtCoDeer is honest; if a=`D`, AtCoDeer is dishonest. If b=`H`, AtCoDeer is saying that TopCoDeer is honest; if b=`D`, AtCoDeer is saying that TopCoDeer is dishonest.\n\nGiven this information, determine whether TopCoDeer is honest.\n\nConstraints\n\n* a=`H` or a=`D`.\n* b=`H` or b=`D`.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\na b\n\n\nOutput\n\nIf TopCoDeer is honest, print `H`. If he is dishonest, print `D`.\n\nExamples\n\nInput\n\nH H\n\n\nOutput\n\nH\n\n\nInput\n\nD H\n\n\nOutput\n\nD\n\n\nInput\n\nD D\n\n\nOutput\n\nH", "grammar": {"answer": null}}
{"name": "873_B. Balanced Substring", "description": "You are given a string s consisting only of characters 0 and 1. A substring [l, r] of s is a string slsl + 1sl + 2... sr, and its length equals to r - l + 1. A substring is called balanced if the number of zeroes (0) equals to the number of ones in this substring.\n\nYou have to determine the length of the longest balanced substring of s.\n\nInput\n\nThe first line contains n (1 ≤ n ≤ 100000) — the number of characters in s.\n\nThe second line contains a string s consisting of exactly n characters. Only characters 0 and 1 can appear in s.\n\nOutput\n\nIf there is no non-empty balanced substring in s, print 0. Otherwise, print the length of the longest balanced substring.\n\nExamples\n\nInput\n\n8\n11010111\n\n\nOutput\n\n4\n\n\nInput\n\n3\n111\n\n\nOutput\n\n0\n\nNote\n\nIn the first example you can choose the substring [3, 6]. It is balanced, and its length is 4. Choosing the substring [2, 5] is also possible.\n\nIn the second example it's impossible to find a non-empty balanced substring.", "grammar": {"answer": null}}
{"name": "p01743 Clique Coloring", "description": "There is a complete graph of m vertices. Initially, the edges of the complete graph are uncolored. Sunuke did the following for each i (1 ≤ i ≤ n): Select ai vertices from the complete graph and color all edges connecting the selected vertices with color i. None of the sides were painted in multiple colors. Find the minimum value that can be considered as m.\n\nConstraints\n\n* 1 ≤ n ≤ 5\n* 2 ≤ ai ≤ 109\n\nInput\n\n\nn\na1\n.. ..\nan\n\n\nOutput\n\nOutput the minimum value of m on one line.\n\nExamples\n\nInput\n\n2\n3\n3\n\n\nOutput\n\n5\n\n\nInput\n\n5\n2\n3\n4\n5\n6\n\n\nOutput\n\n12", "grammar": {"answer": null}}
{"name": "276_D. Little Girl and Maximum XOR", "description": "A little girl loves problems on bitwise operations very much. Here's one of them.\n\nYou are given two integers l and r. Let's consider the values of <image> for all pairs of integers a and b (l ≤ a ≤ b ≤ r). Your task is to find the maximum value among all considered ones.\n\nExpression <image> means applying bitwise excluding or operation to integers x and y. The given operation exists in all modern programming languages, for example, in languages C++ and Java it is represented as \"^\", in Pascal — as \"xor\".\n\nInput\n\nThe single line contains space-separated integers l and r (1 ≤ l ≤ r ≤ 1018).\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nOutput\n\nIn a single line print a single integer — the maximum value of <image> for all pairs of integers a, b (l ≤ a ≤ b ≤ r).\n\nExamples\n\nInput\n\n1 2\n\n\nOutput\n\n3\n\n\nInput\n\n8 16\n\n\nOutput\n\n31\n\n\nInput\n\n1 1\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "1487_F. Ones", "description": "You are given a positive (greater than zero) integer n.\n\nYou have to represent n as the sum of integers (possibly negative) consisting only of ones (digits '1'). For example, 24 = 11 + 11 + 1 + 1 and 102 = 111 - 11 + 1 + 1. \n\nAmong all possible representations, you have to find the one that uses the minimum number of ones in total.\n\nInput\n\nThe single line contains one integer n (1 ≤ n < 10^{50}).\n\nOutput\n\nPrint one integer x — the minimum number of ones, such that there exist a representation of n as the sum of integers (possibly negative) that uses x ones in total.\n\nExamples\n\nInput\n\n\n24\n\n\nOutput\n\n\n6\n\n\nInput\n\n\n102\n\n\nOutput\n\n\n7", "grammar": {"answer": null}}
{"name": "p00058 Orthogonal", "description": "Read the coordinates of four different points on the plane, $ A (x_A, y_A) $, $ B (x_B, y_B) $, $ C (x_C, y_C) $, $ D (x_D, y_D) $, and straight line $ Create a program that outputs YES if AB $ and $ CD $ are orthogonal, and NO if they are not orthogonal. Here, \"straight line\" does not mean a line segment. Please refer to the figure below.\n\n<image>\n\n\n\nInput\n\nGiven multiple datasets. The format of each dataset is as follows.\n\n$ x_A $ $ y_A $ $ x_B $ $ y_B $ $ x_C $ $ y_C $ $ x_D $ $ y_D $\n\n$ x_A $, $ y_A $, $ x_B $, $ y_B $, $ x_C $, $ y_C $, $ x_D $, $ y_D $ are each -100 or more and 100 or less, and each value has a maximum of 5 digits after the decimal point. It is given as a real number including the number of.\n\nThe number of datasets does not exceed 100.\n\nOutput\n\nPrint YES or NO on one line for each dataset.\n\nExample\n\nInput\n\n1.0 1.0 2.0 2.0 0.0 0.0 1.0 -1.0\n0.0 0.0 2.0 0.0 -1.0 2.0 2.0 2.0\n10.0 6.0 3.4 5.2 6.8 9.5 4.3 2.1\n2.5 3.5 2.5 4.5 -3.3 -2.3 6.8 -2.3\n\n\nOutput\n\nYES\nNO\nNO\nYES", "grammar": {"answer": null}}
{"name": "p02580 AtCoder Beginner Contest 176 - Bomber", "description": "We have a two-dimensional grid with H \\times W squares. There are M targets to destroy in this grid - the position of the i-th target is \\left(h_i, w_i \\right).\n\nTakahashi will choose one square in this grid, place a bomb there, and ignite it. The bomb will destroy all targets that are in the row or the column where the bomb is placed. It is possible to place the bomb at a square with a target.\n\nTakahashi is trying to maximize the number of targets to destroy. Find the maximum number of targets that can be destroyed.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq H, W \\leq 3 \\times 10^5\n* 1 \\leq M \\leq \\min\\left(H\\times W, 3 \\times 10^5\\right)\n* 1 \\leq h_i \\leq H\n* 1 \\leq w_i \\leq W\n* \\left(h_i, w_i\\right) \\neq \\left(h_j, w_j\\right) \\left(i \\neq j\\right)\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH W M\nh_1 w_1\n\\vdots\nh_M w_M\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n2 3 3\n2 2\n1 1\n1 3\n\n\nOutput\n\n3\n\n\nInput\n\n3 3 4\n3 3\n3 1\n1 1\n1 2\n\n\nOutput\n\n3\n\n\nInput\n\n5 5 10\n2 5\n4 3\n2 3\n5 5\n2 2\n5 4\n5 3\n5 1\n3 5\n1 4\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p01828 M and A", "description": "Example\n\nInput\n\nacmicpc\ntsukuba\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "1276_C. Beautiful Rectangle", "description": "You are given n integers. You need to choose a subset and put the chosen numbers in a beautiful rectangle (rectangular matrix). Each chosen number should occupy one of its rectangle cells, each cell must be filled with exactly one chosen number. Some of the n numbers may not be chosen.\n\nA rectangle (rectangular matrix) is called beautiful if in each row and in each column all values are different.\n\nWhat is the largest (by the total number of cells) beautiful rectangle you can construct? Print the rectangle itself.\n\nInput\n\nThe first line contains n (1 ≤ n ≤ 4⋅10^5). The second line contains n integers (1 ≤ a_i ≤ 10^9).\n\nOutput\n\nIn the first line print x (1 ≤ x ≤ n) — the total number of cells of the required maximum beautiful rectangle. In the second line print p and q (p ⋅ q=x): its sizes. In the next p lines print the required rectangle itself. If there are several answers, print any.\n\nExamples\n\nInput\n\n\n12\n3 1 4 1 5 9 2 6 5 3 5 8\n\n\nOutput\n\n\n12\n3 4\n1 2 3 5\n3 1 5 4\n5 6 8 9\n\n\nInput\n\n\n5\n1 1 1 1 1\n\n\nOutput\n\n\n1\n1 1\n1", "grammar": {"answer": null}}
{"name": "1328_A. Divisibility Problem", "description": "You are given two positive integers a and b. In one move you can increase a by 1 (replace a with a+1). Your task is to find the minimum number of moves you need to do in order to make a divisible by b. It is possible, that you have to make 0 moves, as a is already divisible by b. You have to answer t independent test cases.\n\nInput\n\nThe first line of the input contains one integer t (1 ≤ t ≤ 10^4) — the number of test cases. Then t test cases follow.\n\nThe only line of the test case contains two integers a and b (1 ≤ a, b ≤ 10^9).\n\nOutput\n\nFor each test case print the answer — the minimum number of moves you need to do in order to make a divisible by b.\n\nExample\n\nInput\n\n\n5\n10 4\n13 9\n100 13\n123 456\n92 46\n\n\nOutput\n\n\n2\n5\n4\n333\n0", "grammar": {"answer": null}}
{"name": "p02817 AtCoder Beginner Contest 149 - Strings", "description": "Given are two strings S and T consisting of lowercase English letters. Concatenate T and S in this order, without space in between, and print the resulting string.\n\nConstraints\n\n* S and T are strings consisting of lowercase English letters.\n* The lengths of S and T are between 1 and 100 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS T\n\n\nOutput\n\nPrint the resulting string.\n\nExamples\n\nInput\n\noder atc\n\n\nOutput\n\natcoder\n\n\nInput\n\nhumu humu\n\n\nOutput\n\nhumuhumu", "grammar": {"answer": null}}
{"name": "p00646 No Story", "description": "Since I got tired to write long problem statements, I decided to make this problem statement short. For given positive integer L, how many pairs of positive integers a, b (a ≤ b) such that LCM(a, b) = L are there? Here, LCM(a, b) stands for the least common multiple of a and b.\n\nConstraints\n\n* 1 ≤ L ≤ 1012\n\nInput\n\nFor each dataset, an integer L is given in a line. Input terminates when L = 0.\n\nOutput\n\nFor each dataset, output the number of pairs of a and b.\n\nExample\n\nInput\n\n12\n9\n2\n0\n\n\nOutput\n\n8\n3\n2", "grammar": {"answer": null}}
{"name": "p02888 AtCoder Beginner Contest 143 - Triangles", "description": "Takahashi has N sticks that are distinguishable from each other. The length of the i-th stick is L_i.\n\nHe is going to form a triangle using three of these sticks. Let a, b, and c be the lengths of the three sticks used. Here, all of the following conditions must be satisfied:\n\n* a < b + c\n* b < c + a\n* c < a + b\n\n\n\nHow many different triangles can be formed? Two triangles are considered different when there is a stick used in only one of them.\n\nConstraints\n\n* All values in input are integers.\n* 3 \\leq N \\leq 2 \\times 10^3\n* 1 \\leq L_i \\leq 10^3\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nL_1 L_2 ... L_N\n\n\nConstraints\n\nPrint the number of different triangles that can be formed.\n\nConstraints\n\nPrint the number of different triangles that can be formed.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nL_1 L_2 ... L_N\n\nExamples\n\nInput\n\n4\n3 4 2 1\n\n\nOutput\n\n1\n\n\nInput\n\n3\n1 1000 1\n\n\nOutput\n\n0\n\n\nInput\n\n7\n218 786 704 233 645 728 389\n\n\nOutput\n\n23", "grammar": {"answer": null}}
{"name": "1088_A. Ehab and another construction problem", "description": "Given an integer x, find 2 integers a and b such that: \n\n  * 1 ≤ a,b ≤ x \n  * b divides a (a is divisible by b). \n  * a ⋅ b>x. \n  * a/b<x. \n\nInput\n\nThe only line contains the integer x (1 ≤ x ≤ 100).\n\nOutput\n\nYou should output two integers a and b, satisfying the given conditions, separated by a space. If no pair of integers satisfy the conditions above, print \"-1\" (without quotes).\n\nExamples\n\nInput\n\n10\n\n\nOutput\n\n6 3\n\nInput\n\n1\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "702_B. Powers of Two", "description": "You are given n integers a1, a2, ..., an. Find the number of pairs of indexes i, j (i < j) that ai + aj is a power of 2 (i. e. some integer x exists so that ai + aj = 2x).\n\nInput\n\nThe first line contains the single positive integer n (1 ≤ n ≤ 105) — the number of integers.\n\nThe second line contains n positive integers a1, a2, ..., an (1 ≤ ai ≤ 109).\n\nOutput\n\nPrint the number of pairs of indexes i, j (i < j) that ai + aj is a power of 2.\n\nExamples\n\nInput\n\n4\n7 3 2 1\n\n\nOutput\n\n2\n\n\nInput\n\n3\n1 1 1\n\n\nOutput\n\n3\n\nNote\n\nIn the first example the following pairs of indexes include in answer: (1, 4) and (2, 4).\n\nIn the second example all pairs of indexes (i, j) (where i < j) include in answer.", "grammar": {"answer": null}}
{"name": "221_B. Little Elephant and Numbers", "description": "The Little Elephant loves numbers. \n\nHe has a positive integer x. The Little Elephant wants to find the number of positive integers d, such that d is the divisor of x, and x and d have at least one common (the same) digit in their decimal representations. \n\nHelp the Little Elephant to find the described number.\n\nInput\n\nA single line contains a single integer x (1 ≤ x ≤ 109).\n\nOutput\n\nIn a single line print an integer — the answer to the problem.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n1\n\n\nInput\n\n10\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02860 AtCoder Beginner Contest 145 - Echo", "description": "Given are a positive integer N and a string S of length N consisting of lowercase English letters.\n\nDetermine whether the string is a concatenation of two copies of some string. That is, determine whether there is a string T such that S = T + T.\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* S consists of lowercase English letters.\n* |S| = N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS\n\n\nOutput\n\nIf S is a concatenation of two copies of some string, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n6\nabcabc\n\n\nOutput\n\nYes\n\n\nInput\n\n6\nabcadc\n\n\nOutput\n\nNo\n\n\nInput\n\n1\nz\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "1325_E. Ehab's REAL Number Theory Problem", "description": "You are given an array a of length n that has a special condition: every element in this array has at most 7 divisors. Find the length of the shortest non-empty subsequence of this array product of whose elements is a perfect square.\n\nA sequence a is a subsequence of an array b if a can be obtained from b by deletion of several (possibly, zero or all) elements.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 10^5) — the length of a.\n\nThe second line contains n integers a_1, a_2, …, a_{n} (1 ≤ a_i ≤ 10^6) — the elements of the array a.\n\nOutput\n\nOutput the length of the shortest non-empty subsequence of a product of whose elements is a perfect square. If there are several shortest subsequences, you can find any of them. If there's no such subsequence, print \"-1\".\n\nExamples\n\nInput\n\n\n3\n1 4 6\n\n\nOutput\n\n\n1\n\nInput\n\n\n4\n2 3 6 6\n\n\nOutput\n\n\n2\n\nInput\n\n\n3\n6 15 10\n\n\nOutput\n\n\n3\n\nInput\n\n\n4\n2 3 5 7\n\n\nOutput\n\n\n-1\n\nNote\n\nIn the first sample, you can choose a subsequence [1].\n\nIn the second sample, you can choose a subsequence [6, 6].\n\nIn the third sample, you can choose a subsequence [6, 15, 10].\n\nIn the fourth sample, there is no such subsequence.", "grammar": {"answer": null}}
{"name": "888_G. Xor-MST", "description": "You are given a complete undirected graph with n vertices. A number ai is assigned to each vertex, and the weight of an edge between vertices i and j is equal to ai xor aj.\n\nCalculate the weight of the minimum spanning tree in this graph.\n\nInput\n\nThe first line contains n (1 ≤ n ≤ 200000) — the number of vertices in the graph.\n\nThe second line contains n integers a1, a2, ..., an (0 ≤ ai < 230) — the numbers assigned to the vertices.\n\nOutput\n\nPrint one number — the weight of the minimum spanning tree in the graph.\n\nExamples\n\nInput\n\n5\n1 2 3 4 5\n\n\nOutput\n\n8\n\n\nInput\n\n4\n1 2 3 4\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "409_G. On a plane", "description": "\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 1000) — the number of points on a plane.\n\nEach of the next n lines contains two real coordinates xi and yi of the <image> point, specified with exactly 2 fractional digits. All coordinates are between  - 1000 and 1000, inclusive.\n\nOutput\n\nOutput a single real number θ — the answer to the problem statement. The absolute or relative error of your answer should be at most 10 - 2.\n\nExamples\n\nInput\n\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n\n\nOutput\n\n5.410\n\n\nInput\n\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\n\nOutput\n\n5.620\n\n\nInput\n\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\n\nOutput\n\n5.480\n\n\nInput\n\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\n\nOutput\n\n6.040\n\n\nInput\n\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n\n\nOutput\n\n6.040\n\n\nInput\n\n7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n\n\nOutput\n\n6.720", "grammar": {"answer": null}}
{"name": "52_B. Right Triangles", "description": "You are given a n × m field consisting only of periods ('.') and asterisks ('*'). Your task is to count all right triangles with two sides parallel to the square sides, whose vertices are in the centers of '*'-cells. A right triangle is a triangle in which one angle is a right angle (that is, a 90 degree angle).\n\nInput\n\nThe first line contains two positive integer numbers n and m (1 ≤ n, m ≤ 1000). The following n lines consist of m characters each, describing the field. Only '.' and '*' are allowed.\n\nOutput\n\nOutput a single number — total number of square triangles in the field. Please, do not use %lld specificator to read or write 64-bit integers in C++. It is preffered to use cout (also you may use %I64d).\n\nExamples\n\nInput\n\n2 2\n**\n*.\n\n\nOutput\n\n1\n\n\nInput\n\n3 4\n*..*\n.**.\n*.**\n\n\nOutput\n\n9", "grammar": {"answer": null}}
{"name": "p02362 Single Source Shortest Path (Negative Edges)", "description": "Constraints\n\n* 1 ≤ |V| ≤ 1000\n* 0 ≤ |E| ≤ 2000\n* -10000 ≤ di ≤ 10000\n* There are no parallel edges\n* There are no self-loops\n\nInput\n\nAn edge-weighted graph G (V, E) and the source r.\n\n\n|V| |E| r\ns0 t0 d0\ns1 t1 d1\n:\ns|E|-1 t|E|-1 d|E|-1\n\n\n|V| is the number of vertices and |E| is the number of edges in G. The graph vertices are named with the numbers 0, 1,..., |V|-1 respectively. r is the source of the graph.\n\nsi and ti represent source and target vertices of i-th edge (directed) and di represents the cost of the i-th edge.\n\nOutput\n\nIf the graph contains a negative cycle (a cycle whose sum of edge costs is a negative value) which is reachable from the source r, print\n\n\nNEGATIVE CYCLE\n\n\nin a line.\n\nOtherwise, print\n\n\nc0\nc1\n:\nc|V|-1\n\n\nThe output consists of |V| lines. Print the cost of the shortest path from the source r to each vertex 0, 1, ... |V|-1 in order. If there is no path from the source to a vertex, print \"INF\".\n\nExamples\n\nInput\n\n4 5 0\n0 1 2\n0 2 3\n1 2 -5\n1 3 1\n2 3 2\n\n\nOutput\n\n0\n2\n-3\n-1\n\n\nInput\n\n4 6 0\n0 1 2\n0 2 3\n1 2 -5\n1 3 1\n2 3 2\n3 1 0\n\n\nOutput\n\nNEGATIVE CYCLE\n\n\nInput\n\n4 5 1\n0 1 2\n0 2 3\n1 2 -5\n1 3 1\n2 3 2\n\n\nOutput\n\nINF\n0\n-5\n-3", "grammar": {"answer": null}}
{"name": "p03766 AtCoder Regular Contest 071 - Infinite Sequence", "description": "How many infinite sequences a_1, a_2, ... consisting of {{1, ... ,n}} satisfy the following conditions?\n\n* The n-th and subsequent elements are all equal. That is, if n \\leq i,j, a_i = a_j.\n* For every integer i, the a_i elements immediately following the i-th element are all equal. That is, if i < j < k\\leq i+a_i, a_j = a_k.\n\n\n\nFind the count modulo 10^9+7.\n\nConstraints\n\n* 1 \\leq n \\leq 10^6\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nn\n\n\nOutput\n\nPrint how many sequences satisfy the conditions, modulo 10^9+7.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n4\n\n\nInput\n\n654321\n\n\nOutput\n\n968545283", "grammar": {"answer": null}}
{"name": "p01809 Let's Solve Geometric Problems", "description": "Let's solve the geometric problem\n\nMr. A is still solving geometric problems today. It is important to be aware of floating point errors when solving geometric problems.\n\nFloating-point error is the error caused by the rounding that occurs when representing a number in binary finite decimal numbers. For example, 0.1 in decimal is an infinite decimal number of 0.00011001100110011 ... in binary, but an error occurs when rounding this to a finite number of digits.\n\nPositive integers p and q are given in decimal notation. Find the b-ary system (b is an integer greater than or equal to 2) so that the rational number p / q can be expressed as a decimal number with a finite number of digits. If there are more than one, output the smallest one.\n\nConstraints\n\n* 0 <p <q <10 ^ 9\n\n\n\nInput Format\n\nInput is given from standard input in the following format.\n\n\np q\n\n\nOutput Format\n\nPrint the answer in one line.\n\nSample Input 1\n\n\n1 2\n\n\nSample Output 1\n\n\n2\n\n\n1/2 is binary 0.1\n\nSample Input 2\n\n\n21 30\n\n\nSample Output 2\n\n\nTen\n\n\n21/30 is 0.7 in decimal\n\n\n\n\n\nExample\n\nInput\n\n1 2\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02807 Dwango Programming Contest 6th - Fusing Slimes", "description": "There are N slimes standing on a number line. The i-th slime from the left is at position x_i.\n\nIt is guaruanteed that 1 \\leq x_1 < x_2 < \\ldots < x_N \\leq 10^{9}.\n\nNiwango will perform N-1 operations. The i-th operation consists of the following procedures:\n\n* Choose an integer k between 1 and N-i (inclusive) with equal probability.\n* Move the k-th slime from the left, to the position of the neighboring slime to the right.\n* Fuse the two slimes at the same position into one slime.\n\n\n\nFind the total distance traveled by the slimes multiplied by (N-1)! (we can show that this value is an integer), modulo (10^{9}+7). If a slime is born by a fuse and that slime moves, we count it as just one slime.\n\nConstraints\n\n* 2 \\leq N \\leq 10^{5}\n* 1 \\leq x_1 < x_2 < \\ldots < x_N \\leq 10^{9}\n* x_i is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nx_1 x_2 \\ldots x_N\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n5\n\n\nInput\n\n12\n161735902 211047202 430302156 450968417 628894325 707723857 731963982 822804784 880895728 923078537 971407775 982631932\n\n\nOutput\n\n750927044", "grammar": {"answer": null}}
{"name": "102_B. Sum of Digits", "description": "Having watched the last Harry Potter film, little Gerald also decided to practice magic. He found in his father's magical book a spell that turns any number in the sum of its digits. At the moment Gerald learned that, he came across a number n. How many times can Gerald put a spell on it until the number becomes one-digit?\n\nInput\n\nThe first line contains the only integer n (0 ≤ n ≤ 10100000). It is guaranteed that n doesn't contain any leading zeroes.\n\nOutput\n\nPrint the number of times a number can be replaced by the sum of its digits until it only contains one digit.\n\nExamples\n\nInput\n\n0\n\n\nOutput\n\n0\n\n\nInput\n\n10\n\n\nOutput\n\n1\n\n\nInput\n\n991\n\n\nOutput\n\n3\n\nNote\n\nIn the first sample the number already is one-digit — Herald can't cast a spell.\n\nThe second test contains number 10. After one casting of a spell it becomes 1, and here the process is completed. Thus, Gerald can only cast the spell once.\n\nThe third test contains number 991. As one casts a spell the following transformations take place: 991 → 19 → 10 → 1. After three transformations the number becomes one-digit.", "grammar": {"answer": null}}
{"name": "p03212 AtCoder Beginner Contest 114 - 755", "description": "You are given an integer N. Among the integers between 1 and N (inclusive), how many Shichi-Go-San numbers (literally \"Seven-Five-Three numbers\") are there?\n\nHere, a Shichi-Go-San number is a positive integer that satisfies the following condition:\n\n* When the number is written in base ten, each of the digits `7`, `5` and `3` appears at least once, and the other digits never appear.\n\nConstraints\n\n* 1 \\leq N < 10^9\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the number of the Shichi-Go-San numbers between 1 and N (inclusive).\n\nExamples\n\nInput\n\n575\n\n\nOutput\n\n4\n\n\nInput\n\n3600\n\n\nOutput\n\n13\n\n\nInput\n\n999999999\n\n\nOutput\n\n26484", "grammar": {"answer": null}}
{"name": "p00947 Quality of Check Digits", "description": "Example\n\nInput\n\n0 3 1 7 5 9 8 6 4 2\n7 0 9 2 1 5 4 8 6 3\n4 2 0 6 8 7 1 3 5 9\n1 7 5 0 9 8 3 4 2 6\n6 1 2 3 0 4 5 9 7 8\n3 6 7 4 2 0 9 5 8 1\n5 8 6 9 7 2 0 1 3 4\n8 9 4 5 3 6 2 0 1 7\n9 4 3 8 6 1 7 2 0 5\n2 5 8 1 4 3 6 7 9 0\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p01295 Champernowne Constant", "description": "Champernown constant is an irrational number represented in decimal by \"0.\" followed by concatenation of all positive integers in the increasing order. The first few digits of this constant are: 0.123456789101112...\n\nYour task is to write a program that outputs the K digits of Chapnernown constant starting at the N-th place for given two natural numbers K and N.\n\n\n\nInput\n\nThe input has multiple lines. Each line has two positive integers N and K (N ≤ 109, K ≤ 100) separated by a space.\n\nThe end of input is indicated by a line with two zeros. This line should not be processed.\n\nOutput\n\nFor each line, output a line that contains the K digits.\n\nExample\n\nInput\n\n4 5\n6 7\n0 0\n\n\nOutput\n\n45678\n6789101", "grammar": {"answer": null}}
{"name": "1329_B. Dreamoon Likes Sequences", "description": "Dreamoon likes sequences very much. So he created a problem about the sequence that you can't find in OEIS: \n\nYou are given two integers d, m, find the number of arrays a, satisfying the following constraints:\n\n  * The length of a is n, n ≥ 1 \n  * 1 ≤ a_1 < a_2 < ... < a_n ≤ d \n  * Define an array b of length n as follows: b_1 = a_1, ∀ i > 1, b_i = b_{i - 1} ⊕ a_i, where ⊕ is the bitwise exclusive-or (xor). After constructing an array b, the constraint b_1 < b_2 < ... < b_{n - 1} < b_n should hold. \n\n\n\nSince the number of possible arrays may be too large, you need to find the answer modulo m.\n\nInput\n\nThe first line contains an integer t (1 ≤ t ≤ 100) denoting the number of test cases in the input.\n\nEach of the next t lines contains two integers d, m (1 ≤ d, m ≤ 10^9).\n\nNote that m is not necessary the prime!\n\nOutput\n\nFor each test case, print the number of arrays a, satisfying all given constrains, modulo m.\n\nExample\n\nInput\n\n\n10\n1 1000000000\n2 999999999\n3 99999998\n4 9999997\n5 999996\n6 99995\n7 9994\n8 993\n9 92\n10 1\n\n\nOutput\n\n\n1\n3\n5\n11\n17\n23\n29\n59\n89\n0", "grammar": {"answer": null}}
{"name": "p03303 SoundHound Inc. Programming Contest 2018 -Masters Tournament- - Acrostic", "description": "You are given a string S consisting of lowercase English letters. We will write down this string, starting a new line after every w letters. Print the string obtained by concatenating the letters at the beginnings of these lines from top to bottom.\n\nConstraints\n\n* 1 \\leq w \\leq |S| \\leq 1000\n* S consists of lowercase English letters.\n* w is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\nw\n\n\nOutput\n\nPrint the desired string in one line.\n\nExamples\n\nInput\n\nabcdefgh\n3\n\n\nOutput\n\nadg\n\n\nInput\n\nlllll\n1\n\n\nOutput\n\nlllll\n\n\nInput\n\nsouuundhound\n2\n\n\nOutput\n\nsuudon", "grammar": {"answer": null}}
{"name": "p03685 AtCoder Regular Contest 076 - Connected?", "description": "Snuke is playing a puzzle game. In this game, you are given a rectangular board of dimensions R × C, filled with numbers. Each integer i from 1 through N is written twice, at the coordinates (x_{i,1},y_{i,1}) and (x_{i,2},y_{i,2}).\n\nThe objective is to draw a curve connecting the pair of points where the same integer is written, for every integer from 1 through N. Here, the curves may not go outside the board or cross each other.\n\nDetermine whether this is possible.\n\nConstraints\n\n* 1 ≤ R,C ≤ 10^8\n* 1 ≤ N ≤ 10^5\n* 0 ≤ x_{i,1},x_{i,2} ≤ R(1 ≤ i ≤ N)\n* 0 ≤ y_{i,1},y_{i,2} ≤ C(1 ≤ i ≤ N)\n* All given points are distinct.\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nR C N\nx_{1,1} y_{1,1} x_{1,2} y_{1,2}\n:\nx_{N,1} y_{N,1} x_{N,2} y_{N,2}\n\n\nOutput\n\nPrint `YES` if the objective is achievable; print `NO` otherwise.\n\nExamples\n\nInput\n\n4 2 3\n0 1 3 1\n1 1 4 1\n2 0 2 2\n\n\nOutput\n\nYES\n\n\nInput\n\n2 2 4\n0 0 2 2\n2 0 0 1\n0 2 1 2\n1 1 2 1\n\n\nOutput\n\nNO\n\n\nInput\n\n5 5 7\n0 0 2 4\n2 3 4 5\n3 5 5 2\n5 5 5 4\n0 3 5 1\n2 2 4 4\n0 5 4 1\n\n\nOutput\n\nYES\n\n\nInput\n\n1 1 2\n0 0 1 1\n1 0 0 1\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p03025 M-SOLUTIONS Programming Contest - Best-of-(2n-1)", "description": "Takahashi and Aoki will play a game. They will repeatedly play it until one of them have N wins in total.\n\nWhen they play the game once, Takahashi wins with probability A %, Aoki wins with probability B %, and the game ends in a draw (that is, nobody wins) with probability C %. Find the expected number of games that will be played, and print it as follows.\n\nWe can represent the expected value as P/Q with coprime integers P and Q. Print the integer R between 0 and 10^9+6 (inclusive) such that R \\times Q \\equiv P\\pmod {10^9+7}. (Such an integer R always uniquely exists under the constraints of this problem.)\n\nConstraints\n\n* 1 \\leq N \\leq 100000\n* 0 \\leq A,B,C \\leq 100\n* 1 \\leq A+B\n* A+B+C=100\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN A B C\n\n\nOutput\n\nPrint the expected number of games that will be played, in the manner specified in the statement.\n\nExamples\n\nInput\n\n1 25 25 50\n\n\nOutput\n\n2\n\n\nInput\n\n4 50 50 0\n\n\nOutput\n\n312500008\n\n\nInput\n\n1 100 0 0\n\n\nOutput\n\n1\n\n\nInput\n\n100000 31 41 28\n\n\nOutput\n\n104136146", "grammar": {"answer": null}}
{"name": "p03623 AtCoder Beginner Contest 071 - Meal Delivery", "description": "Snuke lives at position x on a number line. On this line, there are two stores A and B, respectively at position a and b, that offer food for delivery.\n\nSnuke decided to get food delivery from the closer of stores A and B. Find out which store is closer to Snuke's residence.\n\nHere, the distance between two points s and t on a number line is represented by |s-t|.\n\nConstraints\n\n* 1 \\leq x \\leq 1000\n* 1 \\leq a \\leq 1000\n* 1 \\leq b \\leq 1000\n* x, a and b are pairwise distinct.\n* The distances between Snuke's residence and stores A and B are different.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nx a b\n\n\nOutput\n\nIf store A is closer, print `A`; if store B is closer, print `B`.\n\nExamples\n\nInput\n\n5 2 7\n\n\nOutput\n\nB\n\n\nInput\n\n1 999 1000\n\n\nOutput\n\nA", "grammar": {"answer": null}}
{"name": "p03419 AtCoder Regular Contest 091 - Flip Flip  and Flip......", "description": "There is a grid with infinitely many rows and columns. In this grid, there is a rectangular region with consecutive N rows and M columns, and a card is placed in each square in this region. The front and back sides of these cards can be distinguished, and initially every card faces up.\n\nWe will perform the following operation once for each square contains a card:\n\n* For each of the following nine squares, flip the card in it if it exists: the target square itself and the eight squares that shares a corner or a side with the target square.\n\n\n\nIt can be proved that, whether each card faces up or down after all the operations does not depend on the order the operations are performed. Find the number of cards that face down after all the operations.\n\nConstraints\n\n* 1 \\leq N,M \\leq 10^9\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\n\n\nOutput\n\nPrint the number of cards that face down after all the operations.\n\nExamples\n\nInput\n\n2 2\n\n\nOutput\n\n0\n\n\nInput\n\n1 7\n\n\nOutput\n\n5\n\n\nInput\n\n314 1592\n\n\nOutput\n\n496080", "grammar": {"answer": null}}
{"name": "p02716 AtCoder Beginner Contest 162 - Select Half", "description": "Given is an integer sequence A_1, ..., A_N of length N.\n\nWe will choose exactly \\left\\lfloor \\frac{N}{2} \\right\\rfloor elements from this sequence so that no two adjacent elements are chosen.\n\nFind the maximum possible sum of the chosen elements.\n\nHere \\lfloor x \\rfloor denotes the greatest integer not greater than x.\n\nConstraints\n\n* 2 \\leq N \\leq 2\\times 10^5\n* |A_i|\\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 ... A_N\n\n\nOutput\n\nPrint the maximum possible sum of the chosen elements.\n\nExamples\n\nInput\n\n6\n1 2 3 4 5 6\n\n\nOutput\n\n12\n\n\nInput\n\n5\n-1000 -100 -10 0 10\n\n\nOutput\n\n0\n\n\nInput\n\n10\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n\n\nOutput\n\n5000000000\n\n\nInput\n\n27\n18 -28 18 28 -45 90 -45 23 -53 60 28 -74 -71 35 -26 -62 49 -77 57 24 -70 -93 69 -99 59 57 -49\n\n\nOutput\n\n295", "grammar": {"answer": null}}
{"name": "p02255 Insertion Sort", "description": "Write a program of the Insertion Sort algorithm which sorts a sequence A in ascending order. The algorithm should be based on the following pseudocode:\n\n\nfor i = 1 to A.length-1\nkey = A[i]\n/* insert A[i] into the sorted sequence A[0,...,j-1] */\nj = i - 1\nwhile j >= 0 and A[j] > key\nA[j+1] = A[j]\nj--\nA[j+1] = key\n\n\nNote that, indices for array elements are based on 0-origin.\n\nTo illustrate the algorithms, your program should trace intermediate result for each step.\n\nHint\n\nTemplate in C\n\nConstraints\n\n1 ≤ N ≤ 100\n\nInput\n\nThe first line of the input includes an integer N, the number of elements in the sequence.\n\nIn the second line, N elements of the sequence are given separated by a single space.\n\nOutput\n\nThe output consists of N lines. Please output the intermediate sequence in a line for each step. Elements of the sequence should be separated by single space.\n\nExamples\n\nInput\n\n6\n5 2 4 6 1 3\n\n\nOutput\n\n5 2 4 6 1 3\n2 5 4 6 1 3\n2 4 5 6 1 3\n2 4 5 6 1 3\n1 2 4 5 6 3\n1 2 3 4 5 6\n\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n1 2 3\n1 2 3\n1 2 3", "grammar": {"answer": null}}
{"name": "p02978 AtCoder Grand Contest 035 - Add and Remove", "description": "There is a stack of N cards, each of which has a non-negative integer written on it. The integer written on the i-th card from the top is A_i.\n\nSnuke will repeat the following operation until two cards remain:\n\n* Choose three consecutive cards from the stack.\n* Eat the middle card of the three.\n* For each of the other two cards, replace the integer written on it by the sum of that integer and the integer written on the card eaten.\n* Return the two cards to the original position in the stack, without swapping them.\n\n\n\nFind the minimum possible sum of the integers written on the last two cards remaining.\n\nConstraints\n\n* 2 \\leq N \\leq 18\n* 0 \\leq A_i \\leq 10^9 (1\\leq i\\leq N)\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the minimum possible sum of the integers written on the last two cards remaining.\n\nExamples\n\nInput\n\n4\n3 1 4 2\n\n\nOutput\n\n16\n\n\nInput\n\n6\n5 2 4 1 6 9\n\n\nOutput\n\n51\n\n\nInput\n\n10\n3 1 4 1 5 9 2 6 5 3\n\n\nOutput\n\n115", "grammar": {"answer": null}}
{"name": "p03000 AtCoder Beginner Contest 130 - Bounding", "description": "A ball will bounce along a number line, making N + 1 bounces. It will make the first bounce at coordinate D_1 = 0, and the i-th bounce (2 \\leq i \\leq N+1) at coordinate D_i = D_{i-1} + L_{i-1}.\n\nHow many times will the ball make a bounce where the coordinate is at most X?\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* 1 \\leq L_i \\leq 100\n* 1 \\leq X \\leq 10000\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN X\nL_1 L_2 ... L_{N-1} L_N\n\n\nOutput\n\nPrint the number of times the ball will make a bounce where the coordinate is at most X.\n\nExamples\n\nInput\n\n3 6\n3 4 5\n\n\nOutput\n\n2\n\n\nInput\n\n4 9\n3 3 3 3\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p02783 AtCoder Beginner Contest 153 - Serval vs Monster", "description": "Serval is fighting with a monster.\n\nThe health of the monster is H.\n\nIn one attack, Serval can decrease the monster's health by A. There is no other way to decrease the monster's health.\n\nServal wins when the monster's health becomes 0 or below.\n\nFind the number of attacks Serval needs to make before winning.\n\nConstraints\n\n* 1 \\leq H \\leq 10^4\n* 1 \\leq A \\leq 10^4\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH A\n\n\nOutput\n\nPrint the number of attacks Serval needs to make before winning.\n\nExamples\n\nInput\n\n10 4\n\n\nOutput\n\n3\n\n\nInput\n\n1 10000\n\n\nOutput\n\n1\n\n\nInput\n\n10000 1\n\n\nOutput\n\n10000", "grammar": {"answer": null}}
{"name": "302_A. Eugeny and Array", "description": "Eugeny has array a = a1, a2, ..., an, consisting of n integers. Each integer ai equals to -1, or to 1. Also, he has m queries:\n\n  * Query number i is given as a pair of integers li, ri (1 ≤ li ≤ ri ≤ n). \n  * The response to the query will be integer 1, if the elements of array a can be rearranged so as the sum ali + ali + 1 + ... + ari = 0, otherwise the response to the query will be integer 0. \n\n\n\nHelp Eugeny, answer all his queries.\n\nInput\n\nThe first line contains integers n and m (1 ≤ n, m ≤ 2·105). The second line contains n integers a1, a2, ..., an (ai = -1, 1). Next m lines contain Eugene's queries. The i-th line contains integers li, ri (1 ≤ li ≤ ri ≤ n).\n\nOutput\n\nPrint m integers — the responses to Eugene's queries in the order they occur in the input.\n\nExamples\n\nInput\n\n2 3\n1 -1\n1 1\n1 2\n2 2\n\n\nOutput\n\n0\n1\n0\n\n\nInput\n\n5 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n\n\nOutput\n\n0\n1\n0\n1\n0", "grammar": {"answer": null}}
{"name": "p01048 Divisor", "description": "Problem\n\nGiven a natural number N less than or equal to 12, find the smallest natural number such that the number of divisors is exactly N.\n\nConstraints\n\n* 1 ≤ N ≤ 12\n\nInput\n\nOne natural number N is given in one line.\n\nOutput\n\nOutput the smallest natural number on a line so that the number of divisors is exactly N.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n1\n\n\nInput\n\n2\n\n\nOutput\n\n2\n\n\nInput\n\n3\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p00953 Animal Companion in Maze", "description": "Example\n\nInput\n\n2 1\n1 2 2\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p03227 Tenka1 Programmer Beginner Contest - Measure", "description": "You are given a string S of length 2 or 3 consisting of lowercase English letters. If the length of the string is 2, print it as is; if the length is 3, print the string after reversing it.\n\nConstraints\n\n* The length of S is 2 or 3.\n* S consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nIf the length of S is 2, print S as is; if the length is 3, print S after reversing it.\n\nExamples\n\nInput\n\nabc\n\n\nOutput\n\ncba\n\n\nInput\n\nac\n\n\nOutput\n\nac", "grammar": {"answer": null}}
{"name": "p00515 Average Score", "description": "problem\n\nFive students, Taro, Jiro, Saburo, Shiro, and Hanako, participated in the JOI High School class.\n\nIn this class, a final exam was conducted. All five people took the final exam. For students with a final exam score of 40 or higher, the final exam score was used as is. All students with a final exam score of less than 40 received supplementary lessons and scored 40 points.\n\nCreate a program that calculates the average score of the five students' grades given the final exam scores of the five students.\n\n\n\n\n\nExample\n\nInput\n\n10\n65\n100\n30\n95\n\n\nOutput\n\n68", "grammar": {"answer": null}}
{"name": "651_B. Beautiful Paintings", "description": "There are n pictures delivered for the new exhibition. The i-th painting has beauty ai. We know that a visitor becomes happy every time he passes from a painting to a more beautiful one.\n\nWe are allowed to arranged pictures in any order. What is the maximum possible number of times the visitor may become happy while passing all pictures from first to last? In other words, we are allowed to rearrange elements of a in any order. What is the maximum possible number of indices i (1 ≤ i ≤ n - 1), such that ai + 1 > ai.\n\nInput\n\nThe first line of the input contains integer n (1 ≤ n ≤ 1000) — the number of painting.\n\nThe second line contains the sequence a1, a2, ..., an (1 ≤ ai ≤ 1000), where ai means the beauty of the i-th painting.\n\nOutput\n\nPrint one integer — the maximum possible number of neighbouring pairs, such that ai + 1 > ai, after the optimal rearrangement.\n\nExamples\n\nInput\n\n5\n20 30 10 50 40\n\n\nOutput\n\n4\n\n\nInput\n\n4\n200 100 100 200\n\n\nOutput\n\n2\n\nNote\n\nIn the first sample, the optimal order is: 10, 20, 30, 40, 50.\n\nIn the second sample, the optimal order is: 100, 200, 100, 200.", "grammar": {"answer": null}}
{"name": "375_A. Divisible by Seven", "description": "You have number a, whose decimal representation quite luckily contains digits 1, 6, 8, 9. Rearrange the digits in its decimal representation so that the resulting number will be divisible by 7.\n\nNumber a doesn't contain any leading zeroes and contains digits 1, 6, 8, 9 (it also can contain another digits). The resulting number also mustn't contain any leading zeroes.\n\nInput\n\nThe first line contains positive integer a in the decimal record. It is guaranteed that the record of number a contains digits: 1, 6, 8, 9. Number a doesn't contain any leading zeroes. The decimal representation of number a contains at least 4 and at most 106 characters.\n\nOutput\n\nPrint a number in the decimal notation without leading zeroes — the result of the permutation.\n\nIf it is impossible to rearrange the digits of the number a in the required manner, print 0.\n\nExamples\n\nInput\n\n1689\n\n\nOutput\n\n1869\n\n\nInput\n\n18906\n\n\nOutput\n\n18690", "grammar": {"answer": null}}
{"name": "p02402 Min", "description": "Write a program which reads a sequence of $n$ integers $a_i (i = 1, 2, ... n)$, and prints the minimum value, maximum value and sum of the sequence.\n\nConstraints\n\n* $0 < n \\leq 10000$\n* $-1000000 \\leq a_i \\leq 1000000$\n\nInput\n\nIn the first line, an integer $n$ is given. In the next line, $n$ integers $a_i$ are given in a line.\n\nOutput\n\nPrint the minimum value, maximum value and sum in a line. Put a single space between the values.\n\nExample\n\nInput\n\n5\n10 1 5 4 17\n\n\nOutput\n\n1 17 37", "grammar": {"answer": null}}
{"name": "p03454 AtCoder Regular Contest 090 - Number of Digits", "description": "For a positive integer n, let us define f(n) as the number of digits in base 10.\n\nYou are given an integer S. Count the number of the pairs of positive integers (l, r) (l \\leq r) such that f(l) + f(l + 1) + ... + f(r) = S, and find the count modulo 10^9 + 7.\n\nConstraints\n\n* 1 \\leq S \\leq 10^8\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n9\n\n\nInput\n\n2\n\n\nOutput\n\n98\n\n\nInput\n\n123\n\n\nOutput\n\n460191684\n\n\nInput\n\n36018\n\n\nOutput\n\n966522825\n\n\nInput\n\n1000\n\n\nOutput\n\n184984484", "grammar": {"answer": null}}
{"name": "633_A. Ebony and Ivory", "description": "Dante is engaged in a fight with \"The Savior\". Before he can fight it with his sword, he needs to break its shields. He has two guns, Ebony and Ivory, each of them is able to perform any non-negative number of shots.\n\nFor every bullet that hits the shield, Ebony deals a units of damage while Ivory deals b units of damage. In order to break the shield Dante has to deal exactly c units of damage. Find out if this is possible.\n\nInput\n\nThe first line of the input contains three integers a, b, c (1 ≤ a, b ≤ 100, 1 ≤ c ≤ 10 000) — the number of units of damage dealt by Ebony gun and Ivory gun, and the total number of damage required to break the shield, respectively.\n\nOutput\n\nPrint \"Yes\" (without quotes) if Dante can deal exactly c damage to the shield and \"No\" (without quotes) otherwise.\n\nExamples\n\nInput\n\n4 6 15\n\n\nOutput\n\nNo\n\n\nInput\n\n3 2 7\n\n\nOutput\n\nYes\n\n\nInput\n\n6 11 6\n\n\nOutput\n\nYes\n\nNote\n\nIn the second sample, Dante can fire 1 bullet from Ebony and 2 from Ivory to deal exactly 1·3 + 2·2 = 7 damage. In the third sample, Dante can fire 1 bullet from ebony and no bullets from ivory to do 1·6 + 0·11 = 6 damage. ", "grammar": {"answer": null}}
{"name": "676_C. Vasya and String", "description": "High school student Vasya got a string of length n as a birthday present. This string consists of letters 'a' and 'b' only. Vasya denotes beauty of the string as the maximum length of a substring (consecutive subsequence) consisting of equal letters.\n\nVasya can change no more than k characters of the original string. What is the maximum beauty of the string he can achieve?\n\nInput\n\nThe first line of the input contains two integers n and k (1 ≤ n ≤ 100 000, 0 ≤ k ≤ n) — the length of the string and the maximum number of characters to change.\n\nThe second line contains the string, consisting of letters 'a' and 'b' only.\n\nOutput\n\nPrint the only integer — the maximum beauty of the string Vasya can achieve by changing no more than k characters.\n\nExamples\n\nInput\n\n4 2\nabba\n\n\nOutput\n\n4\n\n\nInput\n\n8 1\naabaabaa\n\n\nOutput\n\n5\n\nNote\n\nIn the first sample, Vasya can obtain both strings \"aaaa\" and \"bbbb\".\n\nIn the second sample, the optimal answer is obtained with the string \"aaaaabaa\" or with the string \"aabaaaaa\".", "grammar": {"answer": null}}
{"name": "26_A. Almost Prime", "description": "A number is called almost prime if it has exactly two distinct prime divisors. For example, numbers 6, 18, 24 are almost prime, while 4, 8, 9, 42 are not. Find the amount of almost prime numbers which are between 1 and n, inclusive.\n\nInput\n\nInput contains one integer number n (1 ≤ n ≤ 3000).\n\nOutput\n\nOutput the amount of almost prime numbers between 1 and n, inclusive.\n\nExamples\n\nInput\n\n10\n\n\nOutput\n\n2\n\n\nInput\n\n21\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "p03972 CODE FESTIVAL 2016 qual B - Gr-idian MST", "description": "On an xy plane, in an area satisfying 0 ≤ x ≤ W, 0 ≤ y ≤ H, there is one house at each and every point where both x and y are integers.\n\nThere are unpaved roads between every pair of points for which either the x coordinates are equal and the difference between the y coordinates is 1, or the y coordinates are equal and the difference between the x coordinates is 1.\n\nThe cost of paving a road between houses on coordinates (i,j) and (i+1,j) is p_i for any value of j, while the cost of paving a road between houses on coordinates (i,j) and (i,j+1) is q_j for any value of i.\n\nMr. Takahashi wants to pave some of these roads and be able to travel between any two houses on paved roads only. Find the solution with the minimum total cost.\n\nConstraints\n\n* 1 ≦ W,H ≦ 10^5\n* 1 ≦ p_i ≦ 10^8(0 ≦ i ≦ W-1)\n* 1 ≦ q_j ≦ 10^8(0 ≦ j ≦ H-1)\n* p_i (0 ≦ i ≦ W−1) is an integer.\n* q_j (0 ≦ j ≦ H−1) is an integer.\n\nInput\n\nInputs are provided from Standard Input in the following form.\n\n\nW H\np_0\n:\np_{W-1}\nq_0\n:\nq_{H-1}\n\n\nOutput\n\nOutput an integer representing the minimum total cost.\n\nExamples\n\nInput\n\n2 2\n3\n5\n2\n7\n\n\nOutput\n\n29\n\n\nInput\n\n4 3\n2\n4\n8\n1\n2\n9\n3\n\n\nOutput\n\n60", "grammar": {"answer": null}}
{"name": "279_A. Point on Spiral", "description": "Valera the horse lives on a plane. The Cartesian coordinate system is defined on this plane. Also an infinite spiral is painted on the plane. The spiral consists of segments: [(0, 0), (1, 0)], [(1, 0), (1, 1)], [(1, 1), ( - 1, 1)], [( - 1, 1), ( - 1, - 1)], [( - 1, - 1), (2, - 1)], [(2, - 1), (2, 2)] and so on. Thus, this infinite spiral passes through each integer point of the plane.\n\nValera the horse lives on the plane at coordinates (0, 0). He wants to walk along the spiral to point (x, y). Valera the horse has four legs, so he finds turning very difficult. Count how many times he will have to turn if he goes along a spiral from point (0, 0) to point (x, y).\n\nInput\n\nThe first line contains two space-separated integers x and y (|x|, |y| ≤ 100).\n\nOutput\n\nPrint a single integer, showing how many times Valera has to turn.\n\nExamples\n\nInput\n\n0 0\n\n\nOutput\n\n0\n\n\nInput\n\n1 0\n\n\nOutput\n\n0\n\n\nInput\n\n0 1\n\n\nOutput\n\n2\n\n\nInput\n\n-1 -1\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p03665 AtCoder Grand Contest 017 - Biscuits", "description": "There are N bags of biscuits. The i-th bag contains A_i biscuits.\n\nTakaki will select some of these bags and eat all of the biscuits inside. Here, it is also possible to select all or none of the bags.\n\nHe would like to select bags so that the total number of biscuits inside is congruent to P modulo 2. How many such ways to select bags there are?\n\nConstraints\n\n* 1 \\leq N \\leq 50\n* P = 0 or 1\n* 1 \\leq A_i \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN P\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the number of ways to select bags so that the total number of biscuits inside is congruent to P modulo 2.\n\nExamples\n\nInput\n\n2 0\n1 3\n\n\nOutput\n\n2\n\n\nInput\n\n1 1\n50\n\n\nOutput\n\n0\n\n\nInput\n\n3 0\n1 1 1\n\n\nOutput\n\n4\n\n\nInput\n\n45 1\n17 55 85 55 74 20 90 67 40 70 39 89 91 50 16 24 14 43 24 66 25 9 89 71 41 16 53 13 61 15 85 72 62 67 42 26 36 66 4 87 59 91 4 25 26\n\n\nOutput\n\n17592186044416", "grammar": {"answer": null}}
{"name": "1512_G. Short Task", "description": "Let us denote by d(n) the sum of all divisors of the number n, i.e. d(n) = ∑_{k | n} k.\n\nFor example, d(1) = 1, d(4) = 1+2+4=7, d(6) = 1+2+3+6=12.\n\nFor a given number c, find the minimum n such that d(n) = c.\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 10^4). Then t test cases follow.\n\nEach test case is characterized by one integer c (1 ≤ c ≤ 10^7).\n\nOutput\n\nFor each test case, output: \n\n  * \"-1\" if there is no such n that d(n) = c; \n  * n, otherwise. \n\nExample\n\nInput\n\n\n12\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n39\n691\n\n\nOutput\n\n\n1\n-1\n2\n3\n-1\n5\n4\n7\n-1\n-1\n18\n-1", "grammar": {"answer": null}}
{"name": "1140_E. Palindrome-less Arrays", "description": "Let's denote that some array b is bad if it contains a subarray b_l, b_{l+1}, ..., b_{r} of odd length more than 1 (l < r and r - l + 1 is odd) such that ∀ i ∈ \\{0, 1, ..., r - l\\} b_{l + i} = b_{r - i}.\n\nIf an array is not bad, it is good.\n\nNow you are given an array a_1, a_2, ..., a_n. Some elements are replaced by -1. Calculate the number of good arrays you can obtain by replacing each -1 with some integer from 1 to k.\n\nSince the answer can be large, print it modulo 998244353.\n\nInput\n\nThe first line contains two integers n and k (2 ≤ n, k ≤ 2 ⋅ 10^5) — the length of array a and the size of \"alphabet\", i. e., the upper bound on the numbers you may use to replace -1.\n\nThe second line contains n integers a_1, a_2, ..., a_n (a_i = -1 or 1 ≤ a_i ≤ k) — the array a.\n\nOutput\n\nPrint one integer — the number of good arrays you can get, modulo 998244353.\n\nExamples\n\nInput\n\n\n2 3\n-1 -1\n\n\nOutput\n\n\n9\n\n\nInput\n\n\n5 2\n1 -1 -1 1 2\n\n\nOutput\n\n\n0\n\n\nInput\n\n\n5 3\n1 -1 -1 1 2\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n4 200000\n-1 -1 12345 -1\n\n\nOutput\n\n\n735945883", "grammar": {"answer": null}}
{"name": "p03713 AtCoder Beginner Contest 062 - Chocolate Bar", "description": "There is a bar of chocolate with a height of H blocks and a width of W blocks. Snuke is dividing this bar into exactly three pieces. He can only cut the bar along borders of blocks, and the shape of each piece must be a rectangle.\n\nSnuke is trying to divide the bar as evenly as possible. More specifically, he is trying to minimize S_{max} - S_{min}, where S_{max} is the area (the number of blocks contained) of the largest piece, and S_{min} is the area of the smallest piece. Find the minimum possible value of S_{max} - S_{min}.\n\nConstraints\n\n* 2 ≤ H, W ≤ 10^5\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH W\n\n\nOutput\n\nPrint the minimum possible value of S_{max} - S_{min}.\n\nExamples\n\nInput\n\n3 5\n\n\nOutput\n\n0\n\n\nInput\n\n4 5\n\n\nOutput\n\n2\n\n\nInput\n\n5 5\n\n\nOutput\n\n4\n\n\nInput\n\n100000 2\n\n\nOutput\n\n1\n\n\nInput\n\n100000 100000\n\n\nOutput\n\n50000", "grammar": {"answer": null}}
{"name": "665_E. Beautiful Subarrays", "description": "One day, ZS the Coder wrote down an array of integers a with elements a1, a2, ..., an.\n\nA subarray of the array a is a sequence al, al + 1, ..., ar for some integers (l, r) such that 1 ≤ l ≤ r ≤ n. ZS the Coder thinks that a subarray of a is beautiful if the bitwise xor of all the elements in the subarray is at least k.\n\nHelp ZS the Coder find the number of beautiful subarrays of a!\n\nInput\n\nThe first line contains two integers n and k (1 ≤ n ≤ 106, 1 ≤ k ≤ 109) — the number of elements in the array a and the value of the parameter k.\n\nThe second line contains n integers ai (0 ≤ ai ≤ 109) — the elements of the array a.\n\nOutput\n\nPrint the only integer c — the number of beautiful subarrays of the array a.\n\nExamples\n\nInput\n\n3 1\n1 2 3\n\n\nOutput\n\n5\n\n\nInput\n\n3 2\n1 2 3\n\n\nOutput\n\n3\n\n\nInput\n\n3 3\n1 2 3\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "952_B. A Map of the Cat", "description": "If you have ever interacted with a cat, you have probably noticed that they are quite particular about how to pet them. Here is an approximate map of a normal cat.\n\n<image>\n\nHowever, some cats won't tolerate this nonsense from the humans. Here is a map of a grumpy cat.\n\n<image>\n\nYou have met a cat. Can you figure out whether it's normal or grumpy?\n\nInteraction\n\nThis is an interactive problem. Initially you're not given any information about the cat. Instead, the cat is divided into ten areas, indexed from 0 to 9. \n\nIn one query you can choose which area you'll pet and print the corresponding index to standard out. You will get the cat's response, as depicted on the corresponding map, via standard in. For simplicity all responses are written in lowercase.\n\nOnce you're certain what type of cat you're dealing with, output \"normal\" or \"grumpy\" to standard out.\n\nNote\n\nPlease make sure to use the stream flushing operation after each query in order not to leave part of your output in some buffer.", "grammar": {"answer": null}}
{"name": "p02788 AtCoder Beginner Contest 153 - Silver Fox vs Monster", "description": "Silver Fox is fighting with N monsters.\n\nThe monsters are standing in a row, and we can assume them to be standing on a number line. The i-th monster, standing at the coordinate X_i, has the health of H_i.\n\nSilver Fox can use bombs to attack the monsters. Using a bomb at the coordinate x decreases the healths of all monsters between the coordinates x-D and x+D (inclusive) by A. There is no way other than bombs to decrease the monster's health.\n\nSilver Fox wins when all the monsters' healths become 0 or below.\n\nFind the minimum number of bombs needed to win.\n\nConstraints\n\n* 1 \\leq N \\leq 2 \\times 10^5\n* 0 \\leq D \\leq 10^9\n* 1 \\leq A \\leq 10^9\n* 0 \\leq X_i \\leq 10^9\n* 1 \\leq H_i \\leq 10^9\n* X_i are distinct.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN D A\nX_1 H_1\n:\nX_N H_N\n\n\nOutput\n\nPrint the minimum number of bombs needed to win.\n\nExamples\n\nInput\n\n3 3 2\n1 2\n5 4\n9 2\n\n\nOutput\n\n2\n\n\nInput\n\n9 4 1\n1 5\n2 4\n3 3\n4 2\n5 1\n6 2\n7 3\n8 4\n9 5\n\n\nOutput\n\n5\n\n\nInput\n\n3 0 1\n300000000 1000000000\n100000000 1000000000\n200000000 1000000000\n\n\nOutput\n\n3000000000", "grammar": {"answer": null}}
{"name": "p03740 AtCoder Beginner Contest 059 - Alice&Brown", "description": "Alice and Brown loves games. Today, they will play the following game.\n\nIn this game, there are two piles initially consisting of X and Y stones, respectively. Alice and Bob alternately perform the following operation, starting from Alice:\n\n* Take 2i stones from one of the piles. Then, throw away i of them, and put the remaining i in the other pile. Here, the integer i (1≤i) can be freely chosen as long as there is a sufficient number of stones in the pile.\n\n\n\nThe player who becomes unable to perform the operation, loses the game.\n\nGiven X and Y, determine the winner of the game, assuming that both players play optimally.\n\nConstraints\n\n* 0 ≤ X, Y ≤ 10^{18}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX Y\n\n\nOutput\n\nPrint the winner: either `Alice` or `Brown`.\n\nExamples\n\nInput\n\n2 1\n\n\nOutput\n\nBrown\n\n\nInput\n\n5 0\n\n\nOutput\n\nAlice\n\n\nInput\n\n0 0\n\n\nOutput\n\nBrown\n\n\nInput\n\n4 8\n\n\nOutput\n\nAlice", "grammar": {"answer": null}}
{"name": "p03380 AtCoder Beginner Contest 094 - Binomial Coefficients", "description": "Let {\\rm comb}(n,r) be the number of ways to choose r objects from among n objects, disregarding order. From n non-negative integers a_1, a_2, ..., a_n, select two numbers a_i > a_j so that {\\rm comb}(a_i,a_j) is maximized. If there are multiple pairs that maximize the value, any of them is accepted.\n\nConstraints\n\n* 2 \\leq n \\leq 10^5\n* 0 \\leq a_i \\leq 10^9\n* a_1,a_2,...,a_n are pairwise distinct.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nn\na_1 a_2 ... a_n\n\n\nOutput\n\nPrint a_i and a_j that you selected, with a space in between.\n\nExamples\n\nInput\n\n5\n6 9 4 2 11\n\n\nOutput\n\n11 6\n\n\nInput\n\n2\n100 0\n\n\nOutput\n\n100 0", "grammar": {"answer": null}}
{"name": "841_A. Generous Kefa", "description": "One day Kefa found n baloons. For convenience, we denote color of i-th baloon as si — lowercase letter of the Latin alphabet. Also Kefa has k friends. Friend will be upset, If he get two baloons of the same color. Kefa want to give out all baloons to his friends. Help Kefa to find out, can he give out all his baloons, such that no one of his friens will be upset — print «YES», if he can, and «NO», otherwise. Note, that Kefa's friend will not upset, if he doesn't get baloons at all.\n\nInput\n\nThe first line contains two integers n and k (1 ≤ n, k ≤ 100) — the number of baloons and friends.\n\nNext line contains string s — colors of baloons.\n\nOutput\n\nAnswer to the task — «YES» or «NO» in a single line.\n\nYou can choose the case (lower or upper) for each letter arbitrary.\n\nExamples\n\nInput\n\n4 2\naabb\n\n\nOutput\n\nYES\n\n\nInput\n\n6 3\naacaab\n\n\nOutput\n\nNO\n\nNote\n\nIn the first sample Kefa can give 1-st and 3-rd baloon to the first friend, and 2-nd and 4-th to the second.\n\nIn the second sample Kefa needs to give to all his friends baloons of color a, but one baloon will stay, thats why answer is «NO».", "grammar": {"answer": null}}
{"name": "236_C. LCM Challenge", "description": "Some days ago, I learned the concept of LCM (least common multiple). I've played with it for several times and I want to make a big number with it.\n\nBut I also don't want to use many numbers, so I'll choose three positive integers (they don't have to be distinct) which are not greater than n. Can you help me to find the maximum possible least common multiple of these three integers?\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 106) — the n mentioned in the statement.\n\nOutput\n\nPrint a single integer — the maximum possible LCM of three not necessarily distinct positive integers that are not greater than n.\n\nExamples\n\nInput\n\n9\n\n\nOutput\n\n504\n\n\nInput\n\n7\n\n\nOutput\n\n210\n\nNote\n\nThe least common multiple of some positive integers is the least positive integer which is multiple for each of them.\n\nThe result may become very large, 32-bit integer won't be enough. So using 64-bit integers is recommended.\n\nFor the last example, we can chose numbers 7, 6, 5 and the LCM of them is 7·6·5 = 210. It is the maximum value we can get.", "grammar": {"answer": null}}
{"name": "p03569 CODE FESTIVAL 2017 qual C - Inserting 'x'", "description": "We have a string s consisting of lowercase English letters. Snuke can perform the following operation repeatedly:\n\n* Insert a letter `x` to any position in s of his choice, including the beginning and end of s.\n\n\n\nSnuke's objective is to turn s into a palindrome. Determine whether the objective is achievable. If it is achievable, find the minimum number of operations required.\n\nConstraints\n\n* 1 \\leq |s| \\leq 10^5\n* s consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\ns\n\n\nOutput\n\nIf the objective is achievable, print the number of operations required. If it is not, print `-1` instead.\n\nExamples\n\nInput\n\nxabxa\n\n\nOutput\n\n2\n\n\nInput\n\nab\n\n\nOutput\n\n-1\n\n\nInput\n\na\n\n\nOutput\n\n0\n\n\nInput\n\noxxx\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "1513_F. Swapping Problem", "description": "You are given 2 arrays a and b, both of size n. You can swap two elements in b at most once (or leave it as it is), and you are required to minimize the value $$$∑_{i}|a_{i}-b_{i}|.$$$\n\nFind the minimum possible value of this sum.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 2 ⋅ 10^5).\n\nThe second line contains n integers a_1, a_2, …, a_n (1 ≤ a_i ≤ {10^9}). \n\nThe third line contains n integers b_1, b_2, …, b_n (1 ≤ b_i ≤ {10^9}).\n\nOutput\n\nOutput the minimum value of ∑_{i}|a_{i}-b_{i}|.\n\nExamples\n\nInput\n\n\n5\n5 4 3 2 1\n1 2 3 4 5\n\n\nOutput\n\n\n4\n\nInput\n\n\n2\n1 3\n4 2\n\n\nOutput\n\n\n2\n\nNote\n\nIn the first example, we can swap the first and fifth element in array b, so that it becomes [ 5, 2, 3, 4, 1 ].\n\nTherefore, the minimum possible value of this sum would be |5-5| + |4-2| + |3-3| + |2-4| + |1-1| = 4.\n\nIn the second example, we can swap the first and second elements. So, our answer would be 2.", "grammar": {"answer": null}}
{"name": "1182_F. Maximum Sine", "description": "You have given integers a, b, p, and q. Let f(x) = abs(sin(p/q π x)).\n\nFind minimum possible integer x that maximizes f(x) where a ≤ x ≤ b.\n\nInput\n\nEach test contains multiple test cases. \n\nThe first line contains the number of test cases t (1 ≤ t ≤ 100) — the number of test cases.\n\nThe first line of each test case contains four integers a, b, p, and q (0 ≤ a ≤ b ≤ 10^{9}, 1 ≤ p, q ≤ 10^{9}).\n\nOutput\n\nPrint the minimum possible integer x for each test cases, separated by newline.\n\nExample\n\nInput\n\n\n2\n0 3 1 3\n17 86 389 995\n\n\nOutput\n\n\n1\n55\n\nNote\n\nIn the first test case, f(0) = 0, f(1) = f(2) ≈ 0.866, f(3) = 0.\n\nIn the second test case, f(55) ≈ 0.999969, which is the largest among all possible values.", "grammar": {"answer": null}}
{"name": "p02965 AtCoder Grand Contest 036 - GP 2", "description": "We have a sequence of N integers: x=(x_0,x_1,\\cdots,x_{N-1}). Initially, x_i=0 for each i (0 \\leq i \\leq N-1).\n\nSnuke will perform the following operation exactly M times:\n\n* Choose two distinct indices i, j (0 \\leq i,j \\leq N-1,\\ i \\neq j). Then, replace x_i with x_i+2 and x_j with x_j+1.\n\n\n\nFind the number of different sequences that can result after M operations. Since it can be enormous, compute the count modulo 998244353.\n\nConstraints\n\n* 2 \\leq N \\leq 10^6\n* 1 \\leq M \\leq 5 \\times 10^5\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\n\n\nOutput\n\nPrint the number of different sequences that can result after M operations, modulo 998244353.\n\nExamples\n\nInput\n\n2 2\n\n\nOutput\n\n3\n\n\nInput\n\n3 2\n\n\nOutput\n\n19\n\n\nInput\n\n10 10\n\n\nOutput\n\n211428932\n\n\nInput\n\n100000 50000\n\n\nOutput\n\n3463133", "grammar": {"answer": null}}
{"name": "1458_F. Range Diameter Sum", "description": "You are given a tree with n vertices numbered 1, …, n. A tree is a connected simple graph without cycles.\n\nLet dist(u, v) be the number of edges in the unique simple path connecting vertices u and v.\n\nLet diam(l, r) = max dist(u, v) over all pairs u, v such that l ≤ u, v ≤ r.\n\nCompute ∑_{1 ≤ l ≤ r ≤ n} diam(l, r).\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 10^5) — the number of vertices in the tree.\n\nThe next n - 1 lines describe the tree edges. Each of these lines contains two integers u, v (1 ≤ u, v ≤ n) — endpoint indices of the respective tree edge. It is guaranteed that the edge list indeed describes a tree.\n\nOutput\n\nPrint a single integer — ∑_{1 ≤ l ≤ r ≤ n} diam(l, r).\n\nExamples\n\nInput\n\n\n4\n1 2\n2 4\n3 2\n\n\nOutput\n\n\n10\n\n\nInput\n\n\n10\n1 8\n2 9\n5 6\n4 8\n4 2\n7 9\n3 6\n10 4\n3 9\n\n\nOutput\n\n\n224", "grammar": {"answer": null}}
{"name": "p00032 Plastic Board", "description": "There is a factory that inputs the data of the side and diagonal lengths to the machine and cuts out the plastic plate. At this factory, we cut out only parallelogram molds, although they vary in size. You have been ordered by your boss to count the number of rectangles and rhombuses produced among the parallelograms that are cut out.\n\nCreate a program that reads \"Data to be input to the machine\" and outputs the number of rectangles and diamonds manufactured.\n\n<image>\n\n\n\nInput\n\nThe input is given in the following format:\n\n\na1, b1, c1\na2, b2, c2\n::\n\n\nThe data to be entered into the machine is given in multiple lines. On line i, the integers ai, bi, which represent the lengths of two adjacent sides of the i-th parallelogram, and the integer ci, which represents the length of the diagonal, are given, separated by commas (1 ≤ ai, bi, ci ≤ 1000). , ai + bi> ci). The number of data does not exceed 100.\n\nOutput\n\nThe first line outputs the number of rectangles manufactured, and the second line outputs the number of diamonds manufactured.\n\nExample\n\nInput\n\n3,4,5\n5,5,8\n4,4,4\n5,4,3\n\n\nOutput\n\n1\n2", "grammar": {"answer": null}}
{"name": "p02770 AtCoder Beginner Contest 156 - Modularness", "description": "We have a sequence of k numbers: d_0,d_1,...,d_{k - 1}.\n\nProcess the following q queries in order:\n\n* The i-th query contains three integers n_i, x_i, and m_i. Let a_0,a_1,...,a_{n_i - 1} be the following sequence of n_i numbers: \\begin{eqnarray} a_j = \\begin{cases} x_i & ( j = 0 ) \\\\\\ a_{j - 1} + d_{(j - 1)~\\textrm{mod}~k} & ( 0 < j \\leq n_i - 1 ) \\end{cases}\\end{eqnarray} Print the number of j~(0 \\leq j < n_i - 1) such that (a_j~\\textrm{mod}~m_i) < (a_{j + 1}~\\textrm{mod}~m_i).\n\n\n\nHere (y~\\textrm{mod}~z) denotes the remainder of y divided by z, for two integers y and z~(z > 0).\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq k, q \\leq 5000\n* 0 \\leq d_i \\leq 10^9\n* 2 \\leq n_i \\leq 10^9\n* 0 \\leq x_i \\leq 10^9\n* 2 \\leq m_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nk q\nd_0 d_1 ... d_{k - 1}\nn_1 x_1 m_1\nn_2 x_2 m_2\n:\nn_q x_q m_q\n\n\nOutput\n\nPrint q lines.\n\nThe i-th line should contain the response to the i-th query.\n\nExamples\n\nInput\n\n3 1\n3 1 4\n5 3 2\n\n\nOutput\n\n1\n\n\nInput\n\n7 3\n27 18 28 18 28 46 1000000000\n1000000000 1 7\n1000000000 2 10\n1000000000 3 12\n\n\nOutput\n\n224489796\n214285714\n559523809", "grammar": {"answer": null}}
{"name": "334_B. Eight Point Sets", "description": "Gerald is very particular to eight point sets. He thinks that any decent eight point set must consist of all pairwise intersections of three distinct integer vertical straight lines and three distinct integer horizontal straight lines, except for the average of these nine points. In other words, there must be three integers x1, x2, x3 and three more integers y1, y2, y3, such that x1 < x2 < x3, y1 < y2 < y3 and the eight point set consists of all points (xi, yj) (1 ≤ i, j ≤ 3), except for point (x2, y2).\n\nYou have a set of eight points. Find out if Gerald can use this set?\n\nInput\n\nThe input consists of eight lines, the i-th line contains two space-separated integers xi and yi (0 ≤ xi, yi ≤ 106). You do not have any other conditions for these points.\n\nOutput\n\nIn a single line print word \"respectable\", if the given set of points corresponds to Gerald's decency rules, and \"ugly\" otherwise.\n\nExamples\n\nInput\n\n0 0\n0 1\n0 2\n1 0\n1 2\n2 0\n2 1\n2 2\n\n\nOutput\n\nrespectable\n\n\nInput\n\n0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0\n\n\nOutput\n\nugly\n\n\nInput\n\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2\n\n\nOutput\n\nugly", "grammar": {"answer": null}}
{"name": "20_A. BerOS file system", "description": "The new operating system BerOS has a nice feature. It is possible to use any number of characters '/' as a delimiter in path instead of one traditional '/'. For example, strings //usr///local//nginx/sbin// and /usr/local/nginx///sbin are equivalent. The character '/' (or some sequence of such characters) at the end of the path is required only in case of the path to the root directory, which can be represented as single character '/'.\n\nA path called normalized if it contains the smallest possible number of characters '/'.\n\nYour task is to transform a given path to the normalized form.\n\nInput\n\nThe first line of the input contains only lowercase Latin letters and character '/' — the path to some directory. All paths start with at least one character '/'. The length of the given line is no more than 100 characters, it is not empty.\n\nOutput\n\nThe path in normalized form.\n\nExamples\n\nInput\n\n//usr///local//nginx/sbin\n\n\nOutput\n\n/usr/local/nginx/sbin", "grammar": {"answer": null}}
{"name": "p01012 Planarian Regeneration", "description": "Notes\n\nFor this problem, it is recommended to use floating point numbers, which are more accurate than double.\n\n\n\nInput\n\n\nm n x\nk l y\n\n\nFor input, six integers m, n, x, k, l, y are given in the above input format.\nThese six integers correspond to those in the problem statement, repeating the horizontal m: n cut x times and the vertical k: l cut y times.\n1 ≤ m, n, k, l ≤ 100, 0 ≤ x, y ≤ 40, and m, n and l, k are relatively prime.\n\nOutput\n\nPrint out the expected number of planarians that are regenerating to their original form after a few weeks in a row.\nThe output is acceptable with an error of 10-6 or less.\n\nExamples\n\nInput\n\n1 1 1\n1 1 1\n\n\nOutput\n\n0.562500\n\n\nInput\n\n1 2 2\n1 1 1\n\n\nOutput\n\n0.490741\n\n\nInput\n\n1 2 0\n3 4 0\n\n\nOutput\n\n1.000000", "grammar": {"answer": null}}
{"name": "p02832 AtCoder Beginner Contest 148 - Brick Break", "description": "We have N bricks arranged in a row from left to right.\n\nThe i-th brick from the left (1 \\leq i \\leq N) has an integer a_i written on it.\n\nAmong them, you can break at most N-1 bricks of your choice.\n\nLet us say there are K bricks remaining. Snuke will be satisfied if, for each integer i (1 \\leq i \\leq K), the i-th of those brick from the left has the integer i written on it.\n\nFind the minimum number of bricks you need to break to satisfy Snuke's desire. If his desire is unsatisfiable, print `-1` instead.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 200000\n* 1 \\leq a_i \\leq N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the minimum number of bricks that need to be broken to satisfy Snuke's desire, or print `-1` if his desire is unsatisfiable.\n\nExamples\n\nInput\n\n3\n2 1 2\n\n\nOutput\n\n1\n\n\nInput\n\n3\n2 2 2\n\n\nOutput\n\n-1\n\n\nInput\n\n10\n3 1 4 1 5 9 2 6 5 3\n\n\nOutput\n\n7\n\n\nInput\n\n1\n1\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02787 AtCoder Beginner Contest 153 - Crested Ibis vs Monster", "description": "Ibis is fighting with a monster.\n\nThe health of the monster is H.\n\nIbis can cast N kinds of spells. Casting the i-th spell decreases the monster's health by A_i, at the cost of B_i Magic Points.\n\nThe same spell can be cast multiple times. There is no way other than spells to decrease the monster's health.\n\nIbis wins when the health of the monster becomes 0 or below.\n\nFind the minimum total Magic Points that have to be consumed before winning.\n\nConstraints\n\n* 1 \\leq H \\leq 10^4\n* 1 \\leq N \\leq 10^3\n* 1 \\leq A_i \\leq 10^4\n* 1 \\leq B_i \\leq 10^4\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH N\nA_1 B_1\n:\nA_N B_N\n\n\nOutput\n\nPrint the minimum total Magic Points that have to be consumed before winning.\n\nExamples\n\nInput\n\n9 3\n8 3\n4 2\n2 1\n\n\nOutput\n\n4\n\n\nInput\n\n100 6\n1 1\n2 3\n3 9\n4 27\n5 81\n6 243\n\n\nOutput\n\n100\n\n\nInput\n\n9999 10\n540 7550\n691 9680\n700 9790\n510 7150\n415 5818\n551 7712\n587 8227\n619 8671\n588 8228\n176 2461\n\n\nOutput\n\n139815", "grammar": {"answer": null}}
{"name": "p00079 Area of Polygon", "description": "Write a program that reads the coordinates of the vertices of a convex n-sided polygon (a polygon whose internal angles are less than 180 degrees, that is, a polygon that is not dented) and outputs its area. The vertices are named Vertex 1, Vertex 2, Vertex 3, ... Vertex n according to the order of edge connections.\n\nHowever, n is 3 or more and 20 or less. You can also use the following formula to find the area S from the lengths a, b, and c of the three sides of the triangle.\n\n<image>\n\n\n\ninput\n\nThe input is given in the following format:\n\n\nx1, y1\nx2, y2\n::\nxn, yn\n\n\nxi and yi are real numbers that represent the x and y coordinates of vertex i, respectively.\n\noutput\n\nOutputs the area S (real number) on one line. The output can contain an error of 0.000001 or less.\n\nExample\n\nInput\n\n0.0,0.0\n0.0,1.0\n1.0,1.0\n2.0,0.0\n1.0,-1.0\n\n\nOutput\n\n2.500000", "grammar": {"answer": null}}
{"name": "277_B. Set of Points", "description": "Convexity of a set of points on the plane is the size of the largest subset of points that form a convex polygon. Your task is to build a set of n points with the convexity of exactly m. Your set of points should not contain three points that lie on a straight line.\n\nInput\n\nThe single line contains two integers n and m (3 ≤ m ≤ 100, m ≤ n ≤ 2m).\n\nOutput\n\nIf there is no solution, print \"-1\". Otherwise, print n pairs of integers — the coordinates of points of any set with the convexity of m. The coordinates shouldn't exceed 108 in their absolute value.\n\nExamples\n\nInput\n\n4 3\n\n\nOutput\n\n0 0\n3 0\n0 3\n1 1\n\n\nInput\n\n6 3\n\n\nOutput\n\n-1\n\n\nInput\n\n6 6\n\n\nOutput\n\n10 0\n-10 0\n10 1\n9 1\n9 -1\n0 -2\n\n\nInput\n\n7 4\n\n\nOutput\n\n176166 6377\n709276 539564\n654734 174109\n910147 434207\n790497 366519\n606663 21061\n859328 886001", "grammar": {"answer": null}}
{"name": "672_A. Summer Camp", "description": "Every year, hundreds of people come to summer camps, they learn new algorithms and solve hard problems.\n\nThis is your first year at summer camp, and you are asked to solve the following problem. All integers starting with 1 are written in one line. The prefix of these line is \"123456789101112131415...\". Your task is to print the n-th digit of this string (digits are numbered starting with 1.\n\nInput\n\nThe only line of the input contains a single integer n (1 ≤ n ≤ 1000) — the position of the digit you need to print.\n\nOutput\n\nPrint the n-th digit of the line.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n3\n\n\nInput\n\n11\n\n\nOutput\n\n0\n\nNote\n\nIn the first sample the digit at position 3 is '3', as both integers 1 and 2 consist on one digit.\n\nIn the second sample, the digit at position 11 is '0', it belongs to the integer 10.", "grammar": {"answer": null}}
{"name": "171_F. ucyhf", "description": "qd ucyhf yi q fhycu dkcruh mxeiu huluhiu yi q tyvvuhudj fhycu dkcruh. oekh jqia yi je vydt jxu djx ucyhf.\n\nInput\n\njxu ydfkj sediyiji ev q iydwbu ydjuwuh d (1 ≤ d ≤ 11184) — jxu edu-rqiut ydtun ev jxu ucyhf je vydt.\n\nOutput\n\nekjfkj q iydwbu dkcruh.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n13", "grammar": {"answer": null}}
{"name": "p02386 Dice IV", "description": "Write a program which reads $n$ dices constructed in the same way as Dice I, and determines whether they are all different. For the determination, use the same way as Dice III.\n\nConstraints\n\n* $2 \\leq n \\leq 100$\n* $0 \\leq $ the integer assigned to a face $ \\leq 100$\n\nInput\n\nIn the first line, the number of dices $n$ is given. In the following $n$ lines, six integers assigned to the dice faces are given respectively in the same way as Dice III.\n\nOutput\n\nPrint \"Yes\" if given dices are all different, otherwise \"No\" in a line.\n\nExamples\n\nInput\n\n3\n1 2 3 4 5 6\n6 2 4 3 5 1\n6 5 4 3 2 1\n\n\nOutput\n\nNo\n\n\nInput\n\n3\n1 2 3 4 5 6\n6 5 4 3 2 1\n5 4 3 2 1 6\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "281_A. Word Capitalization", "description": "Capitalization is writing a word with its first letter as a capital letter. Your task is to capitalize the given word.\n\nNote, that during capitalization all the letters except the first one remains unchanged.\n\nInput\n\nA single line contains a non-empty word. This word consists of lowercase and uppercase English letters. The length of the word will not exceed 103.\n\nOutput\n\nOutput the given word after capitalization.\n\nExamples\n\nInput\n\nApPLe\n\n\nOutput\n\nApPLe\n\n\nInput\n\nkonjac\n\n\nOutput\n\nKonjac", "grammar": {"answer": null}}
{"name": "p02197 Twins", "description": "Twins\n\nsquare1001 and E869120 are twins.\n\nPlease output the one that was born first.\n\ninput\n\nNo input is given.\n\noutput\n\nOutput the correct character string on one line.\n\nHowever, insert a line break at the end.\n\nOutput example 1\n\n\nsquare1001\n\n\n\n\n\n\nExample\n\nInput\n\n\n\n\nOutput", "grammar": {"answer": null}}
{"name": "p03363 AtCoder Grand Contest 023 - Zero-Sum Ranges", "description": "We have an integer sequence A, whose length is N.\n\nFind the number of the non-empty contiguous subsequences of A whose sums are 0. Note that we are counting the ways to take out subsequences. That is, even if the contents of some two subsequences are the same, they are counted individually if they are taken from different positions.\n\nConstraints\n\n* 1 \\leq N \\leq 2 \\times 10^5\n* -10^9 \\leq A_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nFind the number of the non-empty contiguous subsequences of A whose sum is 0.\n\nExamples\n\nInput\n\n6\n1 3 -4 2 2 -2\n\n\nOutput\n\n3\n\n\nInput\n\n7\n1 -1 1 -1 1 -1 1\n\n\nOutput\n\n12\n\n\nInput\n\n5\n1 -2 3 -4 5\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "622_E. Ants in Leaves", "description": "Tree is a connected graph without cycles. A leaf of a tree is any vertex connected with exactly one other vertex.\n\nYou are given a tree with n vertices and a root in the vertex 1. There is an ant in each leaf of the tree. In one second some ants can simultaneously go to the parent vertex from the vertex they were in. No two ants can be in the same vertex simultaneously except for the root of the tree.\n\nFind the minimal time required for all ants to be in the root of the tree. Note that at start the ants are only in the leaves of the tree.\n\nInput\n\nThe first line contains integer n (2 ≤ n ≤ 5·105) — the number of vertices in the tree.\n\nEach of the next n - 1 lines contains two integers xi, yi (1 ≤ xi, yi ≤ n) — the ends of the i-th edge. It is guaranteed that you are given the correct undirected tree.\n\nOutput\n\nPrint the only integer t — the minimal time required for all ants to be in the root of the tree.\n\nExamples\n\nInput\n\n12\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n3 8\n3 9\n8 10\n8 11\n8 12\n\n\nOutput\n\n6\n\n\nInput\n\n2\n2 1\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p03849 AtCoder Regular Contest 066 - Xor Sum", "description": "You are given a positive integer N. Find the number of the pairs of integers u and v (0≦u,v≦N) such that there exist two non-negative integers a and b satisfying a xor b=u and a+b=v. Here, xor denotes the bitwise exclusive OR. Since it can be extremely large, compute the answer modulo 10^9+7.\n\nConstraints\n\n* 1≦N≦10^{18}\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the number of the possible pairs of integers u and v, modulo 10^9+7.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n5\n\n\nInput\n\n1422\n\n\nOutput\n\n52277\n\n\nInput\n\n1000000000000000000\n\n\nOutput\n\n787014179", "grammar": {"answer": null}}
{"name": "p00586 A + B Problem", "description": "Compute A + B.\n\nConstraints\n\n* -1000 ≤ A, B ≤ 1000\n\nInput\n\nThe input will consist of a series of pairs of integers A and B separated by a space, one pair of integers per line. The input will be terminated by EOF.\n\nOutput\n\nFor each pair of input integers A and B, you must output the sum of A and B in one line.\n\nExample\n\nInput\n\n1 2\n10 5\n100 20\n\n\nOutput\n\n3\n15\n120", "grammar": {"answer": null}}
{"name": "p00992 War", "description": "Two countries, Country A and Country B, are at war. As a soldier in Country A, you will lead n soldiers to occupy the territory of Country B.\n\nThe territory of Country B is represented by a two-dimensional grid. The first place you occupy is a square on the 2D grid. Each of the soldiers you lead has h_i health. Each soldier can spend 1 health to move. Assuming that the current cell is (a, b), the movement destination is the four directions (a + 1, b), (a-1, b), (a, b + 1), (a, b-1). It is possible to choose. Soldiers will not be able to move from there when their health reaches zero. Any square passed by one or more soldiers can be occupied.\n\nYour job is to find out how many squares you can occupy at most.\nHowever, the size of this two-dimensional grid should be infinitely wide.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\nn\nh1\n..\n..\n..\nhn\n\n\nInput meets the following constraints\n1 ≤ n ≤ 500\n1 ≤ hi ≤ 10,000,000\n\nOutput\n\nOutput the answer value on one line\n\nExamples\n\nInput\n\n2\n5\n5\n\n\nOutput\n\n11\n\n\nInput\n\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n\n\nOutput\n\n93\n\n\nInput\n\n5\n1\n2\n3\n4\n5\n\n\nOutput\n\n15", "grammar": {"answer": null}}
{"name": "p02819 AtCoder Beginner Contest 149 - Next Prime", "description": "Find the minimum prime number greater than or equal to X.\n\nConstraints\n\n* 2 \\le X \\le 10^5\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX\n\n\nOutput\n\nPrint the minimum prime number greater than or equal to X.\n\nExamples\n\nInput\n\n20\n\n\nOutput\n\n23\n\n\nInput\n\n2\n\n\nOutput\n\n2\n\n\nInput\n\n99992\n\n\nOutput\n\n100003", "grammar": {"answer": null}}
{"name": "p00993 Numbers", "description": "Given n, find n consecutive positive integers. However, all numbers must have divisors other than 1 and the number itself.\n\nHint\n\nIn Sample Output 2, 8, 9 and 10 are selected as three consecutive integers.\nThe second and third lines output 3, as a divisor of 9, and the fourth line outputs 5, as a divisor of 10.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\nn\n\n\nThe input meets the following constraints.\n1 ≤ n ≤ 1,500\n\nOutput\n\nPrint the smallest of the n consecutive positive integers you choose on the first line.\nOutput the divisor for each value from the 2nd line to the n + 1 line.\nAny value may be output unless the divisor is 1 or the number itself.\nLet x be the number output on the first line, and output the divisor of x + i-2 on the i line.\n\nThe output value must not exceed 5,000 digits.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n8\n2\n3\n\n\nInput\n\n3\n\n\nOutput\n\n8\n2\n3\n5", "grammar": {"answer": null}}
{"name": "507_D. The Maths Lecture", "description": "Amr doesn't like Maths as he finds it really boring, so he usually sleeps in Maths lectures. But one day the teacher suspected that Amr is sleeping and asked him a question to make sure he wasn't.\n\nFirst he gave Amr two positive integers n and k. Then he asked Amr, how many integer numbers x > 0 exist such that:\n\n  * Decimal representation of x (without leading zeroes) consists of exactly n digits; \n  * There exists some integer y > 0 such that: \n    * <image>; \n    * decimal representation of y is a suffix of decimal representation of x. \n\n\n\nAs the answer to this question may be pretty huge the teacher asked Amr to output only its remainder modulo a number m.\n\nCan you help Amr escape this embarrassing situation?\n\nInput\n\nInput consists of three integers n, k, m (1 ≤ n ≤ 1000, 1 ≤ k ≤ 100, 1 ≤ m ≤ 109).\n\nOutput\n\nPrint the required number modulo m.\n\nExamples\n\nInput\n\n1 2 1000\n\n\nOutput\n\n4\n\nInput\n\n2 2 1000\n\n\nOutput\n\n45\n\nInput\n\n5 3 1103\n\n\nOutput\n\n590\n\nNote\n\nA suffix of a string S is a non-empty string that can be obtained by removing some number (possibly, zero) of first characters from S.", "grammar": {"answer": null}}
{"name": "p02323 Traveling Salesman Problem", "description": "For a given weighted directed graph G(V, E), find the distance of the shortest route that meets the following criteria:\n\n* It is a closed cycle where it ends at the same point it starts.\n* It visits each vertex exactly once.\n\nConstraints\n\n* 2 ≤ |V| ≤ 15\n* 0 ≤ di ≤ 1,000\n* There are no multiedge\n\nInput\n\n\n|V| |E|\ns0 t0 d0\ns1 t1 d1\n:\ns|E|-1 t|E|-1 d|E|-1\n\n\n|V| is the number of vertices and |E| is the number of edges in the graph. The graph vertices are named with the numbers 0, 1,..., |V|-1 respectively.\n\nsi and ti represent source and target vertices of i-th edge (directed) and di represents the distance between si and ti (the i-th edge).\n\nOutput\n\nPrint the shortest distance in a line. If there is no solution, print -1.\n\nExamples\n\nInput\n\n4 6\n0 1 2\n1 2 3\n1 3 9\n2 0 1\n2 3 6\n3 2 4\n\n\nOutput\n\n16\n\n\nInput\n\n3 3\n0 1 1\n1 2 1\n0 2 1\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "494_B. Obsessive String", "description": "Hamed has recently found a string t and suddenly became quite fond of it. He spent several days trying to find all occurrences of t in other strings he had. Finally he became tired and started thinking about the following problem. Given a string s how many ways are there to extract k ≥ 1 non-overlapping substrings from it such that each of them contains string t as a substring? More formally, you need to calculate the number of ways to choose two sequences a1, a2, ..., ak and b1, b2, ..., bk satisfying the following requirements:\n\n  * k ≥ 1\n  * <image>\n  * <image>\n  * <image>\n  * <image> t is a substring of string saisai + 1... sbi (string s is considered as 1-indexed). \n\n\n\nAs the number of ways can be rather large print it modulo 109 + 7.\n\nInput\n\nInput consists of two lines containing strings s and t (1 ≤ |s|, |t| ≤ 105). Each string consists of lowercase Latin letters.\n\nOutput\n\nPrint the answer in a single line.\n\nExamples\n\nInput\n\nababa\naba\n\n\nOutput\n\n5\n\n\nInput\n\nwelcometoroundtwohundredandeightytwo\nd\n\n\nOutput\n\n274201\n\n\nInput\n\nddd\nd\n\n\nOutput\n\n12", "grammar": {"answer": null}}
{"name": "554_C. Kyoya and Colored Balls", "description": "Kyoya Ootori has a bag with n colored balls that are colored with k different colors. The colors are labeled from 1 to k. Balls of the same color are indistinguishable. He draws balls from the bag one by one until the bag is empty. He noticed that he drew the last ball of color i before drawing the last ball of color i + 1 for all i from 1 to k - 1. Now he wonders how many different ways this can happen. \n\nInput\n\nThe first line of input will have one integer k (1 ≤ k ≤ 1000) the number of colors.\n\nThen, k lines will follow. The i-th line will contain ci, the number of balls of the i-th color (1 ≤ ci ≤ 1000).\n\nThe total number of balls doesn't exceed 1000.\n\nOutput\n\nA single integer, the number of ways that Kyoya can draw the balls from the bag as described in the statement, modulo 1 000 000 007. \n\nExamples\n\nInput\n\n3\n2\n2\n1\n\n\nOutput\n\n3\n\n\nInput\n\n4\n1\n2\n3\n4\n\n\nOutput\n\n1680\n\nNote\n\nIn the first sample, we have 2 balls of color 1, 2 balls of color 2, and 1 ball of color 3. The three ways for Kyoya are: \n    \n    \n      \n    1 2 1 2 3  \n    1 1 2 2 3  \n    2 1 1 2 3  \n    ", "grammar": {"answer": null}}
{"name": "p02346 Range Sum Query (RSQ)", "description": "Write a program which manipulates a sequence A = {a1, a2, . . . , an} with the following operations:\n\n* add(i, x): add x to ai.\n* getSum(s, t): print the sum of as, as+1,...,at.\n\n\n\nNote that the initial values of ai (i = 1, 2, . . . , n) are 0.\n\nConstraints\n\n* 1 ≤ n ≤ 100000\n* 1 ≤ q ≤ 100000\n* If comi is 0, then 1 ≤ xi ≤ n, 0 ≤ yi ≤ 1000.\n* If comi is 1, then 1 ≤ xi ≤ n, 1 ≤ yi ≤ n.\n\nInput\n\n\nn q\ncom1 x1 y1\ncom2 x2 y2\n...\ncomq xq yq\n\n\nIn the first line, n (the number of elements in A) and q (the number of queries) are given. Then, q queries are given where com represents the type of queries. '0' denotes add(xi, yi) and '1' denotes getSum(xi, yi).\n\nOutput\n\nFor each getSum operation, print the sum in a line.\n\nExample\n\nInput\n\n3 5\n0 1 1\n0 2 2\n0 3 3\n1 1 2\n1 2 2\n\n\nOutput\n\n3\n2", "grammar": {"answer": null}}
{"name": "216_A. Tiling with Hexagons", "description": "Several ages ago Berland was a kingdom. The King of Berland adored math. That's why, when he first visited one of his many palaces, he first of all paid attention to the floor in one hall. The floor was tiled with hexagonal tiles.\n\nThe hall also turned out hexagonal in its shape. The King walked along the perimeter of the hall and concluded that each of the six sides has a, b, c, a, b and c adjacent tiles, correspondingly.\n\nTo better visualize the situation, look at the picture showing a similar hexagon for a = 2, b = 3 and c = 4.\n\n<image>\n\nAccording to the legend, as the King of Berland obtained the values a, b and c, he almost immediately calculated the total number of tiles on the hall floor. Can you do the same?\n\nInput\n\nThe first line contains three integers: a, b and c (2 ≤ a, b, c ≤ 1000).\n\nOutput\n\nPrint a single number — the total number of tiles on the hall floor.\n\nExamples\n\nInput\n\n2 3 4\n\n\nOutput\n\n18", "grammar": {"answer": null}}
{"name": "312_B. Archer", "description": "SmallR is an archer. SmallR is taking a match of archer with Zanoes. They try to shoot in the target in turns, and SmallR shoots first. The probability of shooting the target each time is <image> for SmallR while <image> for Zanoes. The one who shoots in the target first should be the winner.\n\nOutput the probability that SmallR will win the match.\n\nInput\n\nA single line contains four integers <image>.\n\nOutput\n\nPrint a single real number, the probability that SmallR will win the match.\n\nThe answer will be considered correct if the absolute or relative error doesn't exceed 10 - 6.\n\nExamples\n\nInput\n\n1 2 1 2\n\n\nOutput\n\n0.666666666667", "grammar": {"answer": null}}
{"name": "p03636 AtCoder Beginner Contest 069 - i18n", "description": "The word `internationalization` is sometimes abbreviated to `i18n`. This comes from the fact that there are 18 letters between the first `i` and the last `n`.\n\nYou are given a string s of length at least 3 consisting of lowercase English letters. Abbreviate s in the same way.\n\nConstraints\n\n* 3 ≤ |s| ≤ 100 (|s| denotes the length of s.)\n* s consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\ns\n\n\nOutput\n\nPrint the abbreviation of s.\n\nExamples\n\nInput\n\ninternationalization\n\n\nOutput\n\ni18n\n\n\nInput\n\nsmiles\n\n\nOutput\n\ns4s\n\n\nInput\n\nxyz\n\n\nOutput\n\nx1z", "grammar": {"answer": null}}
{"name": "p02476 Remainder of Big Integers", "description": "Remainder of Big Integers\n\nGiven two integers $A$ and $B$, compute the remainder of $\\frac{A}{B}$.\n\nInput\n\nTwo integers $A$ and $B$ separated by a space character are given in a line.\n\nOutput\n\nPrint the remainder in a line.\n\nConstraints\n\n* $0 \\leq A, B \\leq 10^{1000}$\n* $B \\ne 0$\n\n\n\nSample Input 1\n\n\n5 8\n\n\nSample Output 1\n\n\n5\n\n\nSample Input 2\n\n\n100 25\n\n\nSample Output 2\n\n\n0\n\n\n\n\n\n\nExample\n\nInput\n\n5 8\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "1104_C. Grid game", "description": "You are given a 4x4 grid. You play a game — there is a sequence of tiles, each of them is either 2x1 or 1x2. Your task is to consequently place all tiles from the given sequence in the grid. When tile is placed, each cell which is located in fully occupied row or column is deleted (cells are deleted at the same time independently). You can place tile in the grid at any position, the only condition is that tiles (and tile parts) should not overlap. Your goal is to proceed all given figures and avoid crossing at any time.\n\nInput\n\nThe only line contains a string s consisting of zeroes and ones (1 ≤ |s| ≤ 1000). Zero describes vertical tile, one describes horizontal tile.\n\nOutput\n\nOutput |s| lines — for each tile you should output two positive integers r,c, not exceeding 4, representing numbers of smallest row and column intersecting with it.\n\nIf there exist multiple solutions, print any of them.\n\nExample\n\nInput\n\n\n010\n\n\nOutput\n\n\n1 1\n1 2\n1 4\n\nNote\n\nFollowing image illustrates the example after placing all three tiles: \n\n<image> Then the first row is deleted:  <image>", "grammar": {"answer": null}}
{"name": "626_A. Robot Sequence", "description": "Calvin the robot lies in an infinite rectangular grid. Calvin's source code contains a list of n commands, each either 'U', 'R', 'D', or 'L' — instructions to move a single square up, right, down, or left, respectively. How many ways can Calvin execute a non-empty contiguous substrings of commands and return to the same square he starts in? Two substrings are considered different if they have different starting or ending indices.\n\nInput\n\nThe first line of the input contains a single positive integer, n (1 ≤ n ≤ 200) — the number of commands.\n\nThe next line contains n characters, each either 'U', 'R', 'D', or 'L' — Calvin's source code.\n\nOutput\n\nPrint a single integer — the number of contiguous substrings that Calvin can execute and return to his starting square.\n\nExamples\n\nInput\n\n6\nURLLDR\n\n\nOutput\n\n2\n\n\nInput\n\n4\nDLUU\n\n\nOutput\n\n0\n\n\nInput\n\n7\nRLRLRLR\n\n\nOutput\n\n12\n\nNote\n\nIn the first case, the entire source code works, as well as the \"RL\" substring in the second and third characters.\n\nNote that, in the third case, the substring \"LR\" appears three times, and is therefore counted three times to the total result.", "grammar": {"answer": null}}
{"name": "884_F. Anti-Palindromize", "description": "A string a of length m is called antipalindromic iff m is even, and for each i (1 ≤ i ≤ m) ai ≠ am - i + 1.\n\nIvan has a string s consisting of n lowercase Latin letters; n is even. He wants to form some string t that will be an antipalindromic permutation of s. Also Ivan has denoted the beauty of index i as bi, and the beauty of t as the sum of bi among all indices i such that si = ti.\n\nHelp Ivan to determine maximum possible beauty of t he can get.\n\nInput\n\nThe first line contains one integer n (2 ≤ n ≤ 100, n is even) — the number of characters in s.\n\nThe second line contains the string s itself. It consists of only lowercase Latin letters, and it is guaranteed that its letters can be reordered to form an antipalindromic string.\n\nThe third line contains n integer numbers b1, b2, ..., bn (1 ≤ bi ≤ 100), where bi is the beauty of index i.\n\nOutput\n\nPrint one number — the maximum possible beauty of t.\n\nExamples\n\nInput\n\n8\nabacabac\n1 1 1 1 1 1 1 1\n\n\nOutput\n\n8\n\n\nInput\n\n8\nabaccaba\n1 2 3 4 5 6 7 8\n\n\nOutput\n\n26\n\n\nInput\n\n8\nabacabca\n1 2 3 4 4 3 2 1\n\n\nOutput\n\n17", "grammar": {"answer": null}}
{"name": "110_A. Nearly Lucky Number", "description": "Petya loves lucky numbers. We all know that lucky numbers are the positive integers whose decimal representations contain only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.\n\nUnfortunately, not all numbers are lucky. Petya calls a number nearly lucky if the number of lucky digits in it is a lucky number. He wonders whether number n is a nearly lucky number.\n\nInput\n\nThe only line contains an integer n (1 ≤ n ≤ 1018).\n\nPlease do not use the %lld specificator to read or write 64-bit numbers in С++. It is preferred to use the cin, cout streams or the %I64d specificator.\n\nOutput\n\nPrint on the single line \"YES\" if n is a nearly lucky number. Otherwise, print \"NO\" (without the quotes).\n\nExamples\n\nInput\n\n40047\n\n\nOutput\n\nNO\n\n\nInput\n\n7747774\n\n\nOutput\n\nYES\n\n\nInput\n\n1000000000000000000\n\n\nOutput\n\nNO\n\nNote\n\nIn the first sample there are 3 lucky digits (first one and last two), so the answer is \"NO\".\n\nIn the second sample there are 7 lucky digits, 7 is lucky number, so the answer is \"YES\".\n\nIn the third sample there are no lucky digits, so the answer is \"NO\".", "grammar": {"answer": null}}
{"name": "632_D. Longest Subsequence", "description": "You are given array a with n elements and the number m. Consider some subsequence of a and the value of least common multiple (LCM) of its elements. Denote LCM as l. Find any longest subsequence of a with the value l ≤ m.\n\nA subsequence of a is an array we can get by erasing some elements of a. It is allowed to erase zero or all elements.\n\nThe LCM of an empty array equals 1.\n\nInput\n\nThe first line contains two integers n and m (1 ≤ n, m ≤ 106) — the size of the array a and the parameter from the problem statement.\n\nThe second line contains n integers ai (1 ≤ ai ≤ 109) — the elements of a.\n\nOutput\n\nIn the first line print two integers l and kmax (1 ≤ l ≤ m, 0 ≤ kmax ≤ n) — the value of LCM and the number of elements in optimal subsequence.\n\nIn the second line print kmax integers — the positions of the elements from the optimal subsequence in the ascending order.\n\nNote that you can find and print any subsequence with the maximum length.\n\nExamples\n\nInput\n\n7 8\n6 2 9 2 7 2 3\n\n\nOutput\n\n6 5\n1 2 4 6 7\n\n\nInput\n\n6 4\n2 2 2 3 3 3\n\n\nOutput\n\n2 3\n1 2 3", "grammar": {"answer": null}}
{"name": "1030_D. Vasya and Triangle", "description": "Vasya has got three integers n, m and k. He'd like to find three integer points (x_1, y_1), (x_2, y_2), (x_3, y_3), such that 0 ≤ x_1, x_2, x_3 ≤ n, 0 ≤ y_1, y_2, y_3 ≤ m and the area of the triangle formed by these points is equal to nm/k.\n\nHelp Vasya! Find such points (if it's possible). If there are multiple solutions, print any of them.\n\nInput\n\nThe single line contains three integers n, m, k (1≤ n, m ≤ 10^9, 2 ≤ k ≤ 10^9).\n\nOutput\n\nIf there are no such points, print \"NO\".\n\nOtherwise print \"YES\" in the first line. The next three lines should contain integers x_i, y_i — coordinates of the points, one point per line. If there are multiple solutions, print any of them.\n\nYou can print each letter in any case (upper or lower).\n\nExamples\n\nInput\n\n4 3 3\n\n\nOutput\n\nYES\n1 0\n2 3\n4 1\n\n\nInput\n\n4 4 7\n\n\nOutput\n\nNO\n\nNote\n\nIn the first example area of the triangle should be equal to nm/k = 4. The triangle mentioned in the output is pictured below: \n\n<image>\n\nIn the second example there is no triangle with area nm/k = 16/7.", "grammar": {"answer": null}}
{"name": "p02930 Japanese Student Championship 2019 Qualification - Classified", "description": "AtCoder's head office consists of N rooms numbered 1 to N. For any two rooms, there is a direct passage connecting these rooms.\n\nFor security reasons, Takahashi the president asked you to set a level for every passage, which is a positive integer and must satisfy the following condition:\n\n* For each room i\\ (1 \\leq i \\leq N), if we leave Room i, pass through some passages whose levels are all equal and get back to Room i, the number of times we pass through a passage is always even.\n\n\n\nYour task is to set levels to the passages so that the highest level of a passage is minimized.\n\nConstraints\n\n* N is an integer between 2 and 500 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint one way to set levels to the passages so that the objective is achieved, as follows:\n\n\na_{1,2} a_{1,3} ... a_{1,N}\na_{2,3} ... a_{2,N}\n.\n.\n.\na_{N-1,N}\n\n\nHere a_{i,j} is the level of the passage connecting Room i and Room j.\n\nIf there are multiple solutions, any of them will be accepted.\n\nExample\n\nInput\n\n3\n\n\nOutput\n\n1 2\n1", "grammar": {"answer": null}}
{"name": "622_C. Not Equal on a Segment", "description": "You are given array a with n integers and m queries. The i-th query is given with three integers li, ri, xi.\n\nFor the i-th query find any position pi (li ≤ pi ≤ ri) so that api ≠ xi.\n\nInput\n\nThe first line contains two integers n, m (1 ≤ n, m ≤ 2·105) — the number of elements in a and the number of queries.\n\nThe second line contains n integers ai (1 ≤ ai ≤ 106) — the elements of the array a.\n\nEach of the next m lines contains three integers li, ri, xi (1 ≤ li ≤ ri ≤ n, 1 ≤ xi ≤ 106) — the parameters of the i-th query.\n\nOutput\n\nPrint m lines. On the i-th line print integer pi — the position of any number not equal to xi in segment [li, ri] or the value  - 1 if there is no such number.\n\nExamples\n\nInput\n\n6 4\n1 2 1 1 3 5\n1 4 1\n2 6 2\n3 4 1\n3 4 2\n\n\nOutput\n\n2\n6\n-1\n4", "grammar": {"answer": null}}
{"name": "p02475 Division of Big Integers", "description": "Division of Big Integers\n\nGiven two integers $A$ and $B$, compute the quotient, $\\frac{A}{B}$. Round down to the nearest decimal.\n\nInput\n\nTwo integers $A$ and $B$ separated by a space character are given in a line.\n\nOutput\n\nPrint the quotient in a line.\n\nConstraints\n\n* $-1 \\times 10^{1000} \\leq A, B \\leq 10^{1000}$\n* $B \\ne 0$\n\n\n\nSample Input 1\n\n\n5 8\n\n\nSample Output 1\n\n\n0\n\n\nSample Input 2\n\n\n100 25\n\n\nSample Output 2\n\n\n4\n\n\nSample Input 3\n\n\n-1 3\n\n\nSample Output 3\n\n\n0\n\n\nSample Input 4\n\n\n12 -3\n\n\nSample Output 4\n\n\n-4\n\n\n\n\n\n\nExample\n\nInput\n\n5 8\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "1169_D. Good Triple", "description": "Toad Rash has a binary string s. A binary string consists only of zeros and ones.\n\nLet n be the length of s.\n\nRash needs to find the number of such pairs of integers l, r that 1 ≤ l ≤ r ≤ n and there is at least one pair of integers x, k such that 1 ≤ x, k ≤ n, l ≤ x < x + 2k ≤ r, and s_x = s_{x+k} = s_{x+2k}.\n\nFind this number of pairs for Rash.\n\nInput\n\nThe first line contains the string s (1 ≤ |s| ≤ 300 000), consisting of zeros and ones.\n\nOutput\n\nOutput one integer: the number of such pairs of integers l, r that 1 ≤ l ≤ r ≤ n and there is at least one pair of integers x, k such that 1 ≤ x, k ≤ n, l ≤ x < x + 2k ≤ r, and s_x = s_{x+k} = s_{x+2k}.\n\nExamples\n\nInput\n\n\n010101\n\n\nOutput\n\n\n3\n\n\nInput\n\n\n11001100\n\n\nOutput\n\n\n0\n\nNote\n\nIn the first example, there are three l, r pairs we need to count: 1, 6; 2, 6; and 1, 5.\n\nIn the second example, there are no values x, k for the initial string, so the answer is 0.", "grammar": {"answer": null}}
{"name": "p02233 Fibonacci Number", "description": "Write a program which prints $n$-th fibonacci number for a given integer $n$. The $n$-th fibonacci number is defined by the following recursive formula:\n\n\\begin{equation*} fib(n)= \\left \\\\{ \\begin{array}{ll} 1 & (n = 0) \\\\\\ 1 & (n = 1) \\\\\\ fib(n - 1) + fib(n - 2) & \\\\\\ \\end{array} \\right. \\end{equation*}\n\nConstraints\n\n* $0 \\leq n \\leq 44$\n\nInput\n\nAn integer $n$ is given.\n\nExample\n\nInput\n\n3\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "318_A. Even Odds", "description": "Being a nonconformist, Volodya is displeased with the current state of things, particularly with the order of natural numbers (natural number is positive integer number). He is determined to rearrange them. But there are too many natural numbers, so Volodya decided to start with the first n. He writes down the following sequence of numbers: firstly all odd integers from 1 to n (in ascending order), then all even integers from 1 to n (also in ascending order). Help our hero to find out which number will stand at the position number k.\n\nInput\n\nThe only line of input contains integers n and k (1 ≤ k ≤ n ≤ 1012).\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nOutput\n\nPrint the number that will stand at the position number k after Volodya's manipulations.\n\nExamples\n\nInput\n\n10 3\n\n\nOutput\n\n5\n\nInput\n\n7 7\n\n\nOutput\n\n6\n\nNote\n\nIn the first sample Volodya's sequence will look like this: {1, 3, 5, 7, 9, 2, 4, 6, 8, 10}. The third place in the sequence is therefore occupied by the number 5.", "grammar": {"answer": null}}
{"name": "p02472 Addition of Big Integers", "description": "Addition of Big Integers\n\nGiven two integers $A$ and $B$, compute the sum, $A + B$.\n\nInput\n\nTwo integers $A$ and $B$ separated by a space character are given in a line.\n\nOutput\n\nPrint the sum in a line.\n\nConstraints\n\n* $-1 \\times 10^{100000} \\leq A, B \\leq 10^{100000}$\n\n\n\nSample Input 1\n\n\n5 8\n\n\nSample Output 1\n\n\n13\n\n\nSample Input 2\n\n\n100 25\n\n\nSample Output 2\n\n\n125\n\n\nSample Input 3\n\n\n-1 1\n\n\nSample Output 3\n\n\n0\n\n\nSample Input 4\n\n\n12 -3\n\n\nSample Output 4\n\n\n9\n\n\n\n\n\n\nExample\n\nInput\n\n5 8\n\n\nOutput\n\n13", "grammar": {"answer": null}}
{"name": "440_B. Balancer", "description": "Petya has k matches, placed in n matchboxes lying in a line from left to right. We know that k is divisible by n. Petya wants all boxes to have the same number of matches inside. For that, he can move a match from its box to the adjacent one in one move. How many such moves does he need to achieve the desired configuration?\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 50000). The second line contains n non-negative numbers that do not exceed 109, the i-th written number is the number of matches in the i-th matchbox. It is guaranteed that the total number of matches is divisible by n.\n\nOutput\n\nPrint the total minimum number of moves.\n\nExamples\n\nInput\n\n6\n1 6 2 5 3 7\n\n\nOutput\n\n12", "grammar": {"answer": null}}
{"name": "468_B. Two Sets", "description": "Little X has n distinct integers: p1, p2, ..., pn. He wants to divide all of them into two sets A and B. The following two conditions must be satisfied:\n\n  * If number x belongs to set A, then number a - x must also belong to set A. \n  * If number x belongs to set B, then number b - x must also belong to set B. \n\n\n\nHelp Little X divide the numbers into two sets or determine that it's impossible.\n\nInput\n\nThe first line contains three space-separated integers n, a, b (1 ≤ n ≤ 105; 1 ≤ a, b ≤ 109). The next line contains n space-separated distinct integers p1, p2, ..., pn (1 ≤ pi ≤ 109).\n\nOutput\n\nIf there is a way to divide the numbers into two sets, then print \"YES\" in the first line. Then print n integers: b1, b2, ..., bn (bi equals either 0, or 1), describing the division. If bi equals to 0, then pi belongs to set A, otherwise it belongs to set B.\n\nIf it's impossible, print \"NO\" (without the quotes).\n\nExamples\n\nInput\n\n4 5 9\n2 3 4 5\n\n\nOutput\n\nYES\n0 0 1 1\n\n\nInput\n\n3 3 4\n1 2 4\n\n\nOutput\n\nNO\n\nNote\n\nIt's OK if all the numbers are in the same set, and the other one is empty.", "grammar": {"answer": null}}
{"name": "p02282 Reconstruction of a Tree", "description": "Write a program which reads two sequences of nodes obtained by the preorder tree walk and the inorder tree walk on a binary tree respectively, and prints a sequence of the nodes obtained by the postorder tree walk on the binary tree.\n\nConstraints\n\n* $1 \\leq n \\leq 40$\n\nInput\n\nIn the first line, an integer $n$, which is the number of nodes in the binary tree, is given.\nIn the second line, the sequence of node IDs obtained by the preorder tree walk is given separated by space characters.\nIn the second line, the sequence of node IDs obtained by the inorder tree walk is given separated by space characters.\n\nEvery node has a unique ID from $1$ to $n$. Note that the root does not always correspond to $1$.\n\nOutput\n\nPrint the sequence of node IDs obtained by the postorder tree walk in a line. Put a single space character between adjacent IDs.\n\nExamples\n\nInput\n\n5\n1 2 3 4 5\n3 2 4 1 5\n\n\nOutput\n\n3 4 2 5 1\n\n\nInput\n\n4\n1 2 3 4\n1 2 3 4\n\n\nOutput\n\n4 3 2 1", "grammar": {"answer": null}}
{"name": "1175_A. From Hero to Zero", "description": "You are given an integer n and an integer k.\n\nIn one step you can do one of the following moves: \n\n  * decrease n by 1; \n  * divide n by k if n is divisible by k. \n\n\n\nFor example, if n = 27 and k = 3 you can do the following steps: 27 → 26 → 25 → 24 → 8 → 7 → 6 → 2 → 1 → 0.\n\nYou are asked to calculate the minimum number of steps to reach 0 from n. \n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 100) — the number of queries.\n\nThe only line of each query contains two integers n and k (1 ≤ n ≤ 10^{18}, 2 ≤ k ≤ 10^{18}).\n\nOutput\n\nFor each query print the minimum number of steps to reach 0 from n in single line. \n\nExample\n\nInput\n\n\n2\n59 3\n1000000000000000000 10\n\n\nOutput\n\n\n8\n19\n\nNote\n\nSteps for the first test case are: 59 → 58 → 57 → 19 → 18 → 6 → 2 → 1 → 0.\n\nIn the second test case you have to divide n by k 18 times and then decrease n by 1.", "grammar": {"answer": null}}
{"name": "p03362 AtCoder Beginner Contest 096 - Five  Five Everywhere", "description": "Print a sequence a_1, a_2, ..., a_N whose length is N that satisfies the following conditions:\n\n* a_i (1 \\leq i \\leq N) is a prime number at most 55 555.\n* The values of a_1, a_2, ..., a_N are all different.\n* In every choice of five different integers from a_1, a_2, ..., a_N, the sum of those integers is a composite number.\n\n\n\nIf there are multiple such sequences, printing any of them is accepted.\n\nConstraints\n\n* N is an integer between 5 and 55 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint N numbers a_1, a_2, a_3, ..., a_N in a line, with spaces in between.\n\nExamples\n\nInput\n\n5\n\n\nOutput\n\n3 5 7 11 31\n\n\nInput\n\n6\n\n\nOutput\n\n2 3 5 7 11 13\n\n\nInput\n\n8\n\n\nOutput\n\n2 5 7 13 19 37 67 79", "grammar": {"answer": null}}
{"name": "1165_E. Two Arrays and Sum of Functions", "description": "You are given two arrays a and b, both of length n.\n\nLet's define a function f(l, r) = ∑_{l ≤ i ≤ r} a_i ⋅ b_i.\n\nYour task is to reorder the elements (choose an arbitrary order of elements) of the array b to minimize the value of ∑_{1 ≤ l ≤ r ≤ n} f(l, r). Since the answer can be very large, you have to print it modulo 998244353. Note that you should minimize the answer but not its remainder.\n\nInput\n\nThe first line of the input contains one integer n (1 ≤ n ≤ 2 ⋅ 10^5) — the number of elements in a and b.\n\nThe second line of the input contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ 10^6), where a_i is the i-th element of a.\n\nThe third line of the input contains n integers b_1, b_2, ..., b_n (1 ≤ b_j ≤ 10^6), where b_j is the j-th element of b.\n\nOutput\n\nPrint one integer — the minimum possible value of ∑_{1 ≤ l ≤ r ≤ n} f(l, r) after rearranging elements of b, taken modulo 998244353. Note that you should minimize the answer but not its remainder.\n\nExamples\n\nInput\n\n\n5\n1 8 7 2 4\n9 7 2 9 3\n\n\nOutput\n\n\n646\n\n\nInput\n\n\n1\n1000000\n1000000\n\n\nOutput\n\n\n757402647\n\n\nInput\n\n\n2\n1 3\n4 2\n\n\nOutput\n\n\n20", "grammar": {"answer": null}}
{"name": "14_C. Four Segments", "description": "Several months later Alex finally got his brother Bob's creation by post. And now, in his turn, Alex wants to boast about something to his brother. He thought for a while, and came to the conclusion that he has no ready creations, and decided to write a program for rectangles detection. According to his plan, the program detects if the four given segments form a rectangle of a positive area and with sides parallel to coordinate axes. As Alex does badly at school and can't write this program by himself, he asks you to help him.\n\nInput\n\nThe input data contain four lines. Each of these lines contains four integers x1, y1, x2, y2 ( - 109 ≤ x1, y1, x2, y2 ≤ 109) — coordinates of segment's beginning and end positions. The given segments can degenerate into points.\n\nOutput\n\nOutput the word «YES», if the given four segments form the required rectangle, otherwise output «NO».\n\nExamples\n\nInput\n\n1 1 6 1\n1 0 6 0\n6 0 6 1\n1 1 1 0\n\n\nOutput\n\nYES\n\n\nInput\n\n0 0 0 3\n2 0 0 0\n2 2 2 0\n0 2 2 2\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "1090_M. The Pleasant Walk", "description": "There are n houses along the road where Anya lives, each one is painted in one of k possible colors.\n\nAnya likes walking along this road, but she doesn't like when two adjacent houses at the road have the same color. She wants to select a long segment of the road such that no two adjacent houses have the same color.\n\nHelp Anya find the longest segment with this property.\n\nInput\n\nThe first line contains two integers n and k — the number of houses and the number of colors (1 ≤ n ≤ 100 000, 1 ≤ k ≤ 100 000).\n\nThe next line contains n integers a_1, a_2, …, a_n — the colors of the houses along the road (1 ≤ a_i ≤ k).\n\nOutput\n\nOutput a single integer — the maximum number of houses on the road segment having no two adjacent houses of the same color.\n\nExample\n\nInput\n\n\n8 3\n1 2 3 3 2 1 2 2\n\n\nOutput\n\n\n4\n\nNote\n\nIn the example, the longest segment without neighboring houses of the same color is from the house 4 to the house 7. The colors of the houses are [3, 2, 1, 2] and its length is 4 houses.", "grammar": {"answer": null}}
{"name": "922_C. Cave Painting", "description": "Imp is watching a documentary about cave painting.\n\n<image>\n\nSome numbers, carved in chaotic order, immediately attracted his attention. Imp rapidly proposed a guess that they are the remainders of division of a number n by all integers i from 1 to k. Unfortunately, there are too many integers to analyze for Imp.\n\nImp wants you to check whether all these remainders are distinct. Formally, he wants to check, if all <image>, 1 ≤ i ≤ k, are distinct, i. e. there is no such pair (i, j) that: \n\n  * 1 ≤ i < j ≤ k, \n  * <image>, where <image> is the remainder of division x by y. \n\nInput\n\nThe only line contains two integers n, k (1 ≤ n, k ≤ 1018).\n\nOutput\n\nPrint \"Yes\", if all the remainders are distinct, and \"No\" otherwise.\n\nYou can print each letter in arbitrary case (lower or upper).\n\nExamples\n\nInput\n\n4 4\n\n\nOutput\n\nNo\n\n\nInput\n\n5 3\n\n\nOutput\n\nYes\n\nNote\n\nIn the first sample remainders modulo 1 and 4 coincide.", "grammar": {"answer": null}}
{"name": "p03011 AtCoder Beginner Contest 129 - Airplane", "description": "There are three airports A, B and C, and flights between each pair of airports in both directions.\n\nA one-way flight between airports A and B takes P hours, a one-way flight between airports B and C takes Q hours, and a one-way flight between airports C and A takes R hours.\n\nConsider a route where we start at one of the airports, fly to another airport and then fly to the other airport.\n\nWhat is the minimum possible sum of the flight times?\n\nConstraints\n\n* 1 \\leq P,Q,R \\leq 100\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nP Q R\n\n\nOutput\n\nPrint the minimum possible sum of the flight times.\n\nExamples\n\nInput\n\n1 3 4\n\n\nOutput\n\n4\n\n\nInput\n\n3 2 3\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "1512_A. Spy Detected!", "description": "You are given an array a consisting of n (n ≥ 3) positive integers. It is known that in this array, all the numbers except one are the same (for example, in the array [4, 11, 4, 4] all numbers except one are equal to 4).\n\nPrint the index of the element that does not equal others. The numbers in the array are numbered from one.\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 100). Then t test cases follow.\n\nThe first line of each test case contains a single integer n (3 ≤ n ≤ 100) — the length of the array a.\n\nThe second line of each test case contains n integers a_1, a_2, …, a_n (1 ≤ a_i ≤ 100).\n\nIt is guaranteed that all the numbers except one in the a array are the same.\n\nOutput\n\nFor each test case, output a single integer — the index of the element that is not equal to others.\n\nExample\n\nInput\n\n\n4\n4\n11 13 11 11\n5\n1 4 4 4 4\n10\n3 3 3 3 10 3 3 3 3 3\n3\n20 20 10\n\n\nOutput\n\n\n2\n1\n5\n3", "grammar": {"answer": null}}
{"name": "1505_G. Encoded message", "description": "\n\nInput\n\nThe first line of the input contains a single integer N (1 ≤ N ≤ 24). The next N lines contain 5 space-separated integers each. The first three integers will be between 0 and 2, inclusive. The last two integers will be between 0 and 3, inclusive. The sum of the first three integers will be equal to the sum of the last two integers.\n\nOutput\n\nOutput the result – a string of lowercase English letters.\n\nExamples\n\nInput\n\n\n1\n1 0 0 1 0\n\n\nOutput\n\n\na\n\n\nInput\n\n\n10\n2 0 0 1 1\n1 1 1 2 1\n2 1 0 1 2\n1 1 0 1 1\n2 1 0 2 1\n1 1 1 2 1\n1 2 1 3 1\n2 0 0 1 1\n1 1 0 1 1\n1 1 2 2 2\n\n\nOutput\n\n\ncodeforcez", "grammar": {"answer": null}}
{"name": "p02810 Dwango Programming Contest 6th - Span Covering", "description": "Niwango bought a piece of land that can be represented as a half-open interval [0, X).\n\nNiwango will lay out N vinyl sheets on this land. The sheets are numbered 1,2, \\ldots, N, and they are distinguishable. For Sheet i, he can choose an integer j such that 0 \\leq j \\leq X - L_i and cover [j, j + L_i) with this sheet.\n\nFind the number of ways to cover the land with the sheets such that no point in [0, X) remains uncovered, modulo (10^9+7). We consider two ways to cover the land different if and only if there is an integer i (1 \\leq i \\leq N) such that the region covered by Sheet i is different.\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* 1 \\leq L_i \\leq X \\leq 500\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN X\nL_1 L_2 \\ldots L_N\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3 3\n1 1 2\n\n\nOutput\n\n10\n\n\nInput\n\n18 477\n324 31 27 227 9 21 41 29 50 34 2 362 92 11 13 17 183 119\n\n\nOutput\n\n134796357", "grammar": {"answer": null}}
{"name": "1473_F. Strange Set", "description": "Note that the memory limit is unusual.\n\nYou are given an integer n and two sequences a_1, a_2, ..., a_n and b_1, b_2, ..., b_n.\n\nLet's call a set of integers S such that S ⊆ \\{1, 2, 3, ..., n\\} strange, if, for every element i of S, the following condition is met: for every j ∈ [1, i - 1], if a_j divides a_i, then j is also included in S. An empty set is always strange.\n\nThe cost of the set S is ∑_{i ∈ S} b_i. You have to calculate the maximum possible cost of a strange set.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 3000).\n\nThe second line contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ 100).\n\nThe third line contains n integers b_1, b_2, ..., b_n (-10^5 ≤ b_i ≤ 10^5).\n\nOutput\n\nPrint one integer — the maximum cost of a strange set.\n\nExamples\n\nInput\n\n\n9\n4 7 3 4 5 6 7 8 13\n-2 3 -19 5 -6 7 -8 9 1\n\n\nOutput\n\n\n16\n\n\nInput\n\n\n2\n42 42\n-37 13\n\n\nOutput\n\n\n0\n\n\nInput\n\n\n2\n42 42\n13 -37\n\n\nOutput\n\n\n13\n\nNote\n\nThe strange set with the maximum cost in the first example is \\{1, 2, 4, 8, 9\\}.\n\nThe strange set with the maximum cost in the second example is empty.", "grammar": {"answer": null}}
{"name": "p00251 Points for a Perfect Scorer", "description": "Welcome to PC Koshien, players. This year marks the 10th anniversary of Computer Koshien, but the number of questions and the total score will vary from year to year. Scores are set for each question according to the difficulty level. When the number of questions is 10 and the score of each question is given, create a program that outputs the total of them.\n\n\n\ninput\n\nThe input is given in the following format.\n\n\ns1\ns2\n..\n..\ns10\n\n\nThe input consists of 10 lines, and the i line is given the integer si (0 ≤ si ≤ 100) representing the score of problem i.\n\noutput\n\nOutput the total score on one line.\n\nExample\n\nInput\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\nOutput\n\n55", "grammar": {"answer": null}}
{"name": "239_C. Not Wool Sequences", "description": "A sequence of non-negative integers a1, a2, ..., an of length n is called a wool sequence if and only if there exists two integers l and r (1 ≤ l ≤ r ≤ n) such that <image>. In other words each wool sequence contains a subsequence of consecutive elements with xor equal to 0.\n\nThe expression <image> means applying the operation of a bitwise xor to numbers x and y. The given operation exists in all modern programming languages, for example, in languages C++ and Java it is marked as \"^\", in Pascal — as \"xor\".\n\nIn this problem you are asked to compute the number of sequences made of n integers from 0 to 2m - 1 that are not a wool sequence. You should print this number modulo 1000000009 (109 + 9).\n\nInput\n\nThe only line of input contains two space-separated integers n and m (1 ≤ n, m ≤ 105).\n\nOutput\n\nPrint the required number of sequences modulo 1000000009 (109 + 9) on the only line of output.\n\nExamples\n\nInput\n\n3 2\n\n\nOutput\n\n6\n\nNote\n\nSequences of length 3 made of integers 0, 1, 2 and 3 that are not a wool sequence are (1, 3, 1), (1, 2, 1), (2, 1, 2), (2, 3, 2), (3, 1, 3) and (3, 2, 3).", "grammar": {"answer": null}}
{"name": "1331_B. Limericks", "description": "    There was once young lass called Mary,    \n    Whose jokes were occasionally scary.    \n    On this April's Fool    \n    Fixed limerick rules    \n    Allowed her to trip the unwary.  \n      \n    Can she fill all the lines  \n    To work at all times?  \n    On juggling the words  \n    Right around two-thirds  \n    She nearly ran out of rhymes.  \n    \n\nInput\n\nThe input contains a single integer a (4 ≤ a ≤ 998). Not every integer in the range is a valid input for the problem; you are guaranteed that the input will be a valid integer.\n\nOutput\n\nOutput a single number.\n\nExamples\n\nInput\n\n\n35\n\n\nOutput\n\n\n57\n\n\nInput\n\n\n57\n\n\nOutput\n\n\n319\n\n\nInput\n\n\n391\n\n\nOutput\n\n\n1723", "grammar": {"answer": null}}
{"name": "p02427 Enumeration of Subsets I", "description": "Print all subsets of a set $S$, which contains $0, 1, ... n-1$ as elements. Note that we represent $0, 1, ... n-1$ as 00...0001, 00...0010, 00...0100, ..., 10...0000 in binary respectively and the integer representation of a subset is calculated by bitwise OR of existing elements.\n\nConstraints\n\n* $1 \\leq n \\leq 18$\n\nInput\n\nThe input is given in the following format.\n\n\n$n$\n\n\nOutput\n\nPrint subsets ordered by their decimal integers. Print a subset in a line in the following format.\n\n\n$d$: $e_0$ $e_1$ ...\n\n\nPrint ':' after the integer value $d$, then print elements $e_i$ in the subset in ascending order. Seprate two adjacency elements by a space character.\n\nExample\n\nInput\n\n4\n\n\nOutput\n\n0:\n1: 0\n2: 1\n3: 0 1\n4: 2\n5: 0 2\n6: 1 2\n7: 0 1 2\n8: 3\n9: 0 3\n10: 1 3\n11: 0 1 3\n12: 2 3\n13: 0 2 3\n14: 1 2 3\n15: 0 1 2 3", "grammar": {"answer": null}}
{"name": "p00005 GCD and LCM", "description": "Write a program which computes the greatest common divisor (GCD) and the least common multiple (LCM) of given a and b.\n\nConstraints\n\n* 0 < a, b ≤ 2,000,000,000\n* LCM(a, b) ≤ 2,000,000,000\n* The number of data sets ≤ 50\n\nInput\n\nInput consists of several data sets. Each data set contains a and b separated by a single space in a line. The input terminates with EOF.\n\nOutput\n\nFor each data set, print GCD and LCM separated by a single space in a line.\n\nExample\n\nInput\n\n8 6\n50000000 30000000\n\n\nOutput\n\n2 24\n10000000 150000000", "grammar": {"answer": null}}
{"name": "p02116 nCm", "description": "Problem\n\nGiven the integer n, output the smallest m such that nCm (the number of combinations that choose m out of n different ones) is even.\n\nConstraints\n\nThe input satisfies the following conditions.\n\n* 1 ≤ n ≤ 1018\n\nInput\n\nThe input is given in the following format.\n\n\nn\n\n\nOutput\n\nOutput the minimum m such that nCm is an even number on one line.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n1\n\n\nInput\n\n111\n\n\nOutput\n\n16\n\n\nInput\n\n3\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p02656 AtCoder Grand Contest 045 - Division into Multiples", "description": "Snuke has X+Y balls. X of them have an integer A written on them, and the other Y of them have an integer B written on them.\n\nSnuke will divide these balls into some number of groups. Here, every ball should be contained in exactly one group, and every group should contain one or more balls.\n\nA group is said to be good when the sum of the integers written on the balls in that group is a multiple of an integer C. Find the maximum possible number of good groups.\n\nSolve T test cases for each input file.\n\nConstraints\n\n* 1 \\leq T \\leq 2 \\times 10^4\n* 1 \\leq A,X,B,Y,C \\leq 10^9\n* A \\neq B\n\nInput\n\nInput is given from Standard Input in the following format. The first line is as follows:\n\n\nT\n\n\nThen, T test cases follow. Each test case is given in the following format:\n\n\nA X B Y C\n\n\nOutput\n\nFor each test case, print a line containing the maximum possible number of good groups.\n\nExample\n\nInput\n\n3\n3 3 4 4 5\n2 1 1 5 3\n3 1 4 2 5\n\n\nOutput\n\n2\n2\n0", "grammar": {"answer": null}}
{"name": "1278_F. Cards", "description": "Consider the following experiment. You have a deck of m cards, and exactly one card is a joker. n times, you do the following: shuffle the deck, take the top card of the deck, look at it and return it into the deck.\n\nLet x be the number of times you have taken the joker out of the deck during this experiment. Assuming that every time you shuffle the deck, all m! possible permutations of cards are equiprobable, what is the expected value of x^k? Print the answer modulo 998244353.\n\nInput\n\nThe only line contains three integers n, m and k (1 ≤ n, m < 998244353, 1 ≤ k ≤ 5000).\n\nOutput\n\nPrint one integer — the expected value of x^k, taken modulo 998244353 (the answer can always be represented as an irreducible fraction a/b, where b mod 998244353 ≠ 0; you have to print a ⋅ b^{-1} mod 998244353).\n\nExamples\n\nInput\n\n\n1 1 1\n\n\nOutput\n\n\n1\n\n\nInput\n\n\n1 1 5000\n\n\nOutput\n\n\n1\n\n\nInput\n\n\n2 2 2\n\n\nOutput\n\n\n499122178\n\n\nInput\n\n\n998244352 1337 5000\n\n\nOutput\n\n\n326459680", "grammar": {"answer": null}}
{"name": "p03593 CODE FESTIVAL 2017 qual A - Palindromic Matrix", "description": "We have an H-by-W matrix. Let a_{ij} be the element at the i-th row from the top and j-th column from the left. In this matrix, each a_{ij} is a lowercase English letter.\n\nSnuke is creating another H-by-W matrix, A', by freely rearranging the elements in A. Here, he wants to satisfy the following condition:\n\n* Every row and column in A' can be read as a palindrome.\n\n\n\nDetermine whether he can create a matrix satisfying the condition.\n\nConstraints\n\n* 1 ≤ H, W ≤ 100\n* a_{ij} is a lowercase English letter.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH W\na_{11}a_{12}...a_{1W}\n:\na_{H1}a_{H2}...a_{HW}\n\n\nOutput\n\nIf Snuke can create a matrix satisfying the condition, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n3 4\naabb\naabb\naacc\n\n\nOutput\n\nYes\n\n\nInput\n\n2 2\naa\nbb\n\n\nOutput\n\nNo\n\n\nInput\n\n5 1\nt\nw\ne\ne\nt\n\n\nOutput\n\nYes\n\n\nInput\n\n2 5\nabxba\nabyba\n\n\nOutput\n\nNo\n\n\nInput\n\n1 1\nz\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "549_H. Degenerate Matrix", "description": "The determinant of a matrix 2 × 2 is defined as follows:\n\n<image>\n\nA matrix is called degenerate if its determinant is equal to zero. \n\nThe norm ||A|| of a matrix A is defined as a maximum of absolute values of its elements.\n\nYou are given a matrix <image>. Consider any degenerate matrix B such that norm ||A - B|| is minimum possible. Determine ||A - B||.\n\nInput\n\nThe first line contains two integers a and b (|a|, |b| ≤ 109), the elements of the first row of matrix A. \n\nThe second line contains two integers c and d (|c|, |d| ≤ 109) the elements of the second row of matrix A.\n\nOutput\n\nOutput a single real number, the minimum possible value of ||A - B||. Your answer is considered to be correct if its absolute or relative error does not exceed 10 - 9.\n\nExamples\n\nInput\n\n1 2\n3 4\n\n\nOutput\n\n0.2000000000\n\n\nInput\n\n1 0\n0 1\n\n\nOutput\n\n0.5000000000\n\nNote\n\nIn the first sample matrix B is <image>\n\nIn the second sample matrix B is <image>", "grammar": {"answer": null}}
{"name": "p02636 AtCoder Grand Contest 046 - Secret Passage", "description": "Given is a string S consisting of `0` and `1`. Find the number of strings, modulo 998244353, that can result from applying the following operation on S zero or more times:\n\n* Remove the two characters at the beginning of S, erase one of them, and reinsert the other somewhere in S. This operation can be applied only when S has two or more characters.\n\nConstraints\n\n* 1 \\leq |S| \\leq 300\n* S consists of `0` and `1`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the number of strings, modulo 998244353, that can result from applying the operation on S zero or more times.\n\nExamples\n\nInput\n\n0001\n\n\nOutput\n\n8\n\n\nInput\n\n110001\n\n\nOutput\n\n24\n\n\nInput\n\n11101111011111000000000110000001111100011111000000001111111110000000111111111\n\n\nOutput\n\n697354558", "grammar": {"answer": null}}
{"name": "1268_C. K Integers", "description": "You are given a permutation p_1, p_2, …, p_n.\n\nIn one move you can swap two adjacent values.\n\nYou want to perform a minimum number of moves, such that in the end there will exist a subsegment 1,2,…, k, in other words in the end there should be an integer i, 1 ≤ i ≤ n-k+1 such that p_i = 1, p_{i+1} = 2, …, p_{i+k-1}=k.\n\nLet f(k) be the minimum number of moves that you need to make a subsegment with values 1,2,…,k appear in the permutation.\n\nYou need to find f(1), f(2), …, f(n).\n\nInput\n\nThe first line of input contains one integer n (1 ≤ n ≤ 200 000): the number of elements in the permutation.\n\nThe next line of input contains n integers p_1, p_2, …, p_n: given permutation (1 ≤ p_i ≤ n).\n\nOutput\n\nPrint n integers, the minimum number of moves that you need to make a subsegment with values 1,2,…,k appear in the permutation, for k=1, 2, …, n.\n\nExamples\n\nInput\n\n\n5\n5 4 3 2 1\n\n\nOutput\n\n\n0 1 3 6 10 \n\n\nInput\n\n\n3\n1 2 3\n\n\nOutput\n\n\n0 0 0 ", "grammar": {"answer": null}}
{"name": "32_A. Reconnaissance", "description": "According to the regulations of Berland's army, a reconnaissance unit should consist of exactly two soldiers. Since these two soldiers shouldn't differ much, their heights can differ by at most d centimeters. Captain Bob has n soldiers in his detachment. Their heights are a1, a2, ..., an centimeters. Some soldiers are of the same height. Bob wants to know, how many ways exist to form a reconnaissance unit of two soldiers from his detachment.\n\nWays (1, 2) and (2, 1) should be regarded as different.\n\nInput\n\nThe first line contains two integers n and d (1 ≤ n ≤ 1000, 1 ≤ d ≤ 109) — amount of soldiers in Bob's detachment and the maximum allowed height difference respectively. The second line contains n space-separated integers — heights of all the soldiers in Bob's detachment. These numbers don't exceed 109.\n\nOutput\n\nOutput one number — amount of ways to form a reconnaissance unit of two soldiers, whose height difference doesn't exceed d.\n\nExamples\n\nInput\n\n5 10\n10 20 50 60 65\n\n\nOutput\n\n6\n\n\nInput\n\n5 1\n55 30 29 31 55\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "837_F. Prefix Sums", "description": "Consider the function p(x), where x is an array of m integers, which returns an array y consisting of m + 1 integers such that yi is equal to the sum of first i elements of array x (0 ≤ i ≤ m).\n\nYou have an infinite sequence of arrays A0, A1, A2..., where A0 is given in the input, and for each i ≥ 1 Ai = p(Ai - 1). Also you have a positive integer k. You have to find minimum possible i such that Ai contains a number which is larger or equal than k.\n\nInput\n\nThe first line contains two integers n and k (2 ≤ n ≤ 200000, 1 ≤ k ≤ 1018). n is the size of array A0.\n\nThe second line contains n integers A00, A01... A0n - 1 — the elements of A0 (0 ≤ A0i ≤ 109). At least two elements of A0 are positive.\n\nOutput\n\nPrint the minimum i such that Ai contains a number which is larger or equal than k.\n\nExamples\n\nInput\n\n2 2\n1 1\n\n\nOutput\n\n1\n\n\nInput\n\n3 6\n1 1 1\n\n\nOutput\n\n2\n\n\nInput\n\n3 1\n1 0 1\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02905 AtCoder Grand Contest 038 - LCMs", "description": "We have an integer sequence of length N: A_0,A_1,\\cdots,A_{N-1}.\n\nFind the following sum (\\mathrm{lcm}(a, b) denotes the least common multiple of a and b):\n\n* \\sum_{i=0}^{N-2} \\sum_{j=i+1}^{N-1} \\mathrm{lcm}(A_i,A_j)\n\n\n\nSince the answer may be enormous, compute it modulo 998244353.\n\nConstraints\n\n* 1 \\leq N \\leq 200000\n* 1 \\leq A_i \\leq 1000000\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_0\\ A_1\\ \\cdots\\ A_{N-1}\n\n\nOutput\n\nPrint the sum modulo 998244353.\n\nExamples\n\nInput\n\n3\n2 4 6\n\n\nOutput\n\n22\n\n\nInput\n\n8\n1 2 3 4 6 8 12 12\n\n\nOutput\n\n313\n\n\nInput\n\n10\n356822 296174 484500 710640 518322 888250 259161 609120 592348 713644\n\n\nOutput\n\n353891724", "grammar": {"answer": null}}
{"name": "p03027 M-SOLUTIONS Programming Contest - Product of Arithmetic Progression", "description": "Consider the following arithmetic progression with n terms:\n\n* x, x + d, x + 2d, \\ldots, x + (n-1)d\n\n\n\nWhat is the product of all terms in this sequence? Compute the answer modulo 1\\ 000\\ 003.\n\nYou are given Q queries of this form. In the i-th query, compute the answer in case x = x_i, d = d_i, n = n_i.\n\nConstraints\n\n* 1 \\leq Q \\leq 10^5\n* 0 \\leq x_i, d_i \\leq 1\\ 000\\ 002\n* 1 \\leq n_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nQ\nx_1 d_1 n_1\n:\nx_Q d_Q n_Q\n\n\nOutput\n\nPrint Q lines.\n\nIn the i-th line, print the answer for the i-th query.\n\nExample\n\nInput\n\n2\n7 2 4\n12345 67890 2019\n\n\nOutput\n\n9009\n916936", "grammar": {"answer": null}}
{"name": "p02999 AtCoder Beginner Contest 130 - Rounding", "description": "X and A are integers between 0 and 9 (inclusive).\n\nIf X is less than A, print 0; if X is not less than A, print 10.\n\nConstraints\n\n* 0 \\leq X, A \\leq 9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX A\n\n\nOutput\n\nIf X is less than A, print 0; if X is not less than A, print 10.\n\nExamples\n\nInput\n\n3 5\n\n\nOutput\n\n0\n\n\nInput\n\n7 5\n\n\nOutput\n\n10\n\n\nInput\n\n6 6\n\n\nOutput\n\n10", "grammar": {"answer": null}}
{"name": "1256_A. Payment Without Change", "description": "You have a coins of value n and b coins of value 1. You always pay in exact change, so you want to know if there exist such x and y that if you take x (0 ≤ x ≤ a) coins of value n and y (0 ≤ y ≤ b) coins of value 1, then the total value of taken coins will be S.\n\nYou have to answer q independent test cases.\n\nInput\n\nThe first line of the input contains one integer q (1 ≤ q ≤ 10^4) — the number of test cases. Then q test cases follow.\n\nThe only line of the test case contains four integers a, b, n and S (1 ≤ a, b, n, S ≤ 10^9) — the number of coins of value n, the number of coins of value 1, the value n and the required total value.\n\nOutput\n\nFor the i-th test case print the answer on it — YES (without quotes) if there exist such x and y that if you take x coins of value n and y coins of value 1, then the total value of taken coins will be S, and NO otherwise.\n\nYou may print every letter in any case you want (so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer).\n\nExample\n\nInput\n\n\n4\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n\n\nOutput\n\n\nYES\nNO\nNO\nYES", "grammar": {"answer": null}}
{"name": "243_E. Matrix", "description": "Let's consider an n × n square matrix, consisting of digits one and zero.\n\nWe'll consider a matrix good, if it meets the following condition: in each row of the matrix all ones go in one group. That is, each row of the matrix looks like that 00...0011...1100...00 (or simply consists of zeroes if it has no ones).\n\nYou are given matrix a of size n × n, consisting of zeroes and ones. Your task is to determine whether you can get a good matrix b from it by rearranging the columns or not.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 500) — the size of matrix a.\n\nEach of n following lines contains n characters \"0\" and \"1\" — matrix a. Note that the characters are written without separators.\n\nOutput\n\nPrint \"YES\" in the first line, if you can rearrange the matrix columns so as to get a good matrix b. In the next n lines print the good matrix b. If there are multiple answers, you are allowed to print any of them.\n\nIf it is impossible to get a good matrix, print \"NO\".\n\nExamples\n\nInput\n\n6\n100010\n110110\n011001\n010010\n000100\n011001\n\n\nOutput\n\nYES\n011000\n111100\n000111\n001100\n100000\n000111\n\n\nInput\n\n3\n110\n101\n011\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p02550 AtCoder Beginner Contest 179 - Sequence Sum", "description": "Let us denote by f(x, m) the remainder of the Euclidean division of x by m.\n\nLet A be the sequence that is defined by the initial value A_1=X and the recurrence relation A_{n+1} = f(A_n^2, M). Find \\displaystyle{\\sum_{i=1}^N A_i}.\n\nConstraints\n\n* 1 \\leq N \\leq 10^{10}\n* 0 \\leq X < M \\leq 10^5\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN X M\n\n\nOutput\n\nPrint \\displaystyle{\\sum_{i=1}^N A_i}.\n\nExamples\n\nInput\n\n6 2 1001\n\n\nOutput\n\n1369\n\n\nInput\n\n1000 2 16\n\n\nOutput\n\n6\n\n\nInput\n\n10000000000 10 99959\n\n\nOutput\n\n492443256176507", "grammar": {"answer": null}}
{"name": "622_B. The Time", "description": "You are given the current time in 24-hour format hh:mm. Find and print the time after a minutes.\n\nNote that you should find only the time after a minutes, see the examples to clarify the problem statement.\n\nYou can read more about 24-hour format here <https://en.wikipedia.org/wiki/24-hour_clock>.\n\nInput\n\nThe first line contains the current time in the format hh:mm (0 ≤ hh < 24, 0 ≤ mm < 60). The hours and the minutes are given with two digits (the hours or the minutes less than 10 are given with the leading zeroes).\n\nThe second line contains integer a (0 ≤ a ≤ 104) — the number of the minutes passed.\n\nOutput\n\nThe only line should contain the time after a minutes in the format described in the input. Note that you should print exactly two digits for the hours and the minutes (add leading zeroes to the numbers if needed).\n\nSee the examples to check the input/output format.\n\nExamples\n\nInput\n\n23:59\n10\n\n\nOutput\n\n00:09\n\n\nInput\n\n20:20\n121\n\n\nOutput\n\n22:21\n\n\nInput\n\n10:10\n0\n\n\nOutput\n\n10:10", "grammar": {"answer": null}}
{"name": "p02765 AtCoder Beginner Contest 156 - Beginner", "description": "Takahashi is a member of a programming competition site, ButCoder.\n\nEach member of ButCoder is assigned two values: Inner Rating and Displayed Rating.\n\nThe Displayed Rating of a member is equal to their Inner Rating if the member has participated in 10 or more contests. Otherwise, the Displayed Rating will be their Inner Rating minus 100 \\times (10 - K) when the member has participated in K contests.\n\nTakahashi has participated in N contests, and his Displayed Rating is R. Find his Inner Rating.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 100\n* 0 \\leq R \\leq 4111\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN R\n\n\nOutput\n\nPrint his Inner Rating.\n\nExamples\n\nInput\n\n2 2919\n\n\nOutput\n\n3719\n\n\nInput\n\n22 3051\n\n\nOutput\n\n3051", "grammar": {"answer": null}}
{"name": "p03213 AtCoder Beginner Contest 114 - 756", "description": "You are given an integer N. Among the divisors of N! (= 1 \\times 2 \\times ... \\times N), how many Shichi-Go numbers (literally \"Seven-Five numbers\") are there?\n\nHere, a Shichi-Go number is a positive integer that has exactly 75 divisors.\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the number of the Shichi-Go numbers that are divisors of N!.\n\nExamples\n\nInput\n\n9\n\n\nOutput\n\n0\n\n\nInput\n\n10\n\n\nOutput\n\n1\n\n\nInput\n\n100\n\n\nOutput\n\n543", "grammar": {"answer": null}}
{"name": "749_A. Bachgold Problem", "description": "Bachgold problem is very easy to formulate. Given a positive integer n represent it as a sum of maximum possible number of prime numbers. One can prove that such representation exists for any integer greater than 1.\n\nRecall that integer k is called prime if it is greater than 1 and has exactly two positive integer divisors — 1 and k. \n\nInput\n\nThe only line of the input contains a single integer n (2 ≤ n ≤ 100 000).\n\nOutput\n\nThe first line of the output contains a single integer k — maximum possible number of primes in representation.\n\nThe second line should contain k primes with their sum equal to n. You can print them in any order. If there are several optimal solution, print any of them.\n\nExamples\n\nInput\n\n5\n\n\nOutput\n\n2\n2 3\n\n\nInput\n\n6\n\n\nOutput\n\n3\n2 2 2", "grammar": {"answer": null}}
{"name": "611_B. New Year and Old Property", "description": "The year 2015 is almost over.\n\nLimak is a little polar bear. He has recently learnt about the binary system. He noticed that the passing year has exactly one zero in its representation in the binary system — 201510 = 111110111112. Note that he doesn't care about the number of zeros in the decimal representation.\n\nLimak chose some interval of years. He is going to count all years from this interval that have exactly one zero in the binary representation. Can you do it faster?\n\nAssume that all positive integers are always written without leading zeros.\n\nInput\n\nThe only line of the input contains two integers a and b (1 ≤ a ≤ b ≤ 1018) — the first year and the last year in Limak's interval respectively.\n\nOutput\n\nPrint one integer – the number of years Limak will count in his chosen interval.\n\nExamples\n\nInput\n\n5 10\n\n\nOutput\n\n2\n\n\nInput\n\n2015 2015\n\n\nOutput\n\n1\n\n\nInput\n\n100 105\n\n\nOutput\n\n0\n\n\nInput\n\n72057594000000000 72057595000000000\n\n\nOutput\n\n26\n\nNote\n\nIn the first sample Limak's interval contains numbers 510 = 1012, 610 = 1102, 710 = 1112, 810 = 10002, 910 = 10012 and 1010 = 10102. Two of them (1012 and 1102) have the described property.", "grammar": {"answer": null}}
{"name": "p02415 Toggling Cases", "description": "Write a program which converts uppercase/lowercase letters to lowercase/uppercase for a given string.\n\nConstraints\n\n* The length of the input string < 1200\n\nInput\n\nA string is given in a line.\n\nOutput\n\nPrint the converted string in a line. Note that you do not need to convert any characters other than alphabetical letters.\n\nExample\n\nInput\n\nfAIR, LATER, OCCASIONALLY CLOUDY.\n\n\nOutput\n\nFair, later, occasionally cloudy.", "grammar": {"answer": null}}
{"name": "1028_B. Unnatural Conditions", "description": "Let s(x) be sum of digits in decimal representation of positive integer x. Given two integers n and m, find some positive integers a and b such that \n\n  * s(a) ≥ n, \n  * s(b) ≥ n, \n  * s(a + b) ≤ m. \n\nInput\n\nThe only line of input contain two integers n and m (1 ≤ n, m ≤ 1129).\n\nOutput\n\nPrint two lines, one for decimal representation of a and one for decimal representation of b. Both numbers must not contain leading zeros and must have length no more than 2230.\n\nExamples\n\nInput\n\n6 5\n\n\nOutput\n\n6 \n7\n\n\nInput\n\n8 16\n\n\nOutput\n\n35 \n53\n\nNote\n\nIn the first sample, we have n = 6 and m = 5. One valid solution is a = 6, b = 7. Indeed, we have s(a) = 6 ≥ n and s(b) = 7 ≥ n, and also s(a + b) = s(13) = 4 ≤ m.", "grammar": {"answer": null}}
{"name": "p00073 Surface Area of Quadrangular Pyramid", "description": "Create a program that outputs the surface area S of a square cone with a height of h, with a square with one side x as the base. However, assume that the line segment connecting the apex and the center of the base is orthogonal to the base. Also, x and h are positive integers less than or equal to 100.\n\nInput\n\nGiven multiple datasets. Each dataset is given in the following format:\n\n\nx\nh\n\n\nWhen both x and h are 0, it indicates the end of input.\n\n\n\nOutput\n\nOutput S (real number) on one line for each data set. The output may contain an error of 0.00001 or less.\n\nExample\n\nInput\n\n6\n4\n7\n9\n0\n0\n\n\nOutput\n\n96.000000\n184.192455", "grammar": {"answer": null}}
{"name": "p02000 Bumpy Array", "description": "problem\n\nGiven the sequence $ A $ of length $ N $. The $ i $ item in $ A $ is $ A_i $. You can do the following for this sequence:\n\n* $ 1 \\ leq i \\ leq N --Choose the integer i that is 1 $. Swap the value of $ A_i $ with the value of $ A_ {i + 1} $.\n\n\n\nFind the minimum number of operations required to make $ A $ a sequence of bumps.\n\nA sequence of length $ N $ that satisfies the following conditions is defined as a sequence of irregularities.\n\n* For any $ i $ that satisfies $ 1 <i <N $, ​​$ A_ {i + 1}, A_ {i --1}> A_i $ or $ A_ {i + 1}, A_ {i --1} <A_i Satisfy $.\nIntuitively, increase, decrease, increase ... (decrease, like $ 1, \\ 10, \\ 2, \\ 30, \\ \\ dots (10, \\ 1, \\ 30, \\ 2, \\ \\ dots) $ It is a sequence that repeats increase, decrease ...).\n\n\n\noutput\n\nOutput the minimum number of operations required to make a sequence of bumps. Also, output a line break at the end.\n\nExample\n\nInput\n\n5\n1 2 3 4 5\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "656_F. Ace It!", "description": "\n\nInput\n\nThe only line of the input is a string of 7 characters. The first character is letter A, followed by 6 digits. The input is guaranteed to be valid (for certain definition of \"valid\").\n\nOutput\n\nOutput a single integer.\n\nExamples\n\nInput\n\nA221033\n\n\nOutput\n\n21\n\n\nInput\n\nA223635\n\n\nOutput\n\n22\n\n\nInput\n\nA232726\n\n\nOutput\n\n23", "grammar": {"answer": null}}
{"name": "1295_D. Same GCDs", "description": "You are given two integers a and m. Calculate the number of integers x such that 0 ≤ x < m and \\gcd(a, m) = \\gcd(a + x, m).\n\nNote: \\gcd(a, b) is the greatest common divisor of a and b.\n\nInput\n\nThe first line contains the single integer T (1 ≤ T ≤ 50) — the number of test cases.\n\nNext T lines contain test cases — one per line. Each line contains two integers a and m (1 ≤ a < m ≤ 10^{10}).\n\nOutput\n\nPrint T integers — one per test case. For each test case print the number of appropriate x-s.\n\nExample\n\nInput\n\n\n3\n4 9\n5 10\n42 9999999967\n\n\nOutput\n\n\n6\n1\n9999999966\n\nNote\n\nIn the first test case appropriate x-s are [0, 1, 3, 4, 6, 7].\n\nIn the second test case the only appropriate x is 0.", "grammar": {"answer": null}}
{"name": "p03555 AtCoder Beginner Contest 077 - Rotation", "description": "You are given a grid with 2 rows and 3 columns of squares. The color of the square at the i-th row and j-th column is represented by the character C_{ij}.\n\nWrite a program that prints `YES` if this grid remains the same when rotated 180 degrees, and prints `NO` otherwise.\n\nConstraints\n\n* C_{i,j}(1 \\leq i \\leq 2, 1 \\leq j \\leq 3) is a lowercase English letter.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nC_{11}C_{12}C_{13}\nC_{21}C_{22}C_{23}\n\n\nOutput\n\nPrint `YES` if this grid remains the same when rotated 180 degrees; print `NO` otherwise.\n\nExamples\n\nInput\n\npot\ntop\n\n\nOutput\n\nYES\n\n\nInput\n\ntab\nbet\n\n\nOutput\n\nNO\n\n\nInput\n\neye\neel\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p03473 AtCoder Beginner Contest 084 - New Year", "description": "How many hours do we have until New Year at M o'clock (24-hour notation) on 30th, December?\n\nConstraints\n\n* 1≤M≤23\n* M is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nM\n\n\nOutput\n\nIf we have x hours until New Year at M o'clock on 30th, December, print x.\n\nExamples\n\nInput\n\n21\n\n\nOutput\n\n27\n\n\nInput\n\n12\n\n\nOutput\n\n36", "grammar": {"answer": null}}
{"name": "p03023 M-SOLUTIONS Programming Contest - Sum of Interior Angles", "description": "Given an integer N not less than 3, find the sum of the interior angles of a regular polygon with N sides.\n\nPrint the answer in degrees, but do not print units.\n\nConstraints\n\n* 3 \\leq N \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint an integer representing the sum of the interior angles of a regular polygon with N sides.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n180\n\n\nInput\n\n100\n\n\nOutput\n\n17640", "grammar": {"answer": null}}
{"name": "372_A. Counting Kangaroos is Fun", "description": "There are n kangaroos with pockets. Each kangaroo has a size (integer number). A kangaroo can go into another kangaroo's pocket if and only if the size of kangaroo who hold the kangaroo is at least twice as large as the size of kangaroo who is held.\n\nEach kangaroo can hold at most one kangaroo, and the kangaroo who is held by another kangaroo cannot hold any kangaroos.\n\nThe kangaroo who is held by another kangaroo cannot be visible from outside. Please, find a plan of holding kangaroos with the minimal number of kangaroos who is visible.\n\nInput\n\nThe first line contains a single integer — n (1 ≤ n ≤ 5·105). Each of the next n lines contains an integer si — the size of the i-th kangaroo (1 ≤ si ≤ 105).\n\nOutput\n\nOutput a single integer — the optimal number of visible kangaroos.\n\nExamples\n\nInput\n\n8\n2\n5\n7\n6\n9\n8\n4\n2\n\n\nOutput\n\n5\n\n\nInput\n\n8\n9\n1\n6\n2\n6\n5\n8\n3\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "281_C. Rectangle Puzzle", "description": "You are given two rectangles on a plane. The centers of both rectangles are located in the origin of coordinates (meaning the center of the rectangle's symmetry). The first rectangle's sides are parallel to the coordinate axes: the length of the side that is parallel to the Ox axis, equals w, the length of the side that is parallel to the Oy axis, equals h. The second rectangle can be obtained by rotating the first rectangle relative to the origin of coordinates by angle α.\n\n<image>\n\nYour task is to find the area of the region which belongs to both given rectangles. This region is shaded in the picture.\n\nInput\n\nThe first line contains three integers w, h, α (1 ≤ w, h ≤ 106; 0 ≤ α ≤ 180). Angle α is given in degrees.\n\nOutput\n\nIn a single line print a real number — the area of the region which belongs to both given rectangles.\n\nThe answer will be considered correct if its relative or absolute error doesn't exceed 10 - 6.\n\nExamples\n\nInput\n\n1 1 45\n\n\nOutput\n\n0.828427125\n\n\nInput\n\n6 4 30\n\n\nOutput\n\n19.668384925\n\nNote\n\nThe second sample has been drawn on the picture above.", "grammar": {"answer": null}}
{"name": "630_F. Selection of Personnel", "description": "One company of IT City decided to create a group of innovative developments consisting from 5 to 7 people and hire new employees for it. After placing an advertisment the company received n resumes. Now the HR department has to evaluate each possible group composition and select one of them. Your task is to count the number of variants of group composition to evaluate.\n\nInput\n\nThe only line of the input contains one integer n (7 ≤ n ≤ 777) — the number of potential employees that sent resumes.\n\nOutput\n\nOutput one integer — the number of different variants of group composition.\n\nExamples\n\nInput\n\n7\n\n\nOutput\n\n29", "grammar": {"answer": null}}
{"name": "p03031 AtCoder Beginner Contest 128 - Switches", "description": "We have N switches with \"on\" and \"off\" state, and M bulbs. The switches are numbered 1 to N, and the bulbs are numbered 1 to M.\n\nBulb i is connected to k_i switches: Switch s_{i1}, s_{i2}, ..., and s_{ik_i}. It is lighted when the number of switches that are \"on\" among these switches is congruent to p_i modulo 2.\n\nHow many combinations of \"on\" and \"off\" states of the switches light all the bulbs?\n\nConstraints\n\n* 1 \\leq N, M \\leq 10\n* 1 \\leq k_i \\leq N\n* 1 \\leq s_{ij} \\leq N\n* s_{ia} \\neq s_{ib} (a \\neq b)\n* p_i is 0 or 1.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nk_1 s_{11} s_{12} ... s_{1k_1}\n:\nk_M s_{M1} s_{M2} ... s_{Mk_M}\np_1 p_2 ... p_M\n\n\nOutput\n\nPrint the number of combinations of \"on\" and \"off\" states of the switches that light all the bulbs.\n\nExamples\n\nInput\n\n2 2\n2 1 2\n1 2\n0 1\n\n\nOutput\n\n1\n\n\nInput\n\n2 3\n2 1 2\n1 1\n1 2\n0 0 1\n\n\nOutput\n\n0\n\n\nInput\n\n5 2\n3 1 2 5\n2 2 3\n1 0\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "p03545 AtCoder Beginner Contest 079 - Train Ticket", "description": "Sitting in a station waiting room, Joisino is gazing at her train ticket.\n\nThe ticket is numbered with four digits A, B, C and D in this order, each between 0 and 9 (inclusive).\n\nIn the formula A op1 B op2 C op3 D = 7, replace each of the symbols op1, op2 and op3 with `+` or `-` so that the formula holds.\n\nThe given input guarantees that there is a solution. If there are multiple solutions, any of them will be accepted.\n\nConstraints\n\n* 0≤A,B,C,D≤9\n* All input values are integers.\n* It is guaranteed that there is a solution.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nABCD\n\n\nOutput\n\nPrint the formula you made, including the part `=7`.\n\nUse the signs `+` and `-`.\n\nDo not print a space between a digit and a sign.\n\nExamples\n\nInput\n\n1222\n\n\nOutput\n\n1+2+2+2=7\n\n\nInput\n\n0290\n\n\nOutput\n\n0-2+9+0=7\n\n\nInput\n\n3242\n\n\nOutput\n\n3+2+4-2=7", "grammar": {"answer": null}}
{"name": "297_A. Parity Game", "description": "You are fishing with polar bears Alice and Bob. While waiting for the fish to bite, the polar bears get bored. They come up with a game. First Alice and Bob each writes a 01-string (strings that only contain character \"0\" and \"1\") a and b. Then you try to turn a into b using two types of operations:\n\n  * Write parity(a) to the end of a. For example, <image>. \n  * Remove the first character of a. For example, <image>. You cannot perform this operation if a is empty. \n\n\n\nYou can use as many operations as you want. The problem is, is it possible to turn a into b?\n\nThe parity of a 01-string is 1 if there is an odd number of \"1\"s in the string, and 0 otherwise.\n\nInput\n\nThe first line contains the string a and the second line contains the string b (1 ≤ |a|, |b| ≤ 1000). Both strings contain only the characters \"0\" and \"1\". Here |x| denotes the length of the string x.\n\nOutput\n\nPrint \"YES\" (without quotes) if it is possible to turn a into b, and \"NO\" (without quotes) otherwise.\n\nExamples\n\nInput\n\n01011\n0110\n\n\nOutput\n\nYES\n\n\nInput\n\n0011\n1110\n\n\nOutput\n\nNO\n\nNote\n\nIn the first sample, the steps are as follows: 01011 → 1011 → 011 → 0110", "grammar": {"answer": null}}
{"name": "p02781 AtCoder Beginner Contest 154 - Almost Everywhere Zero", "description": "Find the number of integers between 1 and N (inclusive) that contains exactly K non-zero digits when written in base ten.\n\nConstraints\n\n* 1 \\leq N < 10^{100}\n* 1 \\leq K \\leq 3\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nK\n\n\nOutput\n\nPrint the count.\n\nExamples\n\nInput\n\n100\n1\n\n\nOutput\n\n19\n\n\nInput\n\n25\n2\n\n\nOutput\n\n14\n\n\nInput\n\n314159\n2\n\n\nOutput\n\n937\n\n\nInput\n\n9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\n3\n\n\nOutput\n\n117879300", "grammar": {"answer": null}}
{"name": "1288_C. Two Arrays", "description": "You are given two integers n and m. Calculate the number of pairs of arrays (a, b) such that:\n\n  * the length of both arrays is equal to m; \n  * each element of each array is an integer between 1 and n (inclusive); \n  * a_i ≤ b_i for any index i from 1 to m; \n  * array a is sorted in non-descending order; \n  * array b is sorted in non-ascending order. \n\n\n\nAs the result can be very large, you should print it modulo 10^9+7.\n\nInput\n\nThe only line contains two integers n and m (1 ≤ n ≤ 1000, 1 ≤ m ≤ 10).\n\nOutput\n\nPrint one integer – the number of arrays a and b satisfying the conditions described above modulo 10^9+7.\n\nExamples\n\nInput\n\n\n2 2\n\n\nOutput\n\n\n5\n\n\nInput\n\n\n10 1\n\n\nOutput\n\n\n55\n\n\nInput\n\n\n723 9\n\n\nOutput\n\n\n157557417\n\nNote\n\nIn the first test there are 5 suitable arrays: \n\n  * a = [1, 1], b = [2, 2]; \n  * a = [1, 2], b = [2, 2]; \n  * a = [2, 2], b = [2, 2]; \n  * a = [1, 1], b = [2, 1]; \n  * a = [1, 1], b = [1, 1]. ", "grammar": {"answer": null}}
{"name": "p03156 AISing Programming Contest 2019 - Contests", "description": "You have written N problems to hold programming contests. The i-th problem will have a score of P_i points if used in a contest.\n\nWith these problems, you would like to hold as many contests as possible under the following condition:\n\n* A contest has three problems. The first problem has a score not greater than A points, the second has a score between A + 1 and B points (inclusive), and the third has a score not less than B + 1 points.\n\n\n\nThe same problem should not be used in multiple contests. At most how many contests can be held?\n\nConstraints\n\n* 3 \\leq N \\leq 100\n* 1 \\leq P_i \\leq 20 (1 \\leq i \\leq N)\n* 1 \\leq A < B < 20\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA B\nP_1 P_2 ... P_N\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n7\n5 15\n1 10 16 2 7 20 12\n\n\nOutput\n\n2\n\n\nInput\n\n8\n3 8\n5 5 5 10 10 10 15 20\n\n\nOutput\n\n0\n\n\nInput\n\n3\n5 6\n5 6 10\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p02017 Pray", "description": "C: Prayer (Pray)\n\nSome twins are famous for praying before the contest.\n\nThere are four integers $ H, W, X, Y $, and it seems unlucky if $ H \\ times W $ and $ x + y $ are both odd numbers.\n\ninput\n\nFour integers $ H, W, X, Y $ are given, separated by spaces.\n\noutput\n\nOutput \"No\" if you are unlucky, or \"Yes\" if not. But don't forget the last line break.\n\nConstraint\n\n* $ H, W, X, Y $ are integers greater than or equal to $ 1 $ and less than or equal to $ 100 $\n\n\n\nInput example 1\n\n\n3 5 1 4\n\n\nOutput example 1\n\n\nNo\n\n\n$ 3 \\ times 5 = 15 $, $ 1 + 4 = 5 $, both odd numbers, so it's unlucky.\n\nInput example 2\n\n\n3 5 2 4\n\n\nOutput example 2\n\n\nYes\n\n\n$ 3 \\ times 5 = 15 $ is odd, but $ 2 + 4 = 6 $ is even, so good luck isn't bad.\n\n\n\n\n\nExample\n\nInput\n\n3 5 1 4\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p03483 AtCoder Regular Contest 088 - Papple Sort", "description": "You are given a string S consisting of lowercase English letters. Determine whether we can turn S into a palindrome by repeating the operation of swapping two adjacent characters. If it is possible, find the minimum required number of operations.\n\nConstraints\n\n* 1 \\leq |S| \\leq 2 × 10^5\n* S consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nIf we cannot turn S into a palindrome, print `-1`. Otherwise, print the minimum required number of operations.\n\nExamples\n\nInput\n\neel\n\n\nOutput\n\n1\n\n\nInput\n\nataatmma\n\n\nOutput\n\n4\n\n\nInput\n\nsnuke\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p02206 Prize", "description": "Prize\n\nSegtree entered a programming contest with a team of $ N $ and won a $ K $ yen prize! I'm trying to distribute this prize now.\n\nEach $ N $ team member, including Segtree, is numbered from $ 1 $ to $ N $ in order of ability. Segtree is $ 1 $.\n\nIf the prize amount of $ i $'s teammate $ (i \\ geq 2) $ is less than \"$ i-half of the prize amount of $ i's teammate rounded down to an integer\", that person Get angry.\n\nWhen distributing the $ K $ Yen prize so that no one gets angry, find the maximum prize that Segtree can get.\n\ninput\n\nInput is given from standard input in the following format.\n\n\nN K\n\n\noutput\n\nPlease output the maximum prize money that Segtree can receive.\n\nHowever, insert a line break at the end.\n\nConstraint\n\n* $ 1 \\ leq N, K \\ leq 10 ^ {18} $\n* All inputs are integers.\n\n\n\nInput example 1\n\n\n1 1\n\n\nOutput example 1\n\n\n1\n\n\nInput example 2\n\n\n819875141880895728 349993004923078537\n\n\nOutput example 2\n\n\n174996502461539284\n\n\n\n\n\n\nExample\n\nInput\n\n1 1\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p01979 Gochiusa-Number", "description": "problem\n\nAOR Ika-chan, who loves feasts, defined \"the number of feasts\". A feast number is a natural number that includes \"$ 51-3 $\" in $ 10 $ decimal notation.\n$? $ Can be any number from $ 0 $ to $ 9 $.\n\nFind the number of feasts out of the natural numbers below $ N $.\n\n\n\ninput\n\n$ N $\n\noutput\n\nOutput the number of feasts in one line. Also, output a line break at the end.\n\nExample\n\nInput\n\n5124\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p02319 0-1 Knapsack Problem II", "description": "You have N items that you want to put them into a knapsack. Item i has value vi and weight wi.\n\nYou want to find a subset of items to put such that:\n\n* The total value of the items is as large as possible.\n* The items have combined weight at most W, that is capacity of the knapsack.\n\n\n\nFind the maximum total value of items in the knapsack.\n\nConstraints\n\n* 1 ≤ N ≤ 100\n* 1 ≤ vi ≤ 100\n* 1 ≤ wi ≤ 10,000,000\n* 1 ≤ W ≤ 1,000,000,000\n\nInput\n\n\nN W\nv1 w1\nv2 w2\n:\nvN wN\n\n\nThe first line consists of the integers N and W. In the following N lines, the value and weight of the i-th item are given.\n\nOutput\n\nPrint the maximum total values of the items in a line.\n\nExamples\n\nInput\n\n4 5\n4 2\n5 2\n2 1\n8 3\n\n\nOutput\n\n13\n\n\nInput\n\n2 20\n5 9\n4 10\n\n\nOutput\n\n9", "grammar": {"answer": null}}
{"name": "p03437 AtCoder Petrozavodsk Contest 001 - Two Integers", "description": "You are given positive integers X and Y. If there exists a positive integer not greater than 10^{18} that is a multiple of X but not a multiple of Y, choose one such integer and print it. If it does not exist, print -1.\n\nConstraints\n\n* 1 ≤ X,Y ≤ 10^9\n* X and Y are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX Y\n\n\nOutput\n\nPrint a positive integer not greater than 10^{18} that is a multiple of X but not a multiple of Y, or print -1 if it does not exist.\n\nExamples\n\nInput\n\n8 6\n\n\nOutput\n\n16\n\n\nInput\n\n3 3\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p02893 AtCoder Grand Contest 039 - Division by Two with Something", "description": "Given are integers N and X. For each integer k between 0 and X (inclusive), find the answer to the following question, then compute the sum of all those answers, modulo 998244353.\n\n* Let us repeat the following operation on the integer k. Operation: if the integer is currently odd, subtract 1 from it and divide it by 2; otherwise, divide it by 2 and add 2^{N-1} to it. How many operations need to be performed until k returns to its original value? (The answer is considered to be 0 if k never returns to its original value.)\n\nConstraints\n\n* 1 \\leq N \\leq 2\\times 10^5\n* 0 \\leq X < 2^N\n* X is given in binary and has exactly N digits. (In case X has less than N digits, it is given with leading zeroes.)\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nX\n\n\nOutput\n\nPrint the sum of the answers to the questions for the integers between 0 and X (inclusive), modulo 998244353.\n\nExamples\n\nInput\n\n3\n111\n\n\nOutput\n\n40\n\n\nInput\n\n6\n110101\n\n\nOutput\n\n616\n\n\nInput\n\n30\n001110011011011101010111011100\n\n\nOutput\n\n549320998", "grammar": {"answer": null}}
{"name": "p02738 AtCoder Grand Contest 043 - Merge Triplets", "description": "Given is a positive integer N. Find the number of permutations (P_1,P_2,\\cdots,P_{3N}) of (1,2,\\cdots,3N) that can be generated through the procedure below. This number can be enormous, so print it modulo a prime number M.\n\n* Make N sequences A_1,A_2,\\cdots,A_N of length 3 each, using each of the integers 1 through 3N exactly once.\n* Let P be an empty sequence, and do the following operation 3N times.\n* Among the elements that are at the beginning of one of the sequences A_i that is non-empty, let the smallest be x.\n* Remove x from the sequence, and add x at the end of P.\n\nConstraints\n\n* 1 \\leq N \\leq 2000\n* 10^8 \\leq M \\leq 10^9+7\n* M is a prime number.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\n\n\nOutput\n\nPrint the number of permutations modulo M.\n\nExamples\n\nInput\n\n1 998244353\n\n\nOutput\n\n6\n\n\nInput\n\n2 998244353\n\n\nOutput\n\n261\n\n\nInput\n\n314 1000000007\n\n\nOutput\n\n182908545", "grammar": {"answer": null}}
{"name": "817_D. Imbalanced Array", "description": "You are given an array a consisting of n elements. The imbalance value of some subsegment of this array is the difference between the maximum and minimum element from this segment. The imbalance value of the array is the sum of imbalance values of all subsegments of this array.\n\nFor example, the imbalance value of array [1, 4, 1] is 9, because there are 6 different subsegments of this array: \n\n  * [1] (from index 1 to index 1), imbalance value is 0; \n  * [1, 4] (from index 1 to index 2), imbalance value is 3; \n  * [1, 4, 1] (from index 1 to index 3), imbalance value is 3; \n  * [4] (from index 2 to index 2), imbalance value is 0; \n  * [4, 1] (from index 2 to index 3), imbalance value is 3; \n  * [1] (from index 3 to index 3), imbalance value is 0; \n\n\n\nYou have to determine the imbalance value of the array a.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 106) — size of the array a.\n\nThe second line contains n integers a1, a2... an (1 ≤ ai ≤ 106) — elements of the array.\n\nOutput\n\nPrint one integer — the imbalance value of a.\n\nExample\n\nInput\n\n3\n1 4 1\n\n\nOutput\n\n9", "grammar": {"answer": null}}
{"name": "p00222 Prime Quadruplet", "description": "A set of four prime numbers arranged like (a, a + 2, a + 6, a + 8) is called a quadruplet prime number. Of the four prime numbers that make up a quadruplet prime, the largest number is called the size of the quadruplet prime. For example, the smallest prime quadruplet is a set of (5, 7, 11, 13), which is 13 in size. The next largest prime quadruplet is the set of (11, 13, 17, 19), which is 19 in size.\n\nCreate a program that takes the integer n (13 ≤ n ≤ 10,000,000) as input and outputs the maximum size of the quadruplet prime numbers whose size is n or less.\n\n\n\nInput\n\nA sequence of multiple datasets is given as input. The end of the input is indicated by a single line of zeros. One integer n is given on one row for each dataset.\n\nThe number of datasets does not exceed 2000.\n\nOutput\n\nOutputs the maximum prime quadruplet size on one line for each input dataset.\n\nExample\n\nInput\n\n13\n14\n15\n16\n17\n18\n19\n20\n10000\n0\n\n\nOutput\n\n13\n13\n13\n13\n13\n13\n19\n19\n9439", "grammar": {"answer": null}}
{"name": "p00012 A Point in a Triangle", "description": "There is a triangle formed by three points $(x_1, y_1)$, $(x_2, y_2)$, $(x_3, y_3)$ on a plain.\n\nWrite a program which prints \"YES\" if a point $P$ $(x_p, y_p)$ is in the triangle and \"NO\" if not.\n\nConstraints\n\nYou can assume that:\n\n* $ -100 \\leq x_1, y_1, x_2, y_2, x_3, y_3, x_p, y_p \\leq 100$\n* 1.0 $\\leq$ Length of each side of a tringle\n* 0.001 $\\leq$ Distance between $P$ and each side of a triangle\n\nInput\n\nInput consists of several datasets. Each dataset consists of:\n\n$x_1$ $y_1$ $x_2$ $y_2$ $x_3$ $y_3$ $x_p$ $y_p$\n\n\nAll the input are real numbers. Input ends with EOF. The number of datasets is less than or equal to 100.\n\nOutput\n\nFor each dataset, print \"YES\" or \"NO\" in a line.\n\nExample\n\nInput\n\n0.0 0.0 2.0 0.0 2.0 2.0 1.5 0.5\n0.0 0.0 1.0 4.0 5.0 3.0 -1.0 3.0\n\n\nOutput\n\nYES\nNO", "grammar": {"answer": null}}
{"name": "p02976 AtCoder Grand Contest 035 - Even Degrees", "description": "You are given a simple connected undirected graph with N vertices and M edges. The vertices are numbered 1 to N, and the i-th edge connects Vertex A_i and Vertex B_i. Takahashi will assign one of the two possible directions to each of the edges in the graph to make a directed graph. Determine if it is possible to make a directed graph with an even number of edges going out from every vertex. If the answer is yes, construct one such graph.\n\nConstraints\n\n* 2 \\leq N \\leq 10^5\n* N-1 \\leq M \\leq 10^5\n* 1 \\leq A_i,B_i \\leq N (1\\leq i\\leq M)\n* The given graph is simple and connected.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nA_1 B_1\n:\nA_M B_M\n\n\nOutput\n\nIf it is impossible to assign directions\b to satisfy the requirement, print -1. Otherwise, print an assignment of directions that satisfies the requirement, in the following format:\n\n\nC_1 D_1\n:\nC_M D_M\n\n\nHere each pair (C_i, D_i) means that there is an edge directed from Vertex C_i to Vertex D_i. The edges may be printed in any order.\n\nExamples\n\nInput\n\n4 4\n1 2\n2 3\n3 4\n4 1\n\n\nOutput\n\n1 2\n1 4\n3 2\n3 4\n\n\nInput\n\n5 5\n1 2\n2 3\n3 4\n2 5\n4 5\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p02582 AtCoder Beginner Contest 175 - Rainy Season", "description": "We have weather records at AtCoder Town for some consecutive three days. A string of length 3, S, represents the records - if the i-th character is `S`, it means it was sunny on the i-th day; if that character is `R`, it means it was rainy on that day.\n\nFind the maximum number of consecutive rainy days in this period.\n\nConstraints\n\n* |S| = 3\n* Each character of S is `S` or `R`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the maximum number of consecutive rainy days in the period.\n\nExamples\n\nInput\n\nRRS\n\n\nOutput\n\n2\n\n\nInput\n\nSSS\n\n\nOutput\n\n0\n\n\nInput\n\nRSR\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "352_B. Jeff and Periods", "description": "One day Jeff got hold of an integer sequence a1, a2, ..., an of length n. The boy immediately decided to analyze the sequence. For that, he needs to find all values of x, for which these conditions hold:\n\n  * x occurs in sequence a. \n  * Consider all positions of numbers x in the sequence a (such i, that ai = x). These numbers, sorted in the increasing order, must form an arithmetic progression. \n\n\n\nHelp Jeff, find all x that meet the problem conditions.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 105). The next line contains integers a1, a2, ..., an (1 ≤ ai ≤ 105). The numbers are separated by spaces.\n\nOutput\n\nIn the first line print integer t — the number of valid x. On each of the next t lines print two integers x and px, where x is current suitable value, px is the common difference between numbers in the progression (if x occurs exactly once in the sequence, px must equal 0). Print the pairs in the order of increasing x.\n\nExamples\n\nInput\n\n1\n2\n\n\nOutput\n\n1\n2 0\n\n\nInput\n\n8\n1 2 1 3 1 2 1 5\n\n\nOutput\n\n4\n1 2\n2 4\n3 0\n5 0\n\nNote\n\nIn the first test 2 occurs exactly once in the sequence, ergo p2 = 0.", "grammar": {"answer": null}}
{"name": "396_B. On Sum of Fractions", "description": "Let's assume that \n\n  * v(n) is the largest prime number, that does not exceed n;\n  * u(n) is the smallest prime number strictly greater than n. \n\n\n\nFind <image>.\n\nInput\n\nThe first line contains integer t (1 ≤ t ≤ 500) — the number of testscases. \n\nEach of the following t lines of the input contains integer n (2 ≤ n ≤ 109).\n\nOutput\n\nPrint t lines: the i-th of them must contain the answer to the i-th test as an irreducible fraction \"p/q\", where p, q are integers, q > 0.\n\nExamples\n\nInput\n\n2\n2\n3\n\n\nOutput\n\n1/6\n7/30", "grammar": {"answer": null}}
{"name": "205_C. Little Elephant and Interval", "description": "The Little Elephant very much loves sums on intervals.\n\nThis time he has a pair of integers l and r (l ≤ r). The Little Elephant has to find the number of such integers x (l ≤ x ≤ r), that the first digit of integer x equals the last one (in decimal notation). For example, such numbers as 101, 477474 or 9 will be included in the answer and 47, 253 or 1020 will not.\n\nHelp him and count the number of described numbers x for a given pair l and r.\n\nInput\n\nThe single line contains a pair of integers l and r (1 ≤ l ≤ r ≤ 1018) — the boundaries of the interval.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in С++. It is preferred to use cin, cout streams or the %I64d specifier.\n\nOutput\n\nOn a single line print a single integer — the answer to the problem.\n\nExamples\n\nInput\n\n2 47\n\n\nOutput\n\n12\n\n\nInput\n\n47 1024\n\n\nOutput\n\n98\n\nNote\n\nIn the first sample the answer includes integers 2, 3, 4, 5, 6, 7, 8, 9, 11, 22, 33, 44. ", "grammar": {"answer": null}}
{"name": "409_F. 000001", "description": "\n\nInput\n\nThe input contains a single integer a (1 ≤ a ≤ 64).\n\nOutput\n\nOutput a single integer.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n1\n\n\nInput\n\n4\n\n\nOutput\n\n2\n\n\nInput\n\n27\n\n\nOutput\n\n5\n\n\nInput\n\n42\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p03377 AtCoder Beginner Contest 094 - Cats and Dogs", "description": "There are a total of A + B cats and dogs. Among them, A are known to be cats, but the remaining B are not known to be either cats or dogs.\n\nDetermine if it is possible that there are exactly X cats among these A + B animals.\n\nConstraints\n\n* 1 \\leq A \\leq 100\n* 1 \\leq B \\leq 100\n* 1 \\leq X \\leq 200\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B X\n\n\nOutput\n\nIf it is possible that there are exactly X cats, print `YES`; if it is impossible, print `NO`.\n\nExamples\n\nInput\n\n3 5 4\n\n\nOutput\n\nYES\n\n\nInput\n\n2 2 6\n\n\nOutput\n\nNO\n\n\nInput\n\n5 3 2\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p03659 AtCoder Beginner Contest 067 - Splitting Pile", "description": "Snuke and Raccoon have a heap of N cards. The i-th card from the top has the integer a_i written on it.\n\nThey will share these cards. First, Snuke will take some number of cards from the top of the heap, then Raccoon will take all the remaining cards. Here, both Snuke and Raccoon have to take at least one card.\n\nLet the sum of the integers on Snuke's cards and Raccoon's cards be x and y, respectively. They would like to minimize |x-y|. Find the minimum possible value of |x-y|.\n\nConstraints\n\n* 2 \\leq N \\leq 2 \\times 10^5\n* -10^{9} \\leq a_i \\leq 10^{9}\n* a_i is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_{N}\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n6\n1 2 3 4 5 6\n\n\nOutput\n\n1\n\n\nInput\n\n2\n10 -10\n\n\nOutput\n\n20", "grammar": {"answer": null}}
{"name": "1095_C. Powers Of Two", "description": "A positive integer x is called a power of two if it can be represented as x = 2^y, where y is a non-negative integer. So, the powers of two are 1, 2, 4, 8, 16, ....\n\nYou are given two positive integers n and k. Your task is to represent n as the sum of exactly k powers of two.\n\nInput\n\nThe only line of the input contains two integers n and k (1 ≤ n ≤ 10^9, 1 ≤ k ≤ 2 ⋅ 10^5).\n\nOutput\n\nIf it is impossible to represent n as the sum of k powers of two, print NO.\n\nOtherwise, print YES, and then print k positive integers b_1, b_2, ..., b_k such that each of b_i is a power of two, and ∑ _{i = 1}^{k} b_i = n. If there are multiple answers, you may print any of them.\n\nExamples\n\nInput\n\n\n9 4\n\n\nOutput\n\n\nYES\n1 2 2 4 \n\n\nInput\n\n\n8 1\n\n\nOutput\n\n\nYES\n8 \n\n\nInput\n\n\n5 1\n\n\nOutput\n\n\nNO\n\n\nInput\n\n\n3 7\n\n\nOutput\n\n\nNO", "grammar": {"answer": null}}
{"name": "660_E. Different Subsets For All Tuples", "description": "For a sequence a of n integers between 1 and m, inclusive, denote f(a) as the number of distinct subsequences of a (including the empty subsequence).\n\nYou are given two positive integers n and m. Let S be the set of all sequences of length n consisting of numbers from 1 to m. Compute the sum f(a) over all a in S modulo 109 + 7.\n\nInput\n\nThe only line contains two integers n and m (1 ≤ n, m ≤ 106) — the number of elements in arrays and the upper bound for elements.\n\nOutput\n\nPrint the only integer c — the desired sum modulo 109 + 7.\n\nExamples\n\nInput\n\n1 3\n\n\nOutput\n\n6\n\n\nInput\n\n2 2\n\n\nOutput\n\n14\n\n\nInput\n\n3 3\n\n\nOutput\n\n174", "grammar": {"answer": null}}
{"name": "p01493 DisconnectedGame", "description": "Example\n\nInput\n\n3\nNNN\nNNN\nNNN\n\n\nOutput\n\nTaro", "grammar": {"answer": null}}
{"name": "p02675 AtCoder Beginner Contest 168 - ∴ (Therefore)", "description": "The cat Snuke wants to play a popular Japanese game called ÅtCoder, so Iroha has decided to teach him Japanese.\n\nWhen counting pencils in Japanese, the counter word \"本\" follows the number. The pronunciation of this word varies depending on the number. Specifically, the pronunciation of \"本\" in the phrase \"N 本\" for a positive integer N not exceeding 999 is as follows:\n\n* `hon` when the digit in the one's place of N is 2, 4, 5, 7, or 9;\n* `pon` when the digit in the one's place of N is 0, 1, 6 or 8;\n* `bon` when the digit in the one's place of N is 3.\n\n\n\nGiven N, print the pronunciation of \"本\" in the phrase \"N 本\".\n\nConstraints\n\n* N is a positive integer not exceeding 999.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n16\n\n\nOutput\n\npon\n\n\nInput\n\n2\n\n\nOutput\n\nhon\n\n\nInput\n\n183\n\n\nOutput\n\nbon", "grammar": {"answer": null}}
{"name": "976_C. Nested Segments", "description": "You are given a sequence a1, a2, ..., an of one-dimensional segments numbered 1 through n. Your task is to find two distinct indices i and j such that segment ai lies within segment aj.\n\nSegment [l1, r1] lies within segment [l2, r2] iff l1 ≥ l2 and r1 ≤ r2.\n\nPrint indices i and j. If there are multiple answers, print any of them. If no answer exists, print -1 -1.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 3·105) — the number of segments.\n\nEach of the next n lines contains two integers li and ri (1 ≤ li ≤ ri ≤ 109) — the i-th segment.\n\nOutput\n\nPrint two distinct indices i and j such that segment ai lies within segment aj. If there are multiple answers, print any of them. If no answer exists, print -1 -1.\n\nExamples\n\nInput\n\n5\n1 10\n2 9\n3 9\n2 3\n2 9\n\n\nOutput\n\n2 1\n\n\nInput\n\n3\n1 5\n2 6\n6 20\n\n\nOutput\n\n-1 -1\n\nNote\n\nIn the first example the following pairs are considered correct:\n\n  * (2, 1), (3, 1), (4, 1), (5, 1) — not even touching borders; \n  * (3, 2), (4, 2), (3, 5), (4, 5) — touch one border; \n  * (5, 2), (2, 5) — match exactly. ", "grammar": {"answer": null}}
{"name": "25_E. Test", "description": "Sometimes it is hard to prepare tests for programming problems. Now Bob is preparing tests to new problem about strings — input data to his problem is one string. Bob has 3 wrong solutions to this problem. The first gives the wrong answer if the input data contains the substring s1, the second enters an infinite loop if the input data contains the substring s2, and the third requires too much memory if the input data contains the substring s3. Bob wants these solutions to fail single test. What is the minimal length of test, which couldn't be passed by all three Bob's solutions?\n\nInput\n\nThere are exactly 3 lines in the input data. The i-th line contains string si. All the strings are non-empty, consists of lowercase Latin letters, the length of each string doesn't exceed 105.\n\nOutput\n\nOutput one number — what is minimal length of the string, containing s1, s2 and s3 as substrings.\n\nExamples\n\nInput\n\nab\nbc\ncd\n\n\nOutput\n\n4\n\n\nInput\n\nabacaba\nabaaba\nx\n\n\nOutput\n\n11", "grammar": {"answer": null}}
{"name": "p01852 Finger Counting", "description": "Problem statement\n\nMeatishi can increase or decrease the number of fingers.\nThere are n buns in front of Nikunishi-kun.\nMeatishi is trying to count the number of steamed buns by breaking his finger.\nThere are only two shapes that Nishikun's fingers can take, whether they are broken or not.\nNikunishi understands binary numbers.\nNikunishi-kun can count numbers by associating each finger with a binary digit.\nNikunishi doesn't understand the logarithm.\nFind the minimum number of fingers needed to count the buns instead of Nishikun.\n\ninput\n\n\nn\n\n\nConstraint\n\n* An integer\n* 0 ≤ n ≤ 1018\n\n\n\noutput\n\nPrint the answer on one line, and print a newline at the end.\n\nsample\n\nSample input 1\n\n\n0\n\n\nSample output 1\n\n\n0\n\n\nSample input 2\n\n\nFour\n\n\nSample output 2\n\n\n3\n\n\nSample input 3\n\n\n31\n\n\nSample output 3\n\n\nFive\n\n\nSample input 4\n\n\n36028797018963968\n\n\nSample output 4\n\n\n56\n\n\n\n\n\n\nExample\n\nInput\n\n0\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02548 AtCoder Beginner Contest 179 - A x B + C", "description": "Given is a positive integer N. How many tuples (A,B,C) of positive integers satisfy A \\times B + C = N?\n\nConstraints\n\n* 2 \\leq N \\leq 10^6\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n3\n\n\nInput\n\n100\n\n\nOutput\n\n473\n\n\nInput\n\n1000000\n\n\nOutput\n\n13969985", "grammar": {"answer": null}}
{"name": "p02793 AtCoder Beginner Contest 152 - Flatten", "description": "Given are N positive integers A_1,...,A_N.\n\nConsider positive integers B_1, ..., B_N that satisfy the following condition.\n\nCondition: For any i, j such that 1 \\leq i < j \\leq N, A_i B_i = A_j B_j holds.\n\nFind the minimum possible value of B_1 + ... + B_N for such B_1,...,B_N.\n\nSince the answer can be enormous, print the sum modulo (10^9 +7).\n\nConstraints\n\n* 1 \\leq N \\leq 10^4\n* 1 \\leq A_i \\leq 10^6\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 ... A_N\n\n\nOutput\n\nPrint the minimum possible value of B_1 + ... + B_N for B_1,...,B_N that satisfy the condition, modulo (10^9 +7).\n\nExamples\n\nInput\n\n3\n2 3 4\n\n\nOutput\n\n13\n\n\nInput\n\n5\n12 12 12 12 12\n\n\nOutput\n\n5\n\n\nInput\n\n3\n1000000 999999 999998\n\n\nOutput\n\n996989508", "grammar": {"answer": null}}
{"name": "p00049 Blood Groups", "description": "Create a program that reads the attendance numbers of students in a class and the data that stores the ABO blood group and outputs the number of people for each blood type. There are four types of ABO blood types: A, B, AB, and O.\n\n\n\nInput\n\nA comma-separated pair of attendance numbers and blood types is given over multiple lines. The attendance number is an integer between 1 and 50, and the blood type is one of the strings \"A\", \"B\", \"AB\" or \"O\". The number of students does not exceed 50.\n\nOutput\n\nNumber of people of type A on the first line\nNumber of people of type B on the second line\nNumber of people of AB type on the 3rd line\nNumber of O-shaped people on the 4th line\nIs output.\n\nExample\n\nInput\n\n1,B\n2,A\n3,B\n4,AB\n5,B\n6,O\n7,A\n8,O\n9,AB\n10,A\n11,A\n12,B\n13,AB\n14,A\n\n\nOutput\n\n5\n4\n3\n2", "grammar": {"answer": null}}
{"name": "p00055 Sequence", "description": "I have a sequence defined as follows:\n\n* All even-numbered terms are equal to the previous term multiplied by 2.\n* All odd-numbered terms are equal to the previous term divided by 3.\n\n\n\nCreate a program that reads the first term a of this sequence and outputs the sum s (10) from the first term to the tenth term.\n\n\n\nInput\n\nThe input consists of multiple test cases. For each test case, a real number a (1.0 ≤ a ≤ 10.0) representing the first term of the sequence is given in one row.\n\nThe number of test cases does not exceed 50.\n\nOutput\n\nPrint s (10) on one line for each test case.\n\nThe output may contain an error of 0.000001 or less.\n\nExample\n\nInput\n\n1.0\n2.0\n3.0\n\n\nOutput\n\n7.81481481\n15.62962963\n23.44444444", "grammar": {"answer": null}}
{"name": "p02471 Extended Euclid Algorithm", "description": "Extended Euclid Algorithm\n\n\n\n\nGiven positive integers a and b, find the integer solution (x, y) to ax + by = gcd(a, b), where gcd(a, b) is the greatest common divisor of a and b.\n\nConstraints\n\n* 1 ≤ a, b ≤ 109\n\nInput\n\n\na b\n\n\nTwo positive integers a and b are given separated by a space in a line.\n\nOutput\n\nPrint two integers x and y separated by a space. If there are several pairs of such x and y, print that pair for which |x| + |y| is the minimal (primarily) and x ≤ y (secondarily).\n\nExamples\n\nInput\n\n4 12\n\n\nOutput\n\n1 0\n\n\nInput\n\n3 8\n\n\nOutput\n\n3 -1", "grammar": {"answer": null}}
{"name": "540_E. Infinite Inversions", "description": "There is an infinite sequence consisting of all positive integers in the increasing order: p = {1, 2, 3, ...}. We performed n swap operations with this sequence. A swap(a, b) is an operation of swapping the elements of the sequence on positions a and b. Your task is to find the number of inversions in the resulting sequence, i.e. the number of such index pairs (i, j), that i < j and pi > pj.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 105) — the number of swap operations applied to the sequence.\n\nEach of the next n lines contains two integers ai and bi (1 ≤ ai, bi ≤ 109, ai ≠ bi) — the arguments of the swap operation.\n\nOutput\n\nPrint a single integer — the number of inversions in the resulting sequence.\n\nExamples\n\nInput\n\n2\n4 2\n1 4\n\n\nOutput\n\n4\n\n\nInput\n\n3\n1 6\n3 4\n2 5\n\n\nOutput\n\n15\n\nNote\n\nIn the first sample the sequence is being modified as follows: <image>. It has 4 inversions formed by index pairs (1, 4), (2, 3), (2, 4) and (3, 4).", "grammar": {"answer": null}}
{"name": "p02952 AtCoder Beginner Contest 136 - Uneven Numbers", "description": "Given is an integer N. Find the number of positive integers less than or equal to N that have an odd number of digits (in base ten without leading zeros).\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the number of positive integers less than or equal to N that have an odd number of digits.\n\nExamples\n\nInput\n\n11\n\n\nOutput\n\n9\n\n\nInput\n\n136\n\n\nOutput\n\n46\n\n\nInput\n\n100000\n\n\nOutput\n\n90909", "grammar": {"answer": null}}
{"name": "p03963 AtCoder Beginner Contest 046 - Painting Balls with AtCoDeer", "description": "There are N balls placed in a row. AtCoDeer the deer is painting each of these in one of the K colors of his paint cans. For aesthetic reasons, any two adjacent balls must be painted in different colors.\n\nFind the number of the possible ways to paint the balls.\n\nConstraints\n\n* 1≦N≦1000\n* 2≦K≦1000\n* The correct answer is at most 2^{31}-1.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN K\n\n\nOutput\n\nPrint the number of the possible ways to paint the balls.\n\nExamples\n\nInput\n\n2 2\n\n\nOutput\n\n2\n\n\nInput\n\n1 10\n\n\nOutput\n\n10", "grammar": {"answer": null}}
{"name": "489_C. Given Length and Sum of Digits...", "description": "You have a positive integer m and a non-negative integer s. Your task is to find the smallest and the largest of the numbers that have length m and sum of digits s. The required numbers should be non-negative integers written in the decimal base without leading zeroes.\n\nInput\n\nThe single line of the input contains a pair of integers m, s (1 ≤ m ≤ 100, 0 ≤ s ≤ 900) — the length and the sum of the digits of the required numbers.\n\nOutput\n\nIn the output print the pair of the required non-negative integer numbers — first the minimum possible number, then — the maximum possible number. If no numbers satisfying conditions required exist, print the pair of numbers \"-1 -1\" (without the quotes).\n\nExamples\n\nInput\n\n2 15\n\n\nOutput\n\n69 96\n\n\nInput\n\n3 0\n\n\nOutput\n\n-1 -1", "grammar": {"answer": null}}
{"name": "298_C. Parity Game", "description": "You are fishing with polar bears Alice and Bob. While waiting for the fish to bite, the polar bears get bored. They come up with a game. First Alice and Bob each writes a 01-string (strings that only contain character \"0\" and \"1\") a and b. Then you try to turn a into b using two types of operations:\n\n  * Write parity(a) to the end of a. For example, <image>. \n  * Remove the first character of a. For example, <image>. You cannot perform this operation if a is empty. \n\n\n\nYou can use as many operations as you want. The problem is, is it possible to turn a into b?\n\nThe parity of a 01-string is 1 if there is an odd number of \"1\"s in the string, and 0 otherwise.\n\nInput\n\nThe first line contains the string a and the second line contains the string b (1 ≤ |a|, |b| ≤ 1000). Both strings contain only the characters \"0\" and \"1\". Here |x| denotes the length of the string x.\n\nOutput\n\nPrint \"YES\" (without quotes) if it is possible to turn a into b, and \"NO\" (without quotes) otherwise.\n\nExamples\n\nInput\n\n01011\n0110\n\n\nOutput\n\nYES\n\n\nInput\n\n0011\n1110\n\n\nOutput\n\nNO\n\nNote\n\nIn the first sample, the steps are as follows: 01011 → 1011 → 011 → 0110", "grammar": {"answer": null}}
{"name": "486_A. Calculating Function", "description": "For a positive integer n let's define a function f:\n\nf(n) = - 1 + 2 - 3 + .. + ( - 1)nn\n\nYour task is to calculate f(n) for a given integer n.\n\nInput\n\nThe single line contains the positive integer n (1 ≤ n ≤ 1015).\n\nOutput\n\nPrint f(n) in a single line.\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n2\n\n\nInput\n\n5\n\n\nOutput\n\n-3\n\nNote\n\nf(4) = - 1 + 2 - 3 + 4 = 2\n\nf(5) = - 1 + 2 - 3 + 4 - 5 = - 3", "grammar": {"answer": null}}
{"name": "p03294 AtCoder Beginner Contest 103 - Modulo Summation", "description": "You are given N positive integers a_1, a_2, ..., a_N.\n\nFor a non-negative integer m, let f(m) = (m\\ mod\\ a_1) + (m\\ mod\\ a_2) + ... + (m\\ mod\\ a_N).\n\nHere, X\\ mod\\ Y denotes the remainder of the division of X by Y.\n\nFind the maximum value of f.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 3000\n* 2 \\leq a_i \\leq 10^5\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the maximum value of f.\n\nExamples\n\nInput\n\n3\n3 4 6\n\n\nOutput\n\n10\n\n\nInput\n\n5\n7 46 11 20 11\n\n\nOutput\n\n90\n\n\nInput\n\n7\n994 518 941 851 647 2 581\n\n\nOutput\n\n4527", "grammar": {"answer": null}}
{"name": "p03587 Tenka1 Programmer Beginner Contest - Accepted...?", "description": "Snuke prepared 6 problems for a upcoming programming contest. For each of those problems, Rng judged whether it can be used in the contest or not.\n\nYou are given a string S of length 6. If the i-th character of s is `1`, it means that the i-th problem prepared by Snuke is accepted to be used; `0` means that the problem is not accepted.\n\nHow many problems prepared by Snuke are accepted to be used in the contest?\n\nConstraints\n\n* The length of S is 6.\n* S consists of `0` and `1`.\n\nInputs\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutputs\n\nPrint the number of problems prepared by Snuke that are accepted to be used in the contest.\n\nExamples\n\nInput\n\n111100\n\n\nOutput\n\n4\n\n\nInput\n\n001001\n\n\nOutput\n\n2\n\n\nInput\n\n000000\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02677 AtCoder Beginner Contest 168 - : (Colon)", "description": "Consider an analog clock whose hour and minute hands are A and B centimeters long, respectively.\n\nAn endpoint of the hour hand and an endpoint of the minute hand are fixed at the same point, around which each hand rotates clockwise at constant angular velocity. It takes the hour and minute hands 12 hours and 1 hour to make one full rotation, respectively.\n\nAt 0 o'clock, the two hands overlap each other. H hours and M minutes later, what is the distance in centimeters between the unfixed endpoints of the hands?\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq A, B \\leq 1000\n* 0 \\leq H \\leq 11\n* 0 \\leq M \\leq 59\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B H M\n\n\nOutput\n\nPrint the answer without units. Your output will be accepted when its absolute or relative error from the correct value is at most 10^{-9}.\n\nExamples\n\nInput\n\n3 4 9 0\n\n\nOutput\n\n5.00000000000000000000\n\n\nInput\n\n3 4 10 40\n\n\nOutput\n\n4.56425719433005567605", "grammar": {"answer": null}}
{"name": "p03576 AtCoder Beginner Contest 075 - Axis-Parallel Rectangle", "description": "We have N points in a two-dimensional plane.\nThe coordinates of the i-th point (1 \\leq i \\leq N) are (x_i,y_i).\nLet us consider a rectangle whose sides are parallel to the coordinate axes that contains K or more of the N points in its interior.\nHere, points on the sides of the rectangle are considered to be in the interior.\nFind the minimum possible area of such a rectangle.\n\nConstraints\n\n* 2 \\leq K \\leq N \\leq 50\n* -10^9 \\leq x_i,y_i \\leq 10^9 (1 \\leq i \\leq N)\n* x_i≠x_j (1 \\leq i<j \\leq N)\n* y_i≠y_j (1 \\leq i<j \\leq N)\n* All input values are integers. (Added at 21:50 JST)\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nx_1 y_1\n:\nx_{N} y_{N}\n\n\nOutput\n\nPrint the minimum possible area of a rectangle that satisfies the condition.\n\nExamples\n\nInput\n\n4 4\n1 4\n3 3\n6 2\n8 1\n\n\nOutput\n\n21\n\n\nInput\n\n4 2\n0 0\n1 1\n2 2\n3 3\n\n\nOutput\n\n1\n\n\nInput\n\n4 3\n-1000000000 -1000000000\n1000000000 1000000000\n-999999999 999999999\n999999999 -999999999\n\n\nOutput\n\n3999999996000000001", "grammar": {"answer": null}}
{"name": "1542_C. Strange Function", "description": "Let f(i) denote the minimum positive integer x such that x is not a divisor of i.\n\nCompute ∑_{i=1}^n f(i) modulo 10^9+7. In other words, compute f(1)+f(2)+...+f(n) modulo 10^9+7.\n\nInput\n\nThe first line contains a single integer t (1≤ t≤ 10^4), the number of test cases. Then t cases follow.\n\nThe only line of each test case contains a single integer n (1≤ n≤ 10^{16}).\n\nOutput\n\nFor each test case, output a single integer ans, where ans=∑_{i=1}^n f(i) modulo 10^9+7.\n\nExample\n\nInput\n\n\n6\n1\n2\n3\n4\n10\n10000000000000000\n\n\nOutput\n\n\n2\n5\n7\n10\n26\n366580019\n\nNote\n\nIn the fourth test case n=4, so ans=f(1)+f(2)+f(3)+f(4).\n\n  * 1 is a divisor of 1 but 2 isn't, so 2 is the minimum positive integer that isn't a divisor of 1. Thus, f(1)=2. \n  * 1 and 2 are divisors of 2 but 3 isn't, so 3 is the minimum positive integer that isn't a divisor of 2. Thus, f(2)=3. \n  * 1 is a divisor of 3 but 2 isn't, so 2 is the minimum positive integer that isn't a divisor of 3. Thus, f(3)=2. \n  * 1 and 2 are divisors of 4 but 3 isn't, so 3 is the minimum positive integer that isn't a divisor of 4. Thus, f(4)=3. \n\n\n\nTherefore, ans=f(1)+f(2)+f(3)+f(4)=2+3+2+3=10.", "grammar": {"answer": null}}
{"name": "p02901 AtCoder Beginner Contest 142 - Get Everything", "description": "We have N locked treasure boxes, numbered 1 to N.\n\nA shop sells M keys. The i-th key is sold for a_i yen (the currency of Japan), and it can unlock b_i of the boxes: Box c_{i1}, c_{i2}, ..., c_{i{b_i}}. Each key purchased can be used any number of times.\n\nFind the minimum cost required to unlock all the treasure boxes. If it is impossible to unlock all of them, print -1.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 12\n* 1 \\leq M \\leq 10^3\n* 1 \\leq a_i \\leq 10^5\n* 1 \\leq b_i \\leq N\n* 1 \\leq c_{i1} < c_{i2} < ... < c_{i{b_i}} \\leq N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\na_1 b_1\nc_{11} c_{12} ... c_{1{b_1}}\n:\na_M b_M\nc_{M1} c_{M2} ... c_{M{b_M}}\n\n\nOutput\n\nPrint the minimum cost required to unlock all the treasure boxes. If it is impossible to unlock all of them, print -1.\n\nExamples\n\nInput\n\n2 3\n10 1\n1\n15 1\n2\n30 2\n1 2\n\n\nOutput\n\n25\n\n\nInput\n\n12 1\n100000 1\n2\n\n\nOutput\n\n-1\n\n\nInput\n\n4 6\n67786 3\n1 3 4\n3497 1\n2\n44908 3\n2 3 4\n2156 3\n2 3 4\n26230 1\n2\n86918 1\n3\n\n\nOutput\n\n69942", "grammar": {"answer": null}}
{"name": "p03039 AtCoder Beginner Contest 127 - Cell Distance", "description": "We have a grid of squares with N rows and M columns. Let (i, j) denote the square at the i-th row from the top and j-th column from the left. We will choose K of the squares and put a piece on each of them.\n\nIf we place the K pieces on squares (x_1, y_1), (x_2, y_2), ..., and (x_K, y_K), the cost of this arrangement is computed as:\n\n\\sum_{i=1}^{K-1} \\sum_{j=i+1}^K (|x_i - x_j| + |y_i - y_j|)\n\nFind the sum of the costs of all possible arrangements of the pieces. Since this value can be tremendous, print it modulo 10^9+7.\n\nWe consider two arrangements of the pieces different if and only if there is a square that contains a piece in one of the arrangements but not in the other.\n\nConstraints\n\n* 2 \\leq N \\times M \\leq 2 \\times 10^5\n* 2 \\leq K \\leq N \\times M\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M K\n\n\nOutput\n\nPrint the sum of the costs of all possible arrangements of the pieces, modulo 10^9+7.\n\nExamples\n\nInput\n\n2 2 2\n\n\nOutput\n\n8\n\n\nInput\n\n4 5 4\n\n\nOutput\n\n87210\n\n\nInput\n\n100 100 5000\n\n\nOutput\n\n817260251", "grammar": {"answer": null}}
{"name": "p00041 Expression", "description": "Using the given four integers from 1 to 9, we create an expression that gives an answer of 10. When you enter four integers a, b, c, d, write a program that outputs an expression that gives an answer of 10 according to the following conditions. Also, if there are multiple answers, only the first answer found will be output. If there is no answer, output 0.\n\n* Use only addition (+), subtraction (-), and multiplication (*) as operators. Do not use division (/). You can use three operators.\n* You must use all four numbers.\n* You can freely change the order of the four numbers.\n* You can use parentheses. You can use up to 3 sets (6) of parentheses.\n\n\n\nInput\n\nGiven multiple datasets. The format of each dataset is as follows:\n\n\na b c d\n\nInput ends with four 0s. The number of datasets does not exceed 40.\n\nOutput\n\nFor each dataset, combine the given four integers with the above arithmetic symbols and parentheses to output an expression or 0 with a value of 10 on one line. The expression string must not exceed 1024 characters.\n\nExample\n\nInput\n\n8 7 9 9\n4 4 4 4\n5 5 7 5\n0 0 0 0\n\n\nOutput\n\n((9 * (9 - 7)) - 8)\n0\n((7 * 5) - (5 * 5))", "grammar": {"answer": null}}
{"name": "p03101 AtCoder Beginner Contest 121 - White Cells", "description": "There are H rows and W columns of white square cells.\n\nYou will choose h of the rows and w of the columns, and paint all of the cells contained in those rows or columns.\n\nHow many white cells will remain?\n\nIt can be proved that this count does not depend on what rows and columns are chosen.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq H, W \\leq 20\n* 1 \\leq h \\leq H\n* 1 \\leq w \\leq W\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH W\nh w\n\n\nOutput\n\nPrint the number of white cells that will remain.\n\nExamples\n\nInput\n\n3 2\n2 1\n\n\nOutput\n\n1\n\n\nInput\n\n5 5\n2 3\n\n\nOutput\n\n6\n\n\nInput\n\n2 4\n2 4\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03699 AtCoder Beginner Contest 063 - Bugged", "description": "You are taking a computer-based examination. The examination consists of N questions, and the score allocated to the i-th question is s_i. Your answer to each question will be judged as either \"correct\" or \"incorrect\", and your grade will be the sum of the points allocated to questions that are answered correctly. When you finish answering the questions, your answers will be immediately judged and your grade will be displayed... if everything goes well.\n\nHowever, the examination system is actually flawed, and if your grade is a multiple of 10, the system displays 0 as your grade. Otherwise, your grade is displayed correctly. In this situation, what is the maximum value that can be displayed as your grade?\n\nConstraints\n\n* All input values are integers.\n* 1 ≤ N ≤ 100\n* 1 ≤ s_i ≤ 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\ns_1\ns_2\n:\ns_N\n\n\nOutput\n\nPrint the maximum value that can be displayed as your grade.\n\nExamples\n\nInput\n\n3\n5\n10\n15\n\n\nOutput\n\n25\n\n\nInput\n\n3\n10\n10\n15\n\n\nOutput\n\n35\n\n\nInput\n\n3\n10\n20\n30\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "986_D. Perfect Encoding", "description": "You are working as an analyst in a company working on a new system for big data storage. This system will store n different objects. Each object should have a unique ID.\n\nTo create the system, you choose the parameters of the system — integers m ≥ 1 and b_{1}, b_{2}, …, b_{m}. With these parameters an ID of some object in the system is an array of integers [a_{1}, a_{2}, …, a_{m}] where 1 ≤ a_{i} ≤ b_{i} holds for every 1 ≤ i ≤ m.\n\nDevelopers say that production costs are proportional to ∑_{i=1}^{m} b_{i}. You are asked to choose parameters m and b_{i} so that the system will be able to assign unique IDs to n different objects and production costs are minimized. Note that you don't have to use all available IDs.\n\nInput\n\nIn the only line of input there is one positive integer n. The length of the decimal representation of n is no greater than 1.5 ⋅ 10^{6}. The integer does not contain leading zeros.\n\nOutput\n\nPrint one number — minimal value of ∑_{i=1}^{m} b_{i}.\n\nExamples\n\nInput\n\n36\n\n\nOutput\n\n10\n\n\nInput\n\n37\n\n\nOutput\n\n11\n\n\nInput\n\n12345678901234567890123456789\n\n\nOutput\n\n177", "grammar": {"answer": null}}
{"name": "825_E. Minimal Labels", "description": "You are given a directed acyclic graph with n vertices and m edges. There are no self-loops or multiple edges between any pair of vertices. Graph can be disconnected.\n\nYou should assign labels to all vertices in such a way that:\n\n  * Labels form a valid permutation of length n — an integer sequence such that each integer from 1 to n appears exactly once in it. \n  * If there exists an edge from vertex v to vertex u then labelv should be smaller than labelu. \n  * Permutation should be lexicographically smallest among all suitable. \n\n\n\nFind such sequence of labels to satisfy all the conditions.\n\nInput\n\nThe first line contains two integer numbers n, m (2 ≤ n ≤ 105, 1 ≤ m ≤ 105).\n\nNext m lines contain two integer numbers v and u (1 ≤ v, u ≤ n, v ≠ u) — edges of the graph. Edges are directed, graph doesn't contain loops or multiple edges.\n\nOutput\n\nPrint n numbers — lexicographically smallest correct permutation of labels of vertices.\n\nExamples\n\nInput\n\n3 3\n1 2\n1 3\n3 2\n\n\nOutput\n\n1 3 2 \n\n\nInput\n\n4 5\n3 1\n4 1\n2 3\n3 4\n2 4\n\n\nOutput\n\n4 1 2 3 \n\n\nInput\n\n5 4\n3 1\n2 1\n2 3\n4 5\n\n\nOutput\n\n3 1 2 4 5 ", "grammar": {"answer": null}}
{"name": "1031_F. Familiar Operations", "description": "You are given two positive integers a and b. There are two possible operations: \n\n  1. multiply one of the numbers by some prime p; \n  2. divide one of the numbers on its prime factor p. \n\n\n\nWhat is the minimum number of operations required to obtain two integers having the same number of divisors? You are given several such pairs, you need to find the answer for each of them.\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 10^5) — the number of pairs of integers for which you are to find the answer.\n\nEach of the next t lines contain two integers a_i and b_i (1 ≤ a_i, b_i ≤ 10^6).\n\nOutput\n\nOutput t lines — the i-th of them should contain the answer for the pair a_i, b_i.\n\nExample\n\nInput\n\n8\n9 10\n100 17\n220 70\n17 19\n4 18\n32 20\n100 32\n224 385\n\n\nOutput\n\n1\n3\n1\n0\n1\n0\n1\n1\n\nNote\n\nThese are the numbers with equal number of divisors, which are optimal to obtain in the sample test case: \n\n  * (27, 10), 4 divisors \n  * (100, 1156), 9 divisors \n  * (220, 140), 12 divisors \n  * (17, 19), 2 divisors \n  * (12, 18), 6 divisors \n  * (50, 32), 6 divisors \n  * (224, 1925), 12 divisors \n\n\n\nNote that there can be several optimal pairs of numbers.", "grammar": {"answer": null}}
{"name": "1141_A. Game 23", "description": "Polycarp plays \"Game 23\". Initially he has a number n and his goal is to transform it to m. In one move, he can multiply n by 2 or multiply n by 3. He can perform any number of moves.\n\nPrint the number of moves needed to transform n to m. Print -1 if it is impossible to do so.\n\nIt is easy to prove that any way to transform n to m contains the same number of moves (i.e. number of moves doesn't depend on the way of transformation).\n\nInput\n\nThe only line of the input contains two integers n and m (1 ≤ n ≤ m ≤ 5⋅10^8).\n\nOutput\n\nPrint the number of moves to transform n to m, or -1 if there is no solution.\n\nExamples\n\nInput\n\n\n120 51840\n\n\nOutput\n\n\n7\n\n\nInput\n\n\n42 42\n\n\nOutput\n\n\n0\n\n\nInput\n\n\n48 72\n\n\nOutput\n\n\n-1\n\nNote\n\nIn the first example, the possible sequence of moves is: 120 → 240 → 720 → 1440 → 4320 → 12960 → 25920 → 51840. The are 7 steps in total.\n\nIn the second example, no moves are needed. Thus, the answer is 0.\n\nIn the third example, it is impossible to transform 48 to 72.", "grammar": {"answer": null}}
{"name": "774_C. Maximum Number", "description": "Stepan has the newest electronic device with a display. Different digits can be shown on it. Each digit is shown on a seven-section indicator like it is shown on the picture below.\n\n<image>\n\nSo, for example, to show the digit 3 on the display, 5 sections must be highlighted; and for the digit 6, 6 sections must be highlighted. \n\nThe battery of the newest device allows to highlight at most n sections on the display. \n\nStepan wants to know the maximum possible integer number which can be shown on the display of his newest device. Your task is to determine this number. Note that this number must not contain leading zeros. Assume that the size of the display is enough to show any integer.\n\nInput\n\nThe first line contains the integer n (2 ≤ n ≤ 100 000) — the maximum number of sections which can be highlighted on the display.\n\nOutput\n\nPrint the maximum integer which can be shown on the display of Stepan's newest device.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n1\n\n\nInput\n\n3\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "630_R. Game", "description": "There is a legend in the IT City college. A student that failed to answer all questions on the game theory exam is given one more chance by his professor. The student has to play a game with the professor.\n\nThe game is played on a square field consisting of n × n cells. Initially all cells are empty. On each turn a player chooses and paint an empty cell that has no common sides with previously painted cells. Adjacent corner of painted cells is allowed. On the next turn another player does the same, then the first one and so on. The player with no cells to paint on his turn loses.\n\nThe professor have chosen the field size n and allowed the student to choose to be the first or the second player in the game. What should the student choose to win the game? Both players play optimally.\n\nInput\n\nThe only line of the input contains one integer n (1 ≤ n ≤ 1018) — the size of the field.\n\nOutput\n\nOutput number 1, if the player making the first turn wins when both players play optimally, otherwise print number 2.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n1\n\nInput\n\n2\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02836 AtCoder Beginner Contest 147 - Palindrome-philia", "description": "Takahashi loves palindromes. Non-palindromic strings are unacceptable to him. Each time he hugs a string, he can change one of its characters to any character of his choice.\n\nGiven is a string S. Find the minimum number of hugs needed to make S palindromic.\n\nConstraints\n\n* S is a string consisting of lowercase English letters.\n* The length of S is between 1 and 100 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the minimum number of hugs needed to make S palindromic.\n\nExamples\n\nInput\n\nredcoder\n\n\nOutput\n\n1\n\n\nInput\n\nvvvvvv\n\n\nOutput\n\n0\n\n\nInput\n\nabcdabc\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02701 AtCoder Beginner Contest 164 - gacha", "description": "You drew lottery N times. In the i-th draw, you got an item of the kind represented by a string S_i.\n\nHow many kinds of items did you get?\n\nConstraints\n\n* 1 \\leq N \\leq 2\\times 10^5\n* S_i consists of lowercase English letters and has a length between 1 and 10 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS_1\n:\nS_N\n\n\nOutput\n\nPrint the number of kinds of items you got.\n\nExamples\n\nInput\n\n3\napple\norange\napple\n\n\nOutput\n\n2\n\n\nInput\n\n5\ngrape\ngrape\ngrape\ngrape\ngrape\n\n\nOutput\n\n1\n\n\nInput\n\n4\naaaa\na\naaa\naa\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p03281 AtCoder Beginner Contest 106 - 105", "description": "The number 105 is quite special - it is odd but still it has eight divisors. Now, your task is this: how many odd numbers with exactly eight positive divisors are there between 1 and N (inclusive)?\n\nConstraints\n\n* N is an integer between 1 and 200 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the count.\n\nExamples\n\nInput\n\n105\n\n\nOutput\n\n1\n\n\nInput\n\n7\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03781 AtCoder Regular Contest 070 - Go Home", "description": "There is a kangaroo at coordinate 0 on an infinite number line that runs from left to right, at time 0. During the period between time i-1 and time i, the kangaroo can either stay at his position, or perform a jump of length exactly i to the left or to the right. That is, if his coordinate at time i-1 is x, he can be at coordinate x-i, x or x+i at time i. The kangaroo's nest is at coordinate X, and he wants to travel to coordinate X as fast as possible. Find the earliest possible time to reach coordinate X.\n\nConstraints\n\n* X is an integer.\n* 1≤X≤10^9\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nX\n\n\nOutput\n\nPrint the earliest possible time for the kangaroo to reach coordinate X.\n\nExamples\n\nInput\n\n6\n\n\nOutput\n\n3\n\n\nInput\n\n2\n\n\nOutput\n\n2\n\n\nInput\n\n11\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "664_A. Complicated GCD", "description": "Greatest common divisor GCD(a, b) of two positive integers a and b is equal to the biggest integer d such that both integers a and b are divisible by d. There are many efficient algorithms to find greatest common divisor GCD(a, b), for example, Euclid algorithm. \n\nFormally, find the biggest integer d, such that all integers a, a + 1, a + 2, ..., b are divisible by d. To make the problem even more complicated we allow a and b to be up to googol, 10100 — such number do not fit even in 64-bit integer type!\n\nInput\n\nThe only line of the input contains two integers a and b (1 ≤ a ≤ b ≤ 10100).\n\nOutput\n\nOutput one integer — greatest common divisor of all integers from a to b inclusive.\n\nExamples\n\nInput\n\n1 2\n\n\nOutput\n\n1\n\n\nInput\n\n61803398874989484820458683436563811772030917980576 61803398874989484820458683436563811772030917980576\n\n\nOutput\n\n61803398874989484820458683436563811772030917980576", "grammar": {"answer": null}}
{"name": "p02663 NOMURA Programming Competition 2020 - Study Scheduling", "description": "In this problem, we use the 24-hour clock.\n\nTakahashi gets up exactly at the time H_1 : M_1 and goes to bed exactly at the time H_2 : M_2. (See Sample Inputs below for clarity.) He has decided to study for K consecutive minutes while he is up. What is the length of the period in which he can start studying?\n\nConstraints\n\n* 0 \\le H_1, H_2 \\le 23\n* 0 \\le M_1, M_2 \\le 59\n* The time H_1 : M_1 comes before the time H_2 : M_2.\n* K \\ge 1\n* Takahashi is up for at least K minutes.\n* All values in input are integers (without leading zeros).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nH_1 M_1 H_2 M_2 K\n\n\nOutput\n\nPrint the length of the period in which he can start studying, as an integer.\n\nExamples\n\nInput\n\n10 0 15 0 30\n\n\nOutput\n\n270\n\n\nInput\n\n10 0 12 0 120\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03613 AtCoder Regular Contest 082 - Together", "description": "You are given an integer sequence of length N, a_1,a_2,...,a_N.\n\nFor each 1≤i≤N, you have three choices: add 1 to a_i, subtract 1 from a_i or do nothing.\n\nAfter these operations, you select an integer X and count the number of i such that a_i=X.\n\nMaximize this count by making optimal choices.\n\nConstraints\n\n* 1≤N≤10^5\n* 0≤a_i<10^5 (1≤i≤N)\n* a_i is an integer.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\na_1 a_2 .. a_N\n\n\nOutput\n\nPrint the maximum possible number of i such that a_i=X.\n\nExamples\n\nInput\n\n7\n3 1 4 1 5 9 2\n\n\nOutput\n\n4\n\n\nInput\n\n10\n0 1 2 3 4 5 6 7 8 9\n\n\nOutput\n\n3\n\n\nInput\n\n1\n99999\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "315_E. Sereja and Subsequences", "description": "Sereja has a sequence that consists of n positive integers, a1, a2, ..., an. \n\nFirst Sereja took a piece of squared paper and wrote all distinct non-empty non-decreasing subsequences of sequence a. Then for each sequence written on the squared paper, Sereja wrote on a piece of lines paper all sequences that do not exceed it.\n\nA sequence of positive integers x = x1, x2, ..., xr doesn't exceed a sequence of positive integers y = y1, y2, ..., yr, if the following inequation holds: x1 ≤ y1, x2 ≤ y2, ..., xr ≤ yr.\n\nNow Sereja wonders, how many sequences are written on the lines piece of paper. Help Sereja, find the required quantity modulo 1000000007 (109 + 7). \n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 105). The second line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 106).\n\nOutput\n\nIn the single line print the answer to the problem modulo 1000000007 (109 + 7).\n\nExamples\n\nInput\n\n1\n42\n\n\nOutput\n\n42\n\n\nInput\n\n3\n1 2 2\n\n\nOutput\n\n13\n\n\nInput\n\n5\n1 2 3 4 5\n\n\nOutput\n\n719", "grammar": {"answer": null}}
{"name": "p02289 Priority Queue", "description": "A priority queue is a data structure which maintains a set $S$ of elements, each of with an associated value (key), and supports the following operations:\n\n* $insert(S, k)$: insert an element $k$ into the set $S$\n* $extractMax(S)$: remove and return the element of $S$ with the largest key\n\n\n\nWrite a program which performs the $insert(S, k)$ and $extractMax(S)$ operations to a priority queue $S$. The priority queue manages a set of integers, which are also keys for the priority.\n\nConstraints\n\n* The number of operations $\\leq 2,000,000$\n* $0 \\leq k \\leq 2,000,000,000$\n\nInput\n\nMultiple operations to the priority queue $S$ are given. Each operation is given by \"insert $k$\", \"extract\" or \"end\" in a line. Here, $k$ represents an integer element to be inserted to the priority queue.\n\nThe input ends with \"end\" operation.\n\nOutput\n\nFor each \"extract\" operation, print the element extracted from the priority queue $S$ in a line.\n\nExample\n\nInput\n\ninsert 8\ninsert 2\nextract\ninsert 10\nextract\ninsert 11\nextract\nextract\nend\n\n\nOutput\n\n8\n10\n11\n2", "grammar": {"answer": null}}
{"name": "p02360 The Maximum Number of Overlaps", "description": "Given a set of $N$ axis-aligned rectangular seals, find the number of overlapped seals on the region which has the maximum number of overlapped seals.\n\nConstraints\n\n* $ 1 \\leq N \\leq 100000 $\n* $ 0 \\leq x1_i < x2_i \\leq 1000 $\n* $ 0 \\leq y1_i < y2_i \\leq 1000 $\n* $ x1_i, y1_i, x2_i, y2_i$ are given in integers\n\nInput\n\nThe input is given in the following format.\n\n$N$\n$x1_1$ $y1_1$ $x2_1$ $y2_1$\n$x1_2$ $y1_2$ $x2_2$ $y2_2$\n:\n$x1_N$ $y1_N$ $x2_N$ $y2_N$\n\n\n($x1_i, y1_i$) and ($x2_i, y2_i$) are the coordinates of the top-left and the bottom-right corner of the $i$-th seal respectively.\n\nOutput\n\nPrint the maximum number of overlapped seals in a line.\n\nExamples\n\nInput\n\n2\n0 0 3 2\n2 1 4 3\n\n\nOutput\n\n2\n\n\nInput\n\n2\n0 0 2 2\n2 0 4 2\n\n\nOutput\n\n1\n\n\nInput\n\n3\n0 0 2 2\n0 0 2 2\n0 0 2 2\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p03169 Educational DP Contest - Sushi", "description": "There are N dishes, numbered 1, 2, \\ldots, N. Initially, for each i (1 \\leq i \\leq N), Dish i has a_i (1 \\leq a_i \\leq 3) pieces of sushi on it.\n\nTaro will perform the following operation repeatedly until all the pieces of sushi are eaten:\n\n* Roll a die that shows the numbers 1, 2, \\ldots, N with equal probabilities, and let i be the outcome. If there are some pieces of sushi on Dish i, eat one of them; if there is none, do nothing.\n\n\n\nFind the expected number of times the operation is performed before all the pieces of sushi are eaten.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 300\n* 1 \\leq a_i \\leq 3\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 \\ldots a_N\n\n\nOutput\n\nPrint the expected number of times the operation is performed before all the pieces of sushi are eaten. The output is considered correct when the relative difference is not greater than 10^{-9}.\n\nExamples\n\nInput\n\n3\n1 1 1\n\n\nOutput\n\n5.5\n\n\nInput\n\n1\n3\n\n\nOutput\n\n3\n\n\nInput\n\n2\n1 2\n\n\nOutput\n\n4.5\n\n\nInput\n\n10\n1 3 2 3 3 2 3 2 1 3\n\n\nOutput\n\n54.48064457488221", "grammar": {"answer": null}}
{"name": "747_A. Display Size", "description": "A big company decided to launch a new series of rectangular displays, and decided that the display must have exactly n pixels. \n\nYour task is to determine the size of the rectangular display — the number of lines (rows) of pixels a and the number of columns of pixels b, so that:\n\n  * there are exactly n pixels on the display; \n  * the number of rows does not exceed the number of columns, it means a ≤ b; \n  * the difference b - a is as small as possible. \n\nInput\n\nThe first line contains the positive integer n (1 ≤ n ≤ 106) — the number of pixels display should have.\n\nOutput\n\nPrint two integers — the number of rows and columns on the display. \n\nExamples\n\nInput\n\n8\n\n\nOutput\n\n2 4\n\n\nInput\n\n64\n\n\nOutput\n\n8 8\n\n\nInput\n\n5\n\n\nOutput\n\n1 5\n\n\nInput\n\n999999\n\n\nOutput\n\n999 1001\n\nNote\n\nIn the first example the minimum possible difference equals 2, so on the display should be 2 rows of 4 pixels.\n\nIn the second example the minimum possible difference equals 0, so on the display should be 8 rows of 8 pixels.\n\nIn the third example the minimum possible difference equals 4, so on the display should be 1 row of 5 pixels.", "grammar": {"answer": null}}
{"name": "p02700 AtCoder Beginner Contest 164 - Battle", "description": "Takahashi and Aoki will have a battle using their monsters.\n\nThe health and strength of Takahashi's monster are A and B, respectively, and those of Aoki's monster are C and D, respectively.\n\nThe two monsters will take turns attacking, in the order Takahashi's, Aoki's, Takahashi's, Aoki's, ... Here, an attack decreases the opponent's health by the value equal to the attacker's strength. The monsters keep attacking until the health of one monster becomes 0 or below. The person with the monster whose health becomes 0 or below loses, and the other person wins.\n\nIf Takahashi will win, print `Yes`; if he will lose, print `No`.\n\nConstraints\n\n* 1 \\leq A,B,C,D \\leq 100\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C D\n\n\nOutput\n\nIf Takahashi will win, print `Yes`; if he will lose, print `No`.\n\nExamples\n\nInput\n\n10 9 10 10\n\n\nOutput\n\nNo\n\n\nInput\n\n46 4 40 5\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "p02969 AtCoder Beginner Contest 134 - Dodecagon", "description": "It is known that the area of a regular dodecagon inscribed in a circle of radius a is 3a^2.\n\nGiven an integer r, find the area of a regular dodecagon inscribed in a circle of radius r.\n\nConstraints\n\n* 1 \\leq r \\leq 100\n* r is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nr\n\n\nOutput\n\nPrint an integer representing the area of the regular dodecagon.\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n48\n\n\nInput\n\n15\n\n\nOutput\n\n675\n\n\nInput\n\n80\n\n\nOutput\n\n19200", "grammar": {"answer": null}}
{"name": "p02440 Min-Max Element", "description": "Write a program which manipulates a sequence $A = \\\\{a_0, a_1, ..., a_{n-1}\\\\}$ by the following operations:\n\n* min($b, e$): report the minimum element in $a_b, a_{b+1}, ..., a_{e-1}$\n* max($b, e$): report the maximum element in $a_b, a_{b+1}, ..., a_{e-1}$\n\nConstraints\n\n* $1 \\leq n \\leq 1,000$\n* $-1,000,000,000 \\leq a_i \\leq 1,000,000,000$\n* $1 \\leq q \\leq 1,000$\n* $0 \\leq b < e \\leq n$\n\nInput\n\nThe input is given in the following format.\n\n\n$n$\n$a_0 \\; a_1, ..., \\; a_{n-1}$\n$q$\n$com_1 \\; b_1 \\; e_1$\n$com_2 \\; b_2 \\; e_2$\n:\n$com_{q} \\; b_{q} \\; e_{q}$\n\n\nIn the first line, $n$ (the number of elements in $A$) is given. In the second line, $a_i$ (each element in $A$) are given. In the third line, the number of queries $q$ is given and each query is given in the following $q$ lines. $com_i$ denotes a type of query. 0 and 1 represents min($b, e$) and max($b, e$) respectively.\n\nOutput\n\nFor each query, print the minimum element or the maximum element in a line.\n\nExample\n\nInput\n\n7\n8 3 7 1 9 1 4\n3\n0 0 3\n0 1 5\n1 0 7\n\n\nOutput\n\n3\n1\n9", "grammar": {"answer": null}}
{"name": "903_C. Boxes Packing", "description": "Mishka has got n empty boxes. For every i (1 ≤ i ≤ n), i-th box is a cube with side length ai.\n\nMishka can put a box i into another box j if the following conditions are met:\n\n  * i-th box is not put into another box; \n  * j-th box doesn't contain any other boxes; \n  * box i is smaller than box j (ai < aj). \n\n\n\nMishka can put boxes into each other an arbitrary number of times. He wants to minimize the number of visible boxes. A box is called visible iff it is not put into some another box.\n\nHelp Mishka to determine the minimum possible number of visible boxes!\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 5000) — the number of boxes Mishka has got.\n\nThe second line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 109), where ai is the side length of i-th box.\n\nOutput\n\nPrint the minimum possible number of visible boxes.\n\nExamples\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n1\n\n\nInput\n\n4\n4 2 4 3\n\n\nOutput\n\n2\n\nNote\n\nIn the first example it is possible to put box 1 into box 2, and 2 into 3.\n\nIn the second example Mishka can put box 2 into box 3, and box 4 into box 1.", "grammar": {"answer": null}}
{"name": "p00946 Rearranging a Sequence", "description": "Example\n\nInput\n\n5 3\n4\n2\n5\n\n\nOutput\n\n5\n2\n4\n1\n3", "grammar": {"answer": null}}
{"name": "p02651 AtCoder Grand Contest 045 - Xor Battle", "description": "There are two persons, numbered 0 and 1, and a variable x whose initial value is 0. The two persons now play a game. The game is played in N rounds. The following should be done in the i-th round (1 \\leq i \\leq N):\n\n* Person S_i does one of the following:\n* Replace x with x \\oplus A_i, where \\oplus represents bitwise XOR.\n* Do nothing.\n\n\n\nPerson 0 aims to have x=0 at the end of the game, while Person 1 aims to have x \\neq 0 at the end of the game.\n\nDetermine whether x becomes 0 at the end of the game when the two persons play optimally.\n\nSolve T test cases for each input file.\n\nConstraints\n\n* 1 \\leq T \\leq 100\n* 1 \\leq N \\leq 200\n* 1 \\leq A_i \\leq 10^{18}\n* S is a string of length N consisting of `0` and `1`.\n* All numbers in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format. The first line is as follows:\n\n\nT\n\n\nThen, T test cases follow. Each test case is given in the following format:\n\n\nN\nA_1 A_2 \\cdots A_N\nS\n\n\nOutput\n\nFor each test case, print a line containing `0` if x becomes 0 at the end of the game, and `1` otherwise.\n\nExample\n\nInput\n\n3\n2\n1 2\n10\n2\n1 1\n10\n6\n2 3 4 5 6 7\n111000\n\n\nOutput\n\n1\n0\n0", "grammar": {"answer": null}}
{"name": "449_D. Jzzhu and Numbers", "description": "Jzzhu have n non-negative integers a1, a2, ..., an. We will call a sequence of indexes i1, i2, ..., ik (1 ≤ i1 < i2 < ... < ik ≤ n) a group of size k. \n\nJzzhu wonders, how many groups exists such that ai1 & ai2 & ... & aik = 0 (1 ≤ k ≤ n)? Help him and print this number modulo 1000000007 (109 + 7). Operation x & y denotes bitwise AND operation of two numbers.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 106). The second line contains n integers a1, a2, ..., an (0 ≤ ai ≤ 106).\n\nOutput\n\nOutput a single integer representing the number of required groups modulo 1000000007 (109 + 7).\n\nExamples\n\nInput\n\n3\n2 3 3\n\n\nOutput\n\n0\n\n\nInput\n\n4\n0 1 2 3\n\n\nOutput\n\n10\n\n\nInput\n\n6\n5 2 0 5 2 1\n\n\nOutput\n\n53", "grammar": {"answer": null}}
{"name": "p01977 Aquarium", "description": "problem\n\nAOR Ika got a water tank with a size of $ 1 $ in length and $ N $ in width. The aquarium is tall enough to hold water. The aquarium has $ N-1 $ partitions and is evenly spaced into $ N $ compartments. When water was poured here, the height of the water in each section became $ a_i $.\n\nAOR Ika decided to remove some dividers and reduce the number of compartments to $ M $ or less. When you have removed the dividers, find the maximum sum of the water heights in each compartment.\n\nThe thickness of the partition can be ignored.\n\n\n\ninput\n\n$ N \\ M $\n$ a_1 \\ cdots a_N $\n\noutput\n\nOutput the maximum value of the total water height of each section in one line. Also, output a line break at the end. It is acceptable if the relative or absolute error is less than or equal to $ 10 ^ {-6} $.\n\nExample\n\nInput\n\n5 3\n9 1 2 3 9\n\n\nOutput\n\n20.000000", "grammar": {"answer": null}}
{"name": "p03292 AtCoder Beginner Contest 103 - Task Scheduling Problem", "description": "You have three tasks, all of which need to be completed.\n\nFirst, you can complete any one task at cost 0.\n\nThen, just after completing the i-th task, you can complete the j-th task at cost |A_j - A_i|.\n\nHere, |x| denotes the absolute value of x.\n\nFind the minimum total cost required to complete all the task.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq A_1, A_2, A_3 \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA_1 A_2 A_3\n\n\nOutput\n\nPrint the minimum total cost required to complete all the task.\n\nExamples\n\nInput\n\n1 6 3\n\n\nOutput\n\n5\n\n\nInput\n\n11 5 5\n\n\nOutput\n\n6\n\n\nInput\n\n100 100 100\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "558_B. Amr and The Large Array", "description": "Amr has got a large array of size n. Amr doesn't like large arrays so he intends to make it smaller.\n\nAmr doesn't care about anything in the array except the beauty of it. The beauty of the array is defined to be the maximum number of times that some number occurs in this array. He wants to choose the smallest subsegment of this array such that the beauty of it will be the same as the original array.\n\nHelp Amr by choosing the smallest subsegment possible.\n\nInput\n\nThe first line contains one number n (1 ≤ n ≤ 105), the size of the array.\n\nThe second line contains n integers ai (1 ≤ ai ≤ 106), representing elements of the array.\n\nOutput\n\nOutput two integers l, r (1 ≤ l ≤ r ≤ n), the beginning and the end of the subsegment chosen respectively.\n\nIf there are several possible answers you may output any of them. \n\nExamples\n\nInput\n\n5\n1 1 2 2 1\n\n\nOutput\n\n1 5\n\nInput\n\n5\n1 2 2 3 1\n\n\nOutput\n\n2 3\n\nInput\n\n6\n1 2 2 1 1 2\n\n\nOutput\n\n1 5\n\nNote\n\nA subsegment B of an array A from l to r is an array of size r - l + 1 where Bi = Al + i - 1 for all 1 ≤ i ≤ r - l + 1", "grammar": {"answer": null}}
{"name": "1132_F. Clear the String", "description": "You are given a string s of length n consisting of lowercase Latin letters. You may apply some operations to this string: in one operation you can delete some contiguous substring of this string, if all letters in the substring you delete are equal. For example, after deleting substring bbbb from string abbbbaccdd we get the string aaccdd.\n\nCalculate the minimum number of operations to delete the whole string s.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 500) — the length of string s.\n\nThe second line contains the string s (|s| = n) consisting of lowercase Latin letters.\n\nOutput\n\nOutput a single integer — the minimal number of operation to delete string s.\n\nExamples\n\nInput\n\n\n5\nabaca\n\n\nOutput\n\n\n3\n\nInput\n\n\n8\nabcddcba\n\n\nOutput\n\n\n4", "grammar": {"answer": null}}
{"name": "p03097 AtCoder Grand Contest 031 - Differ by 1 Bit", "description": "You are given integers N,\\ A and B. Determine if there exists a permutation (P_0,\\ P_1,\\ ...\\ P_{2^N-1}) of (0,\\ 1,\\ ...\\ 2^N-1) that satisfies all of the following conditions, and create one such permutation if it exists.\n\n* P_0=A\n* P_{2^N-1}=B\n* For all 0 \\leq i < 2^N-1, the binary representations of P_i and P_{i+1} differ by exactly one bit.\n\nConstraints\n\n* 1 \\leq N \\leq 17\n* 0 \\leq A \\leq 2^N-1\n* 0 \\leq B \\leq 2^N-1\n* A \\neq B\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN A B\n\n\nOutput\n\nIf there is no permutation that satisfies the conditions, print `NO`.\n\nIf there is such a permutation, print `YES` in the first line. Then, print (P_0,\\ P_1,\\ ...\\ P_{2^N-1}) in the second line, with spaces in between. If there are multiple solutions, any of them is accepted.\n\nExamples\n\nInput\n\n2 1 3\n\n\nOutput\n\nYES\n1 0 2 3\n\n\nInput\n\n3 2 1\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p02324 Chinese Postman Problem", "description": "For a given weighted undirected graph G(V, E), find the distance of the shortest route that meets the following criteria:\n\n* It is a closed cycle where it ends at the same point it starts.\n* The route must go through every edge at least once.\n\nConstraints\n\n* 2 ≤ |V| ≤ 15\n* 0 ≤ |E| ≤ 1,000\n* 0 ≤ di ≤ 1,000\n* si ≠ ti\n* The graph is connected\n\nInput\n\n\n|V| |E|\ns0 t0 d0\ns1 t1 d1\n:\ns|E|-1 t|E|-1 d|E|-1\n\n\n, where |V| is the number of vertices and |E| is the number of edges in the graph. The graph vertices are named with the numbers 0, 1,..., |V|-1 respectively.\n\nsi and ti represent source and target verticess of i-th edge (undirected) and di represents the distance between si and ti (the i-th edge).\n\nNote that there can be multiple edges between a pair of vertices.\n\nOutput\n\nPrint the shortest distance in a line.\n\nExamples\n\nInput\n\n4 4\n0 1 1\n0 2 2\n1 3 3\n2 3 4\n\n\nOutput\n\n10\n\n\nInput\n\n4 5\n0 1 1\n0 2 2\n1 3 3\n2 3 4\n1 2 5\n\n\nOutput\n\n18\n\n\nInput\n\n2 3\n0 1 1\n0 1 2\n0 1 3\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "p00081 A Symmetric Point", "description": "Read a set of coordinates of three different points P1 (x1, y1), P2 (x2, y2), Q (xq, yq) on the plane, and line symmetry with point Q with the straight line passing through point P1 point P2 as the axis of symmetry. Create a program that outputs the point R (x, y) at the position of. Note that the point Q is not on its axis of symmetry.\n\n<image>\n\n\n\ninput\n\nThe input consists of multiple datasets. Each dataset is given in the following format:\n\n\nx1, y1, x2, y2, xq, yq\n\n\nx1, y1, x2, y2, xq, yq (real numbers between -100 and 100) are given on one line separated by commas.\n\nThe number of datasets does not exceed 50.\n\noutput\n\nPrint x, y on a single line, separated by blanks, for each dataset. The output may contain an error of 0.0001 or less in real numbers.\n\nExample\n\nInput\n\n1.0,0.0,-1.0,0.0,1.0,1.0\n1.0,0.0,0.0,-1.0,3.0,0.0\n0.0,1.0,0.0,-1.0,1.0,1.0\n\n\nOutput\n\n1.000000 -1.000000\n1.000000 2.000000\n-1.000000 1.000000", "grammar": {"answer": null}}
{"name": "895_C. Square Subsets", "description": "Petya was late for the lesson too. The teacher gave him an additional task. For some array a Petya should find the number of different ways to select non-empty subset of elements from it in such a way that their product is equal to a square of some integer.\n\nTwo ways are considered different if sets of indexes of elements chosen by these ways are different.\n\nSince the answer can be very large, you should find the answer modulo 109 + 7.\n\nInput\n\nFirst line contains one integer n (1 ≤ n ≤ 105) — the number of elements in the array.\n\nSecond line contains n integers ai (1 ≤ ai ≤ 70) — the elements of the array.\n\nOutput\n\nPrint one integer — the number of different ways to choose some elements so that their product is a square of a certain integer modulo 109 + 7.\n\nExamples\n\nInput\n\n4\n1 1 1 1\n\n\nOutput\n\n15\n\n\nInput\n\n4\n2 2 2 2\n\n\nOutput\n\n7\n\n\nInput\n\n5\n1 2 4 5 8\n\n\nOutput\n\n7\n\nNote\n\nIn first sample product of elements chosen by any way is 1 and 1 = 12. So the answer is 24 - 1 = 15.\n\nIn second sample there are six different ways to choose elements so that their product is 4, and only one way so that their product is 16. So the answer is 6 + 1 = 7.", "grammar": {"answer": null}}
{"name": "9_C. Hexadecimal's Numbers", "description": "One beautiful July morning a terrible thing happened in Mainframe: a mean virus Megabyte somehow got access to the memory of his not less mean sister Hexadecimal. He loaded there a huge amount of n different natural numbers from 1 to n to obtain total control over her energy.\n\nBut his plan failed. The reason for this was very simple: Hexadecimal didn't perceive any information, apart from numbers written in binary format. This means that if a number in a decimal representation contained characters apart from 0 and 1, it was not stored in the memory. Now Megabyte wants to know, how many numbers were loaded successfully.\n\nInput\n\nInput data contains the only number n (1 ≤ n ≤ 109).\n\nOutput\n\nOutput the only number — answer to the problem.\n\nExamples\n\nInput\n\n10\n\n\nOutput\n\n2\n\nNote\n\nFor n = 10 the answer includes numbers 1 and 10.", "grammar": {"answer": null}}
{"name": "1538_F. Interesting Function", "description": "You are given two integers l and r, where l < r. We will add 1 to l until the result is equal to r. Thus, there will be exactly r-l additions performed. For each such addition, let's look at the number of digits that will be changed after it.\n\nFor example: \n\n  * if l=909, then adding one will result in 910 and 2 digits will be changed; \n  * if you add one to l=9, the result will be 10 and 2 digits will also be changed; \n  * if you add one to l=489999, the result will be 490000 and 5 digits will be changed. \n\n\n\nChanged digits always form a suffix of the result written in the decimal system.\n\nOutput the total number of changed digits, if you want to get r from l, adding 1 each time.\n\nInput\n\nThe first line contains an integer t (1 ≤ t ≤ 10^4). Then t test cases follow.\n\nEach test case is characterized by two integers l and r (1 ≤ l < r ≤ 10^9).\n\nOutput\n\nFor each test case, calculate the total number of changed digits if you want to get r from l, adding one each time.\n\nExample\n\nInput\n\n\n4\n1 9\n9 10\n10 20\n1 1000000000\n\n\nOutput\n\n\n8\n2\n11\n1111111110", "grammar": {"answer": null}}
{"name": "196_A. Lexicographically Maximum Subsequence", "description": "You've got string s, consisting of only lowercase English letters. Find its lexicographically maximum subsequence.\n\nWe'll call a non-empty string s[p1p2... pk] = sp1sp2... spk(1 ≤ p1 < p2 < ... < pk ≤ |s|) a subsequence of string s = s1s2... s|s|.\n\nString x = x1x2... x|x| is lexicographically larger than string y = y1y2... y|y|, if either |x| > |y| and x1 = y1, x2 = y2, ... , x|y| = y|y|, or exists such number r (r < |x|, r < |y|), that x1 = y1, x2 = y2, ... , xr = yr and xr + 1 > yr + 1. Characters in lines are compared like their ASCII codes.\n\nInput\n\nThe single line contains a non-empty string s, consisting only of lowercase English letters. The string's length doesn't exceed 105.\n\nOutput\n\nPrint the lexicographically maximum subsequence of string s.\n\nExamples\n\nInput\n\nababba\n\n\nOutput\n\nbbba\n\n\nInput\n\nabbcbccacbbcbaaba\n\n\nOutput\n\ncccccbba\n\nNote\n\nLet's look at samples and see what the sought subsequences look like (they are marked with uppercase bold letters).\n\nThe first sample: aBaBBA\n\nThe second sample: abbCbCCaCbbCBaaBA", "grammar": {"answer": null}}
{"name": "768_D. Jon and Orbs", "description": "Jon Snow is on the lookout for some orbs required to defeat the white walkers. There are k different types of orbs and he needs at least one of each. One orb spawns daily at the base of a Weirwood tree north of the wall. The probability of this orb being of any kind is equal. As the north of wall is full of dangers, he wants to know the minimum number of days he should wait before sending a ranger to collect the orbs such that the probability of him getting at least one of each kind of orb is at least <image>, where ε < 10 - 7.\n\nTo better prepare himself, he wants to know the answer for q different values of pi. Since he is busy designing the battle strategy with Sam, he asks you for your help.\n\nInput\n\nFirst line consists of two space separated integers k, q (1 ≤ k, q ≤ 1000) — number of different kinds of orbs and number of queries respectively.\n\nEach of the next q lines contain a single integer pi (1 ≤ pi ≤ 1000) — i-th query.\n\nOutput\n\nOutput q lines. On i-th of them output single integer — answer for i-th query.\n\nExamples\n\nInput\n\n1 1\n1\n\n\nOutput\n\n1\n\n\nInput\n\n2 2\n1\n2\n\n\nOutput\n\n2\n2", "grammar": {"answer": null}}
{"name": "p02563 AtCoder Library Practice Contest - Convolution", "description": "You are given two integer arrays a_0, a_1, ..., a_{N - 1} and b_0, b_1, ..., b_{M - 1}. Calculate the array c_0, c_1, ..., c_{(N - 1) + (M - 1)}, defined by c_i = \\sum_{j = 0}^i a_j b_{i - j} \\bmod 998244353.\n\nConstraints\n\n* 1 \\leq N, M \\leq 524288\n* 0 \\leq a_i, b_i < 998244353\n* All values in Input are integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\na_0 a_1 ... a_{N-1}\nb_0 b_1 ... b_{M-1}\n\n\nOutput\n\nPrint the answer in the following format:\n\n\nc_0 c_1 ... c_{(N - 1) + (M - 1)}\n\nOutput\n\nPrint the answer in the following format:\n\n\nc_0 c_1 ... c_{(N - 1) + (M - 1)}\n\nExamples\n\nInput\n\n4 5\n1 2 3 4\n5 6 7 8 9\n\n\nOutput\n\n5 16 34 60 70 70 59 36\n\n\nInput\n\n1 1\n10000000\n10000000\n\n\nOutput\n\n871938225", "grammar": {"answer": null}}
{"name": "124_A. The number of positions", "description": "Petr stands in line of n people, but he doesn't know exactly which position he occupies. He can say that there are no less than a people standing in front of him and no more than b people standing behind him. Find the number of different positions Petr can occupy.\n\nInput\n\nThe only line contains three integers n, a and b (0 ≤ a, b < n ≤ 100).\n\nOutput\n\nPrint the single number — the number of the sought positions.\n\nExamples\n\nInput\n\n3 1 1\n\n\nOutput\n\n2\n\n\nInput\n\n5 2 3\n\n\nOutput\n\n3\n\nNote\n\nThe possible positions in the first sample are: 2 and 3 (if we number the positions starting with 1).\n\nIn the second sample they are 3, 4 and 5.", "grammar": {"answer": null}}
{"name": "p03704 AtCoder Regular Contest 075 - Mirrored", "description": "For a positive integer n, we denote the integer obtained by reversing the decimal notation of n (without leading zeroes) by rev(n). For example, rev(123) = 321 and rev(4000) = 4.\n\nYou are given a positive integer D. How many positive integers N satisfy rev(N) = N + D?\n\nConstraints\n\n* D is an integer.\n* 1 ≤ D < 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nD\n\n\nOutput\n\nPrint the number of the positive integers N such that rev(N) = N + D.\n\nExamples\n\nInput\n\n63\n\n\nOutput\n\n2\n\n\nInput\n\n75\n\n\nOutput\n\n0\n\n\nInput\n\n864197532\n\n\nOutput\n\n1920", "grammar": {"answer": null}}
{"name": "p00140 Bus Line", "description": "There is a bus route as shown in Figure 1. There are 10 stops, each numbered 0-9. The bus turns back at stop 0, but the other side is a circulation route, which circulates in the order of 5 → 6 → 7 → 8 → 9 → 5 as shown in the figure.\n\n<image>\n\n\nFor this bus route, create a program that inputs the stop to get on and the stop to get off, and outputs the number of the stop that goes from getting on to getting off.\n\nHowever, you can take a two-way bus at stops 1-5, but we will take a bus that arrives at the stop on a shorter route. For example, if you are going from stop 4 to stop 2, take the bus going to the left and follow the route \"4 → 3 → 2\". Also, once you get on the bus, you will not get off the bus. The same stop is not designated as a boarding stop or a getting-off stop.\n\n\n\nInput\n\nGiven multiple datasets. The first line gives the number of datasets n (n ≤ 20). For each dataset, the stop number to get on and the stop number to get off are given on one line separated by blanks.\n\nOutput\n\nFor each data set, output the list of passing stop numbers on one line separated by blanks.\n\nExample\n\nInput\n\n2\n2 4\n4 2\n\n\nOutput\n\n2 3 4\n4 3 2", "grammar": {"answer": null}}
{"name": "596_B. Wilbur and Array", "description": "Wilbur the pig is tinkering with arrays again. He has the array a1, a2, ..., an initially consisting of n zeros. At one step, he can choose any index i and either add 1 to all elements ai, ai + 1, ... , an or subtract 1 from all elements ai, ai + 1, ..., an. His goal is to end up with the array b1, b2, ..., bn. \n\nOf course, Wilbur wants to achieve this goal in the minimum number of steps and asks you to compute this value.\n\nInput\n\nThe first line of the input contains a single integer n (1 ≤ n ≤ 200 000) — the length of the array ai. Initially ai = 0 for every position i, so this array is not given in the input.\n\nThe second line of the input contains n integers b1, b2, ..., bn ( - 109 ≤ bi ≤ 109).\n\nOutput\n\nPrint the minimum number of steps that Wilbur needs to make in order to achieve ai = bi for all i.\n\nExamples\n\nInput\n\n5\n1 2 3 4 5\n\n\nOutput\n\n5\n\nInput\n\n4\n1 2 2 1\n\n\nOutput\n\n3\n\nNote\n\nIn the first sample, Wilbur may successively choose indices 1, 2, 3, 4, and 5, and add 1 to corresponding suffixes.\n\nIn the second sample, Wilbur first chooses indices 1 and 2 and adds 1 to corresponding suffixes, then he chooses index 4 and subtract 1.", "grammar": {"answer": null}}
{"name": "656_G. You're a Professional", "description": "A simple recommendation system would recommend a user things liked by a certain number of their friends. In this problem you will implement part of such a system.\n\nYou are given user's friends' opinions about a list of items. You are also given a threshold T — the minimal number of \"likes\" necessary for an item to be recommended to the user.\n\nOutput the number of items in the list liked by at least T of user's friends.\n\nInput\n\nThe first line of the input will contain three space-separated integers: the number of friends F (1 ≤ F ≤ 10), the number of items I (1 ≤ I ≤ 10) and the threshold T (1 ≤ T ≤ F).\n\nThe following F lines of input contain user's friends' opinions. j-th character of i-th line is 'Y' if i-th friend likes j-th item, and 'N' otherwise.\n\nOutput\n\nOutput an integer — the number of items liked by at least T of user's friends.\n\nExamples\n\nInput\n\n3 3 2\nYYY\nNNN\nYNY\n\n\nOutput\n\n2\n\n\nInput\n\n4 4 1\nNNNY\nNNYN\nNYNN\nYNNN\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "1030_C. Vasya and Golden Ticket", "description": "Recently Vasya found a golden ticket — a sequence which consists of n digits a_1a_2... a_n. Vasya considers a ticket to be lucky if it can be divided into two or more non-intersecting segments with equal sums. For example, ticket 350178 is lucky since it can be divided into three segments 350, 17 and 8: 3+5+0=1+7=8. Note that each digit of sequence should belong to exactly one segment.\n\nHelp Vasya! Tell him if the golden ticket he found is lucky or not.\n\nInput\n\nThe first line contains one integer n (2 ≤ n ≤ 100) — the number of digits in the ticket.\n\nThe second line contains n digits a_1 a_2 ... a_n (0 ≤ a_i ≤ 9) — the golden ticket. Digits are printed without spaces.\n\nOutput\n\nIf the golden ticket is lucky then print \"YES\", otherwise print \"NO\" (both case insensitive).\n\nExamples\n\nInput\n\n5\n73452\n\n\nOutput\n\nYES\n\n\nInput\n\n4\n1248\n\n\nOutput\n\nNO\n\nNote\n\nIn the first example the ticket can be divided into 7, 34 and 52: 7=3+4=5+2.\n\nIn the second example it is impossible to divide ticket into segments with equal sum.", "grammar": {"answer": null}}
{"name": "p03088 AtCoder Beginner Contest 122 - We Like AGC", "description": "You are given an integer N. Find the number of strings of length N that satisfy the following conditions, modulo 10^9+7:\n\n* The string does not contain characters other than `A`, `C`, `G` and `T`.\n* The string does not contain `AGC` as a substring.\n* The condition above cannot be violated by swapping two adjacent characters once.\n\nConstraints\n\n* 3 \\leq N \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the number of strings of length N that satisfy the following conditions, modulo 10^9+7.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n61\n\n\nInput\n\n4\n\n\nOutput\n\n230\n\n\nInput\n\n100\n\n\nOutput\n\n388130742", "grammar": {"answer": null}}
{"name": "p03618 AtCoder Grand Contest 019 - Reverse and Compare", "description": "You have a string A = A_1 A_2 ... A_n consisting of lowercase English letters.\n\nYou can choose any two indices i and j such that 1 \\leq i \\leq j \\leq n and reverse substring A_i A_{i+1} ... A_j.\n\nYou can perform this operation at most once.\n\nHow many different strings can you obtain?\n\nConstraints\n\n* 1 \\leq |A| \\leq 200,000\n* A consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA\n\n\nOutput\n\nPrint the number of different strings you can obtain by reversing any substring in A at most once.\n\nExamples\n\nInput\n\naatt\n\n\nOutput\n\n5\n\n\nInput\n\nxxxxxxxxxx\n\n\nOutput\n\n1\n\n\nInput\n\nabracadabra\n\n\nOutput\n\n44", "grammar": {"answer": null}}
{"name": "p01471 Fractional Knapsack", "description": "Problem statement\n\nReal variables $ x_1, x_2, ..., x_N $ satisfy the following conditions.\n\n1. $ 0 \\ leq x_i \\ leq 1 $ ($ 1 \\ leq i \\ leq N $)\n2. $ w_1x_1 + w_2x_2 + ... + w_Nx_N \\ leq W $\n\n\n\nAt this time, find the maximum value that $ v_1x_1 + v_2x_2 + ... + v_Nx_N $ can take. It is known that such a maximum actually exists.\n\nConstraint\n\n* $ 1 \\ leq N \\ leq 10 ^ 5 $\n* $ 1 \\ leq W \\ leq 10 ^ 5 $\n* $ -10 ^ 4 \\ leq w_i \\ leq 10 ^ 4 $\n* $ -10 ^ 4 \\ leq v_i \\ leq 10 ^ 4 $\n\n\n\ninput\n\nInput follows the following format. All given numbers are integers.\n\n\n$ N $ $ W $\n$ w_1 $ $ v_1 $\n$ w_2 $ $ v_2 $\n$ ... $\n$ w_N $ $ v_N $\n\noutput\n\nOutput the maximum possible value of $ v_1x_1 + v_2x_2 + ... + v_Nx_N $ on one line. The output must not have an error greater than $ 10 ^ {-3} $.\n\nExamples\n\nInput\n\n1 1\n3 1\n\n\nOutput\n\n0.333333\n\n\nInput\n\n2 3\n3 3\n1 2\n\n\nOutput\n\n4.000000\n\n\nInput\n\n2 1\n-1 -3\n3 10\n\n\nOutput\n\n3.666667", "grammar": {"answer": null}}
{"name": "p02467 Prime Factorize", "description": "Factorize a given integer n.\n\nConstraints\n\n* 2 ≤ n ≤ 109\n\nInput\n\n\nn\n\n\nAn integer n is given in a line.\n\nOutput\n\nPrint the given integer n and :. Then, print prime factors in ascending order. If n is divisible by a prime factor several times, the prime factor should be printed according to the number of times. Print a space before each prime factor.\n\nExamples\n\nInput\n\n12\n\n\nOutput\n\n12: 2 2 3\n\n\nInput\n\n126\n\n\nOutput\n\n126: 2 3 3 7", "grammar": {"answer": null}}
{"name": "1421_A. XORwice", "description": "In order to celebrate Twice's 5th anniversary, Tzuyu and Sana decided to play a game.\n\nTzuyu gave Sana two integers a and b and a really important quest.\n\nIn order to complete the quest, Sana has to output the smallest possible value of (a ⊕ x) + (b ⊕ x) for any given x, where ⊕ denotes the [bitwise XOR operation](http://en.wikipedia.org/wiki/Bitwise_operation#XOR). \n\nInput\n\nEach test contains multiple test cases. The first line contains the number of test cases t (1 ≤ t ≤ 10^{4}). Description of the test cases follows.\n\nThe only line of each test case contains two integers a and b (1 ≤ a, b ≤ 10^{9}).\n\nOutput\n\nFor each testcase, output the smallest possible value of the given expression.\n\nExample\n\nInput\n\n\n6\n6 12\n4 9\n59 832\n28 14\n4925 2912\n1 1\n\n\nOutput\n\n\n10\n13\n891\n18\n6237\n0\n\nNote\n\nFor the first test case Sana can choose x=4 and the value will be (6 ⊕ 4) + (12 ⊕ 4) = 2 + 8 = 10. It can be shown that this is the smallest possible value.", "grammar": {"answer": null}}
{"name": "p00389 Pilling Blocks", "description": "We make a tower by stacking up blocks. The tower consists of several stages and each stage is constructed by connecting blocks horizontally. Each block is of the same weight and is tough enough to withstand the weight equivalent to up to $K$ blocks without crushing.\n\nWe have to build the tower abiding by the following conditions:\n\n* Every stage of the tower has one or more blocks on it.\n* Each block is loaded with weight that falls within the withstanding range of the block. The weight loaded on a block in a stage is evaluated by: total weight of all blocks above the stage divided by the number of blocks within the stage.\n\n\n\nGiven the number of blocks and the strength, make a program to evaluate the maximum height (i.e., stages) of the tower than can be constructed.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\n$N$ $K$\n\n\nThe input line provides the number of blocks available $N$ ($1 \\leq N \\leq 10^5$) and the strength of the block $K$ ($1 \\leq K \\leq 10^5$).\n\nOutput\n\nOutput the maximum possible number of stages.\n\nExamples\n\nInput\n\n4 2\n\n\nOutput\n\n3\n\n\nInput\n\n5 2\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p03886 CODE FESTIVAL 2016 Grand Final(Parallel) - 90 and 270", "description": "Construct an N-gon that satisfies the following conditions:\n\n* The polygon is simple (see notes for the definition).\n* Each edge of the polygon is parallel to one of the coordinate axes.\n* Each coordinate is an integer between 0 and 10^9, inclusive.\n* The vertices are numbered 1 through N in counter-clockwise order.\n* The internal angle at the i-th vertex is exactly a_i degrees.\n\n\n\nIn case there are multiple possible answers, you can output any.\n\nConstraints\n\n* 3 ≤ N ≤ 1000\n* a_i is either 90 or 270.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\na_1\n:\na_N\n\n\nOutput\n\nIn case the answer exists, print the answer in the following format:\n\n\nx_1 y_1\n:\nx_N y_N\n\n\nHere (x_i, y_i) are the coordinates of the i-th vertex.\n\nIn case the answer doesn't exist, print a single `-1`.\n\nExamples\n\nInput\n\n8\n90\n90\n270\n90\n90\n90\n270\n90\n\n\nOutput\n\n0 0\n2 0\n2 1\n3 1\n3 2\n1 2\n1 1\n0 1\n\n\nInput\n\n3\n90\n90\n90\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "55_C. Pie or die", "description": "Volodya and Vlad play the following game. There are k pies at the cells of n × m board. Each turn Volodya moves one pie to the neighbouring (by side) cell. If the pie lies at the border of the board then Volodya can move it outside the board, get the pie and win. After Volodya's move, Vlad bans some edge at the border of the board of length 1 (between two knots of the board) so that Volodya is not able to move the pie outside the board through this edge anymore. The question is: will Volodya win this game? We suppose both players follow the optimal strategy.\n\n<image>\n\nInput\n\nFirst line contains 3 integers, separated by space: 1 ≤ n, m ≤ 100 — dimensions of the board and 0 ≤ k ≤ 100 — the number of pies. Each of the next k lines contains 2 integers, separated by space: 1 ≤ x ≤ n, 1 ≤ y ≤ m — coordinates of the corresponding pie. There could be more than one pie at a cell. \n\nOutput\n\nOutput only one word: \"YES\" — if Volodya wins, \"NO\" — otherwise.\n\nExamples\n\nInput\n\n2 2 1\n1 2\n\n\nOutput\n\nYES\n\nInput\n\n3 4 0\n\n\nOutput\n\nNO\n\nInput\n\n100 50 2\n50 25\n50 25\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p03081 ExaWizards 2019 - Snuke the Wizard", "description": "There are N squares numbered 1 to N from left to right. Each square has a character written on it, and Square i has a letter s_i. Besides, there is initially one golem on each square.\n\nSnuke cast Q spells to move the golems.\n\nThe i-th spell consisted of two characters t_i and d_i, where d_i is `L` or `R`. When Snuke cast this spell, for each square with the character t_i, all golems on that square moved to the square adjacent to the left if d_i is `L`, and moved to the square adjacent to the right if d_i is `R`.\n\nHowever, when a golem tried to move left from Square 1 or move right from Square N, it disappeared.\n\nFind the number of golems remaining after Snuke cast the Q spells.\n\nConstraints\n\n* 1 \\leq N,Q \\leq 2 \\times 10^{5}\n* |s| = N\n* s_i and t_i are uppercase English letters.\n* d_i is `L` or `R`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN Q\ns\nt_1 d_1\n\\vdots\nt_{Q} d_Q\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3 4\nABC\nA L\nB L\nB R\nA R\n\n\nOutput\n\n2\n\n\nInput\n\n8 3\nAABCBDBA\nA L\nB R\nA R\n\n\nOutput\n\n5\n\n\nInput\n\n10 15\nSNCZWRCEWB\nB R\nR R\nE R\nW R\nZ L\nS R\nQ L\nW L\nB R\nC L\nA L\nN L\nE R\nZ L\nS L\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p02264 Queue", "description": "Notes\n\nTemplate in C\n\nConstraints\n\n* 1 ≤ n ≤ 100000\n* 1 ≤ q ≤ 1000\n* 1 ≤ timei ≤ 50000\n* 1 ≤ length of namei ≤ 10\n* 1 ≤ Sum of timei ≤ 1000000\n\nInput\n\nn q\nname1 time1\nname2 time2\n...\nnamen timen\n\n\nIn the first line the number of processes n and the quantum q are given separated by a single space.\n\nIn the following n lines, names and times for the n processes are given. namei and timei are separated by a single space.\n\nOutput\n\nFor each process, prints its name and the time the process finished in order.\n\nExample\n\nInput\n\n5 100\np1 150\np2 80\np3 200\np4 350\np5 20\n\n\nOutput\n\np2 180\np5 400\np1 450\np3 550\np4 800", "grammar": {"answer": null}}
{"name": "409_A. The Great Game", "description": "Two teams meet in The Game World Championship. Some scientists consider this game to be the most intellectually challenging game in the world. You are given two strings describing the teams' actions in the final battle. Figure out who became the champion.\n\nInput\n\nThe input contains two strings of equal length (between 2 and 20 characters, inclusive). Each line describes the actions of one team.\n\nOutput\n\nOutput \"TEAM 1 WINS\" if the first team won, \"TEAM 2 WINS\" if the second team won, and \"TIE\" if there was a tie.\n\nExamples\n\nInput\n\n[]()[]8&lt;\n8&lt;[]()8&lt;\n\n\nOutput\n\nTEAM 2 WINS\n\n\nInput\n\n8&lt;8&lt;()\n[]8&lt;[]\n\n\nOutput\n\nTIE", "grammar": {"answer": null}}
{"name": "p02344 Weighted Union Find Trees", "description": "There is a sequence $A = a_0, a_1, ..., a_{n-1}$. You are given the following information and questions.\n\n* relate$(x, y, z)$: $a_y$ is greater than $a_x$ by $z$\n* diff$(x, y)$: report the difference between $a_x$ and $a_y$ $(a_y - a_x)$\n\nConstraints\n\n* $2 \\leq n \\leq 100,000$\n* $1 \\leq q \\leq 200,000$\n* $0 \\leq x, y < n$\n* $x \\ne y$\n* $0 \\leq z \\leq 10000$\n* There are no inconsistency in the given information\n\nInput\n\n\n$n \\; q$\n$query_1$\n$query_2$\n:\n$query_q$\n\n\nIn the first line, $n$ and $q$ are given. Then, $q$ information/questions are given in the following format.\n\n\n0 $x \\; y\\; z$\n\n\nor\n\n\n1 $x \\; y$\n\n\nwhere '0' of the first digit denotes the relate information and '1' denotes the diff question.\n\nOutput\n\nFor each diff question, print the difference between $a_x$ and $a_y$ $(a_y - a_x)$.\n\nExample\n\nInput\n\n5 6\n0 0 2 5\n0 1 2 3\n1 0 1\n1 1 3\n0 1 4 8\n1 0 4\n\n\nOutput\n\n2\n?\n10", "grammar": {"answer": null}}
{"name": "p03183 Educational DP Contest - Tower", "description": "There are N blocks, numbered 1, 2, \\ldots, N. For each i (1 \\leq i \\leq N), Block i has a weight of w_i, a solidness of s_i and a value of v_i.\n\nTaro has decided to build a tower by choosing some of the N blocks and stacking them vertically in some order. Here, the tower must satisfy the following condition:\n\n* For each Block i contained in the tower, the sum of the weights of the blocks stacked above it is not greater than s_i.\n\n\n\nFind the maximum possible sum of the values of the blocks contained in the tower.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^3\n* 1 \\leq w_i, s_i \\leq 10^4\n* 1 \\leq v_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nw_1 s_1 v_1\nw_2 s_2 v_2\n:\nw_N s_N v_N\n\n\nOutput\n\nPrint the maximum possible sum of the values of the blocks contained in the tower.\n\nExamples\n\nInput\n\n3\n2 2 20\n2 1 30\n3 1 40\n\n\nOutput\n\n50\n\n\nInput\n\n4\n1 2 10\n3 1 10\n2 4 10\n1 6 10\n\n\nOutput\n\n40\n\n\nInput\n\n5\n1 10000 1000000000\n1 10000 1000000000\n1 10000 1000000000\n1 10000 1000000000\n1 10000 1000000000\n\n\nOutput\n\n5000000000\n\n\nInput\n\n8\n9 5 7\n6 2 7\n5 7 3\n7 8 8\n1 9 6\n3 3 3\n4 1 7\n4 5 5\n\n\nOutput\n\n22", "grammar": {"answer": null}}
{"name": "p02767 AtCoder Beginner Contest 156 - Rally", "description": "There are N people living on a number line.\n\nThe i-th person lives at coordinate X_i.\n\nYou are going to hold a meeting that all N people have to attend.\n\nThe meeting can be held at any integer coordinate. If you choose to hold the meeting at coordinate P, the i-th person will spend (X_i - P)^2 points of stamina to attend the meeting.\n\nFind the minimum total points of stamina the N people have to spend.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 100\n* 1 \\leq X_i \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nX_1 X_2 ... X_N\n\n\nOutput\n\nPrint the minimum total stamina the N people have to spend.\n\nExamples\n\nInput\n\n2\n1 4\n\n\nOutput\n\n5\n\n\nInput\n\n7\n14 14 2 13 56 2 37\n\n\nOutput\n\n2354", "grammar": {"answer": null}}
{"name": "p04044 AtCoder Beginner Contest 042 - Iroha Loves Strings (ABC Edition)", "description": "Iroha has a sequence of N strings S_1, S_2, ..., S_N. The length of each string is L.\n\nShe will concatenate all of the strings in some order, to produce a long string.\n\nAmong all strings that she can produce in this way, find the lexicographically smallest one.\n\nHere, a string s=s_1s_2s_3...s_n is lexicographically smaller than another string t=t_1t_2t_3...t_m if and only if one of the following holds:\n\n* There exists an index i(1≦i≦min(n,m)), such that s_j = t_j for all indices j(1≦j<i), and s_i<t_i.\n* s_i = t_i for all integers i(1≦i≦min(n,m)), and n<m.\n\nConstraints\n\n* 1 ≦ N, L ≦ 100\n* For each i, the length of S_i equals L.\n* For each i, S_i consists of lowercase letters.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN L\nS_1\nS_2\n:\nS_N\n\n\nOutput\n\nPrint the lexicographically smallest string that Iroha can produce.\n\nExample\n\nInput\n\n3 3\ndxx\naxx\ncxx\n\n\nOutput\n\naxxcxxdxx", "grammar": {"answer": null}}
{"name": "392_A. Blocked Points", "description": "Imagine you have an infinite 2D plane with Cartesian coordinate system. Some of the integral points are blocked, and others are not. Two integral points A and B on the plane are 4-connected if and only if:\n\n  * the Euclidean distance between A and B is one unit and neither A nor B is blocked; \n  * or there is some integral point C, such that A is 4-connected with C, and C is 4-connected with B. \n\n\n\nLet's assume that the plane doesn't contain blocked points. Consider all the integral points of the plane whose Euclidean distance from the origin is no more than n, we'll name these points special. Chubby Yang wants to get the following property: no special point is 4-connected to some non-special point. To get the property she can pick some integral points of the plane and make them blocked. What is the minimum number of points she needs to pick?\n\nInput\n\nThe first line contains an integer n (0 ≤ n ≤ 4·107).\n\nOutput\n\nPrint a single integer — the minimum number of points that should be blocked.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n4\n\n\nInput\n\n2\n\n\nOutput\n\n8\n\n\nInput\n\n3\n\n\nOutput\n\n16", "grammar": {"answer": null}}
{"name": "p01224 Perfect Number", "description": "Let S be the sum of divisors of an integer N excluding the number itself. When N = S, N is called a perfect number, when N> S, N is called a defendant number, and when N <S, N is called an abundant number. Create a program that determines whether a given integer is a perfect number, a missing number, or an abundant number.\n\nBe careful not to exceed the program execution time.\n\n\n\nInput\n\nThe input consists of a sequence of datasets. The number of datasets is 100 or less.\n\nEach dataset consists of one row containing only the integer N (0 <N ≤ 100000000).\n\nAfter the last dataset, there is a line marked 0 that marks the end of the input.\n\nOutput\n\nFor each dataset, print the string \"` perfect number` \"if the integer N is a perfect number,\" `deficient number`\" if it is a missing number, or \"` abundant number` \"if it is an abundant number. ..\n\nExample\n\nInput\n\n1\n2\n3\n4\n6\n12\n16\n28\n33550336\n99999998\n99999999\n100000000\n0\n\n\nOutput\n\ndeficient number\ndeficient number\ndeficient number\ndeficient number\nperfect number\nabundant number\ndeficient number\nperfect number\nperfect number\ndeficient number\ndeficient number\nabundant number", "grammar": {"answer": null}}
{"name": "381_B. Sereja and Stairs", "description": "Sereja loves integer sequences very much. He especially likes stairs.\n\nSequence a1, a2, ..., a|a| (|a| is the length of the sequence) is stairs if there is such index i (1 ≤ i ≤ |a|), that the following condition is met: \n\na1 < a2 < ... < ai - 1 < ai > ai + 1 > ... > a|a| - 1 > a|a|.\n\nFor example, sequences [1, 2, 3, 2] and [4, 2] are stairs and sequence [3, 1, 2] isn't.\n\nSereja has m cards with numbers. He wants to put some cards on the table in a row to get a stair sequence. What maximum number of cards can he put on the table?\n\nInput\n\nThe first line contains integer m (1 ≤ m ≤ 105) — the number of Sereja's cards. The second line contains m integers bi (1 ≤ bi ≤ 5000) — the numbers on the Sereja's cards.\n\nOutput\n\nIn the first line print the number of cards you can put on the table. In the second line print the resulting stairs.\n\nExamples\n\nInput\n\n5\n1 2 3 4 5\n\n\nOutput\n\n5\n5 4 3 2 1\n\n\nInput\n\n6\n1 1 2 2 3 3\n\n\nOutput\n\n5\n1 2 3 2 1", "grammar": {"answer": null}}
{"name": "313_B. Ilya and Queries", "description": "Ilya the Lion wants to help all his friends with passing exams. They need to solve the following problem to pass the IT exam.\n\nYou've got string s = s1s2... sn (n is the length of the string), consisting only of characters \".\" and \"#\" and m queries. Each query is described by a pair of integers li, ri (1 ≤ li < ri ≤ n). The answer to the query li, ri is the number of such integers i (li ≤ i < ri), that si = si + 1.\n\nIlya the Lion wants to help his friends but is there anyone to help him? Help Ilya, solve the problem.\n\nInput\n\nThe first line contains string s of length n (2 ≤ n ≤ 105). It is guaranteed that the given string only consists of characters \".\" and \"#\".\n\nThe next line contains integer m (1 ≤ m ≤ 105) — the number of queries. Each of the next m lines contains the description of the corresponding query. The i-th line contains integers li, ri (1 ≤ li < ri ≤ n).\n\nOutput\n\nPrint m integers — the answers to the queries in the order in which they are given in the input.\n\nExamples\n\nInput\n\n......\n4\n3 4\n2 3\n1 6\n2 6\n\n\nOutput\n\n1\n1\n5\n4\n\n\nInput\n\n#..###\n5\n1 3\n5 6\n1 5\n3 6\n3 4\n\n\nOutput\n\n1\n1\n2\n2\n0", "grammar": {"answer": null}}
{"name": "p02226 Test", "description": "test\n\nUnionFind（バイナリ入力）\n\n\n\n\n\nExample\n\nInput\n\n\n\n\nOutput", "grammar": {"answer": null}}
{"name": "p02653 AtCoder Grand Contest 045 - Range Set", "description": "Snuke has a string x of length N. Initially, every character in x is `0`.\n\nSnuke can do the following two operations any number of times in any order:\n\n* Choose A consecutive characters in x and replace each of them with `0`.\n* Choose B consecutive characters in x and replace each of them with `1`.\n\n\n\nFind the number of different strings that x can be after Snuke finishes doing operations. This count can be enormous, so compute it modulo (10^9+7).\n\nConstraints\n\n* 1 \\leq N \\leq 5000\n* 1 \\leq A,B \\leq N\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN A B\n\n\nOutput\n\nPrint the number of different strings that x can be after Snuke finishes doing operations, modulo (10^9+7).\n\nExamples\n\nInput\n\n4 2 3\n\n\nOutput\n\n11\n\n\nInput\n\n10 7 2\n\n\nOutput\n\n533\n\n\nInput\n\n1000 100 10\n\n\nOutput\n\n828178524", "grammar": {"answer": null}}
{"name": "p03609 AtCoder Beginner Contest 072 - Sandglass2", "description": "We have a sandglass that runs for X seconds. The sand drops from the upper bulb at a rate of 1 gram per second. That is, the upper bulb initially contains X grams of sand.\n\nHow many grams of sand will the upper bulb contains after t seconds?\n\nConstraints\n\n* 1≤X≤10^9\n* 1≤t≤10^9\n* X and t are integers.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nX t\n\n\nOutput\n\nPrint the number of sand in the upper bulb after t second.\n\nExamples\n\nInput\n\n100 17\n\n\nOutput\n\n83\n\n\nInput\n\n48 58\n\n\nOutput\n\n0\n\n\nInput\n\n1000000000 1000000000\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p04047 AtCoder Grand Contest 001 - BBQ Easy", "description": "Snuke is having a barbeque party.\n\nAt the party, he will make N servings of Skewer Meal.\n\n<image>\n\nExample of a serving of Skewer Meal\n\nHe has a stock of 2N skewers, all of which will be used in Skewer Meal. The length of the i-th skewer is L_i. Also, he has an infinite supply of ingredients.\n\nTo make a serving of Skewer Meal, he picks 2 skewers and threads ingredients onto those skewers. Let the length of the shorter skewer be x, then the serving can hold the maximum of x ingredients.\n\nWhat is the maximum total number of ingredients that his N servings of Skewer Meal can hold, if he uses the skewers optimally?\n\nConstraints\n\n* 1≦N≦100\n* 1≦L_i≦100\n* For each i, L_i is an integer.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nL_1 L_2 ... L_{2N}\n\n\nOutput\n\nPrint the maximum total number of ingredients that Snuke's N servings of Skewer Meal can hold.\n\nExamples\n\nInput\n\n2\n1 3 1 2\n\n\nOutput\n\n3\n\n\nInput\n\n5\n100 1 2 3 14 15 58 58 58 29\n\n\nOutput\n\n135", "grammar": {"answer": null}}
{"name": "407_A. Triangle", "description": "There is a right triangle with legs of length a and b. Your task is to determine whether it is possible to locate the triangle on the plane in such a way that none of its sides is parallel to the coordinate axes. All the vertices must have integer coordinates. If there exists such a location, you have to output the appropriate coordinates of vertices.\n\nInput\n\nThe first line contains two integers a, b (1 ≤ a, b ≤ 1000), separated by a single space.\n\nOutput\n\nIn the first line print either \"YES\" or \"NO\" (without the quotes) depending on whether the required location exists. If it does, print in the next three lines three pairs of integers — the coordinates of the triangle vertices, one pair per line. The coordinates must be integers, not exceeding 109 in their absolute value.\n\nExamples\n\nInput\n\n1 1\n\n\nOutput\n\nNO\n\n\nInput\n\n5 5\n\n\nOutput\n\nYES\n2 1\n5 5\n-2 4\n\n\nInput\n\n5 10\n\n\nOutput\n\nYES\n-10 4\n-2 -2\n1 2", "grammar": {"answer": null}}
{"name": "1182_A. Filling Shapes", "description": "You have a given integer n. Find the number of ways to fill all 3 × n tiles with the shape described in the picture below. Upon filling, no empty spaces are allowed. Shapes cannot overlap.\n\n<image> This picture describes when n = 4. The left one is the shape and the right one is 3 × n tiles. \n\nInput\n\nThe only line contains one integer n (1 ≤ n ≤ 60) — the length.\n\nOutput\n\nPrint the number of ways to fill.\n\nExamples\n\nInput\n\n\n4\n\n\nOutput\n\n\n4\n\nInput\n\n\n1\n\n\nOutput\n\n\n0\n\nNote\n\nIn the first example, there are 4 possible cases of filling.\n\nIn the second example, you cannot fill the shapes in 3 × 1 tiles.", "grammar": {"answer": null}}
{"name": "p03388 AtCoder Beginner Contest 093 - Worst Case", "description": "10^{10^{10}} participants, including Takahashi, competed in two programming contests. In each contest, all participants had distinct ranks from first through 10^{10^{10}}-th.\n\nThe score of a participant is the product of his/her ranks in the two contests.\n\nProcess the following Q queries:\n\n* In the i-th query, you are given two positive integers A_i and B_i. Assuming that Takahashi was ranked A_i-th in the first contest and B_i-th in the second contest, find the maximum possible number of participants whose scores are smaller than Takahashi's.\n\nConstraints\n\n* 1 \\leq Q \\leq 100\n* 1\\leq A_i,B_i\\leq 10^9(1\\leq i\\leq Q)\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nQ\nA_1 B_1\n:\nA_Q B_Q\n\n\nOutput\n\nFor each query, print the maximum possible number of participants whose scores are smaller than Takahashi's.\n\nExample\n\nInput\n\n8\n1 4\n10 5\n3 3\n4 11\n8 9\n22 40\n8 36\n314159265 358979323\n\n\nOutput\n\n1\n12\n4\n11\n14\n57\n31\n671644785", "grammar": {"answer": null}}
{"name": "p03427 AtCoder Grand Contest 021 - Digit Sum 2", "description": "Find the maximum possible sum of the digits (in base 10) of a positive integer not greater than N.\n\nConstraints\n\n* 1\\leq N \\leq 10^{16}\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the maximum possible sum of the digits (in base 10) of a positive integer not greater than N.\n\nExamples\n\nInput\n\n100\n\n\nOutput\n\n18\n\n\nInput\n\n9995\n\n\nOutput\n\n35\n\n\nInput\n\n3141592653589793\n\n\nOutput\n\n137", "grammar": {"answer": null}}
{"name": "804_B. Minimum number of steps", "description": "We have a string of letters 'a' and 'b'. We want to perform some operations on it. On each step we choose one of substrings \"ab\" in the string and replace it with the string \"bba\". If we have no \"ab\" as a substring, our job is done. Print the minimum number of steps we should perform to make our job done modulo 109 + 7.\n\nThe string \"ab\" appears as a substring if there is a letter 'b' right after the letter 'a' somewhere in the string.\n\nInput\n\nThe first line contains the initial string consisting of letters 'a' and 'b' only with length from 1 to 106.\n\nOutput\n\nPrint the minimum number of steps modulo 109 + 7.\n\nExamples\n\nInput\n\nab\n\n\nOutput\n\n1\n\n\nInput\n\naab\n\n\nOutput\n\n3\n\nNote\n\nThe first example: \"ab\"  →  \"bba\".\n\nThe second example: \"aab\"  →  \"abba\"  →  \"bbaba\"  →  \"bbbbaa\".", "grammar": {"answer": null}}
{"name": "323_B. Tournament-graph", "description": "In this problem you have to build tournament graph, consisting of n vertices, such, that for any oriented pair of vertices (v, u) (v ≠ u) there exists a path from vertex v to vertex u consisting of no more then two edges.\n\nA directed graph without self-loops is a tournament, if there is exactly one edge between any two distinct vertices (in one out of two possible directions).\n\nInput\n\nThe first line contains an integer n (3 ≤ n ≤ 1000), the number of the graph's vertices.\n\nOutput\n\nPrint -1 if there is no graph, satisfying the described conditions.\n\nOtherwise, print n lines with n integers in each. The numbers should be separated with spaces. That is adjacency matrix a of the found tournament. Consider the graph vertices to be numbered with integers from 1 to n. Then av, u = 0, if there is no edge from v to u, and av, u = 1 if there is one. \n\nAs the output graph has to be a tournament, following equalities must be satisfied: \n\n  * av, u + au, v = 1 for each v, u (1 ≤ v, u ≤ n; v ≠ u); \n  * av, v = 0 for each v (1 ≤ v ≤ n). \n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n0 1 0\n0 0 1\n1 0 0\n\n\nInput\n\n4\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "877_B. Nikita and string", "description": "One day Nikita found the string containing letters \"a\" and \"b\" only. \n\nNikita thinks that string is beautiful if it can be cut into 3 strings (possibly empty) without changing the order of the letters, where the 1-st and the 3-rd one contain only letters \"a\" and the 2-nd contains only letters \"b\".\n\nNikita wants to make the string beautiful by removing some (possibly none) of its characters, but without changing their order. What is the maximum length of the string he can get?\n\nInput\n\nThe first line contains a non-empty string of length not greater than 5 000 containing only lowercase English letters \"a\" and \"b\". \n\nOutput\n\nPrint a single integer — the maximum possible size of beautiful string Nikita can get.\n\nExamples\n\nInput\n\nabba\n\n\nOutput\n\n4\n\nInput\n\nbab\n\n\nOutput\n\n2\n\nNote\n\nIt the first sample the string is already beautiful.\n\nIn the second sample he needs to delete one of \"b\" to make it beautiful.", "grammar": {"answer": null}}
{"name": "p03717 AtCoder Regular Contest 074 - RGB Sequence", "description": "There are N squares arranged in a row. The squares are numbered 1, 2, ..., N, from left to right.\n\nSnuke is painting each square in red, green or blue. According to his aesthetic sense, the following M conditions must all be satisfied. The i-th condition is:\n\n* There are exactly x_i different colors among squares l_i, l_i + 1, ..., r_i.\n\n\n\nIn how many ways can the squares be painted to satisfy all the conditions? Find the count modulo 10^9+7.\n\nConstraints\n\n* 1 ≤ N ≤ 300\n* 1 ≤ M ≤ 300\n* 1 ≤ l_i ≤ r_i ≤ N\n* 1 ≤ x_i ≤ 3\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nl_1 r_1 x_1\nl_2 r_2 x_2\n:\nl_M r_M x_M\n\n\nOutput\n\nPrint the number of ways to paint the squares to satisfy all the conditions, modulo 10^9+7.\n\nExamples\n\nInput\n\n3 1\n1 3 3\n\n\nOutput\n\n6\n\n\nInput\n\n4 2\n1 3 1\n2 4 2\n\n\nOutput\n\n6\n\n\nInput\n\n1 3\n1 1 1\n1 1 2\n1 1 3\n\n\nOutput\n\n0\n\n\nInput\n\n8 10\n2 6 2\n5 5 1\n3 5 2\n4 7 3\n4 4 1\n2 3 1\n7 7 1\n1 5 2\n1 7 3\n3 4 2\n\n\nOutput\n\n108", "grammar": {"answer": null}}
{"name": "p02401 Simple Calculator", "description": "Write a program which reads two integers a, b and an operator op, and then prints the value of a op b.\n\nThe operator op is '+', '-', '*' or '/' (sum, difference, product or quotient). The division should truncate any fractional part.\n\nConstraints\n\n* 0 ≤ a, b ≤ 20000\n* No divisions by zero are given.\n\nInput\n\nThe input consists of multiple datasets. Each dataset is given in the following format.\n\n\na op b\n\n\nThe input ends with a dataset where op = '?'. Your program should not process for this dataset.\n\nOutput\n\nFor each dataset, print the value in a line.\n\nExample\n\nInput\n\n1 + 2\n56 - 18\n13 * 2\n100 / 10\n27 + 81\n0 ? 0\n\n\nOutput\n\n3\n38\n26\n10\n108", "grammar": {"answer": null}}
{"name": "p04021 AtCoder Grand Contest 003 - BBuBBBlesort!", "description": "Snuke got an integer sequence of length N from his mother, as a birthday present. The i-th (1 ≦ i ≦ N) element of the sequence is a_i. The elements are pairwise distinct. He is sorting this sequence in increasing order. With supernatural power, he can perform the following two operations on the sequence in any order:\n\n* Operation 1: choose 2 consecutive elements, then reverse the order of those elements.\n* Operation 2: choose 3 consecutive elements, then reverse the order of those elements.\n\n\n\nSnuke likes Operation 2, but not Operation 1. Find the minimum number of Operation 1 that he has to perform in order to sort the sequence in increasing order.\n\nConstraints\n\n* 1 ≦ N ≦ 10^5\n* 0 ≦ A_i ≦ 10^9\n* If i ≠ j, then A_i ≠ A_j.\n* All input values are integers.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nA_1\n:\nA_N\n\n\nOutput\n\nPrint the minimum number of times Operation 1 that Snuke has to perform.\n\nExamples\n\nInput\n\n4\n2\n4\n3\n1\n\n\nOutput\n\n1\n\n\nInput\n\n5\n10\n8\n5\n3\n2\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "467_E. Alex and Complicated Task", "description": "After you have read all the problems, probably, you think Alex is genius person. That's true! One day he came up with the following task.\n\nGiven a sequence of integer numbers a1, a2, ..., an. You are to find a longest sequence b1, b2, ..., b4m, that satisfies the following conditions:\n\n  * b4k + 1 = b4k + 3 for all valid integer k; \n  * b4k + 2 = b4k + 4 for all valid integer k; \n  * sequence b is subsequence of a (not necessarily contiguous subsequence). \n\n\n\nAnd finally... Alex had given this complicated task to George, and George gave it to you. Help George to cope with the task.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 5·105). The next line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 109).\n\nOutput\n\nIn the first line print a single integer 4m — the maximal possible length of required sequence b. In the second line print 4m integers b1, b2, ..., b4m, that is required sequence.\n\nIf there are multiple optimal answers you may print any of them.\n\nExamples\n\nInput\n\n4\n3 5 3 5\n\n\nOutput\n\n4\n3 5 3 5\n\n\nInput\n\n10\n35 1 2 1 2 35 100 200 100 200\n\n\nOutput\n\n8\n1 2 1 2 100 200 100 200", "grammar": {"answer": null}}
{"name": "p02707 AtCoder Beginner Contest 163 - management", "description": "A company has N members, who are assigned ID numbers 1, ..., N.\n\nEvery member, except the member numbered 1, has exactly one immediate boss with a smaller ID number.\n\nWhen a person X is the immediate boss of a person Y, the person Y is said to be an immediate subordinate of the person X.\n\nYou are given the information that the immediate boss of the member numbered i is the member numbered A_i. For each member, find how many immediate subordinates it has.\n\nConstraints\n\n* 2 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq A_i < i\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_2 ... A_N\n\n\nOutput\n\nFor each of the members numbered 1, 2, ..., N, print the number of immediate subordinates it has, in its own line.\n\nExamples\n\nInput\n\n5\n1 1 2 2\n\n\nOutput\n\n2\n2\n0\n0\n0\n\n\nInput\n\n10\n1 1 1 1 1 1 1 1 1\n\n\nOutput\n\n9\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nInput\n\n7\n1 2 3 4 5 6\n\n\nOutput\n\n1\n1\n1\n1\n1\n1\n0", "grammar": {"answer": null}}
{"name": "239_A. Two Bags of Potatoes", "description": "Valera had two bags of potatoes, the first of these bags contains x (x ≥ 1) potatoes, and the second — y (y ≥ 1) potatoes. Valera — very scattered boy, so the first bag of potatoes (it contains x potatoes) Valera lost. Valera remembers that the total amount of potatoes (x + y) in the two bags, firstly, was not gerater than n, and, secondly, was divisible by k.\n\nHelp Valera to determine how many potatoes could be in the first bag. Print all such possible numbers in ascending order.\n\nInput\n\nThe first line of input contains three integers y, k, n (1 ≤ y, k, n ≤ 109; <image> ≤ 105).\n\nOutput\n\nPrint the list of whitespace-separated integers — all possible values of x in ascending order. You should print each possible value of x exactly once.\n\nIf there are no such values of x print a single integer -1.\n\nExamples\n\nInput\n\n10 1 10\n\n\nOutput\n\n-1\n\n\nInput\n\n10 6 40\n\n\nOutput\n\n2 8 14 20 26 ", "grammar": {"answer": null}}
{"name": "199_A. Hexadecimal's theorem", "description": "Recently, a chaotic virus Hexadecimal advanced a new theorem which will shake the Universe. She thinks that each Fibonacci number can be represented as sum of three not necessary different Fibonacci numbers.\n\nLet's remember how Fibonacci numbers can be calculated. F0 = 0, F1 = 1, and all the next numbers are Fi = Fi - 2 + Fi - 1.\n\nSo, Fibonacci numbers make a sequence of numbers: 0, 1, 1, 2, 3, 5, 8, 13, ...\n\nIf you haven't run away from the PC in fear, you have to help the virus. Your task is to divide given Fibonacci number n by three not necessary different Fibonacci numbers or say that it is impossible.\n\nInput\n\nThe input contains of a single integer n (0 ≤ n < 109) — the number that should be represented by the rules described above. It is guaranteed that n is a Fibonacci number.\n\nOutput\n\nOutput three required numbers: a, b and c. If there is no answer for the test you have to print \"I'm too stupid to solve this problem\" without the quotes.\n\nIf there are multiple answers, print any of them.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n1 1 1\n\n\nInput\n\n13\n\n\nOutput\n\n2 3 8", "grammar": {"answer": null}}
{"name": "1342_C. Yet Another Counting Problem", "description": "You are given two integers a and b, and q queries. The i-th query consists of two numbers l_i and r_i, and the answer to it is the number of integers x such that l_i ≤ x ≤ r_i, and ((x mod a) mod b) ≠ ((x mod b) mod a). Calculate the answer for each query.\n\nRecall that y mod z is the remainder of the division of y by z. For example, 5 mod 3 = 2, 7 mod 8 = 7, 9 mod 4 = 1, 9 mod 9 = 0.\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 100) — the number of test cases. Then the test cases follow.\n\nThe first line of each test case contains three integers a, b and q (1 ≤ a, b ≤ 200; 1 ≤ q ≤ 500).\n\nThen q lines follow, each containing two integers l_i and r_i (1 ≤ l_i ≤ r_i ≤ 10^{18}) for the corresponding query.\n\nOutput\n\nFor each test case, print q integers — the answers to the queries of this test case in the order they appear.\n\nExample\n\nInput\n\n\n2\n4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 200\n\n\nOutput\n\n\n0 0 0 2 4 \n0 91 ", "grammar": {"answer": null}}
{"name": "p02660 AtCoder Beginner Contest 169 - Div Game", "description": "Given is a positive integer N. Consider repeatedly applying the operation below on N:\n\n* First, choose a positive integer z satisfying all of the conditions below:\n* z can be represented as z=p^e, where p is a prime number and e is a positive integer;\n* z divides N;\n* z is different from all integers chosen in previous operations.\n* Then, replace N with N/z.\n\n\n\nFind the maximum number of times the operation can be applied.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^{12}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the maximum number of times the operation can be applied.\n\nExamples\n\nInput\n\n24\n\n\nOutput\n\n3\n\n\nInput\n\n1\n\n\nOutput\n\n0\n\n\nInput\n\n64\n\n\nOutput\n\n3\n\n\nInput\n\n1000000007\n\n\nOutput\n\n1\n\n\nInput\n\n997764507000\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "452_E. Three strings", "description": "You are given three strings (s1, s2, s3). For each integer l (1 ≤ l ≤ min(|s1|, |s2|, |s3|) you need to find how many triples (i1, i2, i3) exist such that three strings sk[ik... ik + l - 1] (k = 1, 2, 3) are pairwise equal. Print all found numbers modulo 1000000007 (109 + 7).\n\nSee notes if you are not sure about some of the denotions used in the statement.\n\nInput\n\nFirst three lines contain three non-empty input strings. The sum of lengths of all strings is no more than 3·105. All strings consist only of lowercase English letters.\n\nOutput\n\nYou need to output min(|s1|, |s2|, |s3|) numbers separated by spaces — answers for the problem modulo 1000000007 (109 + 7).\n\nExamples\n\nInput\n\nabc\nbc\ncbc\n\n\nOutput\n\n3 1 \n\n\nInput\n\nabacaba\nabac\nabcd\n\n\nOutput\n\n11 2 0 0 \n\nNote\n\nConsider a string t = t1t2... t|t|, where ti denotes the i-th character of the string, and |t| denotes the length of the string.\n\nThen t[i... j] (1 ≤ i ≤ j ≤ |t|) represents the string titi + 1... tj (substring of t from position i to position j inclusive).", "grammar": {"answer": null}}
{"name": "111_A. Petya and Inequiations", "description": "Little Petya loves inequations. Help him find n positive integers a1, a2, ..., an, such that the following two conditions are satisfied:\n\n  * a12 + a22 + ... + an2 ≥ x\n  * a1 + a2 + ... + an ≤ y\n\nInput\n\nThe first line contains three space-separated integers n, x and y (1 ≤ n ≤ 105, 1 ≤ x ≤ 1012, 1 ≤ y ≤ 106).\n\nPlease do not use the %lld specificator to read or write 64-bit integers in С++. It is recommended to use cin, cout streams or the %I64d specificator.\n\nOutput\n\nPrint n positive integers that satisfy the conditions, one integer per line. If such numbers do not exist, print a single number \"-1\". If there are several solutions, print any of them.\n\nExamples\n\nInput\n\n5 15 15\n\n\nOutput\n\n4\n4\n1\n1\n2\n\n\nInput\n\n2 3 2\n\n\nOutput\n\n-1\n\n\nInput\n\n1 99 11\n\n\nOutput\n\n11", "grammar": {"answer": null}}
{"name": "262_A. Roma and Lucky Numbers", "description": "Roma (a popular Russian name that means 'Roman') loves the Little Lvov Elephant's lucky numbers.\n\nLet us remind you that lucky numbers are positive integers whose decimal representation only contains lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.\n\nRoma's got n positive integers. He wonders, how many of those integers have not more than k lucky digits? Help him, write the program that solves the problem.\n\nInput\n\nThe first line contains two integers n, k (1 ≤ n, k ≤ 100). The second line contains n integers ai (1 ≤ ai ≤ 109) — the numbers that Roma has. \n\nThe numbers in the lines are separated by single spaces.\n\nOutput\n\nIn a single line print a single integer — the answer to the problem.\n\nExamples\n\nInput\n\n3 4\n1 2 4\n\n\nOutput\n\n3\n\n\nInput\n\n3 2\n447 44 77\n\n\nOutput\n\n2\n\nNote\n\nIn the first sample all numbers contain at most four lucky digits, so the answer is 3.\n\nIn the second sample number 447 doesn't fit in, as it contains more than two lucky digits. All other numbers are fine, so the answer is 2.", "grammar": {"answer": null}}
{"name": "p02831 AtCoder Beginner Contest 148 - Snack", "description": "Takahashi is organizing a party.\n\nAt the party, each guest will receive one or more snack pieces.\n\nTakahashi predicts that the number of guests at this party will be A or B.\n\nFind the minimum number of pieces that can be evenly distributed to the guests in both of the cases predicted.\n\nWe assume that a piece cannot be divided and distributed to multiple guests.\n\nConstraints\n\n* 1 \\leq A, B \\leq 10^5\n* A \\neq B\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nPrint the minimum number of pieces that can be evenly distributed to the guests in both of the cases with A guests and B guests.\n\nExamples\n\nInput\n\n2 3\n\n\nOutput\n\n6\n\n\nInput\n\n123 456\n\n\nOutput\n\n18696\n\n\nInput\n\n100000 99999\n\n\nOutput\n\n9999900000", "grammar": {"answer": null}}
{"name": "189_B. Counting Rhombi", "description": "You have two positive integers w and h. Your task is to count the number of rhombi which have the following properties: \n\n  * Have positive area. \n  * With vertices at integer points. \n  * All vertices of the rhombi are located inside or on the border of the rectangle with vertices at points (0, 0), (w, 0), (w, h), (0, h). In other words, for all vertices (xi, yi) of the rhombus the following conditions should fulfill: 0 ≤ xi ≤ w and 0 ≤ yi ≤ h. \n  * Its diagonals are parallel to the axis. \n\n\n\nCount the number of such rhombi.\n\nLet us remind you that a rhombus is a quadrilateral whose four sides all have the same length.\n\nInput\n\nThe first line contains two integers w and h (1 ≤ w, h ≤ 4000) — the rectangle's sizes.\n\nOutput\n\nPrint a single number — the number of sought rhombi.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in С++. It is preferred to use cin, cout streams or the %I64d specifier.\n\nExamples\n\nInput\n\n2 2\n\n\nOutput\n\n1\n\n\nInput\n\n1 2\n\n\nOutput\n\n0\n\nNote\n\nIn the first example there exists only one such rhombus. Its vertices are located at points (1, 0), (2, 1), (1, 2), (0, 1).", "grammar": {"answer": null}}
{"name": "p03050 diverta 2019 Programming Contest - DivRem Number", "description": "Snuke received a positive integer N from Takahashi. A positive integer m is called a favorite number when the following condition is satisfied:\n\n* The quotient and remainder of N divided by m are equal, that is, \\lfloor \\frac{N}{m} \\rfloor = N \\bmod m holds.\n\n\n\nFind all favorite numbers and print the sum of those.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^{12}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n8\n\n\nOutput\n\n10\n\n\nInput\n\n1000000000000\n\n\nOutput\n\n2499686339916", "grammar": {"answer": null}}
{"name": "946_F. Fibonacci String Subsequences", "description": "You are given a binary string s (each character of this string is either 0 or 1).\n\nLet's denote the cost of string t as the number of occurences of s in t. For example, if s is 11 and t is 111011, then the cost of t is 3.\n\nLet's also denote the Fibonacci strings sequence as follows:\n\n  * F(0) is 0;\n  * F(1) is 1;\n  * F(i) = F(i - 1) + F(i - 2) if i > 1, where  +  means the concatenation of two strings.\n\n\n\nYour task is to calculate the sum of costs of all subsequences of the string F(x). Since answer may be large, calculate it modulo 109 + 7.\n\nInput\n\nThe first line contains two integers n and x (1 ≤ n ≤ 100, 0 ≤ x ≤ 100) — the length of s and the index of a Fibonacci string you are interested in, respectively.\n\nThe second line contains s — a string consisting of n characters. Each of these characters is either 0 or 1.\n\nOutput\n\nPrint the only integer — the sum of costs of all subsequences of the string F(x), taken modulo 109 + 7. \n\nExamples\n\nInput\n\n2 4\n11\n\n\nOutput\n\n14\n\n\nInput\n\n10 100\n1010101010\n\n\nOutput\n\n553403224", "grammar": {"answer": null}}
{"name": "p03067 Tenka1 Programmer Beginner Contest 2019 - On the Way", "description": "There are three houses on a number line: House 1, 2 and 3, with coordinates A, B and C, respectively. Print `Yes` if we pass the coordinate of House 3 on the straight way from House 1 to House 2 without making a detour, and print `No` otherwise.\n\nConstraints\n\n* 0\\leq A,B,C\\leq 100\n* A, B and C are distinct integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C\n\n\nOutput\n\nPrint `Yes` if we pass the coordinate of House 3 on the straight way from House 1 to House 2 without making a detour, and print `No` otherwise.\n\nExamples\n\nInput\n\n3 8 5\n\n\nOutput\n\nYes\n\n\nInput\n\n7 3 1\n\n\nOutput\n\nNo\n\n\nInput\n\n10 2 4\n\n\nOutput\n\nYes\n\n\nInput\n\n31 41 59\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p02598 AtCoder Beginner Contest 174 - Logs", "description": "We have N logs of lengths A_1,A_2,\\cdots A_N.\n\nWe can cut these logs at most K times in total. When a log of length L is cut at a point whose distance from an end of the log is t (0<t<L), it becomes two logs of lengths t and L-t.\n\nFind the shortest possible length of the longest log after at most K cuts, and print it after rounding up to an integer.\n\nConstraints\n\n* 1 \\leq N \\leq 2 \\times 10^5\n* 0 \\leq K \\leq 10^9\n* 1 \\leq A_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nA_1 A_2 \\cdots A_N\n\n\nOutput\n\nPrint an integer representing the answer.\n\nExamples\n\nInput\n\n2 3\n7 9\n\n\nOutput\n\n4\n\n\nInput\n\n3 0\n3 4 5\n\n\nOutput\n\n5\n\n\nInput\n\n10 10\n158260522 877914575 602436426 24979445 861648772 623690081 433933447 476190629 262703497 211047202\n\n\nOutput\n\n292638192", "grammar": {"answer": null}}
{"name": "p02955 AtCoder Beginner Contest 136 - Max GCD", "description": "We have a sequence of N integers: A_1, A_2, \\cdots, A_N.\n\nYou can perform the following operation between 0 and K times (inclusive):\n\n* Choose two integers i and j such that i \\neq j, each between 1 and N (inclusive). Add 1 to A_i and -1 to A_j, possibly producing a negative element.\n\n\n\nCompute the maximum possible positive integer that divides every element of A after the operations. Here a positive integer x divides an integer y if and only if there exists an integer z such that y = xz.\n\nConstraints\n\n* 2 \\leq N \\leq 500\n* 1 \\leq A_i \\leq 10^6\n* 0 \\leq K \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nA_1 A_2 \\cdots A_{N-1} A_{N}\n\n\nOutput\n\nPrint the maximum possible positive integer that divides every element of A after the operations.\n\nExamples\n\nInput\n\n2 3\n8 20\n\n\nOutput\n\n7\n\n\nInput\n\n2 10\n3 5\n\n\nOutput\n\n8\n\n\nInput\n\n4 5\n10 1 2 22\n\n\nOutput\n\n7\n\n\nInput\n\n8 7\n1 7 5 6 8 2 6 5\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p03958 CODE FESTIVAL 2016 qual C - K Cakes", "description": "There are K pieces of cakes. Mr. Takahashi would like to eat one cake per day, taking K days to eat them all.\n\nThere are T types of cake, and the number of the cakes of type i (1 ≤ i ≤ T) is a_i.\n\nEating the same type of cake two days in a row would be no fun, so Mr. Takahashi would like to decide the order for eating cakes that minimizes the number of days on which he has to eat the same type of cake as the day before.\n\nCompute the minimum number of days on which the same type of cake as the previous day will be eaten.\n\nConstraints\n\n* 1 ≤ K ≤ 10000\n* 1 ≤ T ≤ 100\n* 1 ≤ a_i ≤ 100\n* a_1 + a_2 + ... + a_T = K\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nK T\na_1 a_2 ... a_T\n\n\nOutput\n\nPrint the minimum number of days on which the same type of cake as the previous day will be eaten.\n\nExamples\n\nInput\n\n7 3\n3 2 2\n\n\nOutput\n\n0\n\n\nInput\n\n6 3\n1 4 1\n\n\nOutput\n\n1\n\n\nInput\n\n100 1\n100\n\n\nOutput\n\n99", "grammar": {"answer": null}}
{"name": "p00002 Digit Number", "description": "Write a program which computes the digit number of sum of two integers a and b.\n\nConstraints\n\n* 0 ≤ a, b ≤ 1,000,000\n* The number of datasets ≤ 200\n\nInput\n\nThere are several test cases. Each test case consists of two non-negative integers a and b which are separeted by a space in a line. The input terminates with EOF.\n\nOutput\n\nPrint the number of digits of a + b for each data set.\n\nExample\n\nInput\n\n5 7\n1 99\n1000 999\n\n\nOutput\n\n2\n3\n4", "grammar": {"answer": null}}
{"name": "373_B. Making Sequences is Fun", "description": "We'll define S(n) for positive integer n as follows: the number of the n's digits in the decimal base. For example, S(893) = 3, S(114514) = 6.\n\nYou want to make a consecutive integer sequence starting from number m (m, m + 1, ...). But you need to pay S(n)·k to add the number n to the sequence.\n\nYou can spend a cost up to w, and you want to make the sequence as long as possible. Write a program that tells sequence's maximum length.\n\nInput\n\nThe first line contains three integers w (1 ≤ w ≤ 1016), m (1 ≤ m ≤ 1016), k (1 ≤ k ≤ 109).\n\nPlease, do not write the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nOutput\n\nThe first line should contain a single integer — the answer to the problem.\n\nExamples\n\nInput\n\n9 1 1\n\n\nOutput\n\n9\n\n\nInput\n\n77 7 7\n\n\nOutput\n\n7\n\n\nInput\n\n114 5 14\n\n\nOutput\n\n6\n\n\nInput\n\n1 1 2\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "1060_B. Maximum Sum of Digits", "description": "You are given a positive integer n.\n\nLet S(x) be sum of digits in base 10 representation of x, for example, S(123) = 1 + 2 + 3 = 6, S(0) = 0.\n\nYour task is to find two integers a, b, such that 0 ≤ a, b ≤ n, a + b = n and S(a) + S(b) is the largest possible among all such pairs.\n\nInput\n\nThe only line of input contains an integer n (1 ≤ n ≤ 10^{12}).\n\nOutput\n\nPrint largest S(a) + S(b) among all pairs of integers a, b, such that 0 ≤ a, b ≤ n and a + b = n.\n\nExamples\n\nInput\n\n35\n\n\nOutput\n\n17\n\n\nInput\n\n10000000000\n\n\nOutput\n\n91\n\nNote\n\nIn the first example, you can choose, for example, a = 17 and b = 18, so that S(17) + S(18) = 1 + 7 + 1 + 8 = 17. It can be shown that it is impossible to get a larger answer.\n\nIn the second test example, you can choose, for example, a = 5000000001 and b = 4999999999, with S(5000000001) + S(4999999999) = 91. It can be shown that it is impossible to get a larger answer.", "grammar": {"answer": null}}
{"name": "p01440 Revenge of Champernowne Constant", "description": "Champernowne constant is an irrational number. Its decimal representation starts with \"0.\", followed by concatenation of all positive integers in the increasing order.\n\nYou will be given a sequence S which consists of decimal digits. Your task is to write a program which computes the position of the first occurrence of S in Champernowne constant after the decimal point.\n\n\n\nInput\n\nThe input has multiple test cases. Each line of the input has one digit sequence. The input is terminated by a line consisting only of #.\n\nIt is guaranteed that each sequence has at least one digit and its length is less than or equal to 100.\n\nOutput\n\nFor each sequence, output one decimal integer described above. You can assume each output value is less than 1016.\n\nExamples\n\nInput\n\n45678\n67891011\n21\n314159265358979\n#\n\n\nOutput\n\n4\n6\n15\n2012778692735799\n\n\nInput\n\n45678\n67891011\n21\n314159265358979\n\n\nOutput\n\n4\n6\n15\n2012778692735799", "grammar": {"answer": null}}
{"name": "p03489 AtCoder Regular Contest 087 - Good Sequence", "description": "You are given a sequence of positive integers of length N, a = (a_1, a_2, ..., a_N). Your objective is to remove some of the elements in a so that a will be a good sequence.\n\nHere, an sequence b is a good sequence when the following condition holds true:\n\n* For each element x in b, the value x occurs exactly x times in b.\n\n\n\nFor example, (3, 3, 3), (4, 2, 4, 1, 4, 2, 4) and () (an empty sequence) are good sequences, while (3, 3, 3, 3) and (2, 4, 1, 4, 2) are not.\n\nFind the minimum number of elements that needs to be removed so that a will be a good sequence.\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* a_i is an integer.\n* 1 \\leq a_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the minimum number of elements that needs to be removed so that a will be a good sequence.\n\nExamples\n\nInput\n\n4\n3 3 3 3\n\n\nOutput\n\n1\n\n\nInput\n\n5\n2 4 1 4 2\n\n\nOutput\n\n2\n\n\nInput\n\n6\n1 2 2 3 3 3\n\n\nOutput\n\n0\n\n\nInput\n\n1\n1000000000\n\n\nOutput\n\n1\n\n\nInput\n\n8\n2 7 1 8 2 8 1 8\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p03586 Tenka1 Programmer Contest - ModularPowerEquation!!", "description": "Process the Q queries below.\n\n* You are given two integers A_i and M_i. Determine whether there exists a positive integer K_i not exceeding 2 × 10^{18} such that A_i^{K_i} ≡ K_i (mod M_i), and find one if it exists.\n\nConstraints\n\n* 1 \\leq Q \\leq 100\n* 0 \\leq A_i \\leq 10^9(1 \\leq i \\leq Q)\n* 1 \\leq M_i \\leq 10^9(1 \\leq i \\leq Q)\n\n\n\nExamples\n\nInput\n\n4\n2 4\n3 8\n9 6\n10 7\n\n\nOutput\n\n4\n11\n9\n2\n\n\nInput\n\n3\n177 168\n2028 88772\n123456789 987654321\n\n\nOutput\n\n7953\n234831584\n471523108231963269", "grammar": {"answer": null}}
{"name": "p02804 AtCoder Beginner Contest 151 - Max-Min Sums", "description": "For a finite set of integers X, let f(X)=\\max X - \\min X.\n\nGiven are N integers A_1,...,A_N.\n\nWe will choose K of them and let S be the set of the integers chosen. If we distinguish elements with different indices even when their values are the same, there are {}_N C_K ways to make this choice. Find the sum of f(S) over all those ways.\n\nSince the answer can be enormous, print it \\bmod (10^9+7).\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* 1 \\leq K \\leq N\n* |A_i| \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nA_1 ... A_N\n\n\nOutput\n\nPrint the answer \\bmod (10^9+7).\n\nExamples\n\nInput\n\n4 2\n1 1 3 4\n\n\nOutput\n\n11\n\n\nInput\n\n6 3\n10 10 10 -10 -10 -10\n\n\nOutput\n\n360\n\n\nInput\n\n3 1\n1 1 1\n\n\nOutput\n\n0\n\n\nInput\n\n10 6\n1000000000 1000000000 1000000000 1000000000 1000000000 0 0 0 0 0\n\n\nOutput\n\n999998537", "grammar": {"answer": null}}
{"name": "932_E. Team Work", "description": "You have a team of N people. For a particular task, you can pick any non-empty subset of people. The cost of having x people for the task is xk. \n\nOutput the sum of costs over all non-empty subsets of people.\n\nInput\n\nOnly line of input contains two integers N (1 ≤ N ≤ 109) representing total number of people and k (1 ≤ k ≤ 5000).\n\nOutput\n\nOutput the sum of costs for all non empty subsets modulo 109 + 7.\n\nExamples\n\nInput\n\n1 1\n\n\nOutput\n\n1\n\n\nInput\n\n3 2\n\n\nOutput\n\n24\n\nNote\n\nIn the first example, there is only one non-empty subset {1} with cost 11 = 1.\n\nIn the second example, there are seven non-empty subsets.\n\n- {1} with cost 12 = 1\n\n- {2} with cost 12 = 1\n\n- {1, 2} with cost 22 = 4\n\n- {3} with cost 12 = 1\n\n- {1, 3} with cost 22 = 4\n\n- {2, 3} with cost 22 = 4\n\n- {1, 2, 3} with cost 32 = 9\n\nThe total cost is 1 + 1 + 4 + 1 + 4 + 4 + 9 = 24.", "grammar": {"answer": null}}
{"name": "1145_F. Neat Words", "description": "\n\nInput\n\nThe input consists of a single string of uppercase letters A-Z. The length of the string is between 1 and 10 characters, inclusive.\n\nOutput\n\nOutput \"YES\" or \"NO\".\n\nExamples\n\nInput\n\n\nNEAT\n\n\nOutput\n\n\nYES\n\n\nInput\n\n\nWORD\n\n\nOutput\n\n\nNO\n\n\nInput\n\n\nCODER\n\n\nOutput\n\n\nNO\n\n\nInput\n\n\nAPRILFOOL\n\n\nOutput\n\n\nNO\n\n\nInput\n\n\nAI\n\n\nOutput\n\n\nYES\n\n\nInput\n\n\nJUROR\n\n\nOutput\n\n\nYES\n\n\nInput\n\n\nYES\n\n\nOutput\n\n\nNO", "grammar": {"answer": null}}
{"name": "111_B. Petya and Divisors", "description": "Little Petya loves looking for numbers' divisors. One day Petya came across the following problem:\n\nYou are given n queries in the form \"xi yi\". For each query Petya should count how many divisors of number xi divide none of the numbers xi - yi, xi - yi + 1, ..., xi - 1. Help him.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 105). Each of the following n lines contain two space-separated integers xi and yi (1 ≤ xi ≤ 105, 0 ≤ yi ≤ i - 1, where i is the query's ordinal number; the numeration starts with 1). \n\nIf yi = 0 for the query, then the answer to the query will be the number of divisors of the number xi. In this case you do not need to take the previous numbers x into consideration.\n\nOutput\n\nFor each query print the answer on a single line: the number of positive integers k such that <image>\n\nExamples\n\nInput\n\n6\n4 0\n3 1\n5 2\n6 2\n18 4\n10000 3\n\n\nOutput\n\n3\n1\n1\n2\n2\n22\n\nNote\n\nLet's write out the divisors that give answers for the first 5 queries:\n\n1) 1, 2, 4 \n\n2) 3\n\n3) 5\n\n4) 2, 6\n\n5) 9, 18", "grammar": {"answer": null}}
{"name": "919_B. Perfect Number", "description": "We consider a positive integer perfect, if and only if the sum of its digits is exactly 10. Given a positive integer k, your task is to find the k-th smallest perfect positive integer.\n\nInput\n\nA single line with a positive integer k (1 ≤ k ≤ 10 000).\n\nOutput\n\nA single number, denoting the k-th smallest perfect integer.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n19\n\n\nInput\n\n2\n\n\nOutput\n\n28\n\nNote\n\nThe first perfect integer is 19 and the second one is 28.", "grammar": {"answer": null}}
{"name": "150_B. Quantity of Strings", "description": "Just in case somebody missed it: this winter is totally cold in Nvodsk! It is so cold that one gets funny thoughts. For example, let's say there are strings with the length exactly n, based on the alphabet of size m. Any its substring with length equal to k is a palindrome. How many such strings exist? Your task is to find their quantity modulo 1000000007 (109 + 7). Be careful and don't miss a string or two!\n\nLet us remind you that a string is a palindrome if it can be read the same way in either direction, from the left to the right and from the right to the left.\n\nInput\n\nThe first and only line contains three integers: n, m and k (1 ≤ n, m, k ≤ 2000).\n\nOutput\n\nPrint a single integer — the number of strings of the described type modulo 1000000007 (109 + 7).\n\nExamples\n\nInput\n\n1 1 1\n\n\nOutput\n\n1\n\n\nInput\n\n5 2 4\n\n\nOutput\n\n2\n\nNote\n\nIn the first sample only one string is valid: \"a\" (let's denote the only letter of our alphabet as \"a\").\n\nIn the second sample (if we denote the alphabet letters as \"a\" and \"b\") the following strings are valid: \"aaaaa\" and \"bbbbb\".", "grammar": {"answer": null}}
{"name": "p02728 AtCoder Beginner Contest 160 - Distributing Integers", "description": "We have a tree with N vertices numbered 1 to N. The i-th edge in this tree connects Vertex a_i and b_i. For each k=1, ..., N, solve the problem below:\n\n* Consider writing a number on each vertex in the tree in the following manner:\n* First, write 1 on Vertex k.\n* Then, for each of the numbers 2, ..., N in this order, write the number on the vertex chosen as follows:\n* Choose a vertex that still does not have a number written on it and is adjacent to a vertex with a number already written on it. If there are multiple such vertices, choose one of them at random.\n* Find the number of ways in which we can write the numbers on the vertices, modulo (10^9+7).\n\nConstraints\n\n* 2 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq a_i,b_i \\leq N\n* The given graph is a tree.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 b_1\n:\na_{N-1} b_{N-1}\n\n\nOutput\n\nFor each k=1, 2, ..., N in this order, print a line containing the answer to the problem.\n\nExamples\n\nInput\n\n3\n1 2\n1 3\n\n\nOutput\n\n2\n1\n1\n\n\nInput\n\n2\n1 2\n\n\nOutput\n\n1\n1\n\n\nInput\n\n5\n1 2\n2 3\n3 4\n3 5\n\n\nOutput\n\n2\n8\n12\n3\n3\n\n\nInput\n\n8\n1 2\n2 3\n3 4\n3 5\n3 6\n6 7\n6 8\n\n\nOutput\n\n40\n280\n840\n120\n120\n504\n72\n72", "grammar": {"answer": null}}
{"name": "546_A. Soldier and Bananas", "description": "A soldier wants to buy w bananas in the shop. He has to pay k dollars for the first banana, 2k dollars for the second one and so on (in other words, he has to pay i·k dollars for the i-th banana). \n\nHe has n dollars. How many dollars does he have to borrow from his friend soldier to buy w bananas?\n\nInput\n\nThe first line contains three positive integers k, n, w (1 ≤ k, w ≤ 1000, 0 ≤ n ≤ 109), the cost of the first banana, initial number of dollars the soldier has and number of bananas he wants. \n\nOutput\n\nOutput one integer — the amount of dollars that the soldier must borrow from his friend. If he doesn't have to borrow money, output 0.\n\nExamples\n\nInput\n\n3 17 4\n\n\nOutput\n\n13", "grammar": {"answer": null}}
{"name": "p02269 Dictionary", "description": "Your task is to write a program of a simple dictionary which implements the following instructions:\n\n* insert str: insert a string str in to the dictionary\n* find str: if the distionary contains str, then print 'yes', otherwise print 'no'\n\nNotes\n\nTemplate in C\n\nConstraints\n\n* A string consists of 'A', 'C', 'G', or 'T'\n* 1 ≤ length of a string ≤ 12\n* n ≤ 1000000\n\nInput\n\nIn the first line n, the number of instructions is given. In the following n lines, n instructions are given in the above mentioned format.\n\nOutput\n\nPrint yes or no for each find instruction in a line.\n\nExamples\n\nInput\n\n5\ninsert A\ninsert T\ninsert C\nfind G\nfind A\n\n\nOutput\n\nno\nyes\n\n\nInput\n\n13\ninsert AAA\ninsert AAC\ninsert AGA\ninsert AGG\ninsert TTT\nfind AAA\nfind CCC\nfind CCC\ninsert CCC\nfind CCC\ninsert T\nfind TTT\nfind T\n\n\nOutput\n\nyes\nno\nno\nyes\nyes\nyes", "grammar": {"answer": null}}
{"name": "1177_A. Digits Sequence (Easy Edition)", "description": "Let's write all the positive integer numbers one after another from 1 without any delimiters (i.e. as a single string). It will be the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536...\n\nYour task is to print the k-th digit of this sequence.\n\nInput\n\nThe first and only line contains integer k (1 ≤ k ≤ 10000) — the position to process (1-based index).\n\nOutput\n\nPrint the k-th digit of the resulting infinite sequence.\n\nExamples\n\nInput\n\n\n7\n\n\nOutput\n\n\n7\n\n\nInput\n\n\n21\n\n\nOutput\n\n\n5", "grammar": {"answer": null}}
{"name": "888_E. Maximum Subsequence", "description": "You are given an array a consisting of n integers, and additionally an integer m. You have to choose some sequence of indices b1, b2, ..., bk (1 ≤ b1 < b2 < ... < bk ≤ n) in such a way that the value of <image> is maximized. Chosen sequence can be empty.\n\nPrint the maximum possible value of <image>.\n\nInput\n\nThe first line contains two integers n and m (1 ≤ n ≤ 35, 1 ≤ m ≤ 109).\n\nThe second line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 109).\n\nOutput\n\nPrint the maximum possible value of <image>.\n\nExamples\n\nInput\n\n4 4\n5 2 4 1\n\n\nOutput\n\n3\n\n\nInput\n\n3 20\n199 41 299\n\n\nOutput\n\n19\n\nNote\n\nIn the first example you can choose a sequence b = {1, 2}, so the sum <image> is equal to 7 (and that's 3 after taking it modulo 4).\n\nIn the second example you can choose a sequence b = {3}.", "grammar": {"answer": null}}
{"name": "244_B. Undoubtedly Lucky Numbers", "description": "Polycarpus loves lucky numbers. Everybody knows that lucky numbers are positive integers, whose decimal representation (without leading zeroes) contain only the lucky digits x and y. For example, if x = 4, and y = 7, then numbers 47, 744, 4 are lucky.\n\nLet's call a positive integer a undoubtedly lucky, if there are such digits x and y (0 ≤ x, y ≤ 9), that the decimal representation of number a (without leading zeroes) contains only digits x and y.\n\nPolycarpus has integer n. He wants to know how many positive integers that do not exceed n, are undoubtedly lucky. Help him, count this number.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 109) — Polycarpus's number.\n\nOutput\n\nPrint a single integer that says, how many positive integers that do not exceed n are undoubtedly lucky.\n\nExamples\n\nInput\n\n10\n\n\nOutput\n\n10\n\n\nInput\n\n123\n\n\nOutput\n\n113\n\nNote\n\nIn the first test sample all numbers that do not exceed 10 are undoubtedly lucky.\n\nIn the second sample numbers 102, 103, 104, 105, 106, 107, 108, 109, 120, 123 are not undoubtedly lucky.", "grammar": {"answer": null}}
{"name": "6_C. Alice, Bob and Chocolate", "description": "Alice and Bob like games. And now they are ready to start a new game. They have placed n chocolate bars in a line. Alice starts to eat chocolate bars one by one from left to right, and Bob — from right to left. For each chocololate bar the time, needed for the player to consume it, is known (Alice and Bob eat them with equal speed). When the player consumes a chocolate bar, he immediately starts with another. It is not allowed to eat two chocolate bars at the same time, to leave the bar unfinished and to make pauses. If both players start to eat the same bar simultaneously, Bob leaves it to Alice as a true gentleman.\n\nHow many bars each of the players will consume?\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 105) — the amount of bars on the table. The second line contains a sequence t1, t2, ..., tn (1 ≤ ti ≤ 1000), where ti is the time (in seconds) needed to consume the i-th bar (in the order from left to right).\n\nOutput\n\nPrint two numbers a and b, where a is the amount of bars consumed by Alice, and b is the amount of bars consumed by Bob.\n\nExamples\n\nInput\n\n5\n2 9 8 2 7\n\n\nOutput\n\n2 3", "grammar": {"answer": null}}
{"name": "p03309 AtCoder Beginner Contest 102 - Linear Approximation", "description": "Snuke has an integer sequence A of length N.\n\nHe will freely choose an integer b. Here, he will get sad if A_i and b+i are far from each other. More specifically, the sadness of Snuke is calculated as follows:\n\n* abs(A_1 - (b+1)) + abs(A_2 - (b+2)) + ... + abs(A_N - (b+N))\n\n\n\nHere, abs(x) is a function that returns the absolute value of x.\n\nFind the minimum possible sadness of Snuke.\n\nConstraints\n\n* 1 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq A_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the minimum possible sadness of Snuke.\n\nExamples\n\nInput\n\n5\n2 2 3 5 5\n\n\nOutput\n\n2\n\n\nInput\n\n9\n1 2 3 4 5 6 7 8 9\n\n\nOutput\n\n0\n\n\nInput\n\n6\n6 5 4 3 2 1\n\n\nOutput\n\n18\n\n\nInput\n\n7\n1 1 1 1 2 3 4\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p03346 AtCoder Grand Contest 024 - Backfront", "description": "You are given a sequence (P_1,P_2,...,P_N) which is a permutation of the integers from 1 through N. You would like to sort this sequence in ascending order by repeating the following operation:\n\n* Choose an element in the sequence and move it to the beginning or the end of the sequence.\n\n\n\nFind the minimum number of operations required. It can be proved that it is actually possible to sort the sequence using this operation.\n\nConstraints\n\n* 1 \\leq N \\leq 2\\times 10^5\n* (P_1,P_2,...,P_N) is a permutation of (1,2,...,N).\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nP_1\n:\nP_N\n\n\nOutput\n\nPrint the minimum number of operations required.\n\nExamples\n\nInput\n\n4\n1\n3\n2\n4\n\n\nOutput\n\n2\n\n\nInput\n\n6\n3\n2\n5\n1\n4\n6\n\n\nOutput\n\n4\n\n\nInput\n\n8\n6\n3\n1\n2\n7\n4\n8\n5\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "1269_A. Equation", "description": "Let's call a positive integer composite if it has at least one divisor other than 1 and itself. For example:\n\n  * the following numbers are composite: 1024, 4, 6, 9; \n  * the following numbers are not composite: 13, 1, 2, 3, 37. \n\n\n\nYou are given a positive integer n. Find two composite integers a,b such that a-b=n.\n\nIt can be proven that solution always exists.\n\nInput\n\nThe input contains one integer n (1 ≤ n ≤ 10^7): the given integer.\n\nOutput\n\nPrint two composite integers a,b (2 ≤ a, b ≤ 10^9, a-b=n).\n\nIt can be proven, that solution always exists.\n\nIf there are several possible solutions, you can print any. \n\nExamples\n\nInput\n\n\n1\n\n\nOutput\n\n\n9 8\n\n\nInput\n\n\n512\n\n\nOutput\n\n\n4608 4096", "grammar": {"answer": null}}
{"name": "p02553 AtCoder Beginner Contest 178 - Product Max", "description": "Given are integers a,b,c and d. If x and y are integers and a \\leq x \\leq b and c\\leq y \\leq d hold, what is the maximum possible value of x \\times y?\n\nConstraints\n\n* -10^9 \\leq a \\leq b \\leq 10^9\n* -10^9 \\leq c \\leq d \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\na b c d\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n1 2 1 1\n\n\nOutput\n\n2\n\n\nInput\n\n3 5 -4 -2\n\n\nOutput\n\n-6\n\n\nInput\n\n-1000000000 0 -1000000000 0\n\n\nOutput\n\n1000000000000000000", "grammar": {"answer": null}}
{"name": "p02268 Binary Search", "description": "You are given a sequence of n integers S and a sequence of different q integers T. Write a program which outputs C, the number of integers in T which are also in the set S.\n\nNotes\n\nConstraints\n\n* Elements in S is sorted in ascending order\n* n ≤ 100000\n* q ≤ 50000\n* 0 ≤ an element in S ≤ 109\n* 0 ≤ an element in T ≤ 109\n\nInput\n\nIn the first line n is given. In the second line, n integers are given. In the third line q is given. Then, in the fourth line, q integers are given.\n\nOutput\n\nPrint C in a line.\n\nExamples\n\nInput\n\n5\n1 2 3 4 5\n3\n3 4 1\n\n\nOutput\n\n3\n\n\nInput\n\n3\n1 2 3\n1\n5\n\n\nOutput\n\n0\n\n\nInput\n\n5\n1 1 2 2 3\n2\n1 2\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02390 Watch", "description": "Write a program which reads an integer $S$ [second] and converts it to $h:m:s$ where $h$, $m$, $s$ denote hours, minutes (less than 60) and seconds (less than 60) respectively.\n\nConstraints\n\n* $0 \\leq S \\leq 86400$\n\nInput\n\nAn integer $S$ is given in a line.\n\nOutput\n\nPrint $h$, $m$ and $s$ separated by ':'. You do not need to put '0' for a value, which consists of a digit.\n\nExample\n\nInput\n\n46979\n\n\nOutput\n\n13:2:59", "grammar": {"answer": null}}
{"name": "125_A. Measuring Lengths in Baden", "description": "Lengths are measures in Baden in inches and feet. To a length from centimeters it is enough to know that an inch equals three centimeters in Baden and one foot contains 12 inches.\n\nYou are given a length equal to n centimeters. Your task is to convert it to feet and inches so that the number of feet was maximum. The result should be an integer rounded to the closest value containing an integral number of inches.\n\nNote that when you round up, 1 cm rounds up to 0 inches and 2 cm round up to 1 inch.\n\nInput\n\nThe only line contains an integer n (1 ≤ n ≤ 10000).\n\nOutput\n\nPrint two non-negative space-separated integers a and b, where a is the numbers of feet and b is the number of inches.\n\nExamples\n\nInput\n\n42\n\n\nOutput\n\n1 2\n\n\nInput\n\n5\n\n\nOutput\n\n0 2", "grammar": {"answer": null}}
{"name": "p02642 AtCoder Beginner Contest 170 - Not Divisible", "description": "Given is a number sequence A of length N.\n\nFind the number of integers i \\left(1 \\leq i \\leq N\\right) with the following property:\n\n* For every integer j \\left(1 \\leq j \\leq N\\right) such that i \\neq j , A_j does not divide A_i.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq A_i \\leq 10^6\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 \\cdots A_N\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n5\n24 11 8 3 16\n\n\nOutput\n\n3\n\n\nInput\n\n4\n5 5 5 5\n\n\nOutput\n\n0\n\n\nInput\n\n10\n33 18 45 28 8 19 89 86 2 4\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p00093 Leap Year", "description": "Create a program that outputs all leap years between the year a and year b.\n\nThe leap year conditions are as follows. However, 0 <a ≤ b <3,000. If there is no leap year in the given period, output \"NA\".\n\n* The year is divisible by 4.\n* However, a year divisible by 100 is not a leap year.\n* However, a year divisible by 400 is a leap year.\n\n\n\nInput\n\nGiven multiple datasets. The format of each dataset is as follows:\n\n\na b\n\n\nInput ends when both a and b are 0. The number of datasets does not exceed 50.\n\nOutput\n\nPrint the year or NA for each dataset.\n\nInsert one blank line between the datasets.\n\nExample\n\nInput\n\n2001 2010\n2005 2005\n2001 2010\n0 0\n\n\nOutput\n\n2004\n2008\n\nNA\n\n2004\n2008", "grammar": {"answer": null}}
{"name": "p02552 AtCoder Beginner Contest 178 - Not", "description": "Given is an integer x that is greater than or equal to 0, and less than or equal to 1. Output 1 if x is equal to 0, or 0 if x is equal to 1.\n\nConstraints\n\n* 0 \\leq x \\leq 1\n* x is an integer\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nx\n\n\nOutput\n\nPrint 1 if x is equal to 0, or 0 if x is equal to 1.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n0\n\n\nInput\n\n0\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "361_B. Levko and Permutation", "description": "Levko loves permutations very much. A permutation of length n is a sequence of distinct positive integers, each is at most n.\n\nLet’s assume that value gcd(a, b) shows the greatest common divisor of numbers a and b. Levko assumes that element pi of permutation p1, p2, ... , pn is good if gcd(i, pi) > 1. Levko considers a permutation beautiful, if it has exactly k good elements. Unfortunately, he doesn’t know any beautiful permutation. Your task is to help him to find at least one of them.\n\nInput\n\nThe single line contains two integers n and k (1 ≤ n ≤ 105, 0 ≤ k ≤ n).\n\nOutput\n\nIn a single line print either any beautiful permutation or -1, if such permutation doesn’t exist.\n\nIf there are multiple suitable permutations, you are allowed to print any of them.\n\nExamples\n\nInput\n\n4 2\n\n\nOutput\n\n2 4 3 1\n\nInput\n\n1 1\n\n\nOutput\n\n-1\n\nNote\n\nIn the first sample elements 4 and 3 are good because gcd(2, 4) = 2 > 1 and gcd(3, 3) = 3 > 1. Elements 2 and 1 are not good because gcd(1, 2) = 1 and gcd(4, 1) = 1. As there are exactly 2 good elements, the permutation is beautiful.\n\nThe second sample has no beautiful permutations.", "grammar": {"answer": null}}
{"name": "p03286 AtCoder Beginner Contest 105 - Base -2 Number", "description": "Given an integer N, find the base -2 representation of N.\n\nHere, S is the base -2 representation of N when the following are all satisfied:\n\n* S is a string consisting of `0` and `1`.\n* Unless S = `0`, the initial character of S is `1`.\n* Let S = S_k S_{k-1} ... S_0, then S_0 \\times (-2)^0 + S_1 \\times (-2)^1 + ... + S_k \\times (-2)^k = N.\n\n\n\nIt can be proved that, for any integer M, the base -2 representation of M is uniquely determined.\n\nConstraints\n\n* Every value in input is integer.\n* -10^9 \\leq N \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the base -2 representation of N.\n\nExamples\n\nInput\n\n-9\n\n\nOutput\n\n1011\n\n\nInput\n\n123456789\n\n\nOutput\n\n11000101011001101110100010101\n\n\nInput\n\n0\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "926_B. Add Points", "description": "There are n points on a straight line, and the i-th point among them is located at xi. All these coordinates are distinct.\n\nDetermine the number m — the smallest number of points you should add on the line to make the distances between all neighboring points equal. \n\nInput\n\nThe first line contains a single integer n (3 ≤ n ≤ 100 000) — the number of points.\n\nThe second line contains a sequence of integers x1, x2, ..., xn ( - 109 ≤ xi ≤ 109) — the coordinates of the points. All these coordinates are distinct. The points can be given in an arbitrary order.\n\nOutput\n\nPrint a single integer m — the smallest number of points you should add on the line to make the distances between all neighboring points equal. \n\nExamples\n\nInput\n\n3\n-5 10 5\n\n\nOutput\n\n1\n\n\nInput\n\n6\n100 200 400 300 600 500\n\n\nOutput\n\n0\n\n\nInput\n\n4\n10 9 0 -1\n\n\nOutput\n\n8\n\nNote\n\nIn the first example you can add one point with coordinate 0.\n\nIn the second example the distances between all neighboring points are already equal, so you shouldn't add anything.", "grammar": {"answer": null}}
{"name": "23_E. Tree", "description": "Recently Bob invented a new game with a tree (we should remind you, that a tree is a connected graph without cycles): he deletes any (possibly, zero) amount of edges of the tree, and counts the product of sizes of the connected components left after the deletion. Your task is to find out the maximum number that Bob can get in his new game for a given tree.\n\nInput\n\nThe first input line contains integer number n (1 ≤ n ≤ 700) — amount of vertices in the tree. The following n - 1 lines contain the description of the edges. Each line contains the pair of vertices' indexes, joined by an edge, ai, bi (1 ≤ ai, bi ≤ n). It's guaranteed that the graph described in the input is a tree.\n\nOutput\n\nOutput the only number — the maximum product of sizes of the connected components, that Bob can get after deleting some of the tree's edges.\n\nExamples\n\nInput\n\n5\n1 2\n2 3\n3 4\n4 5\n\n\nOutput\n\n6\n\nInput\n\n8\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n6 8\n\n\nOutput\n\n18\n\nInput\n\n3\n1 2\n1 3\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p03073 AtCoder Beginner Contest 124 - Coloring Colorfully", "description": "N tiles are arranged in a row from left to right. The initial color of each tile is represented by a string S of length N.\n\nThe i-th tile from the left is painted black if the i-th character of S is `0`, and painted white if that character is `1`.\n\nYou want to repaint some of the tiles black or white, so that any two adjacent tiles have different colors.\n\nAt least how many tiles need to be repainted to satisfy the condition?\n\nConstraints\n\n* 1 \\leq |S| \\leq 10^5\n* S_i is `0` or `1`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the minimum number of tiles that need to be repainted to satisfy the condition.\n\nExamples\n\nInput\n\n000\n\n\nOutput\n\n1\n\n\nInput\n\n10010010\n\n\nOutput\n\n3\n\n\nInput\n\n0\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03198 CADDi 2018 - Negative Doubling", "description": "There are N positive integers A_1, A_2, ..., A_N. Takahashi can perform the following operation on these integers any number of times:\n\n* Choose 1 \\leq i \\leq N and multiply the value of A_i by -2.\n\n\n\nNotice that he multiplies it by minus two.\n\nHe would like to make A_1 \\leq A_2 \\leq ... \\leq A_N holds. Find the minimum number of operations required. If it is impossible, print `-1`.\n\nConstraints\n\n* 1 \\leq N \\leq 200000\n* 1 \\leq A_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n4\n3 1 4 1\n\n\nOutput\n\n3\n\n\nInput\n\n5\n1 2 3 4 5\n\n\nOutput\n\n0\n\n\nInput\n\n8\n657312726 129662684 181537270 324043958 468214806 916875077 825989291 319670097\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "p02612 AtCoder Beginner Contest 173 - Payment", "description": "We will buy a product for N yen (the currency of Japan) at a shop.\n\nIf we use only 1000-yen bills to pay the price, how much change will we receive?\n\nAssume we use the minimum number of bills required.\n\nConstraints\n\n* 1 \\leq N \\leq 10000\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the amount of change as an integer.\n\nExamples\n\nInput\n\n1900\n\n\nOutput\n\n100\n\n\nInput\n\n3000\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03230 Tenka1 Programmer Beginner Contest - Crossing", "description": "You are given an integer N. Determine if there exists a tuple of subsets of \\\\{1,2,...N\\\\}, (S_1,S_2,...,S_k), that satisfies the following conditions:\n\n* Each of the integers 1,2,...,N is contained in exactly two of the sets S_1,S_2,...,S_k.\n* Any two of the sets S_1,S_2,...,S_k have exactly one element in common.\n\n\n\nIf such a tuple exists, construct one such tuple.\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nIf a tuple of subsets of \\\\{1,2,...N\\\\} that satisfies the conditions does not exist, print `No`. If such a tuple exists, print `Yes` first, then print such subsets in the following format:\n\n\nk\n|S_1| S_{1,1} S_{1,2} ... S_{1,|S_1|}\n:\n|S_k| S_{k,1} S_{k,2} ... S_{k,|S_k|}\n\n\nwhere S_i={S_{i,1},S_{i,2},...,S_{i,|S_i|}}.\n\nIf there are multiple such tuples, any of them will be accepted.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\nYes\n3\n2 1 2\n2 3 1\n2 2 3\n\n\nInput\n\n4\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "1051_B. Relatively Prime Pairs", "description": "You are given a set of all integers from l to r inclusive, l < r, (r - l + 1) ≤ 3 ⋅ 10^5 and (r - l) is always odd.\n\nYou want to split these numbers into exactly (r - l + 1)/(2) pairs in such a way that for each pair (i, j) the greatest common divisor of i and j is equal to 1. Each number should appear in exactly one of the pairs.\n\nPrint the resulting pairs or output that no solution exists. If there are multiple solutions, print any of them.\n\nInput\n\nThe only line contains two integers l and r (1 ≤ l < r ≤ 10^{18}, r - l + 1 ≤ 3 ⋅ 10^5, (r - l) is odd).\n\nOutput\n\nIf any solution exists, print \"YES\" in the first line. Each of the next (r - l + 1)/(2) lines should contain some pair of integers. GCD of numbers in each pair should be equal to 1. All (r - l + 1) numbers should be pairwise distinct and should have values from l to r inclusive.\n\nIf there are multiple solutions, print any of them.\n\nIf there exists no solution, print \"NO\".\n\nExample\n\nInput\n\n1 8\n\n\nOutput\n\nYES\n2 7\n4 1\n3 8\n6 5", "grammar": {"answer": null}}
{"name": "484_B. Maximum Value", "description": "You are given a sequence a consisting of n integers. Find the maximum possible value of <image> (integer remainder of ai divided by aj), where 1 ≤ i, j ≤ n and ai ≥ aj.\n\nInput\n\nThe first line contains integer n — the length of the sequence (1 ≤ n ≤ 2·105). \n\nThe second line contains n space-separated integers ai (1 ≤ ai ≤ 106).\n\nOutput\n\nPrint the answer to the problem.\n\nExamples\n\nInput\n\n3\n3 4 5\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "378_A. Playing with Dice", "description": "Two players are playing a game. First each of them writes an integer from 1 to 6, and then a dice is thrown. The player whose written number got closer to the number on the dice wins. If both payers have the same difference, it's a draw.\n\nThe first player wrote number a, the second player wrote number b. How many ways to throw a dice are there, at which the first player wins, or there is a draw, or the second player wins?\n\nInput\n\nThe single line contains two integers a and b (1 ≤ a, b ≤ 6) — the numbers written on the paper by the first and second player, correspondingly.\n\nOutput\n\nPrint three integers: the number of ways to throw the dice at which the first player wins, the game ends with a draw or the second player wins, correspondingly.\n\nExamples\n\nInput\n\n2 5\n\n\nOutput\n\n3 0 3\n\n\nInput\n\n2 4\n\n\nOutput\n\n2 1 3\n\nNote\n\nThe dice is a standard cube-shaped six-sided object with each side containing a number from 1 to 6, and where all numbers on all sides are distinct.\n\nYou can assume that number a is closer to number x than number b, if |a - x| < |b - x|.", "grammar": {"answer": null}}
{"name": "p03708 AtCoder Grand Contest 015 - A or...or B Problem", "description": "Nukes has an integer that can be represented as the bitwise OR of one or more integers between A and B (inclusive). How many possible candidates of the value of Nukes's integer there are?\n\nConstraints\n\n* 1 ≤ A ≤ B < 2^{60}\n* A and B are integers.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nA\nB\n\n\nOutput\n\nPrint the number of possible candidates of the value of Nukes's integer.\n\nExamples\n\nInput\n\n7\n9\n\n\nOutput\n\n4\n\n\nInput\n\n65\n98\n\n\nOutput\n\n63\n\n\nInput\n\n271828182845904523\n314159265358979323\n\n\nOutput\n\n68833183630578410", "grammar": {"answer": null}}
{"name": "p03588 Tenka1 Programmer Beginner Contest - Different Distribution", "description": "A group of people played a game. All players had distinct scores, which are positive integers.\n\nTakahashi knows N facts on the players' scores. The i-th fact is as follows: the A_i-th highest score among the players is B_i.\n\nFind the maximum possible number of players in the game.\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* 1 \\leq A_i \\leq 10^9(1\\leq i\\leq N)\n* 0 \\leq B_i \\leq 10^9(1\\leq i\\leq N)\n* If i ≠ j, A_i ≠ A_j.\n* There exists a possible outcome of the game that are consistent with the facts.\n* All input values are integers.\n\nInputs\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 B_1\n:\nA_N B_N\n\n\nOutputs\n\nPrint the maximum possible number of players in the game.\n\nExamples\n\nInput\n\n3\n4 7\n2 9\n6 2\n\n\nOutput\n\n8\n\n\nInput\n\n5\n1 10\n3 6\n5 2\n4 4\n2 8\n\n\nOutput\n\n7\n\n\nInput\n\n2\n1 1000000000\n1000000000 1\n\n\nOutput\n\n1000000001", "grammar": {"answer": null}}
{"name": "1351_A. A+B (Trial Problem)", "description": "You are given two integers a and b. Print a+b.\n\nInput\n\nThe first line contains an integer t (1 ≤ t ≤ 10^4) — the number of test cases in the input. Then t test cases follow.\n\nEach test case is given as a line of two integers a and b (-1000 ≤ a, b ≤ 1000).\n\nOutput\n\nPrint t integers — the required numbers a+b.\n\nExample\n\nInput\n\n\n4\n1 5\n314 15\n-99 99\n123 987\n\n\nOutput\n\n\n6\n329\n0\n1110", "grammar": {"answer": null}}
{"name": "p00102 Matrix-like Computation", "description": "Your task is to develop a tiny little part of spreadsheet software.\n\nWrite a program which adds up columns and rows of given table as shown in the following figure:\n\n<image>\n\n\n\nInput\n\nThe input consists of several datasets. Each dataset consists of:\n\n\nn (the size of row and column of the given table)\n1st row of the table\n2nd row of the table\n:\n:\nnth row of the table\n\n\nThe input ends with a line consisting of a single 0.\n\nOutput\n\nFor each dataset, print the table with sums of rows and columns. Each item of the table should be aligned to the right with a margin for five digits. Please see the sample output for details.\n\nExample\n\nInput\n\n4\n52 96 15 20\n86 22 35 45\n45 78 54 36\n16 86 74 55\n4\n52 96 15 20\n86 22 35 45\n45 78 54 36\n16 86 74 55\n0\n\n\nOutput\n\n52   96   15   20  183\n   86   22   35   45  188\n   45   78   54   36  213\n   16   86   74   55  231\n  199  282  178  156  815\n   52   96   15   20  183\n   86   22   35   45  188\n   45   78   54   36  213\n   16   86   74   55  231\n  199  282  178  156  815", "grammar": {"answer": null}}
{"name": "p03651 AtCoder Grand Contest 018 - Getting Difference", "description": "There is a box containing N balls. The i-th ball has the integer A_i written on it. Snuke can perform the following operation any number of times:\n\n* Take out two balls from the box. Then, return them to the box along with a new ball, on which the absolute difference of the integers written on the two balls is written.\n\n\n\nDetermine whether it is possible for Snuke to reach the state where the box contains a ball on which the integer K is written.\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* 1 \\leq A_i \\leq 10^9\n* 1 \\leq K \\leq 10^9\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nA_1 A_2 ... A_N\n\n\nOutput\n\nIf it is possible for Snuke to reach the state where the box contains a ball on which the integer K is written, print `POSSIBLE`; if it is not possible, print `IMPOSSIBLE`.\n\nExamples\n\nInput\n\n3 7\n9 3 4\n\n\nOutput\n\nPOSSIBLE\n\n\nInput\n\n3 5\n6 9 3\n\n\nOutput\n\nIMPOSSIBLE\n\n\nInput\n\n4 11\n11 3 7 15\n\n\nOutput\n\nPOSSIBLE\n\n\nInput\n\n5 12\n10 2 8 6 4\n\n\nOutput\n\nIMPOSSIBLE", "grammar": {"answer": null}}
{"name": "267_A. Subtractions", "description": "You've got two numbers. As long as they are both larger than zero, they go through the same operation: subtract the lesser number from the larger one. If they equal substract one number from the another. For example, one operation transforms pair (4,17) to pair (4,13), it transforms (5,5) to (0,5).\n\nYou've got some number of pairs (ai, bi). How many operations will be performed for each of them?\n\nInput\n\nThe first line contains the number of pairs n (1 ≤ n ≤ 1000). Then follow n lines, each line contains a pair of positive integers ai, bi (1 ≤ ai, bi ≤ 109).\n\nOutput\n\nPrint the sought number of operations for each pair on a single line.\n\nExamples\n\nInput\n\n2\n4 17\n7 987654321\n\n\nOutput\n\n8\n141093479", "grammar": {"answer": null}}
{"name": "p01486 CatChecker", "description": "Example\n\nInput\n\nmmemewwemeww\n\n\nOutput\n\nCat", "grammar": {"answer": null}}
{"name": "p04042 AtCoder Regular Contest 058 - Iroha Loves Strings", "description": "Iroha has a sequence of N strings s_1, s_2, ..., s_N.\n\nShe will choose some (possibly all) strings from the sequence, then concatenate those strings retaining the relative order, to produce a long string.\n\nAmong all strings of length K that she can produce in this way, find the lexicographically smallest one.\n\nConstraints\n\n* 1 ≦ N ≦ 2000\n* 1 ≦ K ≦ 10^4\n* For each i, 1 ≦ |s_i| ≦ K.\n* |s_1| + |s_2| + ... + |s_N| ≦ 10^6\n* For each i, s_i consists of lowercase letters.\n* There exists at least one string of length K that Iroha can produce.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN K\ns_1\ns_2\n:\ns_N\n\n\nOutput\n\nPrint the lexicographically smallest string of length K that Iroha can produce.\n\nExamples\n\nInput\n\n3 7\nat\ncoder\ncodar\n\n\nOutput\n\natcodar\n\n\nInput\n\n3 7\ncoder\ncodar\nat\n\n\nOutput\n\ncodarat\n\n\nInput\n\n4 13\nkyuri\nnamida\nzzzzzzz\naaaaaa\n\n\nOutput\n\nnamidazzzzzzz", "grammar": {"answer": null}}
{"name": "1463_B. Find The Array", "description": "You are given an array [a_1, a_2, ..., a_n] such that 1 ≤ a_i ≤ 10^9. Let S be the sum of all elements of the array a.\n\nLet's call an array b of n integers beautiful if:\n\n  * 1 ≤ b_i ≤ 10^9 for each i from 1 to n; \n  * for every pair of adjacent integers from the array (b_i, b_{i + 1}), either b_i divides b_{i + 1}, or b_{i + 1} divides b_i (or both); \n  * 2 ∑ _{i = 1}^{n} |a_i - b_i| ≤ S. \n\n\n\nYour task is to find any beautiful array. It can be shown that at least one beautiful array always exists.\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 1000) — the number of test cases.\n\nEach test case consists of two lines. The first line contains one integer n (2 ≤ n ≤ 50).\n\nThe second line contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ 10^9).\n\nOutput\n\nFor each test case, print the beautiful array b_1, b_2, ..., b_n (1 ≤ b_i ≤ 10^9) on a separate line. It can be shown that at least one beautiful array exists under these circumstances. If there are multiple answers, print any of them.\n\nExample\n\nInput\n\n\n4\n5\n1 2 3 4 5\n2\n4 6\n2\n1 1000000000\n6\n3 4 8 1 2 3\n\n\nOutput\n\n\n3 3 3 3 3\n3 6\n1 1000000000\n4 4 8 1 3 3", "grammar": {"answer": null}}
{"name": "918_A. Eleven", "description": "Eleven wants to choose a new name for herself. As a bunch of geeks, her friends suggested an algorithm to choose a name for her. Eleven wants her name to have exactly n characters. \n\n<image>\n\nHer friend suggested that her name should only consist of uppercase and lowercase letters 'O'. More precisely, they suggested that the i-th letter of her name should be 'O' (uppercase) if i is a member of Fibonacci sequence, and 'o' (lowercase) otherwise. The letters in the name are numbered from 1 to n. Fibonacci sequence is the sequence f where\n\n  * f1 = 1, \n  * f2 = 1, \n  * fn = fn - 2 + fn - 1 (n > 2). \n\n\n\nAs her friends are too young to know what Fibonacci sequence is, they asked you to help Eleven determine her new name.\n\nInput\n\nThe first and only line of input contains an integer n (1 ≤ n ≤ 1000).\n\nOutput\n\nPrint Eleven's new name on the first and only line of output.\n\nExamples\n\nInput\n\n8\n\n\nOutput\n\nOOOoOooO\n\n\nInput\n\n15\n\n\nOutput\n\nOOOoOooOooooOoo", "grammar": {"answer": null}}
{"name": "656_E. Out of Controls", "description": "You are given a complete undirected graph. For each pair of vertices you are given the length of the edge that connects them. Find the shortest paths between each pair of vertices in the graph and return the length of the longest of them.\n\nInput\n\nThe first line of the input contains a single integer N (3 ≤ N ≤ 10).\n\nThe following N lines each contain N space-separated integers. jth integer in ith line aij is the length of the edge that connects vertices i and j. aij = aji, aii = 0, 1 ≤ aij ≤ 100 for i ≠ j.\n\nOutput\n\nOutput the maximum length of the shortest path between any pair of vertices in the graph.\n\nExamples\n\nInput\n\n3\n0 1 1\n1 0 4\n1 4 0\n\n\nOutput\n\n2\n\n\nInput\n\n4\n0 1 2 3\n1 0 4 5\n2 4 0 6\n3 5 6 0\n\n\nOutput\n\n5\n\nNote\n\nYou're running short of keywords, so you can't use some of them:\n    \n    \n    define  \n    do  \n    for  \n    foreach  \n    while  \n    repeat  \n    until  \n    if  \n    then  \n    else  \n    elif  \n    elsif  \n    elseif  \n    case  \n    switch  \n    ", "grammar": {"answer": null}}
{"name": "p03703 AtCoder Regular Contest 075 - Meaningful Mean", "description": "You are given an integer sequence of length N, a = {a_1, a_2, …, a_N}, and an integer K.\n\na has N(N+1)/2 non-empty contiguous subsequences, {a_l, a_{l+1}, …, a_r} (1 ≤ l ≤ r ≤ N). Among them, how many have an arithmetic mean that is greater than or equal to K?\n\nConstraints\n\n* All input values are integers.\n* 1 ≤ N ≤ 2 \\times 10^5\n* 1 ≤ K ≤ 10^9\n* 1 ≤ a_i ≤ 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\na_1\na_2\n:\na_N\n\n\nOutput\n\nPrint the number of the non-empty contiguous subsequences with an arithmetic mean that is greater than or equal to K.\n\nExamples\n\nInput\n\n3 6\n7\n5\n7\n\n\nOutput\n\n5\n\n\nInput\n\n1 2\n1\n\n\nOutput\n\n0\n\n\nInput\n\n7 26\n10\n20\n30\n40\n30\n20\n10\n\n\nOutput\n\n13", "grammar": {"answer": null}}
{"name": "p02725 AtCoder Beginner Contest 160 - Traveling Salesman around Lake", "description": "There is a circular pond with a perimeter of K meters, and N houses around them.\n\nThe i-th house is built at a distance of A_i meters from the northmost point of the pond, measured clockwise around the pond.\n\nWhen traveling between these houses, you can only go around the pond.\n\nFind the minimum distance that needs to be traveled when you start at one of the houses and visit all the N houses.\n\nConstraints\n\n* 2 \\leq K \\leq 10^6\n* 2 \\leq N \\leq 2 \\times 10^5\n* 0 \\leq A_1 < ... < A_N < K\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK N\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the minimum distance that needs to be traveled when you start at one of the houses and visit all the N houses.\n\nExamples\n\nInput\n\n20 3\n5 10 15\n\n\nOutput\n\n10\n\n\nInput\n\n20 3\n0 5 15\n\n\nOutput\n\n10", "grammar": {"answer": null}}
{"name": "583_C. GCD Table", "description": "The GCD table G of size n × n for an array of positive integers a of length n is defined by formula \n\n<image>\n\nLet us remind you that the greatest common divisor (GCD) of two positive integers x and y is the greatest integer that is divisor of both x and y, it is denoted as <image>. For example, for array a = {4, 3, 6, 2} of length 4 the GCD table will look as follows:\n\n<image>\n\nGiven all the numbers of the GCD table G, restore array a.\n\nInput\n\nThe first line contains number n (1 ≤ n ≤ 500) — the length of array a. The second line contains n2 space-separated numbers — the elements of the GCD table of G for array a. \n\nAll the numbers in the table are positive integers, not exceeding 109. Note that the elements are given in an arbitrary order. It is guaranteed that the set of the input data corresponds to some array a.\n\nOutput\n\nIn the single line print n positive integers — the elements of array a. If there are multiple possible solutions, you are allowed to print any of them.\n\nExamples\n\nInput\n\n4\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\n\n\nOutput\n\n4 3 6 2\n\nInput\n\n1\n42\n\n\nOutput\n\n42 \n\nInput\n\n2\n1 1 1 1\n\n\nOutput\n\n1 1 ", "grammar": {"answer": null}}
{"name": "535_A. Tavas and Nafas", "description": "Today Tavas got his test result as an integer score and he wants to share it with his girlfriend, Nafas.\n\nHis phone operating system is Tavdroid, and its keyboard doesn't have any digits! He wants to share his score with Nafas via text, so he has no choice but to send this number using words.\n\n<image>\n\nHe ate coffee mix without water again, so right now he's really messed up and can't think.\n\nYour task is to help him by telling him what to type.\n\nInput\n\nThe first and only line of input contains an integer s (0 ≤ s ≤ 99), Tavas's score. \n\nOutput\n\nIn the first and only line of output, print a single string consisting only from English lowercase letters and hyphens ('-'). Do not use spaces.\n\nExamples\n\nInput\n\n6\n\n\nOutput\n\nsix\n\n\nInput\n\n99\n\n\nOutput\n\nninety-nine\n\n\nInput\n\n20\n\n\nOutput\n\ntwenty\n\nNote\n\nYou can find all you need to know about English numerals in <http://en.wikipedia.org/wiki/English_numerals> .", "grammar": {"answer": null}}
{"name": "1107_B. Digital root", "description": "Today at the lesson of mathematics, Petya learns about the digital root.\n\nThe digital root of a non-negative integer is the single digit value obtained by an iterative process of summing digits, on each iteration using the result from the previous iteration to compute a digit sum. The process continues until a single-digit number is reached. \n\nLet's denote the digital root of x as S(x). Then S(5)=5, S(38)=S(3+8=11)=S(1+1=2)=2, S(10)=S(1+0=1)=1.\n\nAs a homework Petya got n tasks of the form: find k-th positive number whose digital root is x.\n\nPetya has already solved all the problems, but he doesn't know if it's right. Your task is to solve all n tasks from Petya's homework.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 10^3) — the number of tasks in Petya's homework. The next n lines contain two integers k_i (1 ≤ k_i ≤ 10^{12}) and x_i (1 ≤ x_i ≤ 9) — i-th Petya's task in which you need to find a k_i-th positive number, the digital root of which is x_i.\n\nOutput\n\nOutput n lines, i-th line should contain a single integer — the answer to the i-th problem.\n\nExample\n\nInput\n\n\n3\n1 5\n5 2\n3 1\n\n\nOutput\n\n\n5\n38\n19", "grammar": {"answer": null}}
{"name": "914_A. Perfect Squares", "description": "Given an array a1, a2, ..., an of n integers, find the largest number in the array that is not a perfect square.\n\nA number x is said to be a perfect square if there exists an integer y such that x = y2.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 1000) — the number of elements in the array.\n\nThe second line contains n integers a1, a2, ..., an ( - 106 ≤ ai ≤ 106) — the elements of the array.\n\nIt is guaranteed that at least one element of the array is not a perfect square.\n\nOutput\n\nPrint the largest number in the array which is not a perfect square. It is guaranteed that an answer always exists.\n\nExamples\n\nInput\n\n2\n4 2\n\n\nOutput\n\n2\n\n\nInput\n\n8\n1 2 4 8 16 32 64 576\n\n\nOutput\n\n32\n\nNote\n\nIn the first sample case, 4 is a perfect square, so the largest number in the array that is not a perfect square is 2.", "grammar": {"answer": null}}
{"name": "289_E. Polo the Penguin and XOR operation", "description": "Little penguin Polo likes permutations. But most of all he likes permutations of integers from 0 to n, inclusive.\n\nFor permutation p = p0, p1, ..., pn, Polo has defined its beauty — number <image>.\n\nExpression <image> means applying the operation of bitwise excluding \"OR\" to numbers x and y. This operation exists in all modern programming languages, for example, in language C++ and Java it is represented as \"^\" and in Pascal — as \"xor\".\n\nHelp him find among all permutations of integers from 0 to n the permutation with the maximum beauty.\n\nInput\n\nThe single line contains a positive integer n (1 ≤ n ≤ 106).\n\nOutput\n\nIn the first line print integer m the maximum possible beauty. In the second line print any permutation of integers from 0 to n with the beauty equal to m.\n\nIf there are several suitable permutations, you are allowed to print any of them.\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n20\n0 2 1 4 3", "grammar": {"answer": null}}
{"name": "171_B. Star", "description": "<image>\n\nInput\n\nThe input contains a single integer a (1 ≤ a ≤ 18257).\n\nOutput\n\nPrint a single integer output (1 ≤ output ≤ 2·109).\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n13", "grammar": {"answer": null}}
{"name": "p02573 AtCoder Beginner Contest 177 - Friends", "description": "There are N persons called Person 1 through Person N.\n\nYou are given M facts that \"Person A_i and Person B_i are friends.\" The same fact may be given multiple times.\n\nIf X and Y are friends, and Y and Z are friends, then X and Z are also friends. There is no friendship that cannot be derived from the M given facts.\n\nTakahashi the evil wants to divide the N persons into some number of groups so that every person has no friend in his/her group.\n\nAt least how many groups does he need to make?\n\nConstraints\n\n* 2 \\leq N \\leq 2\\times 10^5\n* 0 \\leq M \\leq 2\\times 10^5\n* 1\\leq A_i,B_i\\leq N\n* A_i \\neq B_i\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nA_1 B_1\n\\vdots\nA_M B_M\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n5 3\n1 2\n3 4\n5 1\n\n\nOutput\n\n3\n\n\nInput\n\n4 10\n1 2\n2 1\n1 2\n2 1\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\n\nOutput\n\n4\n\n\nInput\n\n10 4\n3 1\n4 1\n5 9\n2 6\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p02917 AtCoder Beginner Contest 140 - Maximal Value", "description": "There is an integer sequence A of length N whose values are unknown.\n\nGiven is an integer sequence B of length N-1 which is known to satisfy the following:\n\nB_i \\geq \\max(A_i, A_{i+1})\n\nFind the maximum possible sum of the elements of A.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 100\n* 0 \\leq B_i \\leq 10^5\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nB_1 B_2 ... B_{N-1}\n\n\nOutput\n\nPrint the maximum possible sum of the elements of A.\n\nExamples\n\nInput\n\n3\n2 5\n\n\nOutput\n\n9\n\n\nInput\n\n2\n3\n\n\nOutput\n\n6\n\n\nInput\n\n6\n0 153 10 10 23\n\n\nOutput\n\n53", "grammar": {"answer": null}}
{"name": "p02594 AtCoder Beginner Contest 174 - Air Conditioner", "description": "You will turn on the air conditioner if, and only if, the temperature of the room is 30 degrees Celsius or above.\n\nThe current temperature of the room is X degrees Celsius. Will you turn on the air conditioner?\n\nConstraints\n\n* -40 \\leq X \\leq 40\n* X is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX\n\n\nOutput\n\nPrint `Yes` if you will turn on the air conditioner; print `No` otherwise.\n\nExamples\n\nInput\n\n25\n\n\nOutput\n\nNo\n\n\nInput\n\n30\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "p03553 AtCoder Regular Contest 085 - MUL", "description": "We have N gemstones labeled 1 through N.\n\nYou can perform the following operation any number of times (possibly zero).\n\n* Select a positive integer x, and smash all the gems labeled with multiples of x.\n\n\n\nThen, for each i, if the gem labeled i remains without getting smashed, you will receive a_i yen (the currency of Japan). However, a_i may be negative, in which case you will be charged money.\n\nBy optimally performing the operation, how much yen can you earn?\n\nConstraints\n\n* All input values are integers.\n* 1 \\leq N \\leq 100\n* |a_i| \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the maximum amount of money that can be earned.\n\nExamples\n\nInput\n\n6\n1 2 -6 4 5 3\n\n\nOutput\n\n12\n\n\nInput\n\n6\n100 -100 -100 -100 100 -100\n\n\nOutput\n\n200\n\n\nInput\n\n5\n-1 -2 -3 -4 -5\n\n\nOutput\n\n0\n\n\nInput\n\n2\n-1000 100000\n\n\nOutput\n\n99000", "grammar": {"answer": null}}
{"name": "p03621 AtCoder Grand Contest 019 - Shuffle and Swap", "description": "You have two strings A = A_1 A_2 ... A_n and B = B_1 B_2 ... B_n of the same length consisting of 0 and 1. The number of 1's in A and B is equal.\n\nYou've decided to transform A using the following algorithm:\n\n* Let a_1, a_2, ..., a_k be the indices of 1's in A.\n* Let b_1, b_2, ..., b_k be the indices of 1's in B.\n* Replace a and b with their random permutations, chosen independently and uniformly.\n* For each i from 1 to k, in order, swap A_{a_i} and A_{b_i}.\n\n\n\nLet P be the probability that strings A and B become equal after the procedure above.\n\nLet Z = P \\times (k!)^2. Clearly, Z is an integer.\n\nFind Z modulo 998244353.\n\nConstraints\n\n* 1 \\leq |A| = |B| \\leq 10,000\n* A and B consist of 0 and 1.\n* A and B contain the same number of 1's.\n* A and B contain at least one 1.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA\nB\n\n\nOutput\n\nPrint the value of Z modulo 998244353.\n\nExamples\n\nInput\n\n1010\n1100\n\n\nOutput\n\n3\n\n\nInput\n\n01001\n01001\n\n\nOutput\n\n4\n\n\nInput\n\n101010\n010101\n\n\nOutput\n\n36\n\n\nInput\n\n1101011011110\n0111101011101\n\n\nOutput\n\n932171449", "grammar": {"answer": null}}
{"name": "p03360 AtCoder Beginner Contest 096 - Maximum Sum", "description": "There are three positive integers A, B and C written on a blackboard. E869120 performs the following operation K times:\n\n* Choose one integer written on the blackboard and let the chosen integer be n. Replace the chosen integer with 2n.\n\n\n\nWhat is the largest possible sum of the integers written on the blackboard after K operations?\n\nConstraints\n\n* A, B and C are integers between 1 and 50 (inclusive).\n* K is an integer between 1 and 10 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C\nK\n\n\nOutput\n\nPrint the largest possible sum of the integers written on the blackboard after K operations by E869220.\n\nExamples\n\nInput\n\n5 3 11\n1\n\n\nOutput\n\n30\n\n\nInput\n\n3 3 4\n2\n\n\nOutput\n\n22", "grammar": {"answer": null}}
{"name": "p00030 Sum of Integers", "description": "Write a program that extracts n different numbers from the numbers 0 to 9 and outputs the number of combinations that add up to s. Each n number is from 0 to 9, and the same number cannot be used in one combination. For example, if n is 3 and s is 6, the combination of the three numbers totaling 6 is\n\n1 + 2 + 3 = 6\n0 + 1 + 5 = 6\n0 + 2 + 4 = 6\n\nThere are three ways.\n\n\n\nInput\n\nGiven multiple datasets. For each dataset, n (1 ≤ n ≤ 9) and s (0 ≤ s ≤ 100) are given on one line, separated by a single space. When both n and s are 0, it is the end of the input (in this case, the program is terminated without processing).\n\nThe number of datasets does not exceed 50.\n\nOutput\n\nFor each dataset, output the number of combinations in which the sum of n integers is s on one line.\n\nExample\n\nInput\n\n3 6\n3 1\n0 0\n\n\nOutput\n\n3\n0", "grammar": {"answer": null}}
{"name": "225_E. Unsolvable", "description": "Consider the following equation: \n\n<image> where sign [a] represents the integer part of number a.\n\nLet's find all integer z (z > 0), for which this equation is unsolvable in positive integers. The phrase \"unsolvable in positive integers\" means that there are no such positive integers x and y (x, y > 0), for which the given above equation holds.\n\nLet's write out all such z in the increasing order: z1, z2, z3, and so on (zi < zi + 1). Your task is: given the number n, find the number zn.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 40).\n\nOutput\n\nPrint a single integer — the number zn modulo 1000000007 (109 + 7). It is guaranteed that the answer exists.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n1\n\nInput\n\n2\n\n\nOutput\n\n3\n\nInput\n\n3\n\n\nOutput\n\n15", "grammar": {"answer": null}}
{"name": "p02327 Largest Rectangle", "description": "Given a matrix (H × W) which contains only 1 and 0, find the area of the largest rectangle which only contains 0s.\n\nConstraints\n\n* 1 ≤ H, W ≤ 1,400\n\nInput\n\n\nH W\nc1,1 c1,2 ... c1,W\nc2,1 c2,2 ... c2,W\n:\ncH,1 cH,2 ... cH,W\n\n\nIn the first line, two integers H and W separated by a space character are given. In the following H lines, ci,j, elements of the H × W matrix, are given.\n\nOutput\n\nPrint the area (the number of 0s) of the largest rectangle.\n\nExample\n\nInput\n\n4 5\n0 0 1 0 0\n1 0 0 0 0\n0 0 0 1 0\n0 0 0 1 0\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "1272_E. Nearest Opposite Parity", "description": "You are given an array a consisting of n integers. In one move, you can jump from the position i to the position i - a_i (if 1 ≤ i - a_i) or to the position i + a_i (if i + a_i ≤ n).\n\nFor each position i from 1 to n you want to know the minimum the number of moves required to reach any position j such that a_j has the opposite parity from a_i (i.e. if a_i is odd then a_j has to be even and vice versa).\n\nInput\n\nThe first line of the input contains one integer n (1 ≤ n ≤ 2 ⋅ 10^5) — the number of elements in a.\n\nThe second line of the input contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ n), where a_i is the i-th element of a.\n\nOutput\n\nPrint n integers d_1, d_2, ..., d_n, where d_i is the minimum the number of moves required to reach any position j such that a_j has the opposite parity from a_i (i.e. if a_i is odd then a_j has to be even and vice versa) or -1 if it is impossible to reach such a position.\n\nExample\n\nInput\n\n\n10\n4 5 7 6 7 5 4 4 6 4\n\n\nOutput\n\n\n1 1 1 2 -1 1 1 3 1 1 ", "grammar": {"answer": null}}
{"name": "p03434 AtCoder Beginner Contest 088 - Card Game for Two", "description": "We have N cards. A number a_i is written on the i-th card.\nAlice and Bob will play a game using these cards. In this game, Alice and Bob alternately take one card. Alice goes first.\nThe game ends when all the cards are taken by the two players, and the score of each player is the sum of the numbers written on the cards he/she has taken. When both players take the optimal strategy to maximize their scores, find Alice's score minus Bob's score.\n\nConstraints\n\n* N is an integer between 1 and 100 (inclusive).\n* a_i \\ (1 \\leq i \\leq N) is an integer between 1 and 100 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 a_3 ... a_N\n\n\nOutput\n\nPrint Alice's score minus Bob's score when both players take the optimal strategy to maximize their scores.\n\nExamples\n\nInput\n\n2\n3 1\n\n\nOutput\n\n2\n\n\nInput\n\n3\n2 7 4\n\n\nOutput\n\n5\n\n\nInput\n\n4\n20 18 2 18\n\n\nOutput\n\n18", "grammar": {"answer": null}}
{"name": "p01975 Mapping", "description": "problem\n\nAOR Ika made a set $ S = \\\\ {a_1, ..., a_N \\\\} $ and a map $ f: S → S $. $ f (a_i) = b_i $. For any element $ x $ in the set $ S $, all maps $ g, h: S → S $ satisfying $ g (f (x)) = h (f (x)) $ are $ g (x). ) = Determine if h (x) $ is satisfied, and if not, configure one counterexample.\n\n\n\n\n\nExample\n\nInput\n\n5\n1 2 3 4 5\n3 4 2 5 1\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "p02300 Convex Hull", "description": "Find the convex hull of a given set of points P. In other words, find the smallest convex polygon containing all the points of P. Here, in a convex polygon, all interior angles are less than or equal to 180 degrees.\n\nPlease note that you should find all the points of P on both corner and boundary of the convex polygon.\n\nConstraints\n\n* 3 ≤ n ≤ 100000\n* -10000 ≤ xi, yi ≤ 10000\n* No point in the P will occur more than once.\n\nInput\n\n\nn\nx1 y1\nx2 y2\n:\nxn yn\n\n\nThe first integer n is the number of points in P. The coordinate of the i-th point pi is given by two integers xi and yi.\n\nOutput\n\nIn the first line, print the number of points on the corner/boundary of the convex polygon. In the following lines, print x y coordinates of the set of points. The coordinates should be given in the order of counter-clockwise visit of them starting from the point in P with the minimum y-coordinate, or the leftmost such point in case of a tie.\n\nExamples\n\nInput\n\n7\n2 1\n0 0\n1 2\n2 2\n4 2\n1 3\n3 3\n\n\nOutput\n\n5\n0 0\n2 1\n4 2\n3 3\n1 3\n\n\nInput\n\n4\n0 0\n2 2\n0 2\n0 1\n\n\nOutput\n\n4\n0 0\n2 2\n0 2\n0 1", "grammar": {"answer": null}}
{"name": "p03090 AtCoder Grand Contest 032 - Balanced Neighbors", "description": "You are given an integer N. Build an undirected graph with N vertices with indices 1 to N that satisfies the following two conditions:\n\n* The graph is simple and connected.\n* There exists an integer S such that, for every vertex, the sum of the indices of the vertices adjacent to that vertex is S.\n\n\n\nIt can be proved that at least one such graph exists under the constraints of this problem.\n\nConstraints\n\n* All values in input are integers.\n* 3 \\leq N \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nIn the first line, print the number of edges, M, in the graph you made. In the i-th of the following M lines, print two integers a_i and b_i, representing the endpoints of the i-th edge.\n\nThe output will be judged correct if the graph satisfies the conditions.\n\nExample\n\nInput\n\n3\n\n\nOutput\n\n2\n1 3\n2 3", "grammar": {"answer": null}}
{"name": "p02617 AtCoder Beginner Contest 173 - Intervals on Tree", "description": "We have a tree with N vertices and N-1 edges, respectively numbered 1, 2,\\cdots, N and 1, 2, \\cdots, N-1. Edge i connects Vertex u_i and v_i.\n\nFor integers L, R (1 \\leq L \\leq R \\leq N), let us define a function f(L, R) as follows:\n\n* Let S be the set of the vertices numbered L through R. f(L, R) represents the number of connected components in the subgraph formed only from the vertex set S and the edges whose endpoints both belong to S.\n\n\n\nCompute \\sum_{L=1}^{N} \\sum_{R=L}^{N} f(L, R).\n\nConstraints\n\n* 1 \\leq N \\leq 2 \\times 10^5\n* 1 \\leq u_i, v_i \\leq N\n* The given graph is a tree.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nu_1 v_1\nu_2 v_2\n:\nu_{N-1} v_{N-1}\n\n\nOutput\n\nPrint \\sum_{L=1}^{N} \\sum_{R=L}^{N} f(L, R).\n\nExamples\n\nInput\n\n3\n1 3\n2 3\n\n\nOutput\n\n7\n\n\nInput\n\n2\n1 2\n\n\nOutput\n\n3\n\n\nInput\n\n10\n5 3\n5 7\n8 9\n1 9\n9 10\n8 4\n7 4\n6 10\n7 2\n\n\nOutput\n\n113", "grammar": {"answer": null}}
{"name": "p03480 AtCoder Beginner Contest 083 - Wide Flip", "description": "You are given a string S consisting of `0` and `1`. Find the maximum integer K not greater than |S| such that we can turn all the characters of S into `0` by repeating the following operation some number of times.\n\n* Choose a contiguous segment [l,r] in S whose length is at least K (that is, r-l+1\\geq K must be satisfied). For each integer i such that l\\leq i\\leq r, do the following: if S_i is `0`, replace it with `1`; if S_i is `1`, replace it with `0`.\n\nConstraints\n\n* 1\\leq |S|\\leq 10^5\n* S_i(1\\leq i\\leq N) is either `0` or `1`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the maximum integer K such that we can turn all the characters of S into `0` by repeating the operation some number of times.\n\nExamples\n\nInput\n\n010\n\n\nOutput\n\n2\n\n\nInput\n\n100000000\n\n\nOutput\n\n8\n\n\nInput\n\n00001111\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "34_A. Reconnaissance 2", "description": "n soldiers stand in a circle. For each soldier his height ai is known. A reconnaissance unit can be made of such two neighbouring soldiers, whose heights difference is minimal, i.e. |ai - aj| is minimal. So each of them will be less noticeable with the other. Output any pair of soldiers that can form a reconnaissance unit.\n\nInput\n\nThe first line contains integer n (2 ≤ n ≤ 100) — amount of soldiers. Then follow the heights of the soldiers in their order in the circle — n space-separated integers a1, a2, ..., an (1 ≤ ai ≤ 1000). The soldier heights are given in clockwise or counterclockwise direction.\n\nOutput\n\nOutput two integers — indexes of neighbouring soldiers, who should form a reconnaissance unit. If there are many optimum solutions, output any of them. Remember, that the soldiers stand in a circle.\n\nExamples\n\nInput\n\n5\n10 12 13 15 10\n\n\nOutput\n\n5 1\n\n\nInput\n\n4\n10 20 30 40\n\n\nOutput\n\n1 2", "grammar": {"answer": null}}
{"name": "845_C. Two TVs", "description": "Polycarp is a great fan of television.\n\nHe wrote down all the TV programs he is interested in for today. His list contains n shows, i-th of them starts at moment li and ends at moment ri.\n\nPolycarp owns two TVs. He can watch two different shows simultaneously with two TVs but he can only watch one show at any given moment on a single TV. If one show ends at the same moment some other show starts then you can't watch them on a single TV.\n\nPolycarp wants to check out all n shows. Are two TVs enough to do so?\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 2·105) — the number of shows.\n\nEach of the next n lines contains two integers li and ri (0 ≤ li < ri ≤ 109) — starting and ending time of i-th show.\n\nOutput\n\nIf Polycarp is able to check out all the shows using only two TVs then print \"YES\" (without quotes). Otherwise, print \"NO\" (without quotes).\n\nExamples\n\nInput\n\n3\n1 2\n2 3\n4 5\n\n\nOutput\n\nYES\n\n\nInput\n\n4\n1 2\n2 3\n2 3\n1 2\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "955_B. Not simply beatiful strings", "description": "Let's call a string adorable if its letters can be realigned in such a way that they form two consequent groups of equal symbols (note that different groups must contain different symbols). For example, ababa is adorable (you can transform it to aaabb, where the first three letters form a group of a-s and others — a group of b-s), but cccc is not since in each possible consequent partition letters in these two groups coincide.\n\nYou're given a string s. Check whether it can be split into two non-empty subsequences such that the strings formed by these subsequences are adorable. Here a subsequence is an arbitrary set of indexes of the string.\n\nInput\n\nThe only line contains s (1 ≤ |s| ≤ 105) consisting of lowercase latin letters.\n\nOutput\n\nPrint «Yes» if the string can be split according to the criteria above or «No» otherwise.\n\nEach letter can be printed in arbitrary case.\n\nExamples\n\nInput\n\nababa\n\n\nOutput\n\nYes\n\n\nInput\n\nzzcxx\n\n\nOutput\n\nYes\n\n\nInput\n\nyeee\n\n\nOutput\n\nNo\n\nNote\n\nIn sample case two zzcxx can be split into subsequences zc and zxx each of which is adorable.\n\nThere's no suitable partition in sample case three.", "grammar": {"answer": null}}
{"name": "p03988 AtCoder Grand Contest 005 - Tree Restoring", "description": "Aoki loves numerical sequences and trees.\n\nOne day, Takahashi gave him an integer sequence of length N, a_1, a_2, ..., a_N, which made him want to construct a tree.\n\nAoki wants to construct a tree with N vertices numbered 1 through N, such that for each i = 1,2,...,N, the distance between vertex i and the farthest vertex from it is a_i, assuming that the length of each edge is 1.\n\nDetermine whether such a tree exists.\n\nConstraints\n\n* 2 ≦ N ≦ 100\n* 1 ≦ a_i ≦ N-1\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\n\n\nOutput\n\nIf there exists a tree that satisfies the condition, print `Possible`. Otherwise, print `Impossible`.\n\nExamples\n\nInput\n\n5\n3 2 2 3 3\n\n\nOutput\n\nPossible\n\n\nInput\n\n3\n1 1 2\n\n\nOutput\n\nImpossible\n\n\nInput\n\n10\n1 2 2 2 2 2 2 2 2 2\n\n\nOutput\n\nPossible\n\n\nInput\n\n10\n1 1 2 2 2 2 2 2 2 2\n\n\nOutput\n\nImpossible\n\n\nInput\n\n6\n1 1 1 1 1 5\n\n\nOutput\n\nImpossible\n\n\nInput\n\n5\n4 3 2 3 4\n\n\nOutput\n\nPossible", "grammar": {"answer": null}}
{"name": "1061_A. Coins", "description": "You have unlimited number of coins with values 1, 2, …, n. You want to select some set of coins having the total value of S. \n\nIt is allowed to have multiple coins with the same value in the set. What is the minimum number of coins required to get sum S?\n\nInput\n\nThe only line of the input contains two integers n and S (1 ≤ n ≤ 100 000, 1 ≤ S ≤ 10^9)\n\nOutput\n\nPrint exactly one integer — the minimum number of coins required to obtain sum S.\n\nExamples\n\nInput\n\n5 11\n\n\nOutput\n\n3\n\nInput\n\n6 16\n\n\nOutput\n\n3\n\nNote\n\nIn the first example, some of the possible ways to get sum 11 with 3 coins are: \n\n  * (3, 4, 4)\n  * (2, 4, 5)\n  * (1, 5, 5)\n  * (3, 3, 5) \n\n\n\nIt is impossible to get sum 11 with less than 3 coins.\n\nIn the second example, some of the possible ways to get sum 16 with 3 coins are: \n\n  * (5, 5, 6)\n  * (4, 6, 6) \n\n\n\nIt is impossible to get sum 16 with less than 3 coins.", "grammar": {"answer": null}}
{"name": "811_A. Vladik and Courtesy", "description": "At regular competition Vladik and Valera won a and b candies respectively. Vladik offered 1 his candy to Valera. After that Valera gave Vladik 2 his candies, so that no one thought that he was less generous. Vladik for same reason gave 3 candies to Valera in next turn.\n\nMore formally, the guys take turns giving each other one candy more than they received in the previous turn.\n\nThis continued until the moment when one of them couldn’t give the right amount of candy. Candies, which guys got from each other, they don’t consider as their own. You need to know, who is the first who can’t give the right amount of candy.\n\nInput\n\nSingle line of input data contains two space-separated integers a, b (1 ≤ a, b ≤ 109) — number of Vladik and Valera candies respectively.\n\nOutput\n\nPring a single line \"Vladik’’ in case, if Vladik first who can’t give right amount of candy, or \"Valera’’ otherwise.\n\nExamples\n\nInput\n\n1 1\n\n\nOutput\n\nValera\n\n\nInput\n\n7 6\n\n\nOutput\n\nVladik\n\nNote\n\nIllustration for first test case:\n\n<image>\n\nIllustration for second test case:\n\n<image>", "grammar": {"answer": null}}
{"name": "p03767 AtCoder Grand Contest 012 - AtCoder Group Contest", "description": "There are 3N participants in AtCoder Group Contest. The strength of the i-th participant is represented by an integer a_i. They will form N teams, each consisting of three participants. No participant may belong to multiple teams.\n\nThe strength of a team is defined as the second largest strength among its members. For example, a team of participants of strength 1, 5, 2 has a strength 2, and a team of three participants of strength 3, 2, 3 has a strength 3.\n\nFind the maximum possible sum of the strengths of N teams.\n\nConstraints\n\n* 1 ≤ N ≤ 10^5\n* 1 ≤ a_i ≤ 10^{9}\n* a_i are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_{3N}\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n2\n5 2 8 5 1 5\n\n\nOutput\n\n10\n\n\nInput\n\n10\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n\n\nOutput\n\n10000000000", "grammar": {"answer": null}}
{"name": "p00926 Shopping", "description": "Example\n\nInput\n\n10 3\n3 7\n8 9\n2 5\n\n\nOutput\n\n23", "grammar": {"answer": null}}
{"name": "963_D. Frequency of String", "description": "You are given a string s. You should answer n queries. The i-th query consists of integer k_i and string m_i. The answer for this query is the minimum length of such a string t that t is a substring of s and m_i has at least k_i occurrences as a substring in t.\n\nA substring of a string is a continuous segment of characters of the string.\n\nIt is guaranteed that for any two queries the strings m_i from these queries are different. \n\nInput\n\nThe first line contains string s (1 ≤ \\left | s \\right | ≤ 10^{5}).\n\nThe second line contains an integer n (1 ≤ n ≤ 10^5).\n\nEach of next n lines contains an integer k_i (1 ≤ k_i ≤ |s|) and a non-empty string m_i — parameters of the query with number i, in this order.\n\nAll strings in input consists of lowercase English letters. Sum of length of all strings in input doesn't exceed 10^5. All m_i are distinct.\n\nOutput\n\nFor each query output the answer for it in a separate line.\n\nIf a string m_{i} occurs in s less that k_{i} times, output -1.\n\nExamples\n\nInput\n\naaaaa\n5\n3 a\n3 aa\n2 aaa\n3 aaaa\n1 aaaaa\n\n\nOutput\n\n3\n4\n4\n-1\n5\n\n\nInput\n\nabbb\n7\n4 b\n1 ab\n3 bb\n1 abb\n2 bbb\n1 a\n2 abbb\n\n\nOutput\n\n-1\n2\n-1\n3\n-1\n1\n-1", "grammar": {"answer": null}}
{"name": "1269_E. K Integers", "description": "You are given a permutation p_1, p_2, …, p_n.\n\nIn one move you can swap two adjacent values.\n\nYou want to perform a minimum number of moves, such that in the end there will exist a subsegment 1,2,…, k, in other words in the end there should be an integer i, 1 ≤ i ≤ n-k+1 such that p_i = 1, p_{i+1} = 2, …, p_{i+k-1}=k.\n\nLet f(k) be the minimum number of moves that you need to make a subsegment with values 1,2,…,k appear in the permutation.\n\nYou need to find f(1), f(2), …, f(n).\n\nInput\n\nThe first line of input contains one integer n (1 ≤ n ≤ 200 000): the number of elements in the permutation.\n\nThe next line of input contains n integers p_1, p_2, …, p_n: given permutation (1 ≤ p_i ≤ n).\n\nOutput\n\nPrint n integers, the minimum number of moves that you need to make a subsegment with values 1,2,…,k appear in the permutation, for k=1, 2, …, n.\n\nExamples\n\nInput\n\n\n5\n5 4 3 2 1\n\n\nOutput\n\n\n0 1 3 6 10 \n\n\nInput\n\n\n3\n1 2 3\n\n\nOutput\n\n\n0 0 0 ", "grammar": {"answer": null}}
{"name": "p00932 Sweet War", "description": "Example\n\nInput\n\n2 5 4\n5 7\n4 8\n\n\nOutput\n\n8 7", "grammar": {"answer": null}}
{"name": "305_B. Continued Fractions", "description": "A continued fraction of height n is a fraction of form <image>. You are given two rational numbers, one is represented as <image> and the other one is represented as a finite fraction of height n. Check if they are equal.\n\nInput\n\nThe first line contains two space-separated integers p, q (1 ≤ q ≤ p ≤ 1018) — the numerator and the denominator of the first fraction.\n\nThe second line contains integer n (1 ≤ n ≤ 90) — the height of the second fraction. The third line contains n space-separated integers a1, a2, ..., an (1 ≤ ai ≤ 1018) — the continued fraction.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in С++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nOutput\n\nPrint \"YES\" if these fractions are equal and \"NO\" otherwise.\n\nExamples\n\nInput\n\n9 4\n2\n2 4\n\n\nOutput\n\nYES\n\n\nInput\n\n9 4\n3\n2 3 1\n\n\nOutput\n\nYES\n\n\nInput\n\n9 4\n3\n1 2 4\n\n\nOutput\n\nNO\n\nNote\n\nIn the first sample <image>.\n\nIn the second sample <image>.\n\nIn the third sample <image>.", "grammar": {"answer": null}}
{"name": "1416_A. k-Amazing Numbers", "description": "You are given an array a consisting of n integers numbered from 1 to n.\n\nLet's define the k-amazing number of the array as the minimum number that occurs in all of the subsegments of the array having length k (recall that a subsegment of a of length k is a contiguous part of a containing exactly k elements). If there is no integer occuring in all subsegments of length k for some value of k, then the k-amazing number is -1.\n\nFor each k from 1 to n calculate the k-amazing number of the array a.\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 1000) — the number of test cases. Then t test cases follow.\n\nThe first line of each test case contains one integer n (1 ≤ n ≤ 3 ⋅ 10^5) — the number of elements in the array. The second line contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ n) — the elements of the array. \n\nIt is guaranteed that the sum of n over all test cases does not exceed 3 ⋅ 10^5.\n\nOutput\n\nFor each test case print n integers, where the i-th integer is equal to the i-amazing number of the array.\n\nExample\n\nInput\n\n\n3\n5\n1 2 3 4 5\n5\n4 4 4 4 2\n6\n1 3 1 5 3 1\n\n\nOutput\n\n\n-1 -1 3 2 1 \n-1 4 4 4 2 \n-1 -1 1 1 1 1 ", "grammar": {"answer": null}}
{"name": "p03508 Code Festival Team Relay (Parallel) - Shock", "description": "You are given an undirected graph G. G has N vertices and M edges. The vertices are numbered from 1 through N, and the i-th edge (1 ≤ i ≤ M) connects Vertex a_i and b_i. G does not have self-loops and multiple edges.\n\nYou can repeatedly perform the operation of adding an edge between two vertices. However, G must not have self-loops or multiple edges as the result. Also, if Vertex 1 and 2 are connected directly or indirectly by edges, your body will be exposed to a voltage of 1000000007 volts. This must also be avoided.\n\nUnder these conditions, at most how many edges can you add? Note that Vertex 1 and 2 are never connected directly or indirectly in the beginning.\n\nConstraints\n\n* 2 ≤ N ≤ 10^5\n* 0 ≤ M ≤ 10^5\n* 1 ≤ a_i < b_i ≤ N\n* All pairs (a_i, b_i) are distinct.\n* Vertex 1 and 2 in G are not connected directly or indirectly by edges.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\na_1 b_1\n:\na_M b_M\n\n\nOutput\n\nPrint the maximum number of edges that can be added.\n\nExamples\n\nInput\n\n4 1\n1 3\n\n\nOutput\n\n2\n\n\nInput\n\n2 0\n\n\nOutput\n\n0\n\n\nInput\n\n9 6\n1 4\n1 8\n2 5\n3 6\n4 8\n5 7\n\n\nOutput\n\n12", "grammar": {"answer": null}}
{"name": "1370_A. Maximum GCD", "description": "Let's consider all integers in the range from 1 to n (inclusive).\n\nAmong all pairs of distinct integers in this range, find the maximum possible greatest common divisor of integers in pair. Formally, find the maximum value of gcd(a, b), where 1 ≤ a < b ≤ n.\n\nThe greatest common divisor, gcd(a, b), of two positive integers a and b is the biggest integer that is a divisor of both a and b.\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 100) — the number of test cases. The description of the test cases follows.\n\nThe only line of each test case contains a single integer n (2 ≤ n ≤ 10^6).\n\nOutput\n\nFor each test case, output the maximum value of gcd(a, b) among all 1 ≤ a < b ≤ n.\n\nExample\n\nInput\n\n\n2\n3\n5\n\n\nOutput\n\n\n1\n2\n\nNote\n\nIn the first test case, gcd(1, 2) = gcd(2, 3) = gcd(1, 3) = 1.\n\nIn the second test case, 2 is the maximum possible value, corresponding to gcd(2, 4).", "grammar": {"answer": null}}
{"name": "44_A. Indian Summer", "description": "Indian summer is such a beautiful time of the year! A girl named Alyona is walking in the forest and picking a bouquet from fallen leaves. Alyona is very choosy — she doesn't take a leaf if it matches the color and the species of the tree of one of the leaves she already has. Find out how many leaves Alyona has picked.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 100) — the number of leaves Alyona has found. The next n lines contain the leaves' descriptions. Each leaf is characterized by the species of the tree it has fallen from and by the color. The species of the trees and colors are given in names, consisting of no more than 10 lowercase Latin letters. A name can not be an empty string. The species of a tree and the color are given in each line separated by a space.\n\nOutput\n\nOutput the single number — the number of Alyona's leaves.\n\nExamples\n\nInput\n\n5\nbirch yellow\nmaple red\nbirch yellow\nmaple yellow\nmaple green\n\n\nOutput\n\n4\n\n\nInput\n\n3\noak yellow\noak yellow\noak yellow\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p00941 Do Geese See God?", "description": "Example\n\nInput\n\ncrc\n1\n\n\nOutput\n\ncrc", "grammar": {"answer": null}}
{"name": "401_E. Olympic Games", "description": "This problem was deleted from the contest, because it was used previously at another competition.\n\nInput\n\nOutput\n\nExamples\n\nInput\n\n1 1\n1 2 100\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p03296 AtCoder Grand Contest 026 - Colorful Slimes 2", "description": "Takahashi lives in another world. There are slimes (creatures) of 10000 colors in this world. Let us call these colors Color 1, 2, ..., 10000.\n\nTakahashi has N slimes, and they are standing in a row from left to right. The color of the i-th slime from the left is a_i. If two slimes of the same color are adjacent, they will start to combine themselves. Because Takahashi likes smaller slimes, he has decided to change the colors of some of the slimes with his magic.\n\nTakahashi can change the color of one slime to any of the 10000 colors by one spell. How many spells are required so that no slimes will start to combine themselves?\n\nConstraints\n\n* 2 \\leq N \\leq 100\n* 1 \\leq a_i \\leq N\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint the minimum number of spells required.\n\nExamples\n\nInput\n\n5\n1 1 2 2 2\n\n\nOutput\n\n2\n\n\nInput\n\n3\n1 2 1\n\n\nOutput\n\n0\n\n\nInput\n\n5\n1 1 1 1 1\n\n\nOutput\n\n2\n\n\nInput\n\n14\n1 2 2 3 3 3 4 4 4 4 1 2 3 4\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p00310 The Number of Participants", "description": "Welcome to PC Koshien, players. At PC Koshien, competitions are currently being held in a total of three categories: programming category, mobile category, and Ichimai's picture CG category.\n\nGiven the number of participants in each department, create a program that calculates the total number of participants.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\np m c\n\n\nThe input is one line, the number of participants in the programming department p (0 ≤ p ≤ 10000), the number of participants in the mobile department m (0 ≤ m ≤ 10000), the number of participants in the Ichimai picture CG department c (0) ≤ c ≤ 10000) is given.\n\nOutput\n\nOutput the total number of participants on one line.\n\nExamples\n\nInput\n\n10 10 20\n\n\nOutput\n\n40\n\n\nInput\n\n100 0 0\n\n\nOutput\n\n100\n\n\nInput\n\n1000 1000 1000\n\n\nOutput\n\n3000", "grammar": {"answer": null}}
{"name": "p02719 AtCoder Beginner Contest 161 - Replacing Integer", "description": "Given any integer x, Aoki can do the operation below.\n\nOperation: Replace x with the absolute difference of x and K.\n\nYou are given the initial value of an integer N. Find the minimum possible value taken by N after Aoki does the operation zero or more times.\n\nConstraints\n\n* 0 ≤ N ≤ 10^{18}\n* 1 ≤ K ≤ 10^{18}\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\n\n\nOutput\n\nPrint the minimum possible value taken by N after Aoki does the operation zero or more times.\n\nExamples\n\nInput\n\n7 4\n\n\nOutput\n\n1\n\n\nInput\n\n2 6\n\n\nOutput\n\n2\n\n\nInput\n\n1000000000000000000 1\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "384_A. Coder", "description": "Iahub likes chess very much. He even invented a new chess piece named Coder. A Coder can move (and attack) one square horizontally or vertically. More precisely, if the Coder is located at position (x, y), he can move to (or attack) positions (x + 1, y), (x–1, y), (x, y + 1) and (x, y–1).\n\nIahub wants to know how many Coders can be placed on an n × n chessboard, so that no Coder attacks any other Coder.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 1000).\n\nOutput\n\nOn the first line print an integer, the maximum number of Coders that can be placed on the chessboard.\n\nOn each of the next n lines print n characters, describing the configuration of the Coders. For an empty cell print an '.', and for a Coder print a 'C'.\n\nIf there are multiple correct answers, you can print any.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n2\nC.\n.C", "grammar": {"answer": null}}
{"name": "p01470 Four Arithmetic Operations", "description": "Problem statement\n\nThere is a rational number sequence $ X_0, X_1, X_2, ..., X_N $. Each term is defined as follows.\n\n\n1. $ X_0 = 0 $\n2. $ X_i = X_ {i-1} $ $ op_i $ $ Y_i $ ($ 1 \\ leq i \\ leq N $). However, $ op_i $ is $ + $, $ − $, $ × $, $ ÷ $ Either.\n\n\n\nFind $ X_N $.\n\nConstraint\n\n* $ 1 \\ leq N \\ leq 10 ^ 5 $\n* $ 1 \\ leq o_i \\ leq 4 $\n* $ -10 ^ 6 \\ leq Y_i \\ leq 10 ^ 6 $\n* If $ o_i = 4 $, then $ Y_i \\ neq 0 $\n* $ X_N $ is an integer greater than or equal to $ -2 ^ {31} $ and less than $ 2 ^ {31} $.\n\n\n\ninput\n\nInput follows the following format. All given numbers are integers.\n\n\n$ N $\n$ o_1 $ $ Y_1 $\n$ o_2 $ $ Y_2 $\n$ ... $\n$ o_N $ $ Y_N $\n\nWhen $ o_i = 1 $, $ op_i $ is +, when $ o_i = 2 $, $ op_i $ is −, when $ o_i = 3 $, $ op_i $ is ×, and when $ o_i = 4 $, $ op_i $ is ÷.\n\noutput\n\nPrint the value of $ X_N $ on one line.\n\nExample\n\nInput\n\n4\n1 1\n4 2\n2 4\n3 4\n\n\nOutput\n\n-14", "grammar": {"answer": null}}
{"name": "p03035 AtCoder Beginner Contest 127 - Ferris Wheel", "description": "Takahashi, who is A years old, is riding a Ferris wheel.\n\nIt costs B yen (B is an even number) to ride the Ferris wheel if you are 13 years old or older, but children between 6 and 12 years old (inclusive) can ride it for half the cost, and children who are 5 years old or younger are free of charge. (Yen is the currency of Japan.)\n\nFind the cost of the Ferris wheel for Takahashi.\n\nConstraints\n\n* 0 ≤ A ≤ 100\n* 2 ≤ B ≤ 1000\n* B is an even number.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nPrint the cost of the Ferris wheel for Takahashi.\n\nExamples\n\nInput\n\n30 100\n\n\nOutput\n\n100\n\n\nInput\n\n12 100\n\n\nOutput\n\n50\n\n\nInput\n\n0 100\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "171_A. Mysterious numbers - 1", "description": "\n\nInput\n\nThe input contains two integers a1, a2 (0 ≤ ai ≤ 109), separated by a single space.\n\nOutput\n\nOutput a single integer.\n\nExamples\n\nInput\n\n3 14\n\n\nOutput\n\n44\n\n\nInput\n\n27 12\n\n\nOutput\n\n48\n\n\nInput\n\n100 200\n\n\nOutput\n\n102", "grammar": {"answer": null}}
{"name": "p02310 Tangent to a Circle", "description": "Find the tangent lines between a point $p$ and a circle $c$.\n\nConstraints\n\n* $-1,000 \\leq px, py, cx, cy \\leq 1,000$\n* $1 \\leq r \\leq 1,000$\n* Distance between $p$ and the center of $c$ is greater than the radius of $c$.\n\nInput\n\nThe input is given in the following format.\n\n$px \\; py$\n$cx \\; cy \\; r$\n\n$px$ and $py$ represents the coordinate of the point $p$. $cx$, $cy$ and $r$ represents the center coordinate and radius of the circle $c$ respectively. All input values are given in integers.\n\nOutput\n\nPrint coordinates of the tangent points on the circle $c$ based on the following rules.\n\n* Print the coordinate with smaller $x$ first. In case of a tie, print the coordinate with smaller $y$ first.\n\n\n\nThe output values should be in a decimal fraction with an error less than 0.00001.\n\nExamples\n\nInput\n\n0 0\n2 2 2\n\n\nOutput\n\n0.0000000000 2.0000000000\n2.0000000000 0.0000000000\n\n\nInput\n\n-3 0\n2 2 2\n\n\nOutput\n\n0.6206896552 3.4482758621\n2.0000000000 0.0000000000", "grammar": {"answer": null}}
{"name": "784_D. Touchy-Feely Palindromes", "description": "\n\nInput\n\nThe only line of the input contains a string of digits. The length of the string is between 1 and 10, inclusive.\n\nOutput\n\nOutput \"Yes\" or \"No\".\n\nExamples\n\nInput\n\n373\n\n\nOutput\n\nYes\n\n\nInput\n\n121\n\n\nOutput\n\nNo\n\n\nInput\n\n436\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "52_A. 123-sequence", "description": "There is a given sequence of integers a1, a2, ..., an, where every number is from 1 to 3 inclusively. You have to replace the minimum number of numbers in it so that all the numbers in the sequence are equal to each other.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 106). The second line contains a sequence of integers a1, a2, ..., an (1 ≤ ai ≤ 3).\n\nOutput\n\nPrint the minimum number of replacements needed to be performed to make all the numbers in the sequence equal.\n\nExamples\n\nInput\n\n9\n1 3 2 2 2 1 1 2 3\n\n\nOutput\n\n5\n\nNote\n\nIn the example all the numbers equal to 1 and 3 should be replaced by 2.", "grammar": {"answer": null}}
{"name": "p02372 Height of a Tree", "description": "Given a tree T with non-negative weight, find the height of each node of the tree. For each node, the height is the distance to the most distant leaf from the node.\n\nConstraints\n\n* 1 ≤ n ≤ 10,000\n* 0 ≤ wi ≤ 1,000\n\nInput\n\n\nn\ns1 t1 w1\ns2 t2 w2\n:\nsn-1 tn-1 wn-1\n\n\nThe first line consists of an integer n which represents the number of nodes in the tree. Every node has a unique ID from 0 to n-1 respectively.\n\nIn the following n-1 lines, edges of the tree are given. si and ti represent end-points of the i-th edge (undirected) and wi represents the weight (distance) of the i-th edge.\n\nOutput\n\nThe output consists of n lines. Print the height of each node 0, 1, 2, ..., n-1 in order.\n\nExample\n\nInput\n\n4\n0 1 2\n1 2 1\n1 3 3\n\n\nOutput\n\n5\n3\n4\n5", "grammar": {"answer": null}}
{"name": "p00151 Grid", "description": "There is a n × n grid D where each cell contains either 1 or 0.\n\nYour task is to create a program that takes the gird data as input and computes the greatest number of consecutive 1s in either vertical, horizontal, or diagonal direction.\n\nFor example, the consecutive 1s with greatest number in the figure below is circled by the dashed-line.\n\n<image>\n\nThe size of the grid n is an integer where 2 ≤ n ≤ 255.\n\n\n\nInput\n\nThe input is a sequence of datasets. The end of the input is indicated by a line containing one zero. Each dataset is formatted as follows:\n\n\nn\nD11 D12 ... D1n\nD21 D22 ... D2n\n.\n.\nDn1 Dn2 ... Dnn\n\n\nOutput\n\nFor each dataset, print the greatest number of consecutive 1s.\n\nExample\n\nInput\n\n5\n00011\n00101\n01000\n10101\n00010\n8\n11000001\n10110111\n01100111\n01111010\n11111111\n01011010\n10100010\n10000001\n2\n01\n00\n3\n000\n000\n000\n0\n\n\nOutput\n\n4\n8\n1\n0", "grammar": {"answer": null}}
{"name": "p03867 AtCoder Regular Contest 064 - Rotated Palindromes", "description": "Takahashi and Aoki are going to together construct a sequence of integers.\n\nFirst, Takahashi will provide a sequence of integers a, satisfying all of the following conditions:\n\n* The length of a is N.\n* Each element in a is an integer between 1 and K, inclusive.\n* a is a palindrome, that is, reversing the order of elements in a will result in the same sequence as the original.\n\n\n\nThen, Aoki will perform the following operation an arbitrary number of times:\n\n* Move the first element in a to the end of a.\n\n\n\nHow many sequences a can be obtained after this procedure, modulo 10^9+7?\n\nConstraints\n\n* 1≤N≤10^9\n* 1≤K≤10^9\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN K\n\n\nOutput\n\nPrint the number of the sequences a that can be obtained after the procedure, modulo 10^9+7.\n\nExamples\n\nInput\n\n4 2\n\n\nOutput\n\n6\n\n\nInput\n\n1 10\n\n\nOutput\n\n10\n\n\nInput\n\n6 3\n\n\nOutput\n\n75\n\n\nInput\n\n1000000000 1000000000\n\n\nOutput\n\n875699961", "grammar": {"answer": null}}
{"name": "p00133 Rotation of a Pattern", "description": "Create a program that rotates the pattern of 8 characters x 8 lines clockwise by 90 degrees, 180 degrees, and 270 degrees and outputs it.\n\n\n\nInput\n\nA pattern consisting of 8 characters x 8 lines is given. Characters consist of alphanumeric characters, half-width pound'#', and asterisk'*'.\n\nOutput\n\nOutput the rotated pattern in the following format.\n\n\n90 (fixed half-width numbers)\nPattern rotated 90 degrees\n180 (fixed half-width numbers)\n180 degree rotated pattern\n270 (fixed half-width numbers)\nPattern rotated 270 degrees\n\n\nExamples\n\nInput\n\n#*******\n#*******\n#*******\n#*******\n#*******\n#*******\n#*******\n########\n\n\nOutput\n\n90\n########\n#*******\n#*******\n#*******\n#*******\n#*******\n#*******\n#*******\n180\n########\n*******#\n*******#\n*******#\n*******#\n*******#\n*******#\n*******#\n270\n*******#\n*******#\n*******#\n*******#\n*******#\n*******#\n*******#\n########\n\n\nInput\n\n*******\n*******\n*******\n*******\n*******\n*******\n*******\n\n\nOutput\n\n90\n\n*******\n*******\n*******\n*******\n*******\n*******\n*******\n180\n\n*******#\n*******#\n*******#\n*******#\n*******#\n*******#\n*******#\n270\n*******#\n*******#\n*******#\n*******#\n*******#\n*******#\n*******#", "grammar": {"answer": null}}
{"name": "248_B. Chilly Willy", "description": "Chilly Willy loves playing with numbers. He only knows prime numbers that are digits yet. These numbers are 2, 3, 5 and 7. But Willy grew rather bored of such numbers, so he came up with a few games that were connected with them.\n\nChilly Willy wants to find the minimum number of length n, such that it is simultaneously divisible by all numbers Willy already knows (2, 3, 5 and 7). Help him with that.\n\nA number's length is the number of digits in its decimal representation without leading zeros.\n\nInput\n\nA single input line contains a single integer n (1 ≤ n ≤ 105).\n\nOutput\n\nPrint a single integer — the answer to the problem without leading zeroes, or \"-1\" (without the quotes), if the number that meet the problem condition does not exist.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n-1\n\n\nInput\n\n5\n\n\nOutput\n\n10080", "grammar": {"answer": null}}
{"name": "p02245 8 Puzzle", "description": "The goal of the 8 puzzle problem is to complete pieces on $3 \\times 3$ cells where one of the cells is empty space.\n\nIn this problem, the space is represented by 0 and pieces are represented by integers from 1 to 8 as shown below.\n\n\n1 3 0\n4 2 5\n7 8 6\n\n\nYou can move a piece toward the empty space at one step. Your goal is to make the pieces the following configuration in the shortest move (fewest steps).\n\n\n1 2 3\n4 5 6\n7 8 0\n\n\nWrite a program which reads an initial state of the puzzle and prints the fewest steps to solve the puzzle.\n\nConstraints\n\n* There is a solution.\n\nInput\n\nThe $3 \\times 3$ integers denoting the pieces or space are given.\n\nOutput\n\nPrint the fewest steps in a line.\n\nExample\n\nInput\n\n1 3 0\n4 2 5\n7 8 6\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "798_A. Mike and palindrome", "description": "Mike has a string s consisting of only lowercase English letters. He wants to change exactly one character from the string so that the resulting one is a palindrome. \n\nA palindrome is a string that reads the same backward as forward, for example strings \"z\", \"aaa\", \"aba\", \"abccba\" are palindromes, but strings \"codeforces\", \"reality\", \"ab\" are not.\n\nInput\n\nThe first and single line contains string s (1 ≤ |s| ≤ 15).\n\nOutput\n\nPrint \"YES\" (without quotes) if Mike can change exactly one character so that the resulting string is palindrome or \"NO\" (without quotes) otherwise. \n\nExamples\n\nInput\n\nabccaa\n\n\nOutput\n\nYES\n\n\nInput\n\nabbcca\n\n\nOutput\n\nNO\n\n\nInput\n\nabcda\n\n\nOutput\n\nYES", "grammar": {"answer": null}}
{"name": "p02621 AtCoder Beginner Contest 172 - Calc", "description": "Given an integer a as input, print the value a + a^2 + a^3.\n\nConstraints\n\n* 1 \\leq a \\leq 10\n* a is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\na\n\n\nOutput\n\nPrint the value a + a^2 + a^3 as an integer.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n14\n\n\nInput\n\n10\n\n\nOutput\n\n1110", "grammar": {"answer": null}}
{"name": "1470_F. Strange Covering", "description": "You are given n points on a plane. \n\nPlease find the minimum sum of areas of two axis-aligned rectangles, such that each point is contained in at least one of these rectangles.\n\nNote that the chosen rectangles can be degenerate. Rectangle contains all the points that lie inside it or on its boundary.\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 2 ⋅ 10^5) — the number of test cases.\n\nThe first line of each test case contains a single integer n (1 ≤ n ≤ 2 ⋅ 10^5) — the number of points.\n\nThe following n lines contain the coordinates of the points x_i and y_i (0 ≤ x_i, y_i ≤ 10^9). It is guaranteed that the points are distinct.\n\nIt is guaranteed that the sum of values n over all test cases does not exceed 2⋅10^5.\n\nOutput\n\nFor each test case print one integer — the minimum sum of areas.\n\nExample\n\nInput\n\n\n3\n2\n9 1\n1 6\n2\n8 10\n0 7\n4\n0 0\n1 1\n9 9\n10 10\n\n\nOutput\n\n\n0\n0\n2\n\nNote\n\nIn the first two test cases the answer consists of 2 degenerate rectangles. In the third test case one of the possible answers consists of two rectangles 1 × 1 with bottom left corners (0,0) and (9,9).", "grammar": {"answer": null}}
{"name": "582_B. Once Again...", "description": "You are given an array of positive integers a1, a2, ..., an × T of length n × T. We know that for any i > n it is true that ai = ai - n. Find the length of the longest non-decreasing sequence of the given array.\n\nInput\n\nThe first line contains two space-separated integers: n, T (1 ≤ n ≤ 100, 1 ≤ T ≤ 107). The second line contains n space-separated integers a1, a2, ..., an (1 ≤ ai ≤ 300).\n\nOutput\n\nPrint a single number — the length of a sought sequence.\n\nExamples\n\nInput\n\n4 3\n3 1 4 2\n\n\nOutput\n\n5\n\nNote\n\nThe array given in the sample looks like that: 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2. The elements in bold form the largest non-decreasing subsequence. ", "grammar": {"answer": null}}
{"name": "p02773 AtCoder Beginner Contest 155 - Poll", "description": "We have N voting papers. The i-th vote (1 \\leq i \\leq N) has the string S_i written on it.\n\nPrint all strings that are written on the most number of votes, in lexicographical order.\n\nConstraints\n\n* 1 \\leq N \\leq 2 \\times 10^5\n* S_i (1 \\leq i \\leq N) are strings consisting of lowercase English letters.\n* The length of S_i (1 \\leq i \\leq N) is between 1 and 10 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS_1\n:\nS_N\n\n\nOutput\n\nPrint all strings in question in lexicographical order.\n\nExamples\n\nInput\n\n7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n\n\nOutput\n\nbeet\nvet\n\n\nInput\n\n8\nbuffalo\nbuffalo\nbuffalo\nbuffalo\nbuffalo\nbuffalo\nbuffalo\nbuffalo\n\n\nOutput\n\nbuffalo\n\n\nInput\n\n7\nbass\nbass\nkick\nkick\nbass\nkick\nkick\n\n\nOutput\n\nkick\n\n\nInput\n\n4\nushi\ntapu\nnichia\nkun\n\n\nOutput\n\nkun\nnichia\ntapu\nushi", "grammar": {"answer": null}}
{"name": "1102_A. Integer Sequence Dividing", "description": "You are given an integer sequence 1, 2, ..., n. You have to divide it into two sets A and B in such a way that each element belongs to exactly one set and |sum(A) - sum(B)| is minimum possible.\n\nThe value |x| is the absolute value of x and sum(S) is the sum of elements of the set S.\n\nInput\n\nThe first line of the input contains one integer n (1 ≤ n ≤ 2 ⋅ 10^9).\n\nOutput\n\nPrint one integer — the minimum possible value of |sum(A) - sum(B)| if you divide the initial sequence 1, 2, ..., n into two sets A and B.\n\nExamples\n\nInput\n\n\n3\n\n\nOutput\n\n\n0\n\n\nInput\n\n\n5\n\n\nOutput\n\n\n1\n\n\nInput\n\n\n6\n\n\nOutput\n\n\n1\n\nNote\n\nSome (not all) possible answers to examples:\n\nIn the first example you can divide the initial sequence into sets A = \\{1, 2\\} and B = \\{3\\} so the answer is 0.\n\nIn the second example you can divide the initial sequence into sets A = \\{1, 3, 4\\} and B = \\{2, 5\\} so the answer is 1.\n\nIn the third example you can divide the initial sequence into sets A = \\{1, 4, 5\\} and B = \\{2, 3, 6\\} so the answer is 1.", "grammar": {"answer": null}}
{"name": "830_D. Singer House", "description": "It is known that passages in Singer house are complex and intertwined. Let's define a Singer k-house as a graph built by the following process: take complete binary tree of height k and add edges from each vertex to all its successors, if they are not yet present.\n\n<image> Singer 4-house\n\nCount the number of non-empty paths in Singer k-house which do not pass the same vertex twice. Two paths are distinct if the sets or the orders of visited vertices are different. Since the answer can be large, output it modulo 109 + 7.\n\nInput\n\nThe only line contains single integer k (1 ≤ k ≤ 400).\n\nOutput\n\nPrint single integer — the answer for the task modulo 109 + 7.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n9\n\n\nInput\n\n3\n\n\nOutput\n\n245\n\n\nInput\n\n20\n\n\nOutput\n\n550384565\n\nNote\n\nThere are 9 paths in the first example (the vertices are numbered on the picture below): 1, 2, 3, 1-2, 2-1, 1-3, 3-1, 2-1-3, 3-1-2.\n\n<image> Singer 2-house", "grammar": {"answer": null}}
{"name": "p03889 CODE FESTIVAL 2016 Relay (Parallel) - Mirror String", "description": "You are given a string S consisting of letters `b`, `d`, `p` and `q`. Determine whether S is a mirror string.\n\nHere, a mirror string is a string S such that the following sequence of operations on S results in the same string S:\n\n1. Reverse the order of the characters in S.\n\n2. Replace each occurrence of `b` by `d`, `d` by `b`, `p` by `q`, and `q` by `p`, simultaneously.\n\nConstraints\n\n* 1 \\leq |S| \\leq 10^5\n* S consists of letters `b`, `d`, `p`, and `q`.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nIf S is a mirror string, print `Yes`. Otherwise, print `No`.\n\nExamples\n\nInput\n\npdbq\n\n\nOutput\n\nYes\n\n\nInput\n\nppqb\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "466_B. Wonder Room", "description": "The start of the new academic year brought about the problem of accommodation students into dormitories. One of such dormitories has a a × b square meter wonder room. The caretaker wants to accommodate exactly n students there. But the law says that there must be at least 6 square meters per student in a room (that is, the room for n students must have the area of at least 6n square meters). The caretaker can enlarge any (possibly both) side of the room by an arbitrary positive integer of meters. Help him change the room so as all n students could live in it and the total area of the room was as small as possible.\n\nInput\n\nThe first line contains three space-separated integers n, a and b (1 ≤ n, a, b ≤ 109) — the number of students and the sizes of the room.\n\nOutput\n\nPrint three integers s, a1 and b1 (a ≤ a1; b ≤ b1) — the final area of the room and its sizes. If there are multiple optimal solutions, print any of them.\n\nExamples\n\nInput\n\n3 3 5\n\n\nOutput\n\n18\n3 6\n\n\nInput\n\n2 4 4\n\n\nOutput\n\n16\n4 4", "grammar": {"answer": null}}
{"name": "1231_A. Dawid and Bags of Candies", "description": "Dawid has four bags of candies. The i-th of them contains a_i candies. Also, Dawid has two friends. He wants to give each bag to one of his two friends. Is it possible to distribute the bags in such a way that each friend receives the same amount of candies in total?\n\nNote, that you can't keep bags for yourself or throw them away, each bag should be given to one of the friends.\n\nInput\n\nThe only line contains four integers a_1, a_2, a_3 and a_4 (1 ≤ a_i ≤ 100) — the numbers of candies in each bag.\n\nOutput\n\nOutput YES if it's possible to give the bags to Dawid's friends so that both friends receive the same amount of candies, or NO otherwise. Each character can be printed in any case (either uppercase or lowercase).\n\nExamples\n\nInput\n\n\n1 7 11 5\n\n\nOutput\n\n\nYES\n\n\nInput\n\n\n7 3 2 5\n\n\nOutput\n\n\nNO\n\nNote\n\nIn the first sample test, Dawid can give the first and the third bag to the first friend, and the second and the fourth bag to the second friend. This way, each friend will receive 12 candies.\n\nIn the second sample test, it's impossible to distribute the bags.", "grammar": {"answer": null}}
{"name": "p04039 AtCoder Regular Contest 058 - Iroha's Obsession", "description": "Iroha is very particular about numbers. There are K digits that she dislikes: D_1, D_2, ..., D_K.\n\nShe is shopping, and now paying at the cashier. Her total is N yen (the currency of Japan), thus she has to hand at least N yen to the cashier (and possibly receive the change).\n\nHowever, as mentioned before, she is very particular about numbers. When she hands money to the cashier, the decimal notation of the amount must not contain any digits that she dislikes. Under this condition, she will hand the minimum amount of money.\n\nFind the amount of money that she will hand to the cashier.\n\nConstraints\n\n* 1 ≦ N < 10000\n* 1 ≦ K < 10\n* 0 ≦ D_1 < D_2 < … < D_K≦9\n* \\\\{D_1,D_2,...,D_K\\\\} ≠ \\\\{1,2,3,4,5,6,7,8,9\\\\}\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN K\nD_1 D_2 … D_K\n\n\nOutput\n\nPrint the amount of money that Iroha will hand to the cashier.\n\nExamples\n\nInput\n\n1000 8\n1 3 4 5 6 7 8 9\n\n\nOutput\n\n2000\n\n\nInput\n\n9999 1\n0\n\n\nOutput\n\n9999", "grammar": {"answer": null}}
{"name": "p00393 Beautiful Sequence", "description": "Alice is spending his time on an independent study to apply to the Nationwide Mathematics Contest. This year’s theme is \"Beautiful Sequence.\" As Alice is interested in the working of computers, she wants to create a beautiful sequence using only 0 and 1. She defines a \"Beautiful\" sequence of length $N$ that consists only of 0 and 1 if it includes $M$ successive array of 1s as its sub-sequence.\n\nUsing his skills in programming, Alice decided to calculate how many \"Beautiful sequences\" she can generate and compile a report on it.\n\nMake a program to evaluate the possible number of \"Beautiful sequences\" given the sequence length $N$ and sub-sequence length $M$ that consists solely of 1. As the answer can be extremely large, divide it by $1,000,000,007 (= 10^9 + 7)$ and output the remainder.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\n$N$ $M$\n\n\nThe input line provides the length of sequence $N$ ($1 \\leq N \\leq 10^5$) and the length $M$ ($1 \\leq M \\leq N$) of the array that solely consists of 1s.\n\nOutput\n\nOutput the number of Beautiful sequences in a line.\n\nExamples\n\nInput\n\n4 3\n\n\nOutput\n\n3\n\n\nInput\n\n4 2\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "891_B. Gluttony", "description": "You are given an array a with n distinct integers. Construct an array b by permuting a such that for every non-empty subset of indices S = {x1, x2, ..., xk} (1 ≤ xi ≤ n, 0 < k < n) the sums of elements on that positions in a and b are different, i. e. \n\n<image>\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 22) — the size of the array.\n\nThe second line contains n space-separated distinct integers a1, a2, ..., an (0 ≤ ai ≤ 109) — the elements of the array.\n\nOutput\n\nIf there is no such array b, print -1.\n\nOtherwise in the only line print n space-separated integers b1, b2, ..., bn. Note that b must be a permutation of a.\n\nIf there are multiple answers, print any of them.\n\nExamples\n\nInput\n\n2\n1 2\n\n\nOutput\n\n2 1 \n\n\nInput\n\n4\n1000 100 10 1\n\n\nOutput\n\n100 1 1000 10\n\nNote\n\nAn array x is a permutation of y, if we can shuffle elements of y such that it will coincide with x.\n\nNote that the empty subset and the subset containing all indices are not counted.", "grammar": {"answer": null}}
{"name": "1145_B. Kanban Numbers", "description": "\n\nInput\n\nThe input contains a single integer a (1 ≤ a ≤ 99).\n\nOutput\n\nOutput \"YES\" or \"NO\".\n\nExamples\n\nInput\n\n\n5\n\n\nOutput\n\n\nYES\n\n\nInput\n\n\n13\n\n\nOutput\n\n\nNO\n\n\nInput\n\n\n24\n\n\nOutput\n\n\nNO\n\n\nInput\n\n\n46\n\n\nOutput\n\n\nYES", "grammar": {"answer": null}}
{"name": "p03095 AtCoder Grand Contest 031 - Colorful Subsequence", "description": "You are given a string S of length N. Among its subsequences, count the ones such that all characters are different, modulo 10^9+7. Two subsequences are considered different if their characters come from different positions in the string, even if they are the same as strings.\n\nHere, a subsequence of a string is a concatenation of one or more characters from the string without changing the order.\n\nConstraints\n\n* 1 \\leq N \\leq 100000\n* S consists of lowercase English letters.\n* |S|=N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS\n\n\nOutput\n\nPrint the number of the subsequences such that all characters are different, modulo 10^9+7.\n\nExamples\n\nInput\n\n4\nabcd\n\n\nOutput\n\n15\n\n\nInput\n\n3\nbaa\n\n\nOutput\n\n5\n\n\nInput\n\n5\nabcab\n\n\nOutput\n\n17", "grammar": {"answer": null}}
{"name": "134_B. Pairs of Numbers", "description": "Let's assume that we have a pair of numbers (a, b). We can get a new pair (a + b, b) or (a, a + b) from the given pair in a single step.\n\nLet the initial pair of numbers be (1,1). Your task is to find number k, that is, the least number of steps needed to transform (1,1) into the pair where at least one number equals n.\n\nInput\n\nThe input contains the only integer n (1 ≤ n ≤ 106).\n\nOutput\n\nPrint the only integer k.\n\nExamples\n\nInput\n\n5\n\n\nOutput\n\n3\n\n\nInput\n\n1\n\n\nOutput\n\n0\n\nNote\n\nThe pair (1,1) can be transformed into a pair containing 5 in three moves: (1,1)  →  (1,2)  →  (3,2)  →  (5,2).", "grammar": {"answer": null}}
{"name": "p02169 Count Words", "description": "Problem\n\nThere are $ M $ type characters. Use them to create a string of length $ N $. How many strings are used that have $ K $ or more? Find too much divided by $ 998244353 $.\n\nHere, the difference between two strings of length $ N $ is defined as follows.\n\n* If the two strings are $ S = S_1S_2 \\ ldots S_N $, $ T = T_1T_2 \\ ldots T_N $, then $ i $$ (1 \\ leq i \\ leq N) becomes $ S_i \\ neq T_i $ ) $ Exists.\n\nConstraints\n\nThe input satisfies the following conditions.\n\n* $ 1 \\ leq M \\ leq 10 ^ {18} $\n* $ 1 \\ leq N \\ leq 10 ^ {18} $\n* $ 1 \\ leq K \\ leq 1000 $\n* All inputs are integers\n\nInput\n\nThe input is given in the following format.\n\n\n$ M $ $ N $ $ K $\n\n\n$ M, N, K $ are given on one line, separated by blanks.\n\nOutput\n\nOutput the remainder of the number of characters used in a string of length $ N $ that is greater than or equal to $ K $ divided by $ 998244353 $.\n\nExamples\n\nInput\n\n2 10 1\n\n\nOutput\n\n1024\n\n\nInput\n\n1 1 2\n\n\nOutput\n\n0\n\n\nInput\n\n5 10 3\n\n\nOutput\n\n9755400\n\n\nInput\n\n7 8 3\n\n\nOutput\n\n5759460\n\n\nInput\n\n1000000000000000000 1000000000000000000 1000\n\n\nOutput\n\n133611974", "grammar": {"answer": null}}
{"name": "p00936 Squeeze the Cylinders", "description": "Example\n\nInput\n\n2\n10 10\n\n\nOutput\n\n40.00000000", "grammar": {"answer": null}}
{"name": "p03150 KEYENCE Programming Contest 2019 - KEYENCE String", "description": "A string is called a KEYENCE string when it can be changed to `keyence` by removing its contiguous substring (possibly empty) only once.\n\nGiven a string S consisting of lowercase English letters, determine if S is a KEYENCE string.\n\nConstraints\n\n* The length of S is between 7 and 100 (inclusive).\n* S consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nIf S is a KEYENCE string, print `YES`; otherwise, print `NO`.\n\nExamples\n\nInput\n\nkeyofscience\n\n\nOutput\n\nYES\n\n\nInput\n\nmpyszsbznf\n\n\nOutput\n\nNO\n\n\nInput\n\nashlfyha\n\n\nOutput\n\nNO\n\n\nInput\n\nkeyence\n\n\nOutput\n\nYES", "grammar": {"answer": null}}
{"name": "p02391 Small", "description": "Write a program which prints small/large/equal relation of given two integers a and b.\n\nConstraints\n\n* -1000 ≤ a, b ≤ 1000\n\nInput\n\nTwo integers a and b separated by a single space are given in a line.\n\nOutput\n\nFor given two integers a and b, print\n\n\na < b\n\n\nif a is less than b,\n\n\na > b\n\n\nif a is greater than b, and\n\n\na == b\n\n\nif a equals to b.\n\nExamples\n\nInput\n\n1 2\n\n\nOutput\n\na\n\n\nInput\n\n4 3\n\n\nOutput\n\na > b\n\n\nInput\n\n5 5\n\n\nOutput\n\na == b", "grammar": {"answer": null}}
{"name": "p01078 Star", "description": "Problem\n\nFind the area of ​​a regular N / K polygon inscribed in a circle with a radius of 1.\n\nHowever, a regular N / K polygon is defined as \"the outermost figure that takes N points on the circumference at equal intervals and connects each point every K-1\".\n\nFor example, a 5/2 polygon can be drawn as follows. First, take five points at equal intervals on the circumference of radius 1.\n\nSample Input 2 diagram\n\n\nNext, connect each point every other 2-1 = 1.\n\nSample Input 2 diagram\n\n\nThe outermost figure is a regular 5/2 square.\n\nSample Input 2 diagram\n\nConstraints\n\nThe input satisfies the following constraints.\n\n* 5 ≤ N ≤ 106\n* 1 <K <N / 2\n* N and K are integers that are relatively prime\n\nInput\n\nThe input is given in the following format.\n\n\nN K\n\n\nTwo integers N and K are given on one line.\n\nOutput\n\nOutput the area of ​​a regular N / K polygon inscribed in a circle with a radius of 1 on one line. An error of 10-5 or less is acceptable.\n\nExamples\n\nInput\n\n5 2\n\n\nOutput\n\n1.12256994\n\n\nInput\n\n20 3\n\n\nOutput\n\n2.93114293\n\n\nInput\n\n7 3\n\n\nOutput\n\n1.08395920\n\n\nInput\n\n100000 3\n\n\nOutput\n\n3.14159265", "grammar": {"answer": null}}
{"name": "p03093 AtCoder Grand Contest 032 - Modulo Pairing", "description": "Let M be a positive integer.\n\nYou are given 2 N integers a_1, a_2, \\ldots, a_{2 N}, where 0 \\leq a_i < M for each i.\n\nConsider dividing the 2 N integers into N pairs. Here, each integer must belong to exactly one pair.\n\nWe define the ugliness of a pair (x, y) as (x + y) \\mod M. Let Z be the largest ugliness of the N pairs. Find the minimum possible value of Z.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 10^9\n* 0 \\leq a_i < M\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\na_1 a_2 \\cdots a_{2N}\n\n\nOutput\n\nPrint the minimum possible value of Z, where Z is the largest ugliness of the N pairs.\n\nExamples\n\nInput\n\n3 10\n0 2 3 4 5 9\n\n\nOutput\n\n5\n\n\nInput\n\n2 10\n1 9 1 9\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03186 AtCoder Grand Contest 030 - Poisonous Cookies", "description": "Takahashi has A untasty cookies containing antidotes, B tasty cookies containing antidotes and C tasty cookies containing poison.\n\nEating a cookie containing poison results in a stomachache, and eating a cookie containing poison while having a stomachache results in a death. As he wants to live, he cannot eat one in such a situation. Eating a cookie containing antidotes while having a stomachache cures it, and there is no other way to cure stomachaches.\n\nFind the maximum number of tasty cookies that Takahashi can eat.\n\nConstraints\n\n* 0 \\leq A,B,C \\leq 10^9\n* A,B and C are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B C\n\n\nOutput\n\nPrint the maximum number of tasty cookies that Takahashi can eat.\n\nExamples\n\nInput\n\n3 1 4\n\n\nOutput\n\n5\n\n\nInput\n\n5 2 9\n\n\nOutput\n\n10\n\n\nInput\n\n8 8 1\n\n\nOutput\n\n9", "grammar": {"answer": null}}
{"name": "p03381 AtCoder Regular Contest 095 - Many Medians", "description": "When l is an odd number, the median of l numbers a_1, a_2, ..., a_l is the (\\frac{l+1}{2})-th largest value among a_1, a_2, ..., a_l.\n\nYou are given N numbers X_1, X_2, ..., X_N, where N is an even number. For each i = 1, 2, ..., N, let the median of X_1, X_2, ..., X_N excluding X_i, that is, the median of X_1, X_2, ..., X_{i-1}, X_{i+1}, ..., X_N be B_i.\n\nFind B_i for each i = 1, 2, ..., N.\n\nConstraints\n\n* 2 \\leq N \\leq 200000\n* N is even.\n* 1 \\leq X_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nX_1 X_2 ... X_N\n\n\nOutput\n\nPrint N lines. The i-th line should contain B_i.\n\nExamples\n\nInput\n\n4\n2 4 4 3\n\n\nOutput\n\n4\n3\n3\n4\n\n\nInput\n\n2\n1 2\n\n\nOutput\n\n2\n1\n\n\nInput\n\n6\n5 5 4 4 3 3\n\n\nOutput\n\n4\n4\n4\n4\n4\n4", "grammar": {"answer": null}}
{"name": "p02777 AtCoder Beginner Contest 154 - Remaining Balls", "description": "We have A balls with the string S written on each of them and B balls with the string T written on each of them.\nFrom these balls, Takahashi chooses one with the string U written on it and throws it away.\nFind the number of balls with the string S and balls with the string T that we have now.\n\nConstraints\n\n* S, T, and U are strings consisting of lowercase English letters.\n* The lengths of S and T are each between 1 and 10 (inclusive).\n* S \\not= T\n* S=U or T=U.\n* 1 \\leq A,B \\leq 10\n* A and B are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS T\nA B\nU\n\n\nOutput\n\nPrint the answer, with space in between.\n\nExamples\n\nInput\n\nred blue\n3 4\nred\n\n\nOutput\n\n2 4\n\n\nInput\n\nred blue\n5 5\nblue\n\n\nOutput\n\n5 4", "grammar": {"answer": null}}
{"name": "1312_B. Bogosort", "description": "You are given an array a_1, a_2, ... , a_n. Array is good if for each pair of indexes i < j the condition j - a_j ≠ i - a_i holds. Can you shuffle this array so that it becomes good? To shuffle an array means to reorder its elements arbitrarily (leaving the initial order is also an option).\n\nFor example, if a = [1, 1, 3, 5], then shuffled arrays [1, 3, 5, 1], [3, 5, 1, 1] and [5, 3, 1, 1] are good, but shuffled arrays [3, 1, 5, 1], [1, 1, 3, 5] and [1, 1, 5, 3] aren't.\n\nIt's guaranteed that it's always possible to shuffle an array to meet this condition.\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 100) — the number of test cases.\n\nThe first line of each test case contains one integer n (1 ≤ n ≤ 100) — the length of array a.\n\nThe second line of each test case contains n integers a_1, a_2, ... , a_n (1 ≤ a_i ≤ 100).\n\nOutput\n\nFor each test case print the shuffled version of the array a which is good.\n\nExample\n\nInput\n\n\n3\n1\n7\n4\n1 1 3 5\n6\n3 2 1 5 6 4\n\n\nOutput\n\n\n7\n1 5 1 3\n2 4 6 1 3 5", "grammar": {"answer": null}}
{"name": "p02250 Multiple String Matching", "description": "Determine whether a text T includes a pattern P. Your program should answer for given queries consisting of P_i.\n\nConstraints\n\n* 1 ≤ length of T ≤ 1000000\n* 1 ≤ length of P_i ≤ 1000\n* 1 ≤ Q ≤ 10000\n* The input consists of alphabetical characters and digits\n\nInput\n\nIn the first line, a text T is given. In the second line, an integer Q denoting the number of queries is given. In the following Q lines, the patterns P_i are given respectively.\n\nOutput\n\nFor each question, print 1 if the text includes P_i, or print 0 otherwise.\n\nExample\n\nInput\n\naabaaa\n4\naa\nba\nbb\nxyz\n\n\nOutput\n\n1\n1\n0\n0", "grammar": {"answer": null}}
{"name": "321_D. Ciel and Flipboard", "description": "Fox Ciel has a board with n rows and n columns, there is one integer in each cell.\n\nIt's known that n is an odd number, so let's introduce <image>. Fox Ciel can do the following operation many times: she choose a sub-board with size x rows and x columns, then all numbers in it will be multiplied by -1.\n\nReturn the maximal sum of numbers in the board that she can get by these operations.\n\nInput\n\nThe first line contains an integer n, (1 ≤ n ≤ 33, and n is an odd integer) — the size of the board.\n\nEach of the next n lines contains n integers — the numbers in the board. Each number doesn't exceed 1000 by its absolute value.\n\nOutput\n\nOutput a single integer: the maximal sum of numbers in the board that can be accomplished.\n\nExamples\n\nInput\n\n3\n-1 -1 1\n-1 1 -1\n1 -1 -1\n\n\nOutput\n\n9\n\n\nInput\n\n5\n-2 0 0 0 -2\n0 -2 0 -2 0\n0 0 -2 0 0\n0 -2 0 -2 0\n-2 0 0 0 -2\n\n\nOutput\n\n18\n\nNote\n\nIn the first test, we can apply this operation twice: first on the top left 2 × 2 sub-board, then on the bottom right 2 × 2 sub-board. Then all numbers will become positive.\n\n<image>", "grammar": {"answer": null}}
{"name": "p02657 AtCoder Beginner Contest 169 - Multiplication 1", "description": "Compute A \\times B.\n\nConstraints\n\n* 1 \\leq A \\leq 100\n* 1 \\leq B \\leq 100\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nPrint the value A \\times B as an integer.\n\nExamples\n\nInput\n\n2 5\n\n\nOutput\n\n10\n\n\nInput\n\n100 100\n\n\nOutput\n\n10000", "grammar": {"answer": null}}
{"name": "1201_B. Zero Array", "description": "You are given an array a_1, a_2, …, a_n.\n\nIn one operation you can choose two elements a_i and a_j (i ≠ j) and decrease each of them by one.\n\nYou need to check whether it is possible to make all the elements equal to zero or not.\n\nInput\n\nThe first line contains a single integer n (2 ≤ n ≤ 10^5) — the size of the array.\n\nThe second line contains n integers a_1, a_2, …, a_n (1 ≤ a_i ≤ 10^9) — the elements of the array.\n\nOutput\n\nPrint \"YES\" if it is possible to make all elements zero, otherwise print \"NO\".\n\nExamples\n\nInput\n\n\n4\n1 1 2 2\n\n\nOutput\n\n\nYES\n\nInput\n\n\n6\n1 2 3 4 5 6\n\n\nOutput\n\n\nNO\n\nNote\n\nIn the first example, you can make all elements equal to zero in 3 operations: \n\n  * Decrease a_1 and a_2, \n  * Decrease a_3 and a_4, \n  * Decrease a_3 and a_4 \n\n\n\nIn the second example, one can show that it is impossible to make all elements equal to zero.", "grammar": {"answer": null}}
{"name": "483_C. Diverse Permutation", "description": "Permutation p is an ordered set of integers p1, p2, ..., pn, consisting of n distinct positive integers not larger than n. We'll denote as n the length of permutation p1, p2, ..., pn.\n\nYour task is to find such permutation p of length n, that the group of numbers |p1 - p2|, |p2 - p3|, ..., |pn - 1 - pn| has exactly k distinct elements.\n\nInput\n\nThe single line of the input contains two space-separated positive integers n, k (1 ≤ k < n ≤ 105).\n\nOutput\n\nPrint n integers forming the permutation. If there are multiple answers, print any of them.\n\nExamples\n\nInput\n\n3 2\n\n\nOutput\n\n1 3 2\n\n\nInput\n\n3 1\n\n\nOutput\n\n1 2 3\n\n\nInput\n\n5 2\n\n\nOutput\n\n1 3 2 4 5\n\nNote\n\nBy |x| we denote the absolute value of number x. ", "grammar": {"answer": null}}
{"name": "1057_A. Bmail Computer Network", "description": "Once upon a time there was only one router in the well-known company Bmail. Years went by and over time new routers were purchased. Every time they bought a new router, they connected it to one of the routers bought before it. You are given the values p_i — the index of the router to which the i-th router was connected after being purchased (p_i < i).\n\nThere are n routers in Boogle in total now. Print the sequence of routers on the path from the first to the n-th router.\n\nInput\n\nThe first line contains integer number n (2 ≤ n ≤ 200000) — the number of the routers. The following line contains n-1 integers p_2, p_3, ..., p_n (1 ≤ p_i < i), where p_i is equal to index of the router to which the i-th was connected after purchase.\n\nOutput\n\nPrint the path from the 1-st to the n-th router. It starts with 1 and ends with n. All the elements in the path should be distinct.\n\nExamples\n\nInput\n\n8\n1 1 2 2 3 2 5\n\n\nOutput\n\n1 2 5 8 \n\nInput\n\n6\n1 2 3 4 5\n\n\nOutput\n\n1 2 3 4 5 6 \n\nInput\n\n7\n1 1 2 3 4 3\n\n\nOutput\n\n1 3 7 ", "grammar": {"answer": null}}
{"name": "446_A. DZY Loves Sequences", "description": "DZY has a sequence a, consisting of n integers.\n\nWe'll call a sequence ai, ai + 1, ..., aj (1 ≤ i ≤ j ≤ n) a subsegment of the sequence a. The value (j - i + 1) denotes the length of the subsegment.\n\nYour task is to find the longest subsegment of a, such that it is possible to change at most one number (change one number to any integer you want) from the subsegment to make the subsegment strictly increasing.\n\nYou only need to output the length of the subsegment you find.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 105). The next line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 109).\n\nOutput\n\nIn a single line print the answer to the problem — the maximum length of the required subsegment.\n\nExamples\n\nInput\n\n6\n7 2 3 1 5 6\n\n\nOutput\n\n5\n\nNote\n\nYou can choose subsegment a2, a3, a4, a5, a6 and change its 3rd element (that is a4) to 4.", "grammar": {"answer": null}}
{"name": "p02745 Panasonic Programming Contest 2020 - Three Substrings", "description": "Snuke has a string s. From this string, Anuke, Bnuke, and Cnuke obtained strings a, b, and c, respectively, as follows:\n\n* Choose a non-empty (contiguous) substring of s (possibly s itself). Then, replace some characters (possibly all or none) in it with `?`s.\n\n\n\nFor example, if s is `mississippi`, we can choose the substring `ssissip` and replace its 1-st and 3-rd characters with `?` to obtain `?s?ssip`.\n\nYou are given the strings a, b, and c. Find the minimum possible length of s.\n\nConstraints\n\n* 1 \\leq |a|, |b|, |c| \\leq 2000\n* a, b, and c consists of lowercase English letters and `?`s.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\na\nb\nc\n\n\nOutput\n\nPrint the minimum possible length of s.\n\nExamples\n\nInput\n\na?c\nder\ncod\n\n\nOutput\n\n7\n\n\nInput\n\natcoder\natcoder\n???????\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "p03878 CODE FESTIVAL 2016 Grand Final(Parallel) - 1D Matching", "description": "There are N computers and N sockets in a one-dimensional world. The coordinate of the i-th computer is a_i, and the coordinate of the i-th socket is b_i. It is guaranteed that these 2N coordinates are pairwise distinct.\n\nSnuke wants to connect each computer to a socket using a cable. Each socket can be connected to only one computer.\n\nIn how many ways can he minimize the total length of the cables? Compute the answer modulo 10^9+7.\n\nConstraints\n\n* 1 ≤ N ≤ 10^5\n* 0 ≤ a_i, b_i ≤ 10^9\n* The coordinates are integers.\n* The coordinates are pairwise distinct.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\na_1\n:\na_N\nb_1\n:\nb_N\n\n\nOutput\n\nPrint the number of ways to minimize the total length of the cables, modulo 10^9+7.\n\nExamples\n\nInput\n\n2\n0\n10\n20\n30\n\n\nOutput\n\n2\n\n\nInput\n\n3\n3\n10\n8\n7\n12\n5\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p02379 Distance", "description": "Write a program which calculates the distance between two points P1(x1, y1) and P2(x2, y2).\n\n\n\nInput\n\nFour real numbers x1, y1, x2 and y2 are given in a line.\n\nOutput\n\nPrint the distance in real number. The output should not contain an absolute error greater than 10-4.\n\nExample\n\nInput\n\n0 0 1 1\n\n\nOutput\n\n1.41421356", "grammar": {"answer": null}}
{"name": "713_C. Sonya and Problem Wihtout a Legend", "description": "Sonya was unable to think of a story for this problem, so here comes the formal description.\n\nYou are given the array containing n positive integers. At one turn you can pick any element and increase or decrease it by 1. The goal is the make the array strictly increasing by making the minimum possible number of operations. You are allowed to change elements in any way, they can become negative or equal to 0.\n\nInput\n\nThe first line of the input contains a single integer n (1 ≤ n ≤ 3000) — the length of the array.\n\nNext line contains n integer ai (1 ≤ ai ≤ 109).\n\nOutput\n\nPrint the minimum number of operation required to make the array strictly increasing.\n\nExamples\n\nInput\n\n7\n2 1 5 11 5 9 11\n\n\nOutput\n\n9\n\n\nInput\n\n5\n5 4 3 2 1\n\n\nOutput\n\n12\n\nNote\n\nIn the first sample, the array is going to look as follows:\n\n2 3 5 6 7 9 11\n\n|2 - 2| + |1 - 3| + |5 - 5| + |11 - 6| + |5 - 7| + |9 - 9| + |11 - 11| = 9\n\nAnd for the second sample:\n\n1 2 3 4 5\n\n|5 - 1| + |4 - 2| + |3 - 3| + |2 - 4| + |1 - 5| = 12", "grammar": {"answer": null}}
{"name": "p02792 AtCoder Beginner Contest 152 - Handstand 2", "description": "Given is a positive integer N.\nFind the number of pairs (A, B) of positive integers not greater than N that satisfy the following condition:\n\n* When A and B are written in base ten without leading zeros, the last digit of A is equal to the first digit of B, and the first digit of A is equal to the last digit of B.\n\nConstraints\n\n* 1 \\leq N \\leq 2 \\times 10^5\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n25\n\n\nOutput\n\n17\n\n\nInput\n\n1\n\n\nOutput\n\n1\n\n\nInput\n\n100\n\n\nOutput\n\n108\n\n\nInput\n\n2020\n\n\nOutput\n\n40812\n\n\nInput\n\n200000\n\n\nOutput\n\n400000008", "grammar": {"answer": null}}
{"name": "p02547 AtCoder Beginner Contest 179 - Go to Jail", "description": "Tak performed the following action N times: rolling two dice. The result of the i-th roll is D_{i,1} and D_{i,2}.\n\nCheck if doublets occurred at least three times in a row. Specifically, check if there exists at lease one i such that D_{i,1}=D_{i,2}, D_{i+1,1}=D_{i+1,2} and D_{i+2,1}=D_{i+2,2} hold.\n\nConstraints\n\n* 3 \\leq N \\leq 100\n* 1\\leq D_{i,j} \\leq 6\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nD_{1,1} D_{1,2}\n\\vdots\nD_{N,1} D_{N,2}\n\n\nOutput\n\nPrint `Yes` if doublets occurred at least three times in a row. Print `No` otherwise.\n\nExamples\n\nInput\n\n5\n1 2\n6 6\n4 4\n3 3\n3 2\n\n\nOutput\n\nYes\n\n\nInput\n\n5\n1 1\n2 2\n3 4\n5 5\n6 6\n\n\nOutput\n\nNo\n\n\nInput\n\n6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "20_B. Equation", "description": "You are given an equation: \n\nAx2 + Bx + C = 0. \n\nYour task is to find the number of distinct roots of the equation and print all of them in ascending order.\n\nInput\n\nThe first line contains three integer numbers A, B and C ( - 105 ≤ A, B, C ≤ 105). Any coefficient may be equal to 0.\n\nOutput\n\nIn case of infinite root count print the only integer -1. In case of no roots print the only integer 0. In other cases print the number of root on the first line and the roots on the following lines in the ascending order. Print roots with at least 5 digits after the decimal point.\n\nExamples\n\nInput\n\n1 -5 6\n\n\nOutput\n\n2\n2.0000000000\n3.0000000000", "grammar": {"answer": null}}
{"name": "p03211 AtCoder Beginner Contest 114 - 754", "description": "There is a string S consisting of digits `1`, `2`, ..., `9`. Lunlun, the Dachshund, will take out three consecutive digits from S, treat them as a single integer X and bring it to her master. (She cannot rearrange the digits.)\n\nThe master's favorite number is 753. The closer to this number, the better. What is the minimum possible (absolute) difference between X and 753?\n\nConstraints\n\n* S is a string of length between 4 and 10 (inclusive).\n* Each character in S is `1`, `2`, ..., or `9`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the minimum possible difference between X and 753.\n\nExamples\n\nInput\n\n1234567876\n\n\nOutput\n\n34\n\n\nInput\n\n35753\n\n\nOutput\n\n0\n\n\nInput\n\n1111111111\n\n\nOutput\n\n642", "grammar": {"answer": null}}
{"name": "p03734 AtCoder Regular Contest 073 - Simple Knapsack", "description": "You have N items and a bag of strength W. The i-th item has a weight of w_i and a value of v_i.\n\nYou will select some of the items and put them in the bag. Here, the total weight of the selected items needs to be at most W.\n\nYour objective is to maximize the total value of the selected items.\n\nConstraints\n\n* 1 ≤ N ≤ 100\n* 1 ≤ W ≤ 10^9\n* 1 ≤ w_i ≤ 10^9\n* For each i = 2,3,...,N, w_1 ≤ w_i ≤ w_1 + 3.\n* 1 ≤ v_i ≤ 10^7\n* W, each w_i and v_i are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN W\nw_1 v_1\nw_2 v_2\n:\nw_N v_N\n\n\nOutput\n\nPrint the maximum possible total value of the selected items.\n\nExamples\n\nInput\n\n4 6\n2 1\n3 4\n4 10\n3 4\n\n\nOutput\n\n11\n\n\nInput\n\n4 6\n2 1\n3 7\n4 10\n3 6\n\n\nOutput\n\n13\n\n\nInput\n\n4 10\n1 100\n1 100\n1 100\n1 100\n\n\nOutput\n\n400\n\n\nInput\n\n4 1\n10 100\n10 100\n10 100\n10 100\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03338 AtCoder Beginner Contest 098 - Cut and Count", "description": "You are given a string S of length N consisting of lowercase English letters. We will cut this string at one position into two strings X and Y. Here, we would like to maximize the number of different letters contained in both X and Y. Find the largest possible number of different letters contained in both X and Y when we cut the string at the optimal position.\n\nConstraints\n\n* 2 \\leq N \\leq 100\n* |S| = N\n* S consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS\n\n\nOutput\n\nPrint the largest possible number of different letters contained in both X and Y.\n\nExamples\n\nInput\n\n6\naabbca\n\n\nOutput\n\n2\n\n\nInput\n\n10\naaaaaaaaaa\n\n\nOutput\n\n1\n\n\nInput\n\n45\ntgxgdqkyjzhyputjjtllptdfxocrylqfqjynmfbfucbir\n\n\nOutput\n\n9", "grammar": {"answer": null}}
{"name": "p03529 CODE FESTIVAL 2017 Final - Mancala", "description": "Consider the following game:\n\n* The game is played using a row of N squares and many stones.\n* First, a_i stones are put in Square i\\ (1 \\leq i \\leq N).\n* A player can perform the following operation as many time as desired: \"Select an integer i such that Square i contains exactly i stones. Remove all the stones from Square i, and add one stone to each of the i-1 squares from Square 1 to Square i-1.\"\n* The final score of the player is the total number of the stones remaining in the squares.\n\n\n\nFor a sequence a of length N, let f(a) be the minimum score that can be obtained when the game is played on a.\n\nFind the sum of f(a) over all sequences a of length N where each element is between 0 and K (inclusive). Since it can be extremely large, find the answer modulo 1000000007 (= 10^9+7).\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* 1 \\leq K \\leq N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\n\n\nOutput\n\nPrint the sum of f(a) modulo 1000000007 (= 10^9+7).\n\nExamples\n\nInput\n\n2 2\n\n\nOutput\n\n10\n\n\nInput\n\n20 17\n\n\nOutput\n\n983853488", "grammar": {"answer": null}}
{"name": "p02844 Sumitomo Mitsui Trust Bank Programming Contest 2019 - Lucky PIN", "description": "AtCoder Inc. has decided to lock the door of its office with a 3-digit PIN code.\n\nThe company has an N-digit lucky number, S. Takahashi, the president, will erase N-3 digits from S and concatenate the remaining 3 digits without changing the order to set the PIN code.\n\nHow many different PIN codes can he set this way?\n\nBoth the lucky number and the PIN code may begin with a 0.\n\nConstraints\n\n* 4 \\leq N \\leq 30000\n* S is a string of length N consisting of digits.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS\n\n\nOutput\n\nPrint the number of different PIN codes Takahashi can set.\n\nExamples\n\nInput\n\n4\n0224\n\n\nOutput\n\n3\n\n\nInput\n\n6\n123123\n\n\nOutput\n\n17\n\n\nInput\n\n19\n3141592653589793238\n\n\nOutput\n\n329", "grammar": {"answer": null}}
{"name": "p03103 AtCoder Beginner Contest 121 - Energy Drink Collector", "description": "Hearing that energy drinks increase rating in those sites, Takahashi decides to buy up M cans of energy drinks.\n\nThere are N stores that sell energy drinks. In the i-th store, he can buy at most B_i cans of energy drinks for A_i yen (the currency of Japan) each.\n\nWhat is the minimum amount of money with which he can buy M cans of energy drinks?\n\nIt is guaranteed that, in the given inputs, a sufficient amount of money can always buy M cans of energy drinks.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N, M \\leq 10^5\n* 1 \\leq A_i \\leq 10^9\n* 1 \\leq B_i \\leq 10^5\n* B_1 + ... + B_N \\geq M\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nA_1 B_1\nA_2 B_2\n\\vdots\nA_N B_N\n\n\nOutput\n\nPrint the minimum amount of money with which Takahashi can buy M cans of energy drinks.\n\nExamples\n\nInput\n\n2 5\n4 9\n2 4\n\n\nOutput\n\n12\n\n\nInput\n\n4 30\n6 18\n2 5\n3 10\n7 9\n\n\nOutput\n\n130\n\n\nInput\n\n1 100000\n1000000000 100000\n\n\nOutput\n\n100000000000000", "grammar": {"answer": null}}
{"name": "364_A. Matrix", "description": "You have a string of decimal digits s. Let's define bij = si·sj. Find in matrix b the number of such rectangles that the sum bij for all cells (i, j) that are the elements of the rectangle equals a in each rectangle.\n\nA rectangle in a matrix is a group of four integers (x, y, z, t) (x ≤ y, z ≤ t). The elements of the rectangle are all cells (i, j) such that x ≤ i ≤ y, z ≤ j ≤ t.\n\nInput\n\nThe first line contains integer a (0 ≤ a ≤ 109), the second line contains a string of decimal integers s (1 ≤ |s| ≤ 4000).\n\nOutput\n\nPrint a single integer — the answer to a problem.\n\nPlease, do not write the %lld specifier to read or write 64-bit integers in С++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nExamples\n\nInput\n\n10\n12345\n\n\nOutput\n\n6\n\n\nInput\n\n16\n439873893693495623498263984765\n\n\nOutput\n\n40", "grammar": {"answer": null}}
{"name": "p03859 AtCoder Regular Contest 065 - Shuffling", "description": "There is a string S of length N consisting of characters `0` and `1`. You will perform the following operation for each i = 1, 2, ..., m:\n\n* Arbitrarily permute the characters within the substring of S starting at the l_i-th character from the left and extending through the r_i-th character.\n\n\n\nHere, the sequence l_i is non-decreasing.\n\nHow many values are possible for S after the M operations, modulo 1000000007(= 10^9+7)?\n\nConstraints\n\n* 2≦N≦3000\n* 1≦M≦3000\n* S consists of characters `0` and `1`.\n* The length of S equals N.\n* 1≦l_i < r_i≦N\n* l_i ≦ l_{i+1}\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN M\nS\nl_1 r_1\n:\nl_M r_M\n\n\nOutput\n\nPrint the number of the possible values for S after the M operations, modulo 1000000007.\n\nExamples\n\nInput\n\n5 2\n01001\n2 4\n3 5\n\n\nOutput\n\n6\n\n\nInput\n\n9 3\n110111110\n1 4\n4 6\n6 9\n\n\nOutput\n\n26\n\n\nInput\n\n11 6\n00101000110\n2 4\n2 3\n4 7\n5 6\n6 10\n10 11\n\n\nOutput\n\n143", "grammar": {"answer": null}}
{"name": "p02775 AtCoder Beginner Contest 155 - Payment", "description": "In the Kingdom of AtCoder, only banknotes are used as currency. There are 10^{100}+1 kinds of banknotes, with the values of 1, 10, 10^2, 10^3, \\dots, 10^{(10^{100})}. You have come shopping at a mall and are now buying a takoyaki machine with a value of N. (Takoyaki is the name of a Japanese snack.)\n\nTo make the payment, you will choose some amount of money which is at least N and give it to the clerk. Then, the clerk gives you back the change, which is the amount of money you give minus N.\n\nWhat will be the minimum possible number of total banknotes used by you and the clerk, when both choose the combination of banknotes to minimize this count?\n\nAssume that you have sufficient numbers of banknotes, and so does the clerk.\n\nConstraints\n\n* N is an integer between 1 and 10^{1,000,000} (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the minimum possible number of total banknotes used by you and the clerk.\n\nExamples\n\nInput\n\n36\n\n\nOutput\n\n8\n\n\nInput\n\n91\n\n\nOutput\n\n3\n\n\nInput\n\n314159265358979323846264338327950288419716939937551058209749445923078164062862089986280348253421170\n\n\nOutput\n\n243", "grammar": {"answer": null}}
{"name": "p02389 Rectangle", "description": "Write a program which calculates the area and perimeter of a given rectangle.\n\nConstraints\n\n* 1 ≤ a, b ≤ 100\n\nInput\n\nThe length a and breadth b of the rectangle are given in a line separated by a single space.\n\nOutput\n\nPrint the area and perimeter of the rectangle in a line. The two integers should be separated by a single space.\n\nExample\n\nInput\n\n3 5\n\n\nOutput\n\n15 16", "grammar": {"answer": null}}
{"name": "1267_L. Lexicography", "description": "Lucy likes letters. She studied the definition of the lexicographical order at school and plays with it.\n\nAt first, she tried to construct the lexicographically smallest word out of given letters. It was so easy! Then she tried to build multiple words and minimize one of them. This was much harder!\n\nFormally, Lucy wants to make n words of length l each out of the given n ⋅ l letters, so that the k-th of them in the lexicographic order is lexicographically as small as possible.\n\nInput\n\nThe first line contains three integers n, l, and k (1≤ k ≤ n ≤ 1 000; 1 ≤ l ≤ 1 000) — the total number of words, the length of each word, and the index of the word Lucy wants to minimize.\n\nThe next line contains a string of n ⋅ l lowercase letters of the English alphabet.\n\nOutput\n\nOutput n words of l letters each, one per line, using the letters from the input. Words must be sorted in the lexicographic order, and the k-th of them must be lexicographically as small as possible. If there are multiple answers with the smallest k-th word, output any of them.\n\nExamples\n\nInput\n\n\n3 2 2\nabcdef\n\n\nOutput\n\n\naf\nbc\ned\n\nInput\n\n\n2 3 1\nabcabc\n\n\nOutput\n\n\naab\nbcc", "grammar": {"answer": null}}
{"name": "1174_D. Ehab and the Expected XOR Problem", "description": "Given two integers n and x, construct an array that satisfies the following conditions: \n\n  * for any element a_i in the array, 1 ≤ a_i<2^n; \n  * there is no non-empty subsegment with [bitwise XOR](https://en.wikipedia.org/wiki/Bitwise_operation#XOR) equal to 0 or x, \n  * its length l should be maximized. \n\n\n\nA sequence b is a subsegment of a sequence a if b can be obtained from a by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.\n\nInput\n\nThe only line contains two integers n and x (1 ≤ n ≤ 18, 1 ≤ x<2^{18}).\n\nOutput\n\nThe first line should contain the length of the array l.\n\nIf l is positive, the second line should contain l space-separated integers a_1, a_2, ..., a_l (1 ≤ a_i < 2^n) — the elements of the array a.\n\nIf there are multiple solutions, print any of them.\n\nExamples\n\nInput\n\n\n3 5\n\n\nOutput\n\n\n3\n6 1 3\n\nInput\n\n\n2 4\n\n\nOutput\n\n\n3\n1 3 1 \n\nInput\n\n\n1 1\n\n\nOutput\n\n\n0\n\nNote\n\nIn the first example, the bitwise XOR of the subsegments are \\{6,7,4,1,2,3\\}.", "grammar": {"answer": null}}
{"name": "443_B. Kolya and Tandem Repeat", "description": "Kolya got string s for his birthday, the string consists of small English letters. He immediately added k more characters to the right of the string.\n\nThen Borya came and said that the new string contained a tandem repeat of length l as a substring. How large could l be?\n\nSee notes for definition of a tandem repeat.\n\nInput\n\nThe first line contains s (1 ≤ |s| ≤ 200). This string contains only small English letters. The second line contains number k (1 ≤ k ≤ 200) — the number of the added characters.\n\nOutput\n\nPrint a single number — the maximum length of the tandem repeat that could have occurred in the new string.\n\nExamples\n\nInput\n\naaba\n2\n\n\nOutput\n\n6\n\n\nInput\n\naaabbbb\n2\n\n\nOutput\n\n6\n\n\nInput\n\nabracadabra\n10\n\n\nOutput\n\n20\n\nNote\n\nA tandem repeat of length 2n is string s, where for any position i (1 ≤ i ≤ n) the following condition fulfills: si = si + n.\n\nIn the first sample Kolya could obtain a string aabaab, in the second — aaabbbbbb, in the third — abracadabrabracadabra.", "grammar": {"answer": null}}
{"name": "1505_F. Math", "description": "<image> <image>\n\n*The two images are equivalent, feel free to use either one.\n\nInput\n\nThe input contains a single integer a (-100 ≤ a ≤ 100).\n\nOutput\n\nOutput the result – an integer number.\n\nExample\n\nInput\n\n\n1\n\n\nOutput\n\n\n1", "grammar": {"answer": null}}
{"name": "169_B. Replacing Digits", "description": "You are given an integer a that consists of n digits. You are also given a sequence of digits s of length m. The digit in position j (1 ≤ j ≤ m) of sequence s means that you can choose an arbitrary position i (1 ≤ i ≤ n) in a and replace the digit in the chosen position i with sj. Each element in the sequence s can participate in no more than one replacing operation.\n\nYour task is to perform such sequence of replacements, that the given number a gets maximum value. You are allowed to use not all elements from s.\n\nInput\n\nThe first line contains positive integer a. Its length n is positive and doesn't exceed 105. The second line contains sequence of digits s. Its length m is positive and doesn't exceed 105. The digits in the sequence s are written consecutively without any separators.\n\nThe given number a doesn't contain leading zeroes. \n\nOutput\n\nPrint the maximum value that can be obtained from a after a series of replacements. You are allowed to use not all elements from s. The printed number shouldn't contain any leading zeroes.\n\nExamples\n\nInput\n\n1024\n010\n\n\nOutput\n\n1124\n\n\nInput\n\n987\n1234567\n\n\nOutput\n\n987", "grammar": {"answer": null}}
{"name": "466_D. Increase Sequence", "description": "Peter has a sequence of integers a1, a2, ..., an. Peter wants all numbers in the sequence to equal h. He can perform the operation of \"adding one on the segment [l, r]\": add one to all elements of the sequence with indices from l to r (inclusive). At that, Peter never chooses any element as the beginning of the segment twice. Similarly, Peter never chooses any element as the end of the segment twice. In other words, for any two segments [l1, r1] and [l2, r2], where Peter added one, the following inequalities hold: l1 ≠ l2 and r1 ≠ r2.\n\nHow many distinct ways are there to make all numbers in the sequence equal h? Print this number of ways modulo 1000000007 (109 + 7). Two ways are considered distinct if one of them has a segment that isn't in the other way.\n\nInput\n\nThe first line contains two integers n, h (1 ≤ n, h ≤ 2000). The next line contains n integers a1, a2, ..., an (0 ≤ ai ≤ 2000).\n\nOutput\n\nPrint a single integer — the answer to the problem modulo 1000000007 (109 + 7).\n\nExamples\n\nInput\n\n3 2\n1 1 1\n\n\nOutput\n\n4\n\n\nInput\n\n5 1\n1 1 1 1 1\n\n\nOutput\n\n1\n\n\nInput\n\n4 3\n3 2 1 1\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03325 AtCoder Beginner Contest 100 - *3 or /2", "description": "As AtCoder Beginner Contest 100 is taking place, the office of AtCoder, Inc. is decorated with a sequence of length N, a = {a_1, a_2, a_3, ..., a_N}.\nSnuke, an employee, would like to play with this sequence.\n\nSpecifically, he would like to repeat the following operation as many times as possible:\n\n\nFor every i satisfying 1 \\leq i \\leq N, perform one of the following: \"divide a_i by 2\" and \"multiply a_i by 3\".\nHere, choosing \"multiply a_i by 3\" for every i is not allowed, and the value of a_i after the operation must be an integer.\n\n\nAt most how many operations can be performed?\n\nConstraints\n\n* N is an integer between 1 and 10 \\ 000 (inclusive).\n* a_i is an integer between 1 and 1 \\ 000 \\ 000 \\ 000 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 a_3 ... a_N\n\n\nOutput\n\nPrint the maximum number of operations that Snuke can perform.\n\nExamples\n\nInput\n\n3\n5 2 4\n\n\nOutput\n\n3\n\n\nInput\n\n4\n631 577 243 199\n\n\nOutput\n\n0\n\n\nInput\n\n10\n2184 2126 1721 1800 1024 2528 3360 1945 1280 1776\n\n\nOutput\n\n39", "grammar": {"answer": null}}
{"name": "1364_C. Ehab and Prefix MEXs", "description": "Given an array a of length n, find another array, b, of length n such that:\n\n  * for each i (1 ≤ i ≤ n) MEX(\\\\{b_1, b_2, …, b_i\\})=a_i. \n\n\n\nThe MEX of a set of integers is the smallest non-negative integer that doesn't belong to this set.\n\nIf such array doesn't exist, determine this.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 10^5) — the length of the array a.\n\nThe second line contains n integers a_1, a_2, …, a_n (0 ≤ a_i ≤ i) — the elements of the array a. It's guaranteed that a_i ≤ a_{i+1} for 1≤ i < n.\n\nOutput\n\nIf there's no such array, print a single line containing -1.\n\nOtherwise, print a single line containing n integers b_1, b_2, …, b_n (0 ≤ b_i ≤ 10^6)\n\nIf there are multiple answers, print any.\n\nExamples\n\nInput\n\n\n3\n1 2 3\n\n\nOutput\n\n\n0 1 2 \n\nInput\n\n\n4\n0 0 0 2\n\n\nOutput\n\n\n1 3 4 0 \n\nInput\n\n\n3\n1 1 3\n\n\nOutput\n\n\n0 2 1 \n\nNote\n\nIn the second test case, other answers like [1,1,1,0], for example, are valid.", "grammar": {"answer": null}}
{"name": "460_B. Little Dima and Equation", "description": "Little Dima misbehaved during a math lesson a lot and the nasty teacher Mr. Pickles gave him the following problem as a punishment. \n\nFind all integer solutions x (0 < x < 109) of the equation:\n\nx = b·s(x)a + c, \n\nwhere a, b, c are some predetermined constant values and function s(x) determines the sum of all digits in the decimal representation of number x.\n\nThe teacher gives this problem to Dima for each lesson. He changes only the parameters of the equation: a, b, c. Dima got sick of getting bad marks and he asks you to help him solve this challenging problem.\n\nInput\n\nThe first line contains three space-separated integers: a, b, c (1 ≤ a ≤ 5; 1 ≤ b ≤ 10000; - 10000 ≤ c ≤ 10000).\n\nOutput\n\nPrint integer n — the number of the solutions that you've found. Next print n integers in the increasing order — the solutions of the given equation. Print only integer solutions that are larger than zero and strictly less than 109.\n\nExamples\n\nInput\n\n3 2 8\n\n\nOutput\n\n3\n10 2008 13726 \n\nInput\n\n1 2 -18\n\n\nOutput\n\n0\n\n\nInput\n\n2 2 -1\n\n\nOutput\n\n4\n1 31 337 967 ", "grammar": {"answer": null}}
{"name": "p02616 AtCoder Beginner Contest 173 - Multiplication 4", "description": "Given are N integers A_1,\\ldots,A_N.\n\nWe will choose exactly K of these elements. Find the maximum possible product of the chosen elements.\n\nThen, print the maximum product modulo (10^9+7), using an integer between 0 and 10^9+6 (inclusive).\n\nConstraints\n\n* 1 \\leq K \\leq N \\leq 2\\times 10^5\n* |A_i| \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nA_1 \\ldots A_N\n\n\nOutput\n\nPrint the maximum product modulo (10^9+7), using an integer between 0 and 10^9+6 (inclusive).\n\nExamples\n\nInput\n\n4 2\n1 2 -3 -4\n\n\nOutput\n\n12\n\n\nInput\n\n4 3\n-1 -2 -3 -4\n\n\nOutput\n\n1000000001\n\n\nInput\n\n2 1\n-1 1000000000\n\n\nOutput\n\n1000000000\n\n\nInput\n\n10 10\n1000000000 100000000 10000000 1000000 100000 10000 1000 100 10 1\n\n\nOutput\n\n999983200", "grammar": {"answer": null}}
{"name": "840_A. Leha and Function", "description": "Leha like all kinds of strange things. Recently he liked the function F(n, k). Consider all possible k-element subsets of the set [1, 2, ..., n]. For subset find minimal element in it. F(n, k) — mathematical expectation of the minimal element among all k-element subsets.\n\nBut only function does not interest him. He wants to do interesting things with it. Mom brought him two arrays A and B, each consists of m integers. For all i, j such that 1 ≤ i, j ≤ m the condition Ai ≥ Bj holds. Help Leha rearrange the numbers in the array A so that the sum <image> is maximally possible, where A' is already rearranged array.\n\nInput\n\nFirst line of input data contains single integer m (1 ≤ m ≤ 2·105) — length of arrays A and B.\n\nNext line contains m integers a1, a2, ..., am (1 ≤ ai ≤ 109) — array A.\n\nNext line contains m integers b1, b2, ..., bm (1 ≤ bi ≤ 109) — array B.\n\nOutput\n\nOutput m integers a'1, a'2, ..., a'm — array A' which is permutation of the array A.\n\nExamples\n\nInput\n\n5\n7 3 5 3 4\n2 1 3 2 3\n\n\nOutput\n\n4 7 3 5 3\n\n\nInput\n\n7\n4 6 5 8 8 2 6\n2 1 2 2 1 1 2\n\n\nOutput\n\n2 6 4 5 8 8 6", "grammar": {"answer": null}}
{"name": "552_B. Vanya and Books", "description": "Vanya got an important task — he should enumerate books in the library and label each book with its number. Each of the n books should be assigned with a number from 1 to n. Naturally, distinct books should be assigned distinct numbers.\n\nVanya wants to know how many digits he will have to write down as he labels the books.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 109) — the number of books in the library.\n\nOutput\n\nPrint the number of digits needed to number all the books.\n\nExamples\n\nInput\n\n13\n\n\nOutput\n\n17\n\n\nInput\n\n4\n\n\nOutput\n\n4\n\nNote\n\nNote to the first test. The books get numbers 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, which totals to 17 digits.\n\nNote to the second sample. The books get numbers 1, 2, 3, 4, which totals to 4 digits.", "grammar": {"answer": null}}
{"name": "13_D. Triangles", "description": "Little Petya likes to draw. He drew N red and M blue points on the plane in such a way that no three points lie on the same line. Now he wonders what is the number of distinct triangles with vertices in red points which do not contain any blue point inside.\n\nInput\n\nThe first line contains two non-negative integer numbers N and M (0 ≤ N ≤ 500, 0 ≤ M ≤ 500) — the number of red and blue points respectively. The following N lines contain two integer numbers each — coordinates of red points. The following M lines contain two integer numbers each — coordinates of blue points. All coordinates do not exceed 109 by absolute value.\n\nOutput\n\nOutput one integer — the number of distinct triangles with vertices in red points which do not contain any blue point inside.\n\nExamples\n\nInput\n\n4 1\n0 0\n10 0\n10 10\n5 4\n2 1\n\n\nOutput\n\n2\n\n\nInput\n\n5 5\n5 10\n6 1\n8 6\n-6 -7\n7 -1\n5 -1\n10 -4\n-10 -8\n-10 5\n-2 -8\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "p03466 AtCoder Grand Contest 020 - Min Max Repetition", "description": "Let f(A, B), where A and B are positive integers, be the string satisfying the following conditions:\n\n* f(A, B) has length A + B;\n* f(A, B) contains exactly A letters `A` and exactly B letters `B`;\n* The length of the longest substring of f(A, B) consisting of equal letters (ex., `AAAAA` or `BBBB`) is as small as possible under the conditions above;\n* f(A, B) is the lexicographically smallest string satisfying the conditions above.\n\n\n\nFor example, f(2, 3) = `BABAB`, and f(6, 4) = `AABAABAABB`.\n\nAnswer Q queries: find the substring of f(A_i, B_i) from position C_i to position D_i (1-based).\n\nConstraints\n\n* 1 \\leq Q \\leq 10^3\n* 1 \\leq A_i, B_i \\leq 5 \\times 10^8\n* 1 \\leq C_i \\leq D_i \\leq A_i + B_i\n* D_i - C_i + 1 \\leq 100\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nQ\nA_1 B_1 C_1 D_1\nA_2 B_2 C_2 D_2\n:\nA_Q B_Q C_Q D_Q\n\n\nOutput\n\nFor each query i in order of input, print a line containing the substring of f(A_i, B_i) from position C_i to position D_i (1-based).\n\nExample\n\nInput\n\n5\n2 3 1 5\n6 4 1 10\n2 3 4 4\n6 4 3 7\n8 10 5 8\n\n\nOutput\n\nBABAB\nAABAABAABB\nA\nBAABA\nABAB", "grammar": {"answer": null}}
{"name": "p03219 AtCoder Beginner Contest 113 - Discount Fare", "description": "There is a train going from Station A to Station B that costs X yen (the currency of Japan).\n\nAlso, there is a bus going from Station B to Station C that costs Y yen.\n\nJoisino got a special ticket. With this ticket, she can take the bus for half the fare if she travels from Station A to Station B by train and then travels from Station B to Station C by bus.\n\nHow much does it cost to travel from Station A to Station C if she uses this ticket?\n\nConstraints\n\n* 1 \\leq X,Y \\leq 100\n* Y is an even number.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX Y\n\n\nOutput\n\nIf it costs x yen to travel from Station A to Station C, print x.\n\nExamples\n\nInput\n\n81 58\n\n\nOutput\n\n110\n\n\nInput\n\n4 54\n\n\nOutput\n\n31", "grammar": {"answer": null}}
{"name": "290_C. WTF?", "description": "      \n    HAI  \n    I HAS A TUX  \n    GIMMEH TUX  \n    I HAS A FOO ITS 0  \n    I HAS A BAR ITS 0  \n    I HAS A BAZ ITS 0  \n    I HAS A QUZ ITS 1  \n    TUX IS NOW A NUMBR  \n    IM IN YR LOOP NERFIN YR TUX TIL BOTH SAEM TUX AN 0  \n    I HAS A PUR  \n    GIMMEH PUR  \n    PUR IS NOW A NUMBR  \n    FOO R SUM OF FOO AN PUR  \n    BAR R SUM OF BAR AN 1  \n    BOTH SAEM BIGGR OF PRODUKT OF FOO AN QUZ AN PRODUKT OF BAR BAZ AN PRODUKT OF FOO AN QUZ  \n    O RLY?  \n    YA RLY  \n    BAZ R FOO  \n    QUZ R BAR  \n    OIC  \n    IM OUTTA YR LOOP  \n    BAZ IS NOW A NUMBAR  \n    VISIBLE SMOOSH QUOSHUNT OF BAZ QUZ  \n    KTHXBYE  \n    \n\nInput\n\nThe input contains between 1 and 10 lines, i-th line contains an integer number xi (0 ≤ xi ≤ 9).\n\nOutput\n\nOutput a single real number. The answer is considered to be correct if its absolute or relative error does not exceed 10 - 4.\n\nExamples\n\nInput\n\n3\n0\n1\n1\n\n\nOutput\n\n0.666667", "grammar": {"answer": null}}
{"name": "p02295 Cross Point", "description": "For given two segments s1 and s2, print the coordinate of the cross point of them.\n\ns1 is formed by end points p0 and p1, and s2 is formed by end points p2 and p3.\n\nConstraints\n\n* 1 ≤ q ≤ 1000\n* -10000 ≤ xpi, ypi ≤ 10000\n* p0 ≠ p1 and p2 ≠ p3.\n* The given segments have a cross point and are not in parallel.\n\nInput\n\nThe entire input looks like:\n\n\nq (the number of queries)\n1st query\n2nd query\n...\nqth query\n\n\nEach query consists of integer coordinates of end points of s1 and s2 in the following format:\n\n\nxp0 yp0 xp1 yp1 xp2 yp2 xp3 yp3\n\n\nOutput\n\nFor each query, print the coordinate of the cross point. The output values should be in a decimal fraction with an error less than 0.00000001.\n\nExample\n\nInput\n\n3\n0 0 2 0 1 1 1 -1\n0 0 1 1 0 1 1 0\n0 0 1 1 1 0 0 1\n\n\nOutput\n\n1.0000000000 0.0000000000\n0.5000000000 0.5000000000\n0.5000000000 0.5000000000", "grammar": {"answer": null}}
{"name": "509_C. Sums of Digits", "description": "Vasya had a strictly increasing sequence of positive integers a1, ..., an. Vasya used it to build a new sequence b1, ..., bn, where bi is the sum of digits of ai's decimal representation. Then sequence ai got lost and all that remained is sequence bi.\n\nVasya wonders what the numbers ai could be like. Of all the possible options he likes the one sequence with the minimum possible last number an. Help Vasya restore the initial sequence.\n\nIt is guaranteed that such a sequence always exists.\n\nInput\n\nThe first line contains a single integer number n (1 ≤ n ≤ 300).\n\nNext n lines contain integer numbers b1, ..., bn — the required sums of digits. All bi belong to the range 1 ≤ bi ≤ 300.\n\nOutput\n\nPrint n integer numbers, one per line — the correct option for numbers ai, in order of following in sequence. The sequence should be strictly increasing. The sum of digits of the i-th number should be equal to bi. \n\nIf there are multiple sequences with least possible number an, print any of them. Print the numbers without leading zeroes.\n\nExamples\n\nInput\n\n3\n1\n2\n3\n\n\nOutput\n\n1\n2\n3\n\n\nInput\n\n3\n3\n2\n1\n\n\nOutput\n\n3\n11\n100", "grammar": {"answer": null}}
{"name": "584_A. Olesya and Rodion", "description": "Olesya loves numbers consisting of n digits, and Rodion only likes numbers that are divisible by t. Find some number that satisfies both of them.\n\nYour task is: given the n and t print an integer strictly larger than zero consisting of n digits that is divisible by t. If such number doesn't exist, print  - 1.\n\nInput\n\nThe single line contains two numbers, n and t (1 ≤ n ≤ 100, 2 ≤ t ≤ 10) — the length of the number and the number it should be divisible by.\n\nOutput\n\nPrint one such positive number without leading zeroes, — the answer to the problem, or  - 1, if such number doesn't exist. If there are multiple possible answers, you are allowed to print any of them.\n\nExamples\n\nInput\n\n3 2\n\n\nOutput\n\n712", "grammar": {"answer": null}}
{"name": "p02061 Doubling", "description": "B: Twice as own\n\nproblem\n\nYou will be given Q queries. Since one positive integer N is given for each query, find the number of positive integers M that satisfy the following two conditions.\n\n* 2 Satisfy \\ leq M \\ leq N\n* Of the divisors of M, excluding M, the total product is more than twice that of M\n\n\n\nInput format\n\nThe input is given in the following format:\n\n\nQ\nN_1_1\nN_2\n::\nN_Q\n\n\n* The first line gives the number of queries Q.\n* Lines 2 through N + 1 are given one positive integer N given for each query.\n\n\n\nConstraint\n\n* 1 \\ leq Q \\ leq 10 ^ 5\n* 2 \\ leq N_i \\ leq 10 ^ 5 (1 \\ leq i \\ leq Q)\n\n\n\nOutput format\n\nOutput the number of positive integers that satisfy the above two conditions for each N_i, separated by line breaks.\n\nInput example\n\n\n3\n43\n9\ntwenty four\n\n\nOutput example\n\n\n11\n0\nFive\n\n\n* When N = 24, there are five types of M that can be considered as 12, 16, 18, 20, 24.\n\n\n\n\n\nExample\n\nInput\n\n3\n43\n9\n24\n\n\nOutput\n\n11\n0\n5", "grammar": {"answer": null}}
{"name": "p02712 AtCoder Beginner Contest 162 - FizzBuzz Sum", "description": "Let us define the FizzBuzz sequence a_1,a_2,... as follows:\n\n* If both 3 and 5 divides i, a_i=\\mbox{FizzBuzz}.\n* If the above does not hold but 3 divides i, a_i=\\mbox{Fizz}.\n* If none of the above holds but 5 divides i, a_i=\\mbox{Buzz}.\n* If none of the above holds, a_i=i.\n\n\n\nFind the sum of all numbers among the first N terms of the FizzBuzz sequence.\n\nConstraints\n\n* 1 \\leq N \\leq 10^6\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the sum of all numbers among the first N terms of the FizzBuzz sequence.\n\nExamples\n\nInput\n\n15\n\n\nOutput\n\n60\n\n\nInput\n\n1000000\n\n\nOutput\n\n266666333332", "grammar": {"answer": null}}
{"name": "p02320 Knapsack Problem with Limitations", "description": "You have N items that you want to put them into a knapsack. Item i has value vi, weight wi and limitation mi.\n\nYou want to find a subset of items to put such that:\n\n* The total value of the items is as large as possible.\n* The items have combined weight at most W, that is capacity of the knapsack.\n* You can select at most mi items for ith item.\n\n\n\nFind the maximum total value of items in the knapsack.\n\nConstraints\n\n* 1 ≤ N ≤ 100\n* 1 ≤ vi ≤ 1,000\n* 1 ≤ wi ≤ 1,000\n* 1 ≤ mi ≤ 10,000\n* 1 ≤ W ≤ 10,000\n\nInput\n\n\nN W\nv1 w1 m1\nv2 w2 m2\n:\nvN wN mN\n\n\nThe first line consists of the integers N and W. In the following N lines, the value, weight and limitation of the i-th item are given.\n\nOutput\n\nPrint the maximum total values of the items in a line.\n\nExamples\n\nInput\n\n4 8\n4 3 2\n2 1 1\n1 2 4\n3 2 2\n\n\nOutput\n\n12\n\n\nInput\n\n2 100\n1 1 100\n2 1 50\n\n\nOutput\n\n150", "grammar": {"answer": null}}
{"name": "1462_C. Unique Number", "description": "You are given a positive number x. Find the smallest positive integer number that has the sum of digits equal to x and all digits are distinct (unique).\n\nInput\n\nThe first line contains a single positive integer t (1 ≤ t ≤ 50) — the number of test cases in the test. Then t test cases follow.\n\nEach test case consists of a single integer number x (1 ≤ x ≤ 50).\n\nOutput\n\nOutput t answers to the test cases:\n\n  * if a positive integer number with the sum of digits equal to x and all digits are different exists, print the smallest such number; \n  * otherwise print -1. \n\nExample\n\nInput\n\n\n4\n1\n5\n15\n50\n\n\nOutput\n\n\n1\n5\n69\n-1", "grammar": {"answer": null}}
{"name": "p00271 Temperature Difference", "description": "Welcome to PC Koshien, players. Physical condition management is important to participate in the event. It is said that at the turn of the season when the temperature fluctuates greatly, it puts a strain on the body and it is easy to catch a cold. The day you should be careful about is the day when the difference between the maximum temperature and the minimum temperature is the largest. When the maximum and minimum temperatures of a day are given for 7 days, create a program that outputs the value obtained by subtracting the minimum temperature from the maximum temperature for each day.\n\n\n\ninput\n\nInput data is given in the following format.\n\n\na1 b1\na2 b2\n::\na7 b7\n\n\nThe input consists of 7 lines, and line i is given an integer representing the maximum temperature ai (-40 ≤ ai ≤ 40) and the minimum temperature bi (-40 ≤ bi ≤ 40) on day i. On all days, the maximum temperature ai is always above the minimum temperature bi.\n\noutput\n\nOutput the temperature difference for 7 days in 7 lines.\n\nExample\n\nInput\n\n30 19\n39 20\n19 18\n25 20\n22 21\n23 10\n10 -10\n\n\nOutput\n\n11\n19\n1\n5\n1\n13\n20", "grammar": {"answer": null}}
{"name": "1202_F. You Are Given Some Letters...", "description": "You are given a uppercase Latin letters 'A' and b letters 'B'.\n\nThe period of the string is the smallest such positive integer k that s_i = s_{i~mod~k} (0-indexed) for each i. Note that this implies that k won't always divide a+b = |s|.\n\nFor example, the period of string \"ABAABAA\" is 3, the period of \"AAAA\" is 1, and the period of \"AABBB\" is 5.\n\nFind the number of different periods over all possible strings with a letters 'A' and b letters 'B'.\n\nInput\n\nThe first line contains two integers a and b (1 ≤ a, b ≤ 10^9) — the number of letters 'A' and 'B', respectively.\n\nOutput\n\nPrint the number of different periods over all possible strings with a letters 'A' and b letters 'B'.\n\nExamples\n\nInput\n\n\n2 4\n\n\nOutput\n\n\n4\n\n\nInput\n\n\n5 3\n\n\nOutput\n\n\n5\n\nNote\n\nAll the possible periods for the first example: \n\n  * 3 \"BBABBA\" \n  * 4 \"BBAABB\" \n  * 5 \"BBBAAB\" \n  * 6 \"AABBBB\" \n\n\n\nAll the possible periods for the second example: \n\n  * 3 \"BAABAABA\" \n  * 5 \"BAABABAA\" \n  * 6 \"BABAAABA\" \n  * 7 \"BAABAAAB\" \n  * 8 \"AAAAABBB\" \n\n\n\nNote that these are not the only possible strings for the given periods.", "grammar": {"answer": null}}
{"name": "294_C. Shaass and Lights", "description": "There are n lights aligned in a row. These lights are numbered 1 to n from left to right. Initially some of the lights are switched on. Shaass wants to switch all the lights on. At each step he can switch a light on (this light should be switched off at that moment) if there's at least one adjacent light which is already switched on. \n\nHe knows the initial state of lights and he's wondering how many different ways there exist to switch all the lights on. Please find the required number of ways modulo 1000000007 (109 + 7).\n\nInput\n\nThe first line of the input contains two integers n and m where n is the number of lights in the sequence and m is the number of lights which are initially switched on, (1 ≤ n ≤ 1000, 1 ≤ m ≤ n). The second line contains m distinct integers, each between 1 to n inclusive, denoting the indices of lights which are initially switched on.\n\nOutput\n\nIn the only line of the output print the number of different possible ways to switch on all the lights modulo 1000000007 (109 + 7).\n\nExamples\n\nInput\n\n3 1\n1\n\n\nOutput\n\n1\n\n\nInput\n\n4 2\n1 4\n\n\nOutput\n\n2\n\n\nInput\n\n11 2\n4 8\n\n\nOutput\n\n6720", "grammar": {"answer": null}}
{"name": "p03834 AtCoder Beginner Contest 051 - Haiku", "description": "As a New Year's gift, Dolphin received a string s of length 19.\nThe string s has the following format: `[five lowercase English letters],[seven lowercase English letters],[five lowercase English letters]`.\nDolphin wants to convert the comma-separated string s into a space-separated string.\nWrite a program to perform the conversion for him.\n\nConstraints\n\n* The length of s is 19.\n* The sixth and fourteenth characters in s are `,`.\n* The other characters in s are lowercase English letters.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\ns\n\n\nOutput\n\nPrint the string after the conversion.\n\nExamples\n\nInput\n\nhappy,newyear,enjoy\n\n\nOutput\n\nhappy newyear enjoy\n\n\nInput\n\nhaiku,atcoder,tasks\n\n\nOutput\n\nhaiku atcoder tasks\n\n\nInput\n\nabcde,fghihgf,edcba\n\n\nOutput\n\nabcde fghihgf edcba", "grammar": {"answer": null}}
{"name": "p03106 AtCoder Beginner Contest 120 - K-th Common Divisor", "description": "You are given positive integers A and B.\n\nFind the K-th largest positive integer that divides both A and B.\n\nThe input guarantees that there exists such a number.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq A, B \\leq 100\n* The K-th largest positive integer that divides both A and B exists.\n* K \\geq 1\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B K\n\n\nOutput\n\nPrint the K-th largest positive integer that divides both A and B.\n\nExamples\n\nInput\n\n8 12 2\n\n\nOutput\n\n2\n\n\nInput\n\n100 50 4\n\n\nOutput\n\n5\n\n\nInput\n\n1 1 1\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p03838 AtCoder Grand Contest 008 - Simple Calculator", "description": "Snuke has a calculator. It has a display and two buttons.\n\nInitially, the display shows an integer x. Snuke wants to change this value into another integer y, by pressing the following two buttons some number of times in arbitrary order:\n\n* Button A: When pressed, the value on the display is incremented by 1.\n* Button B: When pressed, the sign of the value on the display is reversed.\n\n\n\nFind the minimum number of times Snuke needs to press the buttons to achieve his objective. It can be shown that the objective is always achievable regardless of the values of the integers x and y.\n\nConstraints\n\n* x and y are integers.\n* |x|, |y| ≤ 10^9\n* x and y are different.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nx y\n\n\nOutput\n\nPrint the minimum number of times Snuke needs to press the buttons to achieve his objective.\n\nExamples\n\nInput\n\n10 20\n\n\nOutput\n\n10\n\n\nInput\n\n10 -10\n\n\nOutput\n\n1\n\n\nInput\n\n-10 -20\n\n\nOutput\n\n12", "grammar": {"answer": null}}
{"name": "678_D. Iterated Linear Function", "description": "Consider a linear function f(x) = Ax + B. Let's define g(0)(x) = x and g(n)(x) = f(g(n - 1)(x)) for n > 0. For the given integer values A, B, n and x find the value of g(n)(x) modulo 109 + 7.\n\nInput\n\nThe only line contains four integers A, B, n and x (1 ≤ A, B, x ≤ 109, 1 ≤ n ≤ 1018) — the parameters from the problem statement.\n\nNote that the given value n can be too large, so you should use 64-bit integer type to store it. In C++ you can use the long long integer type and in Java you can use long integer type.\n\nOutput\n\nPrint the only integer s — the value g(n)(x) modulo 109 + 7.\n\nExamples\n\nInput\n\n3 4 1 1\n\n\nOutput\n\n7\n\n\nInput\n\n3 4 2 1\n\n\nOutput\n\n25\n\n\nInput\n\n3 4 3 1\n\n\nOutput\n\n79", "grammar": {"answer": null}}
{"name": "462_B. Appleman and Card Game", "description": "Appleman has n cards. Each card has an uppercase letter written on it. Toastman must choose k cards from Appleman's cards. Then Appleman should give Toastman some coins depending on the chosen cards. Formally, for each Toastman's card i you should calculate how much Toastman's cards have the letter equal to letter on ith, then sum up all these quantities, such a number of coins Appleman should give to Toastman.\n\nGiven the description of Appleman's cards. What is the maximum number of coins Toastman can get?\n\nInput\n\nThe first line contains two integers n and k (1 ≤ k ≤ n ≤ 105). The next line contains n uppercase letters without spaces — the i-th letter describes the i-th card of the Appleman.\n\nOutput\n\nPrint a single integer – the answer to the problem.\n\nExamples\n\nInput\n\n15 10\nDZFDFZDFDDDDDDF\n\n\nOutput\n\n82\n\n\nInput\n\n6 4\nYJSNPI\n\n\nOutput\n\n4\n\nNote\n\nIn the first test example Toastman can choose nine cards with letter D and one additional card with any letter. For each card with D he will get 9 coins and for the additional card he will get 1 coin.", "grammar": {"answer": null}}
{"name": "p03080 ExaWizards 2019 - Red or Blue", "description": "There are N people numbered 1 to N. Each person wears a red hat or a blue hat.\n\nYou are given a string s representing the colors of the people. Person i wears a red hat if s_i is `R`, and a blue hat if s_i is `B`.\n\nDetermine if there are more people wearing a red hat than people wearing a blue hat.\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* |s| = N\n* s_i is `R` or `B`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\ns\n\n\nOutput\n\nIf there are more people wearing a red hat than there are people wearing a blue hat, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n4\nRRBR\n\n\nOutput\n\nYes\n\n\nInput\n\n4\nBRBR\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "487_B. Strip", "description": "Alexandra has a paper strip with n numbers on it. Let's call them ai from left to right.\n\nNow Alexandra wants to split it into some pieces (possibly 1). For each piece of strip, it must satisfy:\n\n  * Each piece should contain at least l numbers.\n  * The difference between the maximal and the minimal number on the piece should be at most s.\n\n\n\nPlease help Alexandra to find the minimal number of pieces meeting the condition above.\n\nInput\n\nThe first line contains three space-separated integers n, s, l (1 ≤ n ≤ 105, 0 ≤ s ≤ 109, 1 ≤ l ≤ 105).\n\nThe second line contains n integers ai separated by spaces ( - 109 ≤ ai ≤ 109).\n\nOutput\n\nOutput the minimal number of strip pieces.\n\nIf there are no ways to split the strip, output -1.\n\nExamples\n\nInput\n\n7 2 2\n1 3 1 2 4 1 2\n\n\nOutput\n\n3\n\n\nInput\n\n7 2 2\n1 100 1 100 1 100 1\n\n\nOutput\n\n-1\n\nNote\n\nFor the first sample, we can split the strip into 3 pieces: [1, 3, 1], [2, 4], [1, 2].\n\nFor the second sample, we can't let 1 and 100 be on the same piece, so no solution exists.", "grammar": {"answer": null}}
{"name": "612_D. The Union of k-Segments", "description": "You are given n segments on the coordinate axis Ox and the number k. The point is satisfied if it belongs to at least k segments. Find the smallest (by the number of segments) set of segments on the coordinate axis Ox which contains all satisfied points and no others.\n\nInput\n\nThe first line contains two integers n and k (1 ≤ k ≤ n ≤ 106) — the number of segments and the value of k.\n\nThe next n lines contain two integers li, ri ( - 109 ≤ li ≤ ri ≤ 109) each — the endpoints of the i-th segment. The segments can degenerate and intersect each other. The segments are given in arbitrary order.\n\nOutput\n\nFirst line contains integer m — the smallest number of segments.\n\nNext m lines contain two integers aj, bj (aj ≤ bj) — the ends of j-th segment in the answer. The segments should be listed in the order from left to right.\n\nExamples\n\nInput\n\n3 2\n0 5\n-3 2\n3 8\n\n\nOutput\n\n2\n0 2\n3 5\n\n\nInput\n\n3 2\n0 5\n-3 3\n3 8\n\n\nOutput\n\n1\n0 5", "grammar": {"answer": null}}
{"name": "p02938 AtCoder Beginner Contest 138 - Coincidence", "description": "Given are integers L and R. Find the number, modulo 10^9 + 7, of pairs of integers (x, y) (L \\leq x \\leq y \\leq R) such that the remainder when y is divided by x is equal to y \\mbox{ XOR } x.\n\nWhat is \\mbox{ XOR }?\n\nThe XOR of integers A and B, A \\mbox{ XOR } B, is defined as follows:\n\n* When A \\mbox{ XOR } B is written in base two, the digit in the 2^k's place (k \\geq 0) is 1 if either A or B, but not both, has 1 in the 2^k's place, and 0 otherwise.\n\nFor example, 3 \\mbox{ XOR } 5 = 6. (In base two: 011 \\mbox{ XOR } 101 = 110.)\n\nConstraints\n\n* 1 \\leq L \\leq R \\leq 10^{18}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nL R\n\n\nOutput\n\nPrint the number of pairs of integers (x, y) (L \\leq x \\leq y \\leq R) satisfying the condition, modulo 10^9 + 7.\n\nExamples\n\nInput\n\n2 3\n\n\nOutput\n\n3\n\n\nInput\n\n10 100\n\n\nOutput\n\n604\n\n\nInput\n\n1 1000000000000000000\n\n\nOutput\n\n68038601", "grammar": {"answer": null}}
{"name": "p02613 AtCoder Beginner Contest 173 - Judge Status Summary", "description": "Takahashi is participating in a programming contest called AXC002, and he has just submitted his code to Problem A.\n\nThe problem has N test cases.\n\nFor each test case i (1\\leq i \\leq N), you are given a string S_i representing the verdict for that test case. Find the numbers of test cases for which the verdict is `AC`, `WA`, `TLE`, and `RE`, respectively.\n\nSee the Output section for the output format.\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* S_i is `AC`, `WA`, `TLE`, or `RE`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nS_1\n\\vdots\nS_N\n\n\nOutput\n\nLet C_0, C_1, C_2, and C_3 be the numbers of test cases for which the verdict is `AC`, `WA`, `TLE`, and `RE`, respectively. Print the following:\n\n\nAC x C_0\nWA x C_1\nTLE x C_2\nRE x C_3\n\nOutput\n\nLet C_0, C_1, C_2, and C_3 be the numbers of test cases for which the verdict is `AC`, `WA`, `TLE`, and `RE`, respectively. Print the following:\n\n\nAC x C_0\nWA x C_1\nTLE x C_2\nRE x C_3\n\nExamples\n\nInput\n\n6\nAC\nTLE\nAC\nAC\nWA\nTLE\n\n\nOutput\n\nAC x 3\nWA x 1\nTLE x 2\nRE x 0\n\n\nInput\n\n10\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\n\n\nOutput\n\nAC x 10\nWA x 0\nTLE x 0\nRE x 0", "grammar": {"answer": null}}
{"name": "p03420 AtCoder Regular Contest 091 - Remainder Reminder", "description": "Takahashi had a pair of two positive integers not exceeding N, (a,b), which he has forgotten. He remembers that the remainder of a divided by b was greater than or equal to K. Find the number of possible pairs that he may have had.\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* 0 \\leq K \\leq N-1\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\n\n\nOutput\n\nPrint the number of possible pairs that he may have had.\n\nExamples\n\nInput\n\n5 2\n\n\nOutput\n\n7\n\n\nInput\n\n10 0\n\n\nOutput\n\n100\n\n\nInput\n\n31415 9265\n\n\nOutput\n\n287927211", "grammar": {"answer": null}}
{"name": "p02589 AtCoder Grand Contest 047 - First Second", "description": "Limak can repeatedly remove one of the first two characters of a string, for example abcxyx \\rightarrow acxyx \\rightarrow cxyx \\rightarrow cyx.\n\nYou are given N different strings S_1, S_2, \\ldots, S_N. Among N \\cdot (N-1) / 2 pairs (S_i, S_j), in how many pairs could Limak obtain one string from the other?\n\nConstraints\n\n* 2 \\leq N \\leq 200\\,000\n* S_i consists of lowercase English letters `a`-`z`.\n* S_i \\neq S_j\n* 1 \\leq |S_i|\n* |S_1| + |S_2| + \\ldots + |S_N| \\leq 10^6\n\nInput\n\nInput is given from Standard Input in the following format.\n\n\nN\nS_1\nS_2\n\\vdots\nS_N\n\n\nOutput\n\nPrint the number of unordered pairs (S_i, S_j) where i \\neq j and Limak can obtain one string from the other.\n\nExamples\n\nInput\n\n3\nabcxyx\ncyx\nabc\n\n\nOutput\n\n1\n\n\nInput\n\n6\nb\na\nabc\nc\nd\nab\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p02304 Segment Intersections: Manhattan Geometry", "description": "For given $n$ segments which are parallel to X-axis or Y-axis, find the number of intersections of them.\n\nConstraints\n\n* $1 \\leq n \\leq 100,000$\n* $ -1,000,000,000 \\leq x_1, y_1, x_2, y_2 \\leq 1,000,000,000$\n* Two parallel segments never overlap or touch.\n* The number of intersections $\\leq 1,000,000$\n\nInput\n\nIn the first line, the number of segments $n$ is given. In the following $n$ lines, the $i$-th segment is given by coordinates of its end points in the following format:\n\n$x_1 \\; y_1 \\; x_2 \\; y_2$\n\nThe coordinates are given in integers.\n\nOutput\n\nPrint the number of intersections in a line.\n\nExample\n\nInput\n\n6\n2 2 2 5\n1 3 5 3\n4 1 4 4\n5 2 7 2\n6 1 6 3\n6 5 6 7\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "616_F. Expensive Strings", "description": "You are given n strings ti. Each string has cost ci.\n\nLet's define the function of string <image>, where ps, i is the number of occurrences of s in ti, |s| is the length of the string s. Find the maximal value of function f(s) over all strings.\n\nNote that the string s is not necessarily some string from t.\n\nInput\n\nThe first line contains the only integer n (1 ≤ n ≤ 105) — the number of strings in t.\n\nEach of the next n lines contains contains a non-empty string ti. ti contains only lowercase English letters.\n\nIt is guaranteed that the sum of lengths of all strings in t is not greater than 5·105.\n\nThe last line contains n integers ci ( - 107 ≤ ci ≤ 107) — the cost of the i-th string.\n\nOutput\n\nPrint the only integer a — the maximal value of the function f(s) over all strings s. Note one more time that the string s is not necessarily from t.\n\nExamples\n\nInput\n\n2\naa\nbb\n2 1\n\n\nOutput\n\n4\n\n\nInput\n\n2\naa\nab\n2 1\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "1325_C. Ehab and Path-etic MEXs", "description": "You are given a tree consisting of n nodes. You want to write some labels on the tree's edges such that the following conditions hold:\n\n  * Every label is an integer between 0 and n-2 inclusive. \n  * All the written labels are distinct. \n  * The largest value among MEX(u,v) over all pairs of nodes (u,v) is as small as possible. \n\n\n\nHere, MEX(u,v) denotes the smallest non-negative integer that isn't written on any edge on the unique simple path from node u to node v.\n\nInput\n\nThe first line contains the integer n (2 ≤ n ≤ 10^5) — the number of nodes in the tree.\n\nEach of the next n-1 lines contains two space-separated integers u and v (1 ≤ u,v ≤ n) that mean there's an edge between nodes u and v. It's guaranteed that the given graph is a tree.\n\nOutput\n\nOutput n-1 integers. The i^{th} of them will be the number written on the i^{th} edge (in the input order).\n\nExamples\n\nInput\n\n\n3\n1 2\n1 3\n\n\nOutput\n\n\n0\n1\n\n\nInput\n\n\n6\n1 2\n1 3\n2 4\n2 5\n5 6\n\n\nOutput\n\n\n0\n3\n2\n4\n1\n\nNote\n\nThe tree from the second sample:\n\n<image>", "grammar": {"answer": null}}
{"name": "p03813 AtCoder Beginner Contest 053 - ABC/ARC", "description": "Smeke has decided to participate in AtCoder Beginner Contest (ABC) if his current rating is less than 1200, and participate in AtCoder Regular Contest (ARC) otherwise.\n\nYou are given Smeke's current rating, x. Print `ABC` if Smeke will participate in ABC, and print `ARC` otherwise.\n\nConstraints\n\n* 1 ≦ x ≦ 3{,}000\n* x is an integer.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nx\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n1000\n\n\nOutput\n\nABC\n\n\nInput\n\n2000\n\n\nOutput\n\nARC", "grammar": {"answer": null}}
{"name": "p03071 AtCoder Beginner Contest 124 - Buttons", "description": "There are two buttons, one of size A and one of size B.\n\nWhen you press a button of size X, you get X coins and the size of that button decreases by 1.\n\nYou will press a button twice. Here, you can press the same button twice, or press both buttons once.\n\nAt most how many coins can you get?\n\nConstraints\n\n* All values in input are integers.\n* 3 \\leq A, B \\leq 20\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nPrint the maximum number of coins you can get.\n\nExamples\n\nInput\n\n5 3\n\n\nOutput\n\n9\n\n\nInput\n\n3 4\n\n\nOutput\n\n7\n\n\nInput\n\n6 6\n\n\nOutput\n\n12", "grammar": {"answer": null}}
{"name": "p03168 Educational DP Contest - Coins", "description": "Let N be a positive odd number.\n\nThere are N coins, numbered 1, 2, \\ldots, N. For each i (1 \\leq i \\leq N), when Coin i is tossed, it comes up heads with probability p_i and tails with probability 1 - p_i.\n\nTaro has tossed all the N coins. Find the probability of having more heads than tails.\n\nConstraints\n\n* N is an odd number.\n* 1 \\leq N \\leq 2999\n* p_i is a real number and has two decimal places.\n* 0 < p_i < 1\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\np_1 p_2 \\ldots p_N\n\n\nOutput\n\nPrint the probability of having more heads than tails. The output is considered correct when the absolute error is not greater than 10^{-9}.\n\nExamples\n\nInput\n\n3\n0.30 0.60 0.80\n\n\nOutput\n\n0.612\n\n\nInput\n\n1\n0.50\n\n\nOutput\n\n0.5\n\n\nInput\n\n5\n0.42 0.01 0.42 0.99 0.42\n\n\nOutput\n\n0.3821815872", "grammar": {"answer": null}}
{"name": "1165_C. Good String", "description": "Let's call (yet again) a string good if its length is even, and every character in odd position of this string is different from the next character (the first character is different from the second, the third is different from the fourth, and so on). For example, the strings good, string and xyyx are good strings, and the strings bad, aa and aabc are not good. Note that the empty string is considered good.\n\nYou are given a string s, you have to delete minimum number of characters from this string so that it becomes good.\n\nInput\n\nThe first line contains one integer n (1 ≤ n ≤ 2 ⋅ 10^5) — the number of characters in s.\n\nThe second line contains the string s, consisting of exactly n lowercase Latin letters.\n\nOutput\n\nIn the first line, print one integer k (0 ≤ k ≤ n) — the minimum number of characters you have to delete from s to make it good.\n\nIn the second line, print the resulting string s. If it is empty, you may leave the second line blank, or not print it at all.\n\nExamples\n\nInput\n\n\n4\ngood\n\n\nOutput\n\n\n0\ngood\n\n\nInput\n\n\n4\naabc\n\n\nOutput\n\n\n2\nab\n\n\nInput\n\n\n3\naaa\n\n\nOutput\n\n\n3", "grammar": {"answer": null}}
{"name": "877_A. Alex and broken contest", "description": "One day Alex was creating a contest about his friends, but accidentally deleted it. Fortunately, all the problems were saved, but now he needs to find them among other problems.\n\nBut there are too many problems, to do it manually. Alex asks you to write a program, which will determine if a problem is from this contest by its name.\n\nIt is known, that problem is from this contest if and only if its name contains one of Alex's friends' name exactly once. His friends' names are \"Danil\", \"Olya\", \"Slava\", \"Ann\" and \"Nikita\".\n\nNames are case sensitive.\n\nInput\n\nThe only line contains string from lowercase and uppercase letters and \"_\" symbols of length, not more than 100 — the name of the problem.\n\nOutput\n\nPrint \"YES\", if problem is from this contest, and \"NO\" otherwise.\n\nExamples\n\nInput\n\nAlex_and_broken_contest\n\n\nOutput\n\nNO\n\nInput\n\nNikitaAndString\n\n\nOutput\n\nYES\n\nInput\n\nDanil_and_Olya\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p02769 AtCoder Beginner Contest 156 - Roaming", "description": "There is a building with n rooms, numbered 1 to n.\n\nWe can move from any room to any other room in the building.\n\nLet us call the following event a move: a person in some room i goes to another room j~ (i \\neq j).\n\nInitially, there was one person in each room in the building.\n\nAfter that, we know that there were exactly k moves happened up to now.\n\nWe are interested in the number of people in each of the n rooms now. How many combinations of numbers of people in the n rooms are possible?\n\nFind the count modulo (10^9 + 7).\n\nConstraints\n\n* All values in input are integers.\n* 3 \\leq n \\leq 2 \\times 10^5\n* 2 \\leq k \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nn k\n\n\nOutput\n\nPrint the number of possible combinations of numbers of people in the n rooms now, modulo (10^9 + 7).\n\nExamples\n\nInput\n\n3 2\n\n\nOutput\n\n10\n\n\nInput\n\n200000 1000000000\n\n\nOutput\n\n607923868\n\n\nInput\n\n15 6\n\n\nOutput\n\n22583772", "grammar": {"answer": null}}
{"name": "p02886 AtCoder Beginner Contest 143 - TAKOYAKI FESTIVAL 2019", "description": "It's now the season of TAKOYAKI FESTIVAL!\n\nThis year, N takoyaki (a ball-shaped food with a piece of octopus inside) will be served. The deliciousness of the i-th takoyaki is d_i.\n\nAs is commonly known, when you eat two takoyaki of deliciousness x and y together, you restore x \\times y health points.\n\nThere are \\frac{N \\times (N - 1)}{2} ways to choose two from the N takoyaki served in the festival. For each of these choices, find the health points restored from eating the two takoyaki, then compute the sum of these \\frac{N \\times (N - 1)}{2} values.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 50\n* 0 \\leq d_i \\leq 100\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nd_1 d_2 ... d_N\n\n\nOutput\n\nPrint the sum of the health points restored from eating two takoyaki over all possible choices of two takoyaki from the N takoyaki served.\n\nExamples\n\nInput\n\n3\n3 1 2\n\n\nOutput\n\n11\n\n\nInput\n\n7\n5 0 7 8 3 3 2\n\n\nOutput\n\n312", "grammar": {"answer": null}}
{"name": "p03289 AtCoder Beginner Contest 104 - AcCepted", "description": "You are given a string S. Each character of S is uppercase or lowercase English letter. Determine if S satisfies all of the following conditions:\n\n* The initial character of S is an uppercase `A`.\n* There is exactly one occurrence of `C` between the third character from the beginning and the second to last character (inclusive).\n* All letters except the `A` and `C` mentioned above are lowercase.\n\nConstraints\n\n* 4 ≤ |S| ≤ 10 (|S| is the length of the string S.)\n* Each character of S is uppercase or lowercase English letter.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nIf S satisfies all of the conditions in the problem statement, print `AC`; otherwise, print `WA`.\n\nExamples\n\nInput\n\nAtCoder\n\n\nOutput\n\nAC\n\n\nInput\n\nACoder\n\n\nOutput\n\nWA\n\n\nInput\n\nAcycliC\n\n\nOutput\n\nWA\n\n\nInput\n\nAtCoCo\n\n\nOutput\n\nWA\n\n\nInput\n\nAtcoder\n\n\nOutput\n\nWA", "grammar": {"answer": null}}
{"name": "1054_H. Epic Convolution", "description": "You are given two arrays a_0, a_1, …, a_{n - 1} and b_0, b_1, …, b_{m-1}, and an integer c.\n\nCompute the following sum:\n\n$$$∑_{i=0}^{n-1} ∑_{j=0}^{m-1} a_i b_j c^{i^2\\,j^3}$$$\n\nSince it's value can be really large, print it modulo 490019.\n\nInput\n\nFirst line contains three integers n, m and c (1 ≤ n, m ≤ 100 000, 1 ≤ c < 490019).\n\nNext line contains exactly n integers a_i and defines the array a (0 ≤ a_i ≤ 1000).\n\nLast line contains exactly m integers b_i and defines the array b (0 ≤ b_i ≤ 1000).\n\nOutput\n\nPrint one integer — value of the sum modulo 490019.\n\nExamples\n\nInput\n\n2 2 3\n0 1\n0 1\n\n\nOutput\n\n3\n\n\nInput\n\n3 4 1\n1 1 1\n1 1 1 1\n\n\nOutput\n\n12\n\n\nInput\n\n2 3 3\n1 2\n3 4 5\n\n\nOutput\n\n65652\n\nNote\n\nIn the first example, the only non-zero summand corresponds to i = 1, j = 1 and is equal to 1 ⋅ 1 ⋅ 3^1 = 3.\n\nIn the second example, all summands are equal to 1.", "grammar": {"answer": null}}
{"name": "1288_D. Minimax Problem", "description": "You are given n arrays a_1, a_2, ..., a_n; each array consists of exactly m integers. We denote the y-th element of the x-th array as a_{x, y}.\n\nYou have to choose two arrays a_i and a_j (1 ≤ i, j ≤ n, it is possible that i = j). After that, you will obtain a new array b consisting of m integers, such that for every k ∈ [1, m] b_k = max(a_{i, k}, a_{j, k}).\n\nYour goal is to choose i and j so that the value of min _{k = 1}^{m} b_k is maximum possible.\n\nInput\n\nThe first line contains two integers n and m (1 ≤ n ≤ 3 ⋅ 10^5, 1 ≤ m ≤ 8) — the number of arrays and the number of elements in each array, respectively.\n\nThen n lines follow, the x-th line contains the array a_x represented by m integers a_{x, 1}, a_{x, 2}, ..., a_{x, m} (0 ≤ a_{x, y} ≤ 10^9).\n\nOutput\n\nPrint two integers i and j (1 ≤ i, j ≤ n, it is possible that i = j) — the indices of the two arrays you have to choose so that the value of min _{k = 1}^{m} b_k is maximum possible. If there are multiple answers, print any of them.\n\nExample\n\nInput\n\n\n6 5\n5 0 3 1 2\n1 8 9 1 3\n1 2 3 4 5\n9 1 0 3 7\n2 3 0 6 3\n6 4 1 7 0\n\n\nOutput\n\n\n1 5", "grammar": {"answer": null}}
{"name": "393_A. Nineteen", "description": "Alice likes word \"nineteen\" very much. She has a string s and wants the string to contain as many such words as possible. For that reason she can rearrange the letters of the string.\n\nFor example, if she has string \"xiineteenppnnnewtnee\", she can get string \"xnineteenppnineteenw\", containing (the occurrences marked) two such words. More formally, word \"nineteen\" occurs in the string the number of times you can read it starting from some letter of the string. Of course, you shouldn't skip letters.\n\nHelp her to find the maximum number of \"nineteen\"s that she can get in her string.\n\nInput\n\nThe first line contains a non-empty string s, consisting only of lowercase English letters. The length of string s doesn't exceed 100.\n\nOutput\n\nPrint a single integer — the maximum number of \"nineteen\"s that she can get in her string.\n\nExamples\n\nInput\n\nnniinneetteeeenn\n\n\nOutput\n\n2\n\nInput\n\nnneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii\n\n\nOutput\n\n2\n\nInput\n\nnineteenineteen\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "327_B. Hungry Sequence", "description": "Iahub and Iahubina went to a date at a luxury restaurant. Everything went fine until paying for the food. Instead of money, the waiter wants Iahub to write a Hungry sequence consisting of n integers. \n\nA sequence a1, a2, ..., an, consisting of n integers, is Hungry if and only if: \n\n  * Its elements are in increasing order. That is an inequality ai < aj holds for any two indices i, j (i < j). \n  * For any two indices i and j (i < j), aj must not be divisible by ai. \n\n\n\nIahub is in trouble, so he asks you for help. Find a Hungry sequence with n elements.\n\nInput\n\nThe input contains a single integer: n (1 ≤ n ≤ 105).\n\nOutput\n\nOutput a line that contains n space-separated integers a1 a2, ..., an (1 ≤ ai ≤ 107), representing a possible Hungry sequence. Note, that each ai must not be greater than 10000000 (107) and less than 1.\n\nIf there are multiple solutions you can output any one.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n2 9 15\n\n\nInput\n\n5\n\n\nOutput\n\n11 14 20 27 31", "grammar": {"answer": null}}
{"name": "938_F. Erasing Substrings", "description": "You are given a string s, initially consisting of n lowercase Latin letters. After that, you perform k operations with it, where <image>. During i-th operation you must erase some substring of length exactly 2i - 1 from s.\n\nPrint the lexicographically minimal string you may obtain after performing k such operations.\n\nInput\n\nThe only line contains one string s consisting of n lowercase Latin letters (1 ≤ n ≤ 5000).\n\nOutput\n\nPrint the lexicographically minimal string you may obtain after performing k operations.\n\nExamples\n\nInput\n\nadcbca\n\n\nOutput\n\naba\n\n\nInput\n\nabacabadabacaba\n\n\nOutput\n\naabacaba\n\nNote\n\nPossible operations in examples:\n\n  1. adcbca <image> adcba <image> aba; \n  2. abacabadabacaba <image> abcabadabacaba <image> aabadabacaba <image> aabacaba. ", "grammar": {"answer": null}}
{"name": "p03465 AtCoder Grand Contest 020 - Median Sum", "description": "You are given N integers A_1, A_2, ..., A_N.\n\nConsider the sums of all non-empty subsequences of A. There are 2^N - 1 such sums, an odd number.\n\nLet the list of these sums in non-decreasing order be S_1, S_2, ..., S_{2^N - 1}.\n\nFind the median of this list, S_{2^{N-1}}.\n\nConstraints\n\n* 1 \\leq N \\leq 2000\n* 1 \\leq A_i \\leq 2000\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the median of the sorted list of the sums of all non-empty subsequences of A.\n\nExamples\n\nInput\n\n3\n1 2 1\n\n\nOutput\n\n2\n\n\nInput\n\n1\n58\n\n\nOutput\n\n58", "grammar": {"answer": null}}
{"name": "1425_C. Captain of Knights", "description": "Mr. Chanek just won the national chess tournament and got a huge chessboard of size N × M. Bored with playing conventional chess, Mr. Chanek now defines a function F(X, Y), which denotes the minimum number of moves to move a knight from square (1, 1) to square (X, Y). It turns out finding F(X, Y) is too simple, so Mr. Chanek defines:\n\nG(X, Y) = ∑_{i=X}^{N} ∑_{j=Y}^{M} F(i, j)\n\nGiven X and Y, you are tasked to find G(X, Y).\n\nA knight can move from square (a, b) to square (a', b') if and only if |a - a'| > 0, |b - b'| > 0, and |a - a'| + |b - b'| = 3. Of course, the knight cannot leave the chessboard.\n\nInput\n\nThe first line contains an integer T (1 ≤ T ≤ 100), the number of test cases.\n\nEach test case contains a line with four integers X Y N M (3 ≤ X ≤ N ≤ 10^9, 3 ≤ Y ≤ M ≤ 10^9).\n\nOutput\n\nFor each test case, print a line with the value of G(X, Y) modulo 10^9 + 7.\n\nExample\n\nInput\n\n\n2\n3 4 5 6\n5 5 8 8\n\n\nOutput\n\n\n27\n70", "grammar": {"answer": null}}
{"name": "p02789 AtCoder Beginner Contest 152 - AC or WA", "description": "Takahashi is participating in a programming contest, AXC001. He has just submitted his code to Problem A.\nThe problem has N test cases, all of which must be passed to get an AC verdict.\nTakahashi's submission has passed M cases out of the N test cases.\nDetermine whether Takahashi's submission gets an AC.\n\nConstraints\n\n* 1 \\leq N \\leq 100\n* 0 \\leq M \\leq N\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\n\n\nOutput\n\nIf Takahashi's submission gets an AC, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n3 3\n\n\nOutput\n\nYes\n\n\nInput\n\n3 2\n\n\nOutput\n\nNo\n\n\nInput\n\n1 1\n\n\nOutput\n\nYes", "grammar": {"answer": null}}
{"name": "425_A. Sereja and Swaps", "description": "As usual, Sereja has array a, its elements are integers: a[1], a[2], ..., a[n]. Let's introduce notation:\n\n<image>\n\nA swap operation is the following sequence of actions:\n\n  * choose two indexes i, j (i ≠ j); \n  * perform assignments tmp = a[i], a[i] = a[j], a[j] = tmp. \n\n\n\nWhat maximum value of function m(a) can Sereja get if he is allowed to perform at most k swap operations?\n\nInput\n\nThe first line contains two integers n and k (1 ≤ n ≤ 200; 1 ≤ k ≤ 10). The next line contains n integers a[1], a[2], ..., a[n] ( - 1000 ≤ a[i] ≤ 1000).\n\nOutput\n\nIn a single line print the maximum value of m(a) that Sereja can get if he is allowed to perform at most k swap operations.\n\nExamples\n\nInput\n\n10 2\n10 -1 2 2 2 2 2 2 -1 10\n\n\nOutput\n\n32\n\n\nInput\n\n5 10\n-1 -1 -1 -1 -1\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "1503_C. Travelling Salesman Problem", "description": "There are n cities numbered from 1 to n, and city i has beauty a_i.\n\nA salesman wants to start at city 1, visit every city exactly once, and return to city 1.\n\nFor all i≠ j, a flight from city i to city j costs max(c_i,a_j-a_i) dollars, where c_i is the price floor enforced by city i. Note that there is no absolute value. Find the minimum total cost for the salesman to complete his trip.\n\nInput\n\nThe first line contains a single integer n (2≤ n≤ 10^5) — the number of cities.\n\nThe i-th of the next n lines contains two integers a_i, c_i (0≤ a_i,c_i≤ 10^9) — the beauty and price floor of the i-th city.\n\nOutput\n\nOutput a single integer — the minimum total cost.\n\nExamples\n\nInput\n\n\n3\n1 9\n2 1\n4 1\n\n\nOutput\n\n\n11\n\n\nInput\n\n\n6\n4 2\n8 4\n3 0\n2 3\n7 1\n0 1\n\n\nOutput\n\n\n13\n\nNote\n\nIn the first test case, we can travel in order 1→ 3→ 2→ 1. \n\n  * The flight 1→ 3 costs max(c_1,a_3-a_1)=max(9,4-1)=9. \n  * The flight 3→ 2 costs max(c_3, a_2-a_3)=max(1,2-4)=1. \n  * The flight 2→ 1 costs max(c_2,a_1-a_2)=max(1,1-2)=1. \n\n\n\nThe total cost is 11, and we cannot do better.", "grammar": {"answer": null}}
{"name": "678_C. Joty and Chocolate", "description": "Little Joty has got a task to do. She has a line of n tiles indexed from 1 to n. She has to paint them in a strange pattern.\n\nAn unpainted tile should be painted Red if it's index is divisible by a and an unpainted tile should be painted Blue if it's index is divisible by b. So the tile with the number divisible by a and b can be either painted Red or Blue.\n\nAfter her painting is done, she will get p chocolates for each tile that is painted Red and q chocolates for each tile that is painted Blue.\n\nNote that she can paint tiles in any order she wants.\n\nGiven the required information, find the maximum number of chocolates Joty can get.\n\nInput\n\nThe only line contains five integers n, a, b, p and q (1 ≤ n, a, b, p, q ≤ 109).\n\nOutput\n\nPrint the only integer s — the maximum number of chocolates Joty can get.\n\nNote that the answer can be too large, so you should use 64-bit integer type to store it. In C++ you can use the long long integer type and in Java you can use long integer type.\n\nExamples\n\nInput\n\n5 2 3 12 15\n\n\nOutput\n\n39\n\n\nInput\n\n20 2 3 3 5\n\n\nOutput\n\n51", "grammar": {"answer": null}}
{"name": "p02754 AtCoder Beginner Contest 158 - Count Balls", "description": "Takahashi has many red balls and blue balls. Now, he will place them in a row.\n\nInitially, there is no ball placed.\n\nTakahashi, who is very patient, will do the following operation 10^{100} times:\n\n* Place A blue balls at the end of the row of balls already placed. Then, place B red balls at the end of the row.\n\n\n\nHow many blue balls will be there among the first N balls in the row of balls made this way?\n\nConstraints\n\n* 1 \\leq N \\leq 10^{18}\n* A, B \\geq 0\n* 0 < A + B \\leq 10^{18}\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN A B\n\n\nOutput\n\nPrint the number of blue balls that will be there among the first N balls in the row of balls.\n\nExamples\n\nInput\n\n8 3 4\n\n\nOutput\n\n4\n\n\nInput\n\n8 0 4\n\n\nOutput\n\n0\n\n\nInput\n\n6 2 4\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p00928 Automotive Navigation", "description": "Example\n\nInput\n\n4 2 1 1\n1 1 1 2\n2 2 2 1\n2 2 1 2\n1 1 2 1\n9 N\n\n\nOutput\n\n1 1\n2 2", "grammar": {"answer": null}}
{"name": "401_D. Roman and Numbers", "description": "Roman is a young mathematician, very famous in Uzhland. Unfortunately, Sereja doesn't think so. To make Sereja change his mind, Roman is ready to solve any mathematical problem. After some thought, Sereja asked Roma to find, how many numbers are close to number n, modulo m.\n\nNumber x is considered close to number n modulo m, if:\n\n  * it can be obtained by rearranging the digits of number n, \n  * it doesn't have any leading zeroes, \n  * the remainder after dividing number x by m equals 0. \n\n\n\nRoman is a good mathematician, but the number of such numbers is too huge for him. So he asks you to help him.\n\nInput\n\nThe first line contains two integers: n (1 ≤ n < 1018) and m (1 ≤ m ≤ 100).\n\nOutput\n\nIn a single line print a single integer — the number of numbers close to number n modulo m.\n\nExamples\n\nInput\n\n104 2\n\n\nOutput\n\n3\n\n\nInput\n\n223 4\n\n\nOutput\n\n1\n\n\nInput\n\n7067678 8\n\n\nOutput\n\n47\n\nNote\n\nIn the first sample the required numbers are: 104, 140, 410.\n\nIn the second sample the required number is 232.", "grammar": {"answer": null}}
{"name": "p00590 Pair of Primes", "description": "We arrange the numbers between 1 and N (1 <= N <= 10000) in increasing order and decreasing order like this:\n\n\n1 2 3 4 5 6 7 8 9 . . . N\nN . . . 9 8 7 6 5 4 3 2 1\n\n\nTwo numbers faced each other form a pair. Your task is to compute the number of pairs P such that both numbers in the pairs are prime.\n\n\n\nInput\n\nInput contains several test cases. Each test case consists of an integer N in one line.\n\nOutput\n\nFor each line of input, output P .\n\nExample\n\nInput\n\n1\n4\n7\n51\n\n\nOutput\n\n0\n2\n2\n6", "grammar": {"answer": null}}
{"name": "1436_B. Prime Square", "description": "Sasha likes investigating different math objects, for example, magic squares. But Sasha understands that magic squares have already been studied by hundreds of people, so he sees no sense of studying them further. Instead, he invented his own type of square — a prime square. \n\nA square of size n × n is called prime if the following three conditions are held simultaneously: \n\n  * all numbers on the square are non-negative integers not exceeding 10^5; \n  * there are no prime numbers in the square; \n  * sums of integers in each row and each column are prime numbers. \n\n\n\nSasha has an integer n. He asks you to find any prime square of size n × n. Sasha is absolutely sure such squares exist, so just help him!\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 10) — the number of test cases.\n\nEach of the next t lines contains a single integer n (2 ≤ n ≤ 100) — the required size of a square.\n\nOutput\n\nFor each test case print n lines, each containing n integers — the prime square you built. If there are multiple answers, print any.\n\nExample\n\nInput\n\n\n2\n4\n2\n\n\nOutput\n\n\n4 6 8 1\n4 9 9 9\n4 10 10 65\n1 4 4 4\n1 1\n1 1", "grammar": {"answer": null}}
{"name": "913_H. Don't Exceed", "description": "You generate real numbers s1, s2, ..., sn as follows: \n\n  * s0 = 0; \n  * si = si - 1 + ti, where ti is a real number chosen independently uniformly at random between 0 and 1, inclusive. \n\n\n\nYou are given real numbers x1, x2, ..., xn. You are interested in the probability that si ≤ xi is true for all i simultaneously.\n\nIt can be shown that this can be represented as <image>, where P and Q are coprime integers, and <image>. Print the value of P·Q - 1 modulo 998244353.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 30).\n\nThe next n lines contain real numbers x1, x2, ..., xn, given with at most six digits after the decimal point (0 < xi ≤ n).\n\nOutput\n\nPrint a single integer, the answer to the problem.\n\nExamples\n\nInput\n\n4\n1.00\n2\n3.000000\n4.0\n\n\nOutput\n\n1\n\n\nInput\n\n1\n0.50216\n\n\nOutput\n\n342677322\n\n\nInput\n\n2\n0.5\n1.0\n\n\nOutput\n\n623902721\n\n\nInput\n\n6\n0.77\n1.234567\n2.1\n1.890\n2.9999\n3.77\n\n\nOutput\n\n859831967\n\nNote\n\nIn the first example, the sought probability is 1 since the sum of i real numbers which don't exceed 1 doesn't exceed i.\n\nIn the second example, the probability is x1 itself.\n\nIn the third example, the sought probability is 3 / 8.", "grammar": {"answer": null}}
{"name": "p00057 The Number of Area", "description": "If you draw a few infinitely long straight lines on an infinitely wide plane, this plane will be divided into several areas. For example, if you draw a straight line, the plane will be divided into two areas. Even if you draw the same number of straight lines, the number of areas obtained will differ depending on how you draw. For example, if you draw two straight lines in parallel, you get three areas, and if you draw two straight lines perpendicular to each other, you get four areas.\n\n<image>\n\n\nCreate a program that outputs the maximum number of regions that can be obtained by drawing n straight lines.\n\n\n\nInput\n\nGiven multiple datasets. Each dataset is given n (1 ≤ n ≤ 10,000) on one row. Please process until the end of the input.\n\nThe number of datasets does not exceed 50.\n\nOutput\n\nFor each dataset, output the maximum number of divisions on one line.\n\nExample\n\nInput\n\n1\n3\n\n\nOutput\n\n2\n7", "grammar": {"answer": null}}
{"name": "p03448 AtCoder Beginner Contest 087 - Coins", "description": "You have A 500-yen coins, B 100-yen coins and C 50-yen coins (yen is the currency of Japan). In how many ways can we select some of these coins so that they are X yen in total?\n\nCoins of the same kind cannot be distinguished. Two ways to select coins are distinguished when, for some kind of coin, the numbers of that coin are different.\n\nConstraints\n\n* 0 \\leq A, B, C \\leq 50\n* A + B + C \\geq 1\n* 50 \\leq X \\leq 20 000\n* A, B and C are integers.\n* X is a multiple of 50.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA\nB\nC\nX\n\n\nOutput\n\nPrint the number of ways to select coins.\n\nExamples\n\nInput\n\n2\n2\n2\n100\n\n\nOutput\n\n2\n\n\nInput\n\n5\n1\n0\n150\n\n\nOutput\n\n0\n\n\nInput\n\n30\n40\n50\n6000\n\n\nOutput\n\n213", "grammar": {"answer": null}}
{"name": "1331_E. Jordan Smiley", "description": "<image>\n\nInput\n\nThe input contains two integers row, col (0 ≤ row, col ≤ 63), separated by a single space.\n\nOutput\n\nOutput \"IN\" or \"OUT\".\n\nExamples\n\nInput\n\n\n0 0\n\n\nOutput\n\n\nOUT\n\n\nInput\n\n\n27 0\n\n\nOutput\n\n\nIN\n\n\nInput\n\n\n0 27\n\n\nOutput\n\n\nOUT\n\n\nInput\n\n\n27 27\n\n\nOutput\n\n\nIN", "grammar": {"answer": null}}
{"name": "p03238 AtCoder Beginner Contest 112 - Programming Education", "description": "In 2020, AtCoder Inc. with an annual sales of more than one billion yen (the currency of Japan) has started a business in programming education.\nOne day, there was an exam where a one-year-old child must write a program that prints `Hello World`, and a two-year-old child must write a program that receives integers A, B and prints A+B.\nTakahashi, who is taking this exam, suddenly forgets his age.\nHe decides to write a program that first receives his age N (1 or 2) as input, then prints `Hello World` if N=1, and additionally receives integers A, B and prints A+B if N=2.\nWrite this program for him.\n\nConstraints\n\n* N is 1 or 2.\n* A is an integer between 1 and 9 (inclusive).\n* B is an integer between 1 and 9 (inclusive).\n\nInput\n\nInput is given from Standard Input in one of the following formats:\n\n\n1\n\n\n\n2\nA\nB\n\n\nOutput\n\nIf N=1, print `Hello World`; if N=2, print A+B.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\nHello World\n\n\nInput\n\n2\n3\n5\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "p02729 AtCoder Beginner Contest 159 - The Number of Even Pairs", "description": "We have N+M balls, each of which has an integer written on it.\nIt is known that:\n\n* The numbers written on N of the balls are even.\n* The numbers written on M of the balls are odd.\n\n\n\nFind the number of ways to choose two of the N+M balls (disregarding order) so that the sum of the numbers written on them is even.\nIt can be shown that this count does not depend on the actual values written on the balls.\n\nConstraints\n\n* 0 \\leq N,M \\leq 100\n* 2 \\leq N+M\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n2 1\n\n\nOutput\n\n1\n\n\nInput\n\n4 3\n\n\nOutput\n\n9\n\n\nInput\n\n1 1\n\n\nOutput\n\n0\n\n\nInput\n\n13 3\n\n\nOutput\n\n81\n\n\nInput\n\n0 3\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p02715 AtCoder Beginner Contest 162 - Sum of gcd of Tuples (Hard)", "description": "Consider sequences \\\\{A_1,...,A_N\\\\} of length N consisting of integers between 1 and K (inclusive).\n\nThere are K^N such sequences. Find the sum of \\gcd(A_1, ..., A_N) over all of them.\n\nSince this sum can be enormous, print the value modulo (10^9+7).\n\nHere \\gcd(A_1, ..., A_N) denotes the greatest common divisor of A_1, ..., A_N.\n\nConstraints\n\n* 2 \\leq N \\leq 10^5\n* 1 \\leq K \\leq 10^5\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\n\n\nOutput\n\nPrint the sum of \\gcd(A_1, ..., A_N) over all K^N sequences, modulo (10^9+7).\n\nExamples\n\nInput\n\n3 2\n\n\nOutput\n\n9\n\n\nInput\n\n3 200\n\n\nOutput\n\n10813692\n\n\nInput\n\n100000 100000\n\n\nOutput\n\n742202979", "grammar": {"answer": null}}
{"name": "1062_D. Fun with Integers", "description": "You are given a positive integer n greater or equal to 2. For every pair of integers a and b (2 ≤ |a|, |b| ≤ n), you can transform a into b if and only if there exists an integer x such that 1 < |x| and (a ⋅ x = b or b ⋅ x = a), where |x| denotes the absolute value of x.\n\nAfter such a transformation, your score increases by |x| points and you are not allowed to transform a into b nor b into a anymore.\n\nInitially, you have a score of 0. You can start at any integer and transform it as many times as you like. What is the maximum score you can achieve?\n\nInput\n\nA single line contains a single integer n (2 ≤ n ≤ 100 000) — the given integer described above.\n\nOutput\n\nPrint an only integer — the maximum score that can be achieved with the transformations. If it is not possible to perform even a single transformation for all possible starting integers, print 0.\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n8\n\nInput\n\n6\n\n\nOutput\n\n28\n\nInput\n\n2\n\n\nOutput\n\n0\n\nNote\n\nIn the first example, the transformations are 2 → 4 → (-2) → (-4) → 2.\n\nIn the third example, it is impossible to perform even a single transformation.", "grammar": {"answer": null}}
{"name": "1475_A. Odd Divisor", "description": "You are given an integer n. Check if n has an odd divisor, greater than one (does there exist such a number x (x > 1) that n is divisible by x and x is odd).\n\nFor example, if n=6, then there is x=3. If n=4, then such a number does not exist.\n\nInput\n\nThe first line contains one integer t (1 ≤ t ≤ 10^4) — the number of test cases. Then t test cases follow.\n\nEach test case contains one integer n (2 ≤ n ≤ 10^{14}).\n\nPlease note, that the input for some test cases won't fit into 32-bit integer type, so you should use at least 64-bit integer type in your programming language.\n\nOutput\n\nFor each test case, output on a separate line: \n\n  * \"YES\" if n has an odd divisor, greater than one; \n  * \"NO\" otherwise. \n\n\n\nYou can output \"YES\" and \"NO\" in any case (for example, the strings yEs, yes, Yes and YES will be recognized as positive).\n\nExample\n\nInput\n\n\n6\n2\n3\n4\n5\n998244353\n1099511627776\n\n\nOutput\n\n\nNO\nYES\nNO\nYES\nYES\nNO", "grammar": {"answer": null}}
{"name": "p03688 AtCoder Grand Contest 016 - Colorful Hats", "description": "There are N cats. We number them from 1 through N.\n\nEach of the cats wears a hat. Cat i says: \"there are exactly a_i different colors among the N - 1 hats worn by the cats except me.\"\n\nDetermine whether there exists a sequence of colors of the hats that is consistent with the remarks of the cats.\n\nConstraints\n\n* 2 ≤ N ≤ 10^5\n* 1 ≤ a_i ≤ N-1\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 a_2 ... a_N\n\n\nOutput\n\nPrint `Yes` if there exists a sequence of colors of the hats that is consistent with the remarks of the cats; print `No` otherwise.\n\nExamples\n\nInput\n\n3\n1 2 2\n\n\nOutput\n\nYes\n\n\nInput\n\n3\n1 1 2\n\n\nOutput\n\nNo\n\n\nInput\n\n5\n4 3 4 3 4\n\n\nOutput\n\nNo\n\n\nInput\n\n3\n2 2 2\n\n\nOutput\n\nYes\n\n\nInput\n\n4\n2 2 2 2\n\n\nOutput\n\nYes\n\n\nInput\n\n5\n3 3 3 3 3\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p03231 AtCoder Grand Contest 028 - Two Abbreviations", "description": "You are given a string S of length N and another string T of length M. These strings consist of lowercase English letters.\n\nA string X is called a good string when the following conditions are all met:\n\n* Let L be the length of X. L is divisible by both N and M.\n* Concatenating the 1-st, (\\frac{L}{N}+1)-th, (2 \\times \\frac{L}{N}+1)-th, ..., ((N-1)\\times\\frac{L}{N}+1)-th characters of X, without changing the order, results in S.\n* Concatenating the 1-st, (\\frac{L}{M}+1)-th, (2 \\times \\frac{L}{M}+1)-th, ..., ((M-1)\\times\\frac{L}{M}+1)-th characters of X, without changing the order, results in T.\n\n\n\nDetermine if there exists a good string. If it exists, find the length of the shortest such string.\n\nConstraints\n\n* 1 \\leq N,M \\leq 10^5\n* S and T consist of lowercase English letters.\n* |S|=N\n* |T|=M\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nS\nT\n\n\nOutput\n\nIf a good string does not exist, print `-1`; if it exists, print the length of the shortest such string.\n\nExamples\n\nInput\n\n3 2\nacp\nae\n\n\nOutput\n\n6\n\n\nInput\n\n6 3\nabcdef\nabc\n\n\nOutput\n\n-1\n\n\nInput\n\n15 9\ndnsusrayukuaiia\ndujrunuma\n\n\nOutput\n\n45", "grammar": {"answer": null}}
{"name": "p03295 AtCoder Beginner Contest 103 - Islands War", "description": "There are N islands lining up from west to east, connected by N-1 bridges.\n\nThe i-th bridge connects the i-th island from the west and the (i+1)-th island from the west.\n\nOne day, disputes took place between some islands, and there were M requests from the inhabitants of the islands:\n\nRequest i: A dispute took place between the a_i-th island from the west and the b_i-th island from the west. Please make traveling between these islands with bridges impossible.\n\nYou decided to remove some bridges to meet all these M requests.\n\nFind the minimum number of bridges that must be removed.\n\nConstraints\n\n* All values in input are integers.\n* 2 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 10^5\n* 1 \\leq a_i < b_i \\leq N\n* All pairs (a_i, b_i) are distinct.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\na_1 b_1\na_2 b_2\n:\na_M b_M\n\n\nOutput\n\nPrint the minimum number of bridges that must be removed.\n\nExamples\n\nInput\n\n5 2\n1 4\n2 5\n\n\nOutput\n\n1\n\n\nInput\n\n9 5\n1 8\n2 7\n3 5\n4 6\n7 9\n\n\nOutput\n\n2\n\n\nInput\n\n5 10\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "784_F. Crunching Numbers Just for You", "description": "You are developing a new feature for the website which sells airline tickets: being able to sort tickets by price! You have already extracted the tickets' prices, so there's just the last step to be done...\n\nYou are given an array of integers. Sort it in non-descending order.\n\nInput\n\nThe input consists of a single line of space-separated integers. The first number is n (1 ≤ n ≤ 10) — the size of the array. The following n numbers are the elements of the array (1 ≤ ai ≤ 100).\n\nOutput\n\nOutput space-separated elements of the sorted array.\n\nExample\n\nInput\n\n3 3 1 2\n\n\nOutput\n\n1 2 3 \n\nNote\n\nRemember, this is a very important feature, and you have to make sure the customers appreciate it!", "grammar": {"answer": null}}
{"name": "p02853 DISCO Presents Discovery Channel Code Contest 2020 Qual - DDCC Finals", "description": "We held two competitions: Coding Contest and Robot Maneuver.\n\nIn each competition, the contestants taking the 3-rd, 2-nd, and 1-st places receive 100000, 200000, and 300000 yen (the currency of Japan), respectively. Furthermore, a contestant taking the first place in both competitions receives an additional 400000 yen.\n\nDISCO-Kun took the X-th place in Coding Contest and the Y-th place in Robot Maneuver. Find the total amount of money he earned.\n\nConstraints\n\n* 1 \\leq X \\leq 205\n* 1 \\leq Y \\leq 205\n* X and Y are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX Y\n\n\nOutput\n\nPrint the amount of money DISCO-Kun earned, as an integer.\n\nExamples\n\nInput\n\n1 1\n\n\nOutput\n\n1000000\n\n\nInput\n\n3 101\n\n\nOutput\n\n100000\n\n\nInput\n\n4 4\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03359 AtCoder Beginner Contest 096 - Day of Takahashi", "description": "In AtCoder Kingdom, Gregorian calendar is used, and dates are written in the \"year-month-day\" order, or the \"month-day\" order without the year.\nFor example, May 3, 2018 is written as 2018-5-3, or 5-3 without the year.\n\nIn this country, a date is called Takahashi when the month and the day are equal as numbers. For example, 5-5 is Takahashi.\nHow many days from 2018-1-1 through 2018-a-b are Takahashi?\n\nConstraints\n\n* a is an integer between 1 and 12 (inclusive).\n* b is an integer between 1 and 31 (inclusive).\n* 2018-a-b is a valid date in Gregorian calendar.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\na b\n\n\nOutput\n\nPrint the number of days from 2018-1-1 through 2018-a-b that are Takahashi.\n\nExamples\n\nInput\n\n5 5\n\n\nOutput\n\n5\n\n\nInput\n\n2 1\n\n\nOutput\n\n1\n\n\nInput\n\n11 30\n\n\nOutput\n\n11", "grammar": {"answer": null}}
{"name": "p02449 Permutation", "description": "For given a sequence $A = \\\\{a_0, a_1, ..., a_{n-1}\\\\}$, print the previous permutation and the next permutation in lexicographic order.\n\nConstraints\n\n* $1 \\leq n \\leq 9$\n* $a_i$ consist of $1, 2, ..., n$\n\nInput\n\nA sequence is given in the following format.\n\n\n$n$\n$a_0 \\; a_1 \\; ... \\; a_{n-1}$\n\n\nOutput\n\nPrint the previous permutation, the given sequence and the next permutation in the 1st, 2nd and 3rd lines respectively. Separate adjacency elements by a space character. Note that if there is no permutation, print nothing in the corresponding line.\n\nExamples\n\nInput\n\n3\n2 1 3\n\n\nOutput\n\n1 3 2\n2 1 3\n2 3 1\n\n\nInput\n\n3\n3 2 1\n\n\nOutput\n\n3 1 2\n3 2 1", "grammar": {"answer": null}}
{"name": "p04022 AtCoder Grand Contest 003 - Anticube", "description": "Snuke got positive integers s_1,...,s_N from his mother, as a birthday present. There may be duplicate elements.\n\nHe will circle some of these N integers. Since he dislikes cubic numbers, he wants to ensure that if both s_i and s_j (i ≠ j) are circled, the product s_is_j is not cubic. For example, when s_1=1,s_2=1,s_3=2,s_4=4, it is not possible to circle both s_1 and s_2 at the same time. It is not possible to circle both s_3 and s_4 at the same time, either.\n\nFind the maximum number of integers that Snuke can circle.\n\nConstraints\n\n* 1 ≦ N ≦ 10^5\n* 1 ≦ s_i ≦ 10^{10}\n* All input values are integers.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\ns_1\n:\ns_N\n\n\nOutput\n\nPrint the maximum number of integers that Snuke can circle.\n\nExamples\n\nInput\n\n8\n1\n2\n3\n4\n5\n6\n7\n8\n\n\nOutput\n\n6\n\n\nInput\n\n6\n2\n4\n8\n16\n32\n64\n\n\nOutput\n\n3\n\n\nInput\n\n10\n1\n10\n100\n1000000007\n10000000000\n1000000009\n999999999\n999\n999\n999\n\n\nOutput\n\n9", "grammar": {"answer": null}}
{"name": "p02350 RMQ and RUQ", "description": "Write a program which manipulates a sequence A = {a0, a1, . . . , an−1} with the following operations:\n\n* update(s, t, x): change as, as+1, ..., at to x.\n* find(s, t): report the minimum element in as, as+1, ..., at.\n\n\n\nNote that the initial values of ai (i = 0, 1, . . . , n−1) are 231-1.\n\nConstraints\n\n* 1 ≤ n ≤ 100000\n* 1 ≤ q ≤ 100000\n* 0 ≤ s ≤ t < n\n* 0 ≤ x < 231−1\n\nInput\n\n\nn q\nquery1\nquery2\n:\nqueryq\n\n\nIn the first line, n (the number of elements in A) and q (the number of queries) are given. Then, ith query queryi is given in the following format:\n\n\n0 s t x\n\n\nor\n\n\n1 s t\n\n\nThe first digit represents the type of the query. '0' denotes update(s, t, x) and '1' denotes find(s, t).\n\nOutput\n\nFor each find operation, print the minimum value.\n\nExamples\n\nInput\n\n3 5\n0 0 1 1\n0 1 2 3\n0 2 2 2\n1 0 2\n1 1 2\n\n\nOutput\n\n1\n2\n\n\nInput\n\n1 3\n1 0 0\n0 0 0 5\n1 0 0\n\n\nOutput\n\n2147483647\n5", "grammar": {"answer": null}}
{"name": "p02578 AtCoder Beginner Contest 176 - Step", "description": "N persons are standing in a row. The height of the i-th person from the front is A_i.\n\nWe want to have each person stand on a stool of some heights - at least zero - so that the following condition is satisfied for every person:\n\nCondition: Nobody in front of the person is taller than the person. Here, the height of a person includes the stool.\n\nFind the minimum total height of the stools needed to meet this goal.\n\nConstraints\n\n* 1 \\leq N \\leq 2\\times 10^5\n* 1 \\leq A_i \\leq 10^9\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 \\ldots A_N\n\n\nOutput\n\nPrint the minimum total height of the stools needed to meet the goal.\n\nExamples\n\nInput\n\n5\n2 1 5 4 3\n\n\nOutput\n\n4\n\n\nInput\n\n5\n3 3 3 3 3\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02441 Count", "description": "For a given sequence of integers $A = \\\\{a_0, a_1, ..., a_{n-1}\\\\}$, perform the following operations.\n\n* count($b, e, k$): print the number of the specific values $k$ in $a_b, a_{b+1}, ..., a_{e-1}$.\n\nConstraints\n\n* $1 \\leq n \\leq 1,000$\n* $-1,000,000,000 \\leq a_i, k_i \\leq 1,000,000,000$\n* $1 \\leq q \\leq 1,000$\n* $0 \\leq b < e \\leq n$\n\nInput\n\nThe input is given in the following format.\n\n\n$n$\n$a_0 \\; a_1, ..., \\; a_{n-1}$\n$q$\n$b_1 \\; e_1 \\; k_1$\n$b_2 \\; e_2 \\; k_2$\n:\n$b_q \\; e_q \\; k_q$\n\n\nThe number of elements $n$ and each element $a_i$ are given in the first line and the second line respectively. In the third line, the number of queries $q$ is given and the following $q$ lines, $q$ integers $b_i \\; b_e \\; k_i$ are given as queries.\n\nOutput\n\nFor each query, print the number of specified values.\n\nExample\n\nInput\n\n9\n1 4 1 4 2 1 3 5 6\n3\n0 9 1\n1 6 1\n3 7 5\n\n\nOutput\n\n3\n2\n0", "grammar": {"answer": null}}
{"name": "p03284 AtCoder Beginner Contest 105 - AtCoder Crackers", "description": "Takahashi has decided to distribute N AtCoder Crackers to K users of as evenly as possible. When all the crackers are distributed, find the minimum possible (absolute) difference between the largest number of crackers received by a user and the smallest number received by a user.\n\nConstraints\n\n* 1 \\leq N,K \\leq 100\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\n\n\nOutput\n\nPrint the minimum possible (absolute) difference between the largest number of crackers received by a user and the smallest number received by a user.\n\nExamples\n\nInput\n\n7 3\n\n\nOutput\n\n1\n\n\nInput\n\n100 10\n\n\nOutput\n\n0\n\n\nInput\n\n1 1\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p03773 AtCoder Beginner Contest 057 - Remaining Time", "description": "Dolphin loves programming contests. Today, he will take part in a contest in AtCoder.\nIn this country, 24-hour clock is used. For example, 9:00 p.m. is referred to as \"21 o'clock\".\nThe current time is A o'clock, and a contest will begin in exactly B hours. When will the contest begin? Answer in 24-hour time.\n\nConstraints\n\n* 0 \\leq A,B \\leq 23\n* A and B are integers.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nA B\n\n\nOutput\n\nPrint the hour of the starting time of the contest in 24-hour time.\n\nExamples\n\nInput\n\n9 12\n\n\nOutput\n\n21\n\n\nInput\n\n19 0\n\n\nOutput\n\n19\n\n\nInput\n\n23 2\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "1451_A. Subtract or Divide", "description": "Ridbit starts with an integer n.\n\nIn one move, he can perform one of the following operations: \n\n  * divide n by one of its proper divisors, or \n  * subtract 1 from n if n is greater than 1. \n\n\n\nA proper divisor is a divisor of a number, excluding itself. For example, 1, 2, 4, 5, and 10 are proper divisors of 20, but 20 itself is not.\n\nWhat is the minimum number of moves Ridbit is required to make to reduce n to 1?\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 1000) — the number of test cases.\n\nThe only line of each test case contains a single integer n (1 ≤ n ≤ 10^9).\n\nOutput\n\nFor each test case, output the minimum number of moves required to reduce n to 1.\n\nExample\n\nInput\n\n\n6\n1\n2\n3\n4\n6\n9\n\n\nOutput\n\n\n0\n1\n2\n2\n2\n3\n\nNote\n\nFor the test cases in the example, n may be reduced to 1 using the following operations in sequence\n\n1\n\n2 \\xrightarrow{} 1\n\n3 \\xrightarrow{} 2 \\xrightarrow{} 1\n\n4 \\xrightarrow{} 2 \\xrightarrow{} 1\n\n6 \\xrightarrow{} 2 \\xrightarrow{} 1\n\n9 \\xrightarrow{} 3 \\xrightarrow{} 2\\xrightarrow{} 1", "grammar": {"answer": null}}
{"name": "p01356 Nearest Station", "description": "I have n tickets for a train with a rabbit. Each ticket is numbered from 0 to n − 1, and you can use the k ticket to go to p⋅ak + q⋅bk station.\n\nRabbit wants to go to the all-you-can-eat carrot shop at the station m station ahead of the current station, but wants to walk as short as possible. The stations are lined up at regular intervals. When using, how many stations can a rabbit walk to reach the store?\n\n\n\nInput\n\n1 ≤ n, m, a, b, p, q ≤ 1 000 000 000 000 (integer)\n\nOutput\n\nOutput the number of rabbits that can reach the store on foot at the minimum number of stations in one line.\n\nExamples\n\nInput\n\n6 200 2 3 4 5\n\n\nOutput\n\n1\n\n\nInput\n\n6 1 2 3 4 5\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "875_A. Classroom Watch", "description": "Eighth-grader Vova is on duty today in the class. After classes, he went into the office to wash the board, and found on it the number n. He asked what is this number and the teacher of mathematics Inna Petrovna answered Vova that n is the answer to the arithmetic task for first-graders. In the textbook, a certain positive integer x was given. The task was to add x to the sum of the digits of the number x written in decimal numeral system.\n\nSince the number n on the board was small, Vova quickly guessed which x could be in the textbook. Now he wants to get a program which will search for arbitrary values of the number n for all suitable values of x or determine that such x does not exist. Write such a program for Vova.\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 109).\n\nOutput\n\nIn the first line print one integer k — number of different values of x satisfying the condition. \n\nIn next k lines print these values in ascending order.\n\nExamples\n\nInput\n\n21\n\n\nOutput\n\n1\n15\n\n\nInput\n\n20\n\n\nOutput\n\n0\n\nNote\n\nIn the first test case x = 15 there is only one variant: 15 + 1 + 5 = 21.\n\nIn the second test case there are no such x.", "grammar": {"answer": null}}
{"name": "233_A. Perfect Permutation", "description": "A permutation is a sequence of integers p1, p2, ..., pn, consisting of n distinct positive integers, each of them doesn't exceed n. Let's denote the i-th element of permutation p as pi. We'll call number n the size of permutation p1, p2, ..., pn.\n\nNickolas adores permutations. He likes some permutations more than the others. He calls such permutations perfect. A perfect permutation is such permutation p that for any i (1 ≤ i ≤ n) (n is the permutation size) the following equations hold ppi = i and pi ≠ i. Nickolas asks you to print any perfect permutation of size n for the given n.\n\nInput\n\nA single line contains a single integer n (1 ≤ n ≤ 100) — the permutation size.\n\nOutput\n\nIf a perfect permutation of size n doesn't exist, print a single integer -1. Otherwise print n distinct integers from 1 to n, p1, p2, ..., pn — permutation p, that is perfect. Separate printed numbers by whitespaces.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n-1\n\n\nInput\n\n2\n\n\nOutput\n\n2 1 \n\n\nInput\n\n4\n\n\nOutput\n\n2 1 4 3 ", "grammar": {"answer": null}}
{"name": "p02474 Multiplication of Big Integers", "description": "Multiplication of Big Integers\n\nGiven two integers $A$ and $B$, compute the product, $A \\times B$.\n\nInput\n\nTwo integers $A$ and $B$ separated by a space character are given in a line.\n\nOutput\n\nPrint the product in a line.\n\nConstraints\n\n* $-1 \\times 10^{1000} \\leq A, B \\leq 10^{1000}$\n\n\n\nSample Input 1\n\n\n5 8\n\n\nSample Output 1\n\n\n40\n\n\nSample Input 2\n\n\n100 25\n\n\nSample Output 2\n\n\n2500\n\n\nSample Input 3\n\n\n-1 0\n\n\nSample Output 3\n\n\n0\n\n\nSample Input 4\n\n\n12 -3\n\n\nSample Output 4\n\n\n-36\n\n\n\n\n\n\nExample\n\nInput\n\n5 8\n\n\nOutput\n\n40", "grammar": {"answer": null}}
{"name": "21_B. Intersection", "description": "You are given two set of points. The first set is determined by the equation A1x + B1y + C1 = 0, and the second one is determined by the equation A2x + B2y + C2 = 0.\n\nWrite the program which finds the number of points in the intersection of two given sets.\n\nInput\n\nThe first line of the input contains three integer numbers A1, B1, C1 separated by space. The second line contains three integer numbers A2, B2, C2 separated by space. All the numbers are between -100 and 100, inclusive.\n\nOutput\n\nPrint the number of points in the intersection or -1 if there are infinite number of points.\n\nExamples\n\nInput\n\n1 1 0\n2 2 0\n\n\nOutput\n\n-1\n\n\nInput\n\n1 1 0\n2 -2 0\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "435_B. Pasha Maximizes", "description": "Pasha has a positive integer a without leading zeroes. Today he decided that the number is too small and he should make it larger. Unfortunately, the only operation Pasha can do is to swap two adjacent decimal digits of the integer.\n\nHelp Pasha count the maximum number he can get if he has the time to make at most k swaps.\n\nInput\n\nThe single line contains two integers a and k (1 ≤ a ≤ 1018; 0 ≤ k ≤ 100).\n\nOutput\n\nPrint the maximum number that Pasha can get if he makes at most k swaps.\n\nExamples\n\nInput\n\n1990 1\n\n\nOutput\n\n9190\n\n\nInput\n\n300 0\n\n\nOutput\n\n300\n\n\nInput\n\n1034 2\n\n\nOutput\n\n3104\n\n\nInput\n\n9090000078001234 6\n\n\nOutput\n\n9907000008001234", "grammar": {"answer": null}}
{"name": "844_B. Rectangles", "description": "You are given n × m table. Each cell of the table is colored white or black. Find the number of non-empty sets of cells such that:\n\n  1. All cells in a set have the same color. \n  2. Every two cells in a set share row or column. \n\nInput\n\nThe first line of input contains integers n and m (1 ≤ n, m ≤ 50) — the number of rows and the number of columns correspondingly.\n\nThe next n lines of input contain descriptions of rows. There are m integers, separated by spaces, in each line. The number equals 0 if the corresponding cell is colored white and equals 1 if the corresponding cell is colored black.\n\nOutput\n\nOutput single integer — the number of non-empty sets from the problem description.\n\nExamples\n\nInput\n\n1 1\n0\n\n\nOutput\n\n1\n\n\nInput\n\n2 3\n1 0 1\n0 1 0\n\n\nOutput\n\n8\n\nNote\n\nIn the second example, there are six one-element sets. Additionally, there are two two-element sets, the first one consists of the first and the third cells of the first row, the second one consists of the first and the third cells of the second row. To sum up, there are 8 sets.", "grammar": {"answer": null}}
{"name": "p00150 Twin Prime", "description": "Prime numbers are widely applied for cryptographic and communication technology. A twin prime is a prime number that differs from another prime number by 2. For example, (5, 7) and (11, 13) are twin prime pairs.\n\nIn this problem, we call the greater number of a twin prime \"size of the twin prime.\"\n\nYour task is to create a program which reads an integer n and prints a twin prime which has the maximum size among twin primes less than or equals to n\n\nYou may assume that 5 ≤ n ≤ 10000.\n\n\n\nInput\n\nThe input is a sequence of datasets. The end of the input is indicated by a line containing one zero. Each dataset is formatted as follows:\n\n\nn (integer)\n\n\nOutput\n\nFor each dataset, print the twin prime p and q (p < q). p and q should be separated by a single space.\n\nExample\n\nInput\n\n12\n100\n200\n300\n0\n\n\nOutput\n\n5 7\n71 73\n197 199\n281 283", "grammar": {"answer": null}}
{"name": "578_B. \"Or\" Game", "description": "You are given n numbers a1, a2, ..., an. You can perform at most k operations. For each operation you can multiply one of the numbers by x. We want to make <image> as large as possible, where <image> denotes the bitwise OR. \n\nFind the maximum possible value of <image> after performing at most k operations optimally.\n\nInput\n\nThe first line contains three integers n, k and x (1 ≤ n ≤ 200 000, 1 ≤ k ≤ 10, 2 ≤ x ≤ 8).\n\nThe second line contains n integers a1, a2, ..., an (0 ≤ ai ≤ 109).\n\nOutput\n\nOutput the maximum value of a bitwise OR of sequence elements after performing operations.\n\nExamples\n\nInput\n\n3 1 2\n1 1 1\n\n\nOutput\n\n3\n\n\nInput\n\n4 2 3\n1 2 4 8\n\n\nOutput\n\n79\n\nNote\n\nFor the first sample, any possible choice of doing one operation will result the same three numbers 1, 1, 2 so the result is <image>. \n\nFor the second sample if we multiply 8 by 3 two times we'll get 72. In this case the numbers will become 1, 2, 4, 72 so the OR value will be 79 and is the largest possible result.", "grammar": {"answer": null}}
{"name": "p03086 AtCoder Beginner Contest 122 - ATCoder", "description": "You are given a string S consisting of uppercase English letters. Find the length of the longest ACGT string that is a substring (see Notes) of S.\n\nHere, a ACGT string is a string that contains no characters other than `A`, `C`, `G` and `T`.\n\nConstraints\n\n* S is a string of length between 1 and 10 (inclusive).\n* Each character in S is an uppercase English letter.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the length of the longest ACGT string that is a substring of S.\n\nExamples\n\nInput\n\nATCODER\n\n\nOutput\n\n3\n\n\nInput\n\nHATAGAYA\n\n\nOutput\n\n5\n\n\nInput\n\nSHINJUKU\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "571_B. Minimization", "description": "You've got array A, consisting of n integers and a positive integer k. Array A is indexed by integers from 1 to n.\n\nYou need to permute the array elements so that value \n\n<image> became minimal possible. In particular, it is allowed not to change order of elements at all.\n\nInput\n\nThe first line contains two integers n, k (2 ≤ n ≤ 3·105, 1 ≤ k ≤ min(5000, n - 1)). \n\nThe second line contains n integers A[1], A[2], ..., A[n] ( - 109 ≤ A[i] ≤ 109), separate by spaces — elements of the array A.\n\nOutput\n\nPrint the minimum possible value of the sum described in the statement.\n\nExamples\n\nInput\n\n3 2\n1 2 4\n\n\nOutput\n\n1\n\n\nInput\n\n5 2\n3 -5 3 -5 3\n\n\nOutput\n\n0\n\n\nInput\n\n6 3\n4 3 4 3 2 5\n\n\nOutput\n\n3\n\nNote\n\nIn the first test one of the optimal permutations is 1 4 2. \n\nIn the second test the initial order is optimal. \n\nIn the third test one of the optimal permutations is 2 3 4 4 3 5.", "grammar": {"answer": null}}
{"name": "p03745 AtCoder Grand Contest 013 - Sorted Arrays", "description": "You are given an array A of length N. Your task is to divide it into several contiguous subarrays. Here, all subarrays obtained must be sorted in either non-decreasing or non-increasing order. At least how many subarrays do you need to divide A into?\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* 1 \\leq A_i \\leq 10^9\n* Each A_i is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the minimum possible number of subarrays after division of A.\n\nExamples\n\nInput\n\n6\n1 2 3 2 2 1\n\n\nOutput\n\n2\n\n\nInput\n\n9\n1 2 1 2 1 2 1 2 1\n\n\nOutput\n\n5\n\n\nInput\n\n7\n1 2 3 2 1 999999999 1000000000\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p00950 Infallibly Crack Perplexing Cryptarithm", "description": "Example\n\nInput\n\nACM\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p00939 Bringing Order to Disorder", "description": "Example\n\nInput\n\n20\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p02851 AtCoder Beginner Contest 146 - Rem of Sum is Num", "description": "Given are a sequence of N positive integers A_1, A_2, \\ldots, A_N, and a positive integer K.\n\nFind the number of non-empty contiguous subsequences in A such that the remainder when dividing the sum of its elements by K is equal to the number of its elements. We consider two subsequences different if they are taken from different positions, even if they are equal sequences.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 2\\times 10^5\n* 1 \\leq K \\leq 10^9\n* 1 \\leq A_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nA_1 A_2 \\cdots A_N\n\n\nOutput\n\nPrint the number of subsequences that satisfy the condition.\n\nExamples\n\nInput\n\n5 4\n1 4 2 3 5\n\n\nOutput\n\n4\n\n\nInput\n\n8 4\n4 2 4 2 4 2 4 2\n\n\nOutput\n\n7\n\n\nInput\n\n10 7\n14 15 92 65 35 89 79 32 38 46\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "p00063 Palindrome", "description": "There is data of up to 100 characters per line, consisting of half-width alphabetic character strings. Some lines are symmetric (same whether read from the left edge or the right edge). Create a program that reads this data and outputs the number of symmetric strings in it. Note that lines consisting of only one character are symmetrical.\n\n\n\nInput\n\nMultiple strings are given over multiple lines. One string is given for each line. The number of strings does not exceed 50.\n\nOutput\n\nOutputs the number of symmetric strings on one line.\n\nExample\n\nInput\n\nabcba\nsx\nabcddcba\nrttrd\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "616_D. Longest k-Good Segment", "description": "The array a with n integers is given. Let's call the sequence of one or more consecutive elements in a segment. Also let's call the segment k-good if it contains no more than k different values.\n\nFind any longest k-good segment.\n\nAs the input/output can reach huge size it is recommended to use fast input/output methods: for example, prefer to use scanf/printf instead of cin/cout in C++, prefer to use BufferedReader/PrintWriter instead of Scanner/System.out in Java.\n\nInput\n\nThe first line contains two integers n, k (1 ≤ k ≤ n ≤ 5·105) — the number of elements in a and the parameter k.\n\nThe second line contains n integers ai (0 ≤ ai ≤ 106) — the elements of the array a.\n\nOutput\n\nPrint two integers l, r (1 ≤ l ≤ r ≤ n) — the index of the left and the index of the right ends of some k-good longest segment. If there are several longest segments you can print any of them. The elements in a are numbered from 1 to n from left to right.\n\nExamples\n\nInput\n\n5 5\n1 2 3 4 5\n\n\nOutput\n\n1 5\n\n\nInput\n\n9 3\n6 5 1 2 3 2 1 4 5\n\n\nOutput\n\n3 7\n\n\nInput\n\n3 1\n1 2 3\n\n\nOutput\n\n1 1", "grammar": {"answer": null}}
{"name": "p03257 AtCoder Grand Contest 027 - Modulo Matrix", "description": "You are given an integer N.\n\nConstruct any one N-by-N matrix a that satisfies the conditions below. It can be proved that a solution always exists under the constraints of this problem.\n\n* 1 \\leq a_{i,j} \\leq 10^{15}\n* a_{i,j} are pairwise distinct integers.\n* There exists a positive integer m such that the following holds: Let x and y be two elements of the matrix that are vertically or horizontally adjacent. Then, {\\rm max}(x,y) {\\rm mod} {\\rm min}(x,y) is always m.\n\nConstraints\n\n* 2 \\leq N \\leq 500\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint your solution in the following format:\n\n\na_{1,1} ... a_{1,N}\n:\na_{N,1} ... a_{N,N}\n\nOutput\n\nPrint your solution in the following format:\n\n\na_{1,1} ... a_{1,N}\n:\na_{N,1} ... a_{N,N}\n\nExample\n\nInput\n\n2\n\n\nOutput\n\n4 7\n23 10", "grammar": {"answer": null}}
{"name": "p02365 Minimum-Cost Arborescence", "description": "Find the sum of the weights of edges of the Minimum-Cost Arborescence with the root r for a given weighted directed graph G = (V, E).\n\nConstraints\n\n* 1 ≤ |V| ≤ 100\n* 0 ≤ |E| ≤ 1,000\n* 0 ≤ wi ≤ 10,000\n* G has arborescence(s) with the root r\n\nInput\n\n\n|V| |E| r\ns0 t0 w0\ns1 t1 w1\n:\ns|E|-1 t|E|-1 w|E|-1\n\n\n, where |V| is the number of vertices and |E| is the number of edges in the graph. The graph vertices are named with the numbers 0, 1,..., |V|-1 respectively. r is the root of the Minimum-Cost Arborescence.\n\nsi and ti represent source and target verticess of i-th directed edge. wi represents the weight of the i-th directed edge.\n\nOutput\n\nPrint the sum of the weights the Minimum-Cost Arborescence.\n\nExamples\n\nInput\n\n4 6 0\n0 1 3\n0 2 2\n2 0 1\n2 3 1\n3 0 1\n3 1 5\n\n\nOutput\n\n6\n\n\nInput\n\n6 10 0\n0 2 7\n0 1 1\n0 3 5\n1 4 9\n2 1 6\n1 3 2\n3 4 3\n4 2 2\n2 5 8\n3 5 3\n\n\nOutput\n\n11", "grammar": {"answer": null}}
{"name": "p02272 Merge Sort", "description": "Write a program of a Merge Sort algorithm implemented by the following pseudocode. You should also report the number of comparisons in the Merge function.\n\n\nMerge(A, left, mid, right)\nn1 = mid - left;\nn2 = right - mid;\ncreate array L[0...n1], R[0...n2]\nfor i = 0 to n1-1\ndo L[i] = A[left + i]\nfor i = 0 to n2-1\ndo R[i] = A[mid + i]\nL[n1] = SENTINEL\nR[n2] = SENTINEL\ni = 0;\nj = 0;\nfor k = left to right-1\nif L[i] <= R[j]\nthen A[k] = L[i]\ni = i + 1\nelse A[k] = R[j]\nj = j + 1\n\nMerge-Sort(A, left, right){\nif left+1 < right\nthen mid = (left + right)/2;\ncall Merge-Sort(A, left, mid)\ncall Merge-Sort(A, mid, right)\ncall Merge(A, left, mid, right)\n\n\nNotes\n\nConstraints\n\n* n ≤ 500000\n* 0 ≤ an element in S ≤ 109\n\nInput\n\nIn the first line n is given. In the second line, n integers are given.\n\nOutput\n\nIn the first line, print the sequence S. Two consequtive elements should be separated by a space character.\n\nIn the second line, print the number of comparisons.\n\nExample\n\nInput\n\n10\n8 5 9 2 6 3 7 1 10 4\n\n\nOutput\n\n1 2 3 4 5 6 7 8 9 10\n34", "grammar": {"answer": null}}
{"name": "59_A. Word", "description": "Vasya is very upset that many people on the Net mix uppercase and lowercase letters in one word. That's why he decided to invent an extension for his favorite browser that would change the letters' register in every word so that it either only consisted of lowercase letters or, vice versa, only of uppercase ones. At that as little as possible letters should be changed in the word. For example, the word HoUse must be replaced with house, and the word ViP — with VIP. If a word contains an equal number of uppercase and lowercase letters, you should replace all the letters with lowercase ones. For example, maTRIx should be replaced by matrix. Your task is to use the given method on one given word.\n\nInput\n\nThe first line contains a word s — it consists of uppercase and lowercase Latin letters and possesses the length from 1 to 100.\n\nOutput\n\nPrint the corrected word s. If the given word s has strictly more uppercase letters, make the word written in the uppercase register, otherwise - in the lowercase one.\n\nExamples\n\nInput\n\nHoUse\n\n\nOutput\n\nhouse\n\n\nInput\n\nViP\n\n\nOutput\n\nVIP\n\n\nInput\n\nmaTRIx\n\n\nOutput\n\nmatrix", "grammar": {"answer": null}}
{"name": "p01866 Hamming Distance", "description": "Problem statement\n\nThere is an unsigned $ 2 $ decimal integer $ X $ with $ N $ in digits including Leading-zeros. Output the largest non-negative integer that can be expressed in $ 2 $ base in $ N $ digits where the Hamming distance from $ X $ is $ D $.\n\nThe Hamming distance between integers expressed in $ 2 $ is the number of digits with different values ​​in a number of $ 2 $. For example, the Hamming distance between $ 000 $ and $ 110 $ is $ 2 $.\n\nConstraint\n\n$ 1 \\ leq N \\ leq 1000 $\n$ 0 \\ leq D \\ leq N $\nAll inputs are non-negative integers\n\nsample\n\nSample input 1\n\n\nFive\n00001\n3\n\n\nSample output 1\n\n\n11101\n\n\nSample input 2\n\n\n7\n0110100\nFour\n\n\nSample output 2\n\n\n1111111\n\n\nSample input 3\n\n\n18\n110001001110100100\n6\n\n\nSample output 3\n\n\n111111111111100100\n\n\nSample input 4\n\n\n3\n000\n0\n\n\nSample output 4\n\n\n000\n\n\n\n\ninput\n\n$ N $\n$ X $\n$ D $\n\noutput\n\nOutput the integer of the answer on the $ 1 $ line in unsigned $ 2 $ decimal notation.\n\nExample\n\nInput\n\n5\n00001\n3\n\n\nOutput\n\n11101", "grammar": {"answer": null}}
{"name": "p03414 AtCoder Regular Contest 092 - Two Faced Edges", "description": "You are given a directed graph with N vertices and M edges. The vertices are numbered 1, 2, ..., N, and the edges are numbered 1, 2, ..., M. Edge i points from Vertex a_i to Vertex b_i.\n\nFor each edge, determine whether the reversion of that edge would change the number of the strongly connected components in the graph.\n\nHere, the reversion of Edge i means deleting Edge i and then adding a new edge that points from Vertex b_i to Vertex a_i.\n\nConstraints\n\n* 2 \\leq N \\leq 1000\n* 1 \\leq M \\leq 200,000\n* 1 \\leq a_i, b_i \\leq N\n* a_i \\neq b_i\n* If i \\neq j, then a_i \\neq a_j or b_i \\neq b_j.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\na_1 b_1\na_2 b_2\n:\na_M b_M\n\n\nOutput\n\nPrint M lines. In the i-th line, if the reversion of Edge i would change the number of the strongly connected components in the graph, print `diff`; if it would not, print `same`.\n\nExamples\n\nInput\n\n3 3\n1 2\n1 3\n2 3\n\n\nOutput\n\nsame\ndiff\nsame\n\n\nInput\n\n2 2\n1 2\n2 1\n\n\nOutput\n\ndiff\ndiff\n\n\nInput\n\n5 9\n3 2\n3 1\n4 1\n4 2\n3 5\n5 3\n3 4\n1 2\n2 5\n\n\nOutput\n\nsame\nsame\nsame\nsame\nsame\ndiff\ndiff\ndiff\ndiff", "grammar": {"answer": null}}
{"name": "p02891 AtCoder Grand Contest 039 - Connection and Disconnection", "description": "Given is a string S. Let T be the concatenation of K copies of S. We can repeatedly perform the following operation: choose a character in T and replace it with a different character. Find the minimum number of operations required to satisfy the following condition: any two adjacent characters in T are different.\n\nConstraints\n\n* 1 \\leq |S| \\leq 100\n* S consists of lowercase English letters.\n* 1 \\leq K \\leq 10^9\n* K is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\nK\n\n\nOutput\n\nPrint the minimum number of operations required.\n\nExamples\n\nInput\n\nissii\n2\n\n\nOutput\n\n4\n\n\nInput\n\nqq\n81\n\n\nOutput\n\n81\n\n\nInput\n\ncooooooooonteeeeeeeeeest\n999993333\n\n\nOutput\n\n8999939997", "grammar": {"answer": null}}
{"name": "1527_A. And Then There Were K", "description": "Given an integer n, find the maximum value of integer k such that the following condition holds: \n\nn & (n-1) & (n-2) & (n-3) & ... (k) = 0  where & denotes the [bitwise AND operation.](https://en.wikipedia.org/wiki/Bitwise_operation#AND)\n\nInput\n\nThe first line contains a single integer t (1 ≤ t ≤ 3 ⋅ 10^4). Then t test cases follow.\n\nThe first line of each test case contains a single integer n (1 ≤ n ≤ 10^9).\n\nOutput\n\nFor each test case, output a single integer — the required integer k.\n\nExample\n\nInput\n\n\n3\n2\n5\n17\n\n\nOutput\n\n\n1\n3\n15\n\nNote\n\nIn the first testcase, the maximum value for which the continuous & operation gives 0 value, is 1.\n\nIn the second testcase, the maximum value for which the continuous & operation gives 0 value, is 3. No value greater then 3, say for example 4, will give the & sum 0. \n\n  * 5   \\&   4 ≠ 0, \n  * 5   \\&   4   \\&   3 = 0. \n\n\n\nHence, 3 is the answer.", "grammar": {"answer": null}}
{"name": "p02464 Set Intersection", "description": "Find the intersection of two sets $A = \\\\{a_0, a_1, ..., a_{n-1}\\\\}$ and $B = \\\\{b_0, b_1, ..., b_{m-1}\\\\}$.\n\nConstraints\n\n* $1 \\leq n, m \\leq 200,000$\n* $0 \\leq a_0 < a_1 < ... < a_{n-1} \\leq 10^9$\n* $0 \\leq b_0 < b_1 < ... < b_{m-1} \\leq 10^9$\n\nInput\n\nThe input is given in the following format.\n\n\n$n$\n$a_0 \\; a_1 \\; ... \\; a_{n-1}$\n$m$\n$b_0 \\; b_1 \\; ... \\; b_{m-1}$\n\n\nElements of $A$ and $B$ are given in ascending order respectively. There are no duplicate elements in each set.\n\nOutput\n\nPrint elements in the intersection in ascending order. Print an element in a line.\n\nExample\n\nInput\n\n4\n1 2 5 8\n5\n2 3 5 9 11\n\n\nOutput\n\n2\n5", "grammar": {"answer": null}}
{"name": "488_D. Strip", "description": "Alexandra has a paper strip with n numbers on it. Let's call them ai from left to right.\n\nNow Alexandra wants to split it into some pieces (possibly 1). For each piece of strip, it must satisfy:\n\n  * Each piece should contain at least l numbers.\n  * The difference between the maximal and the minimal number on the piece should be at most s.\n\n\n\nPlease help Alexandra to find the minimal number of pieces meeting the condition above.\n\nInput\n\nThe first line contains three space-separated integers n, s, l (1 ≤ n ≤ 105, 0 ≤ s ≤ 109, 1 ≤ l ≤ 105).\n\nThe second line contains n integers ai separated by spaces ( - 109 ≤ ai ≤ 109).\n\nOutput\n\nOutput the minimal number of strip pieces.\n\nIf there are no ways to split the strip, output -1.\n\nExamples\n\nInput\n\n7 2 2\n1 3 1 2 4 1 2\n\n\nOutput\n\n3\n\n\nInput\n\n7 2 2\n1 100 1 100 1 100 1\n\n\nOutput\n\n-1\n\nNote\n\nFor the first sample, we can split the strip into 3 pieces: [1, 3, 1], [2, 4], [1, 2].\n\nFor the second sample, we can't let 1 and 100 be on the same piece, so no solution exists.", "grammar": {"answer": null}}
{"name": "p03347 AtCoder Grand Contest 024 - Sequence Growing Easy", "description": "There is a sequence X of length N, where every element is initially 0. Let X_i denote the i-th element of X.\n\nYou are given a sequence A of length N. The i-th element of A is A_i. Determine if we can make X equal to A by repeating the operation below. If we can, find the minimum number of operations required.\n\n* Choose an integer i such that 1\\leq i\\leq N-1. Replace the value of X_{i+1} with the value of X_i plus 1.\n\nConstraints\n\n* 1 \\leq N \\leq 2 \\times 10^5\n* 0 \\leq A_i \\leq 10^9(1\\leq i\\leq N)\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1\n:\nA_N\n\n\nOutput\n\nIf we can make X equal to A by repeating the operation, print the minimum number of operations required. If we cannot, print -1.\n\nExamples\n\nInput\n\n4\n0\n1\n1\n2\n\n\nOutput\n\n3\n\n\nInput\n\n3\n1\n2\n1\n\n\nOutput\n\n-1\n\n\nInput\n\n9\n0\n1\n1\n0\n1\n2\n2\n1\n2\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "p02857 DISCO Presents Discovery Channel Code Contest 2020 Qual - Majority of Balls", "description": "This is an interactive task.\n\nWe have 2N balls arranged in a row, numbered 1, 2, 3, ..., 2N from left to right, where N is an odd number. Among them, there are N red balls and N blue balls.\n\nWhile blindfolded, you are challenged to guess the color of every ball correctly, by asking at most 210 questions of the following form:\n\n* You choose any N of the 2N balls and ask whether there are more red balls than blue balls or not among those N balls.\n\n\n\nNow, let us begin.\n\nConstraints\n\n* 1 \\leq N \\leq 99\n* N is an odd number.\n\n\n\n* * *\n\n\n\nExample\n\nInput\n\n\n\n\nOutput", "grammar": {"answer": null}}
{"name": "p01939 Ebi-chan and Integer Sequences", "description": "B: Ebi-chan and Integer Sequences-\n\nproblem\n\nEbi-chan likes sequences. I especially like arithmetic progressions. This time, I decided to create a sequence that meets the following conditions.\n\n* Arithmetic progression of length n\n* When the i-th element of the sequence is defined as s_i, all s_i (1 \\ leq i \\ leq n) are integers that satisfy 0 \\ leq s_i \\ leq m.\n\n\n\nHow many sequences are there that satisfy the above conditions? However, the answer can be very large, so print the remainder after dividing by 10 ^ 9 + 7.\n\nInput format\n\nInput is given in one line.\n\n\nn m\n\nn represents the length of the sequence.\n\nConstraint\n\n* 1 \\ leq n \\ leq 10 ^ {15}\n* 0 \\ leq m \\ leq 10 ^ {15}\n\n\n\nOutput format\n\nDivide the number of arithmetic progressions that satisfy the condition by 10 ^ 9 + 7 and output the remainder in one row.\n\nInput example 1\n\n\n3 9\n\nOutput example 1\n\n\n50\n\nInput example 2\n\n\n10000000000 10000000000\n\nOutput example 2\n\n\n999999942\n\nNote that the input does not fit in a 32-bit integer.\n\n\n\n\n\nExample\n\nInput\n\n3 9\n\n\nOutput\n\n50", "grammar": {"answer": null}}
{"name": "p04020 AtCoder Grand Contest 003 - Simplified mahjong", "description": "Snuke has a large collection of cards. Each card has an integer between 1 and N, inclusive, written on it. He has A_i cards with an integer i.\n\nTwo cards can form a pair if the absolute value of the difference of the integers written on them is at most 1.\n\nSnuke wants to create the maximum number of pairs from his cards, on the condition that no card should be used in multiple pairs. Find the maximum number of pairs that he can create.\n\nConstraints\n\n* 1 ≦ N ≦ 10^5\n* 0 ≦ A_i ≦ 10^9 (1 ≦ i ≦ N)\n* All input values are integers.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nA_1\n:\nA_N\n\n\nOutput\n\nPrint the maximum number of pairs that Snuke can create.\n\nExamples\n\nInput\n\n4\n4\n0\n3\n2\n\n\nOutput\n\n4\n\n\nInput\n\n8\n2\n0\n1\n6\n0\n8\n2\n1\n\n\nOutput\n\n9", "grammar": {"answer": null}}
{"name": "1277_F. Beautiful Rectangle", "description": "You are given n integers. You need to choose a subset and put the chosen numbers in a beautiful rectangle (rectangular matrix). Each chosen number should occupy one of its rectangle cells, each cell must be filled with exactly one chosen number. Some of the n numbers may not be chosen.\n\nA rectangle (rectangular matrix) is called beautiful if in each row and in each column all values are different.\n\nWhat is the largest (by the total number of cells) beautiful rectangle you can construct? Print the rectangle itself.\n\nInput\n\nThe first line contains n (1 ≤ n ≤ 4⋅10^5). The second line contains n integers (1 ≤ a_i ≤ 10^9).\n\nOutput\n\nIn the first line print x (1 ≤ x ≤ n) — the total number of cells of the required maximum beautiful rectangle. In the second line print p and q (p ⋅ q=x): its sizes. In the next p lines print the required rectangle itself. If there are several answers, print any.\n\nExamples\n\nInput\n\n\n12\n3 1 4 1 5 9 2 6 5 3 5 8\n\n\nOutput\n\n\n12\n3 4\n1 2 3 5\n3 1 5 4\n5 6 8 9\n\n\nInput\n\n\n5\n1 1 1 1 1\n\n\nOutput\n\n\n1\n1 1\n1", "grammar": {"answer": null}}
{"name": "547_B. Mike and Feet", "description": "Mike is the president of country What-The-Fatherland. There are n bears living in this country besides Mike. All of them are standing in a line and they are numbered from 1 to n from left to right. i-th bear is exactly ai feet high. \n\n<image>\n\nA group of bears is a non-empty contiguous segment of the line. The size of a group is the number of bears in that group. The strength of a group is the minimum height of the bear in that group.\n\nMike is a curious to know for each x such that 1 ≤ x ≤ n the maximum strength among all groups of size x.\n\nInput\n\nThe first line of input contains integer n (1 ≤ n ≤ 2 × 105), the number of bears.\n\nThe second line contains n integers separated by space, a1, a2, ..., an (1 ≤ ai ≤ 109), heights of bears.\n\nOutput\n\nPrint n integers in one line. For each x from 1 to n, print the maximum strength among all groups of size x.\n\nExamples\n\nInput\n\n10\n1 2 3 4 5 4 3 2 1 6\n\n\nOutput\n\n6 4 4 3 3 2 2 1 1 1 ", "grammar": {"answer": null}}
{"name": "20_C. Dijkstra?", "description": "You are given a weighted undirected graph. The vertices are enumerated from 1 to n. Your task is to find the shortest path between the vertex 1 and the vertex n.\n\nInput\n\nThe first line contains two integers n and m (2 ≤ n ≤ 105, 0 ≤ m ≤ 105), where n is the number of vertices and m is the number of edges. Following m lines contain one edge each in form ai, bi and wi (1 ≤ ai, bi ≤ n, 1 ≤ wi ≤ 106), where ai, bi are edge endpoints and wi is the length of the edge.\n\nIt is possible that the graph has loops and multiple edges between pair of vertices.\n\nOutput\n\nWrite the only integer -1 in case of no path. Write the shortest path in opposite case. If there are many solutions, print any of them.\n\nExamples\n\nInput\n\n5 6\n1 2 2\n2 5 5\n2 3 4\n1 4 1\n4 3 3\n3 5 1\n\n\nOutput\n\n1 4 3 5 \n\nInput\n\n5 6\n1 2 2\n2 5 5\n2 3 4\n1 4 1\n4 3 3\n3 5 1\n\n\nOutput\n\n1 4 3 5 ", "grammar": {"answer": null}}
{"name": "1068_B. LCM", "description": "Ivan has number b. He is sorting through the numbers a from 1 to 10^{18}, and for every a writes ([a,    b])/(a) on blackboard. Here [a,    b] stands for least common multiple of a and b. Ivan is very lazy, that's why this task bored him soon. But he is interested in how many different numbers he would write on the board if he would finish the task. Help him to find the quantity of different numbers he would write on the board.\n\nInput\n\nThe only line contains one integer — b (1 ≤ b ≤ 10^{10}).\n\nOutput\n\nPrint one number — answer for the problem.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n1\n\nInput\n\n2\n\n\nOutput\n\n2\n\nNote\n\nIn the first example [a,    1] = a, therefore ([a,    b])/(a) is always equal to 1.\n\nIn the second example [a,    2] can be equal to a or 2 ⋅ a depending on parity of a. ([a,    b])/(a) can be equal to 1 and 2.", "grammar": {"answer": null}}
{"name": "p02772 AtCoder Beginner Contest 155 - Papers  Please", "description": "You are an immigration officer in the Kingdom of AtCoder. The document carried by an immigrant has some number of integers written on it, and you need to check whether they meet certain criteria.\n\nAccording to the regulation, the immigrant should be allowed entry to the kingdom if and only if the following condition is satisfied:\n\n* All even numbers written on the document are divisible by 3 or 5.\n\n\n\nIf the immigrant should be allowed entry according to the regulation, output `APPROVED`; otherwise, print `DENIED`.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 100\n* 1 \\leq A_i \\leq 1000\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 \\dots A_N\n\n\nOutput\n\nIf the immigrant should be allowed entry according to the regulation, print `APPROVED`; otherwise, print `DENIED`.\n\nExamples\n\nInput\n\n5\n6 7 9 10 31\n\n\nOutput\n\nAPPROVED\n\n\nInput\n\n3\n28 27 24\n\n\nOutput\n\nDENIED", "grammar": {"answer": null}}
{"name": "p03612 AtCoder Beginner Contest 072 - Derangement", "description": "You are given a permutation p_1,p_2,...,p_N consisting of 1,2,..,N. You can perform the following operation any number of times (possibly zero):\n\nOperation: Swap two adjacent elements in the permutation.\n\nYou want to have p_i ≠ i for all 1≤i≤N. Find the minimum required number of operations to achieve this.\n\nConstraints\n\n* 2≤N≤10^5\n* p_1,p_2,..,p_N is a permutation of 1,2,..,N.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\np_1 p_2 .. p_N\n\n\nOutput\n\nPrint the minimum required number of operations\n\nExamples\n\nInput\n\n5\n1 4 3 5 2\n\n\nOutput\n\n2\n\n\nInput\n\n2\n1 2\n\n\nOutput\n\n1\n\n\nInput\n\n2\n2 1\n\n\nOutput\n\n0\n\n\nInput\n\n9\n1 2 4 9 5 8 7 3 6\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "24_C. Sequence of points", "description": "You are given the following points with integer coordinates on the plane: M0, A0, A1, ..., An - 1, where n is odd number. Now we define the following infinite sequence of points Mi: Mi is symmetric to Mi - 1 according <image> (for every natural number i). Here point B is symmetric to A according M, if M is the center of the line segment AB. Given index j find the point Mj.\n\nInput\n\nOn the first line you will be given an integer n (1 ≤ n ≤ 105), which will be odd, and j (1 ≤ j ≤ 1018), where j is the index of the desired point. The next line contains two space separated integers, the coordinates of M0. After that n lines follow, where the i-th line contain the space separated integer coordinates of the point Ai - 1. The absolute values of all input coordinates will not be greater then 1000.\n\nOutput\n\nOn a single line output the coordinates of Mj, space separated.\n\nExamples\n\nInput\n\n3 4\n0 0\n1 1\n2 3\n-5 3\n\n\nOutput\n\n14 0\n\n\nInput\n\n3 1\n5 5\n1000 1000\n-1000 1000\n3 100\n\n\nOutput\n\n1995 1995", "grammar": {"answer": null}}
{"name": "690_A2. Collective Mindsets (medium)", "description": "Way to go! Heidi now knows how many brains there must be for her to get one. But throwing herself in the midst of a clutch of hungry zombies is quite a risky endeavor. Hence Heidi wonders: what is the smallest number of brains that must be in the chest for her to get out at all (possibly empty-handed, but alive)?\n\nThe brain dinner night will evolve just as in the previous subtask: the same crowd is present, the N - 1 zombies have the exact same mindset as before and Heidi is to make the first proposal, which must be accepted by at least half of the attendees for her to survive.\n\nInput\n\nThe only line of input contains one integer: N, the number of attendees (1 ≤ N ≤ 109).\n\nOutput\n\nOutput one integer: the smallest number of brains in the chest which allows Heidi to merely survive.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n0\n\n\nInput\n\n3\n\n\nOutput\n\n1\n\n\nInput\n\n99\n\n\nOutput\n\n49", "grammar": {"answer": null}}
{"name": "p03563 AtCoder Beginner Contest 076 - Rating Goal", "description": "Takahashi is a user of a site that hosts programming contests.\nWhen a user competes in a contest, the rating of the user (not necessarily an integer) changes according to the performance of the user, as follows:\n\n* Let the current rating of the user be a.\n* Suppose that the performance of the user in the contest is b.\n* Then, the new rating of the user will be the avarage of a and b.\n\n\n\nFor example, if a user with rating 1 competes in a contest and gives performance 1000, his/her new rating will be 500.5, the average of 1 and 1000.\n\nTakahashi's current rating is R, and he wants his rating to be exactly G after the next contest.\nFind the performance required to achieve it.\n\nConstraints\n\n* 0 \\leq R, G \\leq 4500\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nR\nG\n\n\nOutput\n\nPrint the performance required to achieve the objective.\n\nExamples\n\nInput\n\n2002\n2017\n\n\nOutput\n\n2032\n\n\nInput\n\n4500\n0\n\n\nOutput\n\n-4500", "grammar": {"answer": null}}
{"name": "p02041 LISum", "description": "problem\n\nGiven the sequence $ A $ of length $ N $. Find the maximum value of $ \\ sum B_i $, where $ B $ is one of the longest increasing subsequences of the sequence $ A $.\n\nThe longest increasing subsequence of the sequence $ A $ is the longest subsequence that satisfies $ A_i <A_j $ with all $ i <j $.\n\n\n\noutput\n\nOutput the maximum value of $ \\ sum B_i $, where $ B $ is one of the longest increasing subsequences of the sequence $ A $. Also, output a line break at the end.\n\nExample\n\nInput\n\n4\n6 4 7 8\n\n\nOutput\n\n21", "grammar": {"answer": null}}
{"name": "p02367 Bridges", "description": "Find bridges of an undirected graph G(V, E).\n\nA bridge (also known as a cut-edge) is an edge whose deletion increase the number of connected components.\n\nConstraints\n\n* 1 ≤ |V| ≤ 100,000\n* 0 ≤ |E| ≤ 100,000\n* The graph is connected\n* There are no parallel edges\n* There are no self-loops\n\nInput\n\n\n|V| |E|\ns0 t0\ns1 t1\n:\ns|E|-1 t|E|-1\n\n\n, where |V| is the number of nodes and |E| is the number of edges in the graph. The graph nodes are named with the numbers 0, 1,..., |V|-1 respectively.\n\nsi and ti represent source and target nodes of i-th edge (undirected).\n\nOutput\n\nA list of bridges of the graph ordered by name. For each bridge, names of its end-ponints, source and target (source < target), should be printed separated by a space. The sources should be printed ascending order, then the target should also be printed ascending order for the same source.\n\nExamples\n\nInput\n\n4 4\n0 1\n0 2\n1 2\n2 3\n\n\nOutput\n\n2 3\n\n\nInput\n\n5 4\n0 1\n1 2\n2 3\n3 4\n\n\nOutput\n\n0 1\n1 2\n2 3\n3 4", "grammar": {"answer": null}}
{"name": "87_C. Interesting Game", "description": "Two best friends Serozha and Gena play a game.\n\nInitially there is one pile consisting of n stones on the table. During one move one pile should be taken and divided into an arbitrary number of piles consisting of a1 > a2 > ... > ak > 0 stones. The piles should meet the condition a1 - a2 = a2 - a3 = ... = ak - 1 - ak = 1. Naturally, the number of piles k should be no less than two.\n\nThe friends play in turns. The player who cannot make a move loses. Serozha makes the first move. Who will win if both players play in the optimal way?\n\nInput\n\nThe single line contains a single integer n (1 ≤ n ≤ 105).\n\nOutput\n\nIf Serozha wins, print k, which represents the minimal number of piles into which he can split the initial one during the first move in order to win the game.\n\nIf Gena wins, print \"-1\" (without the quotes).\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n2\n\n\nInput\n\n6\n\n\nOutput\n\n-1\n\n\nInput\n\n100\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "p02932 Japanese Student Championship 2019 Qualification - Candy Retribution", "description": "Find the number of sequences of N non-negative integers A_1, A_2, ..., A_N that satisfy the following conditions:\n\n* L \\leq A_1 + A_2 + ... + A_N \\leq R\n* When the N elements are sorted in non-increasing order, the M-th and (M+1)-th elements are equal.\n\n\n\nSince the answer can be enormous, print it modulo 10^9+7.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq M < N \\leq 3 \\times 10^5\n* 1 \\leq L \\leq R \\leq 3 \\times 10^5\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M L R\n\n\nOutput\n\nPrint the number of sequences of N non-negative integers, modulo 10^9+7.\n\nExamples\n\nInput\n\n4 2 3 7\n\n\nOutput\n\n105\n\n\nInput\n\n2 1 4 8\n\n\nOutput\n\n3\n\n\nInput\n\n141592 6535 89793 238462\n\n\nOutput\n\n933832916", "grammar": {"answer": null}}
{"name": "873_F. Forbidden Indices", "description": "You are given a string s consisting of n lowercase Latin letters. Some indices in this string are marked as forbidden.\n\nYou want to find a string a such that the value of |a|·f(a) is maximum possible, where f(a) is the number of occurences of a in s such that these occurences end in non-forbidden indices. So, for example, if s is aaaa, a is aa and index 3 is forbidden, then f(a) = 2 because there are three occurences of a in s (starting in indices 1, 2 and 3), but one of them (starting in index 2) ends in a forbidden index.\n\nCalculate the maximum possible value of |a|·f(a) you can get.\n\nInput\n\nThe first line contains an integer number n (1 ≤ n ≤ 200000) — the length of s.\n\nThe second line contains a string s, consisting of n lowercase Latin letters.\n\nThe third line contains a string t, consisting of n characters 0 and 1. If i-th character in t is 1, then i is a forbidden index (otherwise i is not forbidden).\n\nOutput\n\nPrint the maximum possible value of |a|·f(a).\n\nExamples\n\nInput\n\n5\nababa\n00100\n\n\nOutput\n\n5\n\n\nInput\n\n5\nababa\n00000\n\n\nOutput\n\n6\n\n\nInput\n\n5\nababa\n11111\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "376_C. Divisible by Seven", "description": "You have number a, whose decimal representation quite luckily contains digits 1, 6, 8, 9. Rearrange the digits in its decimal representation so that the resulting number will be divisible by 7.\n\nNumber a doesn't contain any leading zeroes and contains digits 1, 6, 8, 9 (it also can contain another digits). The resulting number also mustn't contain any leading zeroes.\n\nInput\n\nThe first line contains positive integer a in the decimal record. It is guaranteed that the record of number a contains digits: 1, 6, 8, 9. Number a doesn't contain any leading zeroes. The decimal representation of number a contains at least 4 and at most 106 characters.\n\nOutput\n\nPrint a number in the decimal notation without leading zeroes — the result of the permutation.\n\nIf it is impossible to rearrange the digits of the number a in the required manner, print 0.\n\nExamples\n\nInput\n\n1689\n\n\nOutput\n\n1869\n\n\nInput\n\n18906\n\n\nOutput\n\n18690", "grammar": {"answer": null}}
{"name": "p02588 AtCoder Grand Contest 047 - Integer Product", "description": "You are given N real values A_1, A_2, \\ldots, A_N. Compute the number of pairs of indices (i, j) such that i < j and the product A_i \\cdot A_j is integer.\n\nConstraints\n\n* 2 \\leq N \\leq 200\\,000\n* 0 < A_i < 10^4\n* A_i is given with at most 9 digits after the decimal.\n\nInput\n\nInput is given from Standard Input in the following format.\n\n\nN\nA_1\nA_2\n\\vdots\nA_N\n\n\nOutput\n\nPrint the number of pairs with integer product A_i \\cdot A_j (and i < j).\n\nExamples\n\nInput\n\n5\n7.5\n2.4\n17.000000001\n17\n16.000000000\n\n\nOutput\n\n3\n\n\nInput\n\n11\n0.9\n1\n1\n1.25\n2.30000\n5\n70\n0.000000001\n9999.999999999\n0.999999999\n1.000000001\n\n\nOutput\n\n8", "grammar": {"answer": null}}
{"name": "p03285 AtCoder Beginner Contest 105 - Cakes and Donuts", "description": "La Confiserie d'ABC sells cakes at 4 dollars each and doughnuts at 7 dollars each. Determine if there is a way to buy some of them for exactly N dollars. You can buy two or more doughnuts and two or more cakes, and you can also choose to buy zero doughnuts or zero cakes.\n\nConstraints\n\n* N is an integer between 1 and 100, inclusive.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nIf there is a way to buy some cakes and some doughnuts for exactly N dollars, print `Yes`; otherwise, print `No`.\n\nExamples\n\nInput\n\n11\n\n\nOutput\n\nYes\n\n\nInput\n\n40\n\n\nOutput\n\nYes\n\n\nInput\n\n3\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "p01831 Line Gimmick", "description": "Example\n\nInput\n\n7\n>>\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "560_A. Currency System in Geraldion", "description": "A magic island Geraldion, where Gerald lives, has its own currency system. It uses banknotes of several values. But the problem is, the system is not perfect and sometimes it happens that Geraldionians cannot express a certain sum of money with any set of banknotes. Of course, they can use any number of banknotes of each value. Such sum is called unfortunate. Gerald wondered: what is the minimum unfortunate sum?\n\nInput\n\nThe first line contains number n (1 ≤ n ≤ 1000) — the number of values of the banknotes that used in Geraldion. \n\nThe second line contains n distinct space-separated numbers a1, a2, ..., an (1 ≤ ai ≤ 106) — the values of the banknotes.\n\nOutput\n\nPrint a single line — the minimum unfortunate sum. If there are no unfortunate sums, print  - 1.\n\nExamples\n\nInput\n\n5\n1 2 3 4 5\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "516_A. Drazil and Factorial", "description": "Drazil is playing a math game with Varda.\n\nLet's define <image> for positive integer x as a product of factorials of its digits. For example, <image>.\n\nFirst, they choose a decimal number a consisting of n digits that contains at least one digit larger than 1. This number may possibly start with leading zeroes. Then they should find maximum positive number x satisfying following two conditions:\n\n1. x doesn't contain neither digit 0 nor digit 1.\n\n2. <image> = <image>.\n\nHelp friends find such number.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 15) — the number of digits in a.\n\nThe second line contains n digits of a. There is at least one digit in a that is larger than 1. Number a may possibly contain leading zeroes.\n\nOutput\n\nOutput a maximum possible integer satisfying the conditions above. There should be no zeroes and ones in this number decimal representation.\n\nExamples\n\nInput\n\n4\n1234\n\n\nOutput\n\n33222\n\n\nInput\n\n3\n555\n\n\nOutput\n\n555\n\nNote\n\nIn the first case, <image>", "grammar": {"answer": null}}
{"name": "p02724 AtCoder Beginner Contest 160 - Golden Coins", "description": "Takahashi loves gold coins. He gains 1000 happiness points for each 500-yen coin he has and gains 5 happiness points for each 5-yen coin he has. (Yen is the currency of Japan.)\n\nTakahashi has X yen. If he exchanges his money so that he will gain the most happiness points, how many happiness points will he earn?\n\n(We assume that there are six kinds of coins available: 500-yen, 100-yen, 50-yen, 10-yen, 5-yen, and 1-yen coins.)\n\nConstraints\n\n* 0 \\leq X \\leq 10^9\n* X is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX\n\n\nOutput\n\nPrint the maximum number of happiness points that can be earned.\n\nExamples\n\nInput\n\n1024\n\n\nOutput\n\n2020\n\n\nInput\n\n0\n\n\nOutput\n\n0\n\n\nInput\n\n1000000000\n\n\nOutput\n\n2000000000", "grammar": {"answer": null}}
{"name": "1351_C. Skier", "description": "Skier rides on a snowy field. Its movements can be described by a string of characters 'S', 'N', 'W', 'E' (which correspond to 1 meter movement in the south, north, west or east direction respectively).\n\nIt is known that if he moves along a previously unvisited segment of a path (i.e. this segment of the path is visited the first time), then the time of such movement is 5 seconds. If he rolls along previously visited segment of a path (i.e., this segment of the path has been covered by his path before), then it takes 1 second.\n\nFind the skier's time to roll all the path.\n\nInput\n\nThe first line contains an integer t (1 ≤ t ≤ 10^4) — the number of test cases in the input. Then t test cases follow.\n\nEach set is given by one nonempty string of the characters 'S', 'N', 'W', 'E'. The length of the string does not exceed 10^5 characters.\n\nThe sum of the lengths of t given lines over all test cases in the input does not exceed 10^5.\n\nOutput\n\nFor each test case, print the desired path time in seconds.\n\nExample\n\nInput\n\n\n5\nNNN\nNS\nWWEN\nWWEE\nNWNWS\n\n\nOutput\n\n\n15\n6\n16\n12\n25", "grammar": {"answer": null}}
{"name": "p02843 Sumitomo Mitsui Trust Bank Programming Contest 2019 - 100 to 105", "description": "AtCoder Mart sells 1000000 of each of the six items below:\n\n* Riceballs, priced at 100 yen (the currency of Japan) each\n* Sandwiches, priced at 101 yen each\n* Cookies, priced at 102 yen each\n* Cakes, priced at 103 yen each\n* Candies, priced at 104 yen each\n* Computers, priced at 105 yen each\n\n\n\nTakahashi wants to buy some of them that cost exactly X yen in total. Determine whether this is possible.\n(Ignore consumption tax.)\n\nConstraints\n\n* 1 \\leq X \\leq 100000\n* X is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX\n\n\nOutput\n\nIf it is possible to buy some set of items that cost exactly X yen in total, print `1`; otherwise, print `0`.\n\nExamples\n\nInput\n\n615\n\n\nOutput\n\n1\n\n\nInput\n\n217\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "784_B. Kids' Riddle", "description": "Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\n\nInput\n\nThe input contains a single integer n (0 ≤ n ≤ 2000000000).\n\nOutput\n\nOutput a single integer.\n\nExamples\n\nInput\n\n11\n\n\nOutput\n\n2\n\n\nInput\n\n14\n\n\nOutput\n\n0\n\n\nInput\n\n61441\n\n\nOutput\n\n2\n\n\nInput\n\n571576\n\n\nOutput\n\n10\n\n\nInput\n\n2128506\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "1285_D. Dr. Evil Underscores", "description": "Today, as a friendship gift, Bakry gave Badawy n integers a_1, a_2, ..., a_n and challenged him to choose an integer X such that the value \\underset{1 ≤ i ≤ n}{max} (a_i ⊕ X) is minimum possible, where ⊕ denotes the [bitwise XOR operation](https://en.wikipedia.org/wiki/Bitwise_operation#XOR).\n\nAs always, Badawy is too lazy, so you decided to help him and find the minimum possible value of \\underset{1 ≤ i ≤ n}{max} (a_i ⊕ X).\n\nInput\n\nThe first line contains integer n (1≤ n ≤ 10^5).\n\nThe second line contains n integers a_1, a_2, ..., a_n (0 ≤ a_i ≤ 2^{30}-1).\n\nOutput\n\nPrint one integer — the minimum possible value of \\underset{1 ≤ i ≤ n}{max} (a_i ⊕ X).\n\nExamples\n\nInput\n\n\n3\n1 2 3\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n2\n1 5\n\n\nOutput\n\n\n4\n\nNote\n\nIn the first sample, we can choose X = 3.\n\nIn the second sample, we can choose X = 5.", "grammar": {"answer": null}}
{"name": "2_B. The least round way", "description": "There is a square matrix n × n, consisting of non-negative integer numbers. You should find such a way on it that \n\n  * starts in the upper left cell of the matrix; \n  * each following cell is to the right or down from the current cell; \n  * the way ends in the bottom right cell. \n\n\n\nMoreover, if we multiply together all the numbers along the way, the result should be the least \"round\". In other words, it should end in the least possible number of zeros.\n\nInput\n\nThe first line contains an integer number n (2 ≤ n ≤ 1000), n is the size of the matrix. Then follow n lines containing the matrix elements (non-negative integer numbers not exceeding 109).\n\nOutput\n\nIn the first line print the least number of trailing zeros. In the second line print the correspondent way itself.\n\nExamples\n\nInput\n\n3\n1 2 3\n4 5 6\n7 8 9\n\n\nOutput\n\n0\nDDRR", "grammar": {"answer": null}}
{"name": "69_E. Subsegments", "description": "Programmer Sasha has recently begun to study data structures. His coach Stas told him to solve the problem of finding a minimum on the segment of the array in <image>, which Sasha coped with. For Sasha not to think that he had learned all, Stas gave him a new task. For each segment of the fixed length Sasha must find the maximum element of those that occur on the given segment exactly once. Help Sasha solve this problem. \n\nInput\n\nThe first line contains two positive integers n and k (1 ≤ n ≤ 105, 1 ≤ k ≤ n) — the number of array elements and the length of the segment. \n\nThen follow n lines: the i-th one contains a single number ai ( - 109 ≤ ai ≤ 109). \n\nOutput\n\nPrint n–k + 1 numbers, one per line: on the i-th line print of the maximum number of those numbers from the subarray ai ai + 1 … ai + k - 1 that occur in this subarray exactly 1 time. If there are no such numbers in this subarray, print \"Nothing\".\n\nExamples\n\nInput\n\n5 3\n1\n2\n2\n3\n3\n\n\nOutput\n\n1\n3\n2\n\n\nInput\n\n6 4\n3\n3\n3\n4\n4\n2\n\n\nOutput\n\n4\nNothing\n3", "grammar": {"answer": null}}
{"name": "131_C. The World is a Theatre", "description": "There are n boys and m girls attending a theatre club. To set a play \"The Big Bang Theory\", they need to choose a group containing exactly t actors containing no less than 4 boys and no less than one girl. How many ways are there to choose a group? Of course, the variants that only differ in the composition of the troupe are considered different.\n\nPerform all calculations in the 64-bit type: long long for С/С++, int64 for Delphi and long for Java.\n\nInput\n\nThe only line of the input data contains three integers n, m, t (4 ≤ n ≤ 30, 1 ≤ m ≤ 30, 5 ≤ t ≤ n + m).\n\nOutput\n\nFind the required number of ways.\n\nPlease do not use the %lld specificator to read or write 64-bit integers in С++. It is preferred to use cin, cout streams or the %I64d specificator.\n\nExamples\n\nInput\n\n5 2 5\n\n\nOutput\n\n10\n\n\nInput\n\n4 3 5\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p02915 AtCoder Beginner Contest 140 - Password", "description": "Takahashi is going to set a 3-character password.\n\nHow many possible passwords are there if each of its characters must be a digit between 1 and N (inclusive)?\n\nConstraints\n\n* 1 \\leq N \\leq 9\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint the number of possible passwords.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n8\n\n\nInput\n\n1\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p00445 JOI and IOI", "description": "problem\n\nCreate a program that counts the number of consecutive JOI or IOI characters in a given character string. The character string consists only of uppercase letters of the alphabet. For example, the character string \"JOIOIOI\" in the figure below contains JOI in one place and IOI in two places.\n\n<image>\n\n\n\ninput\n\nThe input consists of multiple datasets. Each dataset is one line and consists of uppercase letters of the alphabet of 10,000 characters or less. Input ends with EOF.\n\nThe number of datasets does not exceed 5.\n\noutput\n\nFor each dataset, output the number of JOIs found in the first line and the number of IOIs found in the second line.\n\nExamples\n\nInput\n\nJOIJOI\nJOIOIOIOI\nJOIOIJOINXNXJIOIOIOJ\n\n\nOutput\n\n2\n0\n1\n3\n2\n3\n\n\nInput\n\nNone\n\n\nOutput\n\nNone", "grammar": {"answer": null}}
{"name": "1105_C. Ayoub and Lost Array", "description": "Ayoub had an array a of integers of size n and this array had two interesting properties: \n\n  * All the integers in the array were between l and r (inclusive). \n  * The sum of all the elements was divisible by 3. \n\n\n\nUnfortunately, Ayoub has lost his array, but he remembers the size of the array n and the numbers l and r, so he asked you to find the number of ways to restore the array. \n\nSince the answer could be very large, print it modulo 10^9 + 7 (i.e. the remainder when dividing by 10^9 + 7). In case there are no satisfying arrays (Ayoub has a wrong memory), print 0.\n\nInput\n\nThe first and only line contains three integers n, l and r (1 ≤ n ≤ 2 ⋅ 10^5 , 1 ≤ l ≤ r ≤ 10^9) — the size of the lost array and the range of numbers in the array.\n\nOutput\n\nPrint the remainder when dividing by 10^9 + 7 the number of ways to restore the array.\n\nExamples\n\nInput\n\n\n2 1 3\n\n\nOutput\n\n\n3\n\n\nInput\n\n\n3 2 2\n\n\nOutput\n\n\n1\n\n\nInput\n\n\n9 9 99\n\n\nOutput\n\n\n711426616\n\nNote\n\nIn the first example, the possible arrays are : [1,2], [2,1], [3, 3].\n\nIn the second example, the only possible array is [2, 2, 2].", "grammar": {"answer": null}}
{"name": "p02685 AtCoder Beginner Contest 167 - Colorful Blocks", "description": "There are N blocks arranged in a row. Let us paint these blocks.\n\nWe will consider two ways to paint the blocks different if and only if there is a block painted in different colors in those two ways.\n\nFind the number of ways to paint the blocks under the following conditions:\n\n* For each block, use one of the M colors, Color 1 through Color M, to paint it. It is not mandatory to use all the colors.\n* There may be at most K pairs of adjacent blocks that are painted in the same color.\n\n\n\nSince the count may be enormous, print it modulo 998244353.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N, M \\leq 2 \\times 10^5\n* 0 \\leq K \\leq N - 1\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M K\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\nInput\n\n3 2 1\n\n\nOutput\n\n6\n\n\nInput\n\n100 100 0\n\n\nOutput\n\n73074801\n\n\nInput\n\n60522 114575 7559\n\n\nOutput\n\n479519525", "grammar": {"answer": null}}
{"name": "238_A. Not Wool Sequences", "description": "A sequence of non-negative integers a1, a2, ..., an of length n is called a wool sequence if and only if there exists two integers l and r (1 ≤ l ≤ r ≤ n) such that <image>. In other words each wool sequence contains a subsequence of consecutive elements with xor equal to 0.\n\nThe expression <image> means applying the operation of a bitwise xor to numbers x and y. The given operation exists in all modern programming languages, for example, in languages C++ and Java it is marked as \"^\", in Pascal — as \"xor\".\n\nIn this problem you are asked to compute the number of sequences made of n integers from 0 to 2m - 1 that are not a wool sequence. You should print this number modulo 1000000009 (109 + 9).\n\nInput\n\nThe only line of input contains two space-separated integers n and m (1 ≤ n, m ≤ 105).\n\nOutput\n\nPrint the required number of sequences modulo 1000000009 (109 + 9) on the only line of output.\n\nExamples\n\nInput\n\n3 2\n\n\nOutput\n\n6\n\nNote\n\nSequences of length 3 made of integers 0, 1, 2 and 3 that are not a wool sequence are (1, 3, 1), (1, 2, 1), (2, 1, 2), (2, 3, 2), (3, 1, 3) and (3, 2, 3).", "grammar": {"answer": null}}
{"name": "p02596 AtCoder Beginner Contest 174 - Repsept", "description": "Takahashi loves the number 7 and multiples of K.\n\nWhere is the first occurrence of a multiple of K in the sequence 7,77,777,\\ldots? (Also see Output and Sample Input/Output below.)\n\nIf the sequence contains no multiples of K, print `-1` instead.\n\nConstraints\n\n* 1 \\leq K \\leq 10^6\n* K is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nK\n\n\nOutput\n\nPrint an integer representing the position of the first occurrence of a multiple of K. (For example, if the first occurrence is the fourth element of the sequence, print `4`.)\n\nExamples\n\nInput\n\n101\n\n\nOutput\n\n4\n\n\nInput\n\n2\n\n\nOutput\n\n-1\n\n\nInput\n\n999983\n\n\nOutput\n\n999982", "grammar": {"answer": null}}
{"name": "p03447 AtCoder Beginner Contest 087 - Buying Sweets", "description": "You went shopping to buy cakes and donuts with X yen (the currency of Japan).\n\nFirst, you bought one cake for A yen at a cake shop. Then, you bought as many donuts as possible for B yen each, at a donut shop.\n\nHow much do you have left after shopping?\n\nConstraints\n\n* 1 \\leq A, B \\leq 1 000\n* A + B \\leq X \\leq 10 000\n* X, A and B are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nX\nA\nB\n\n\nOutput\n\nPrint the amount you have left after shopping.\n\nExamples\n\nInput\n\n1234\n150\n100\n\n\nOutput\n\n84\n\n\nInput\n\n1000\n108\n108\n\n\nOutput\n\n28\n\n\nInput\n\n579\n123\n456\n\n\nOutput\n\n0\n\n\nInput\n\n7477\n549\n593\n\n\nOutput\n\n405", "grammar": {"answer": null}}
{"name": "p00513 Available Areas", "description": "IOI Real Estate rents condominiums. The apartment room handled by this company is 1LDK, and the area is 2xy + x + y as shown in the figure below. However, x and y are positive integers.\n\n\nFigure_Madori\n\n\nIn the IOI real estate catalog, the areas of condominiums are listed in ascending order (in ascending order), but it was found that some mistakes (those with an impossible area) were mixed in this.\n\nThe catalog (input file) has N + 1 lines, the number of rooms is written in the first line, and the area is written in ascending order, one room per line in the following N lines. However, the number of rooms is 100,000 or less, and the area is (2 to the 31st power) -1 = 2,147,483,647 or less. Up to 3 of the 5 input data have 1000 rooms or less and an area of ​​30000 or less.\n\nOutput the wrong number of lines (the number of impossible rooms).\n\nIn the output file, also include a line feed code on the last line of the output.\n\n\n\n\n\nExamples\n\nInput\n\n10\n4\n7\n9\n10\n12\n13\n16\n17\n19\n20\n\n\nOutput\n\n2\n\n\nInput\n\nNone\n\n\nOutput\n\nNone", "grammar": {"answer": null}}
{"name": "p00949 Hidden Anagrams", "description": "Example\n\nInput\n\nanagram\ngrandmother\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "892_A. Greed", "description": "Jafar has n cans of cola. Each can is described by two integers: remaining volume of cola ai and can's capacity bi (ai ≤  bi).\n\nJafar has decided to pour all remaining cola into just 2 cans, determine if he can do this or not!\n\nInput\n\nThe first line of the input contains one integer n (2 ≤ n ≤ 100 000) — number of cola cans.\n\nThe second line contains n space-separated integers a1, a2, ..., an (0 ≤ ai ≤ 109) — volume of remaining cola in cans.\n\nThe third line contains n space-separated integers that b1, b2, ..., bn (ai ≤ bi ≤ 109) — capacities of the cans.\n\nOutput\n\nPrint \"YES\" (without quotes) if it is possible to pour all remaining cola in 2 cans. Otherwise print \"NO\" (without quotes).\n\nYou can print each letter in any case (upper or lower).\n\nExamples\n\nInput\n\n2\n3 5\n3 6\n\n\nOutput\n\nYES\n\n\nInput\n\n3\n6 8 9\n6 10 12\n\n\nOutput\n\nNO\n\n\nInput\n\n5\n0 0 5 0 0\n1 1 8 10 5\n\n\nOutput\n\nYES\n\n\nInput\n\n4\n4 1 0 3\n5 2 2 3\n\n\nOutput\n\nYES\n\nNote\n\nIn the first sample, there are already 2 cans, so the answer is \"YES\".", "grammar": {"answer": null}}
{"name": "p02790 AtCoder Beginner Contest 152 - Comparing Strings", "description": "Given are 1-digit positive integers a and b. Consider these two strings: the concatenation of b copies of the digit a, and the concatenation of a copies of the digit b. Which of these is lexicographically smaller?\n\nConstraints\n\n* 1 \\leq a \\leq 9\n* 1 \\leq b \\leq 9\n* a and b are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\na b\n\n\nOutput\n\nPrint the lexicographically smaller of the two strings. (If the two strings are equal, print one of them.)\n\nExamples\n\nInput\n\n4 3\n\n\nOutput\n\n3333\n\n\nInput\n\n7 7\n\n\nOutput\n\n7777777", "grammar": {"answer": null}}
{"name": "652_D. Nested Segments", "description": "You are given n segments on a line. There are no ends of some segments that coincide. For each segment find the number of segments it contains.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 2·105) — the number of segments on a line.\n\nEach of the next n lines contains two integers li and ri ( - 109 ≤ li < ri ≤ 109) — the coordinates of the left and the right ends of the i-th segment. It is guaranteed that there are no ends of some segments that coincide.\n\nOutput\n\nPrint n lines. The j-th of them should contain the only integer aj — the number of segments contained in the j-th segment.\n\nExamples\n\nInput\n\n4\n1 8\n2 3\n4 7\n5 6\n\n\nOutput\n\n3\n0\n1\n0\n\n\nInput\n\n3\n3 4\n1 5\n2 6\n\n\nOutput\n\n0\n1\n1", "grammar": {"answer": null}}
{"name": "p03698 AtCoder Beginner Contest 063 - Varied", "description": "You are given a string S consisting of lowercase English letters. Determine whether all the characters in S are different.\n\nConstraints\n\n* 2 ≤ |S| ≤ 26, where |S| denotes the length of S.\n* S consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nIf all the characters in S are different, print `yes` (case-sensitive); otherwise, print `no`.\n\nExamples\n\nInput\n\nuncopyrightable\n\n\nOutput\n\nyes\n\n\nInput\n\ndifferent\n\n\nOutput\n\nno\n\n\nInput\n\nno\n\n\nOutput\n\nyes", "grammar": {"answer": null}}
{"name": "1110_A. Parity", "description": "You are given an integer n (n ≥ 0) represented with k digits in base (radix) b. So,\n\n$$$n = a_1 ⋅ b^{k-1} + a_2 ⋅ b^{k-2} + … a_{k-1} ⋅ b + a_k.$$$\n\nFor example, if b=17, k=3 and a=[11, 15, 7] then n=11⋅17^2+15⋅17+7=3179+255+7=3441.\n\nDetermine whether n is even or odd.\n\nInput\n\nThe first line contains two integers b and k (2≤ b≤ 100, 1≤ k≤ 10^5) — the base of the number and the number of digits.\n\nThe second line contains k integers a_1, a_2, …, a_k (0≤ a_i < b) — the digits of n.\n\nThe representation of n contains no unnecessary leading zero. That is, a_1 can be equal to 0 only if k = 1.\n\nOutput\n\nPrint \"even\" if n is even, otherwise print \"odd\".\n\nYou can print each letter in any case (upper or lower).\n\nExamples\n\nInput\n\n13 3\n3 2 7\n\n\nOutput\n\neven\n\n\nInput\n\n10 9\n1 2 3 4 5 6 7 8 9\n\n\nOutput\n\nodd\n\n\nInput\n\n99 5\n32 92 85 74 4\n\n\nOutput\n\nodd\n\n\nInput\n\n2 2\n1 0\n\n\nOutput\n\neven\n\nNote\n\nIn the first example, n = 3 ⋅ 13^2 + 2 ⋅ 13 + 7 = 540, which is even.\n\nIn the second example, n = 123456789 is odd.\n\nIn the third example, n = 32 ⋅ 99^4 + 92 ⋅ 99^3 + 85 ⋅ 99^2 + 74 ⋅ 99 + 4 = 3164015155 is odd.\n\nIn the fourth example n = 2.", "grammar": {"answer": null}}
{"name": "p02610 AIsing Programming Contest 2020 - Camel Train", "description": "We have N camels numbered 1,2,\\ldots,N. Snuke has decided to make them line up in a row.\n\nThe happiness of Camel i will be L_i if it is among the K_i frontmost camels, and R_i otherwise.\n\nSnuke wants to maximize the total happiness of the camels. Find the maximum possible total happiness of the camel.\n\nSolve this problem for each of the T test cases given.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq T \\leq 10^5\n* 1 \\leq N \\leq 2 \\times 10^{5}\n* 1 \\leq K_i \\leq N\n* 1 \\leq L_i, R_i \\leq 10^9\n* The sum of values of N in each input file is at most 2 \\times 10^5.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nT\n\\mathrm{case}_1\n\\vdots\n\\mathrm{case}_T\n\n\nEach case is given in the following format:\n\n\nN\nK_1 L_1 R_1\n\\vdots\nK_N L_N R_N\n\n\nOutput\n\nPrint T lines. The i-th line should contain the answer to the i-th test case.\n\nExample\n\nInput\n\n3\n2\n1 5 10\n2 15 5\n3\n2 93 78\n1 71 59\n3 57 96\n19\n19 23 16\n5 90 13\n12 85 70\n19 67 78\n12 16 60\n18 48 28\n5 4 24\n12 97 97\n4 57 87\n19 91 74\n18 100 76\n7 86 46\n9 100 57\n3 76 73\n6 84 93\n1 6 84\n11 75 94\n19 15 3\n12 11 34\n\n\nOutput\n\n25\n221\n1354", "grammar": {"answer": null}}
{"name": "50_A. Domino piling", "description": "You are given a rectangular board of M × N squares. Also you are given an unlimited number of standard domino pieces of 2 × 1 squares. You are allowed to rotate the pieces. You are asked to place as many dominoes as possible on the board so as to meet the following conditions:\n\n1. Each domino completely covers two squares.\n\n2. No two dominoes overlap.\n\n3. Each domino lies entirely inside the board. It is allowed to touch the edges of the board.\n\nFind the maximum number of dominoes, which can be placed under these restrictions.\n\nInput\n\nIn a single line you are given two integers M and N — board sizes in squares (1 ≤ M ≤ N ≤ 16).\n\nOutput\n\nOutput one number — the maximal number of dominoes, which can be placed.\n\nExamples\n\nInput\n\n2 4\n\n\nOutput\n\n4\n\n\nInput\n\n3 3\n\n\nOutput\n\n4", "grammar": {"answer": null}}
{"name": "p03243 AtCoder Beginner Contest 111 - AtCoder Beginner Contest 111", "description": "Kurohashi has never participated in AtCoder Beginner Contest (ABC).\n\nThe next ABC to be held is ABC N (the N-th ABC ever held). Kurohashi wants to make his debut in some ABC x such that all the digits of x in base ten are the same.\n\nWhat is the earliest ABC where Kurohashi can make his debut?\n\nConstraints\n\n* 100 \\leq N \\leq 999\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nIf the earliest ABC where Kurohashi can make his debut is ABC n, print n.\n\nExamples\n\nInput\n\n111\n\n\nOutput\n\n111\n\n\nInput\n\n112\n\n\nOutput\n\n222\n\n\nInput\n\n750\n\n\nOutput\n\n777", "grammar": {"answer": null}}
{"name": "1331_C. ...And after happily lived ever they", "description": "\n\nInput\n\nThe input contains a single integer a (0 ≤ a ≤ 63).\n\nOutput\n\nOutput a single number.\n\nExamples\n\nInput\n\n\n2\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n5\n\n\nOutput\n\n\n24\n\n\nInput\n\n\n35\n\n\nOutput\n\n\n50", "grammar": {"answer": null}}
{"name": "p03253 AtCoder Beginner Contest 110 - Factorization", "description": "You are given positive integers N and M.\n\nHow many sequences a of length N consisting of positive integers satisfy a_1 \\times a_2 \\times ... \\times a_N = M? Find the count modulo 10^9+7.\n\nHere, two sequences a' and a'' are considered different when there exists some i such that a_i' \\neq a_i''.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq M \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\n\n\nOutput\n\nPrint the number of the sequences consisting of positive integers that satisfy the condition, modulo 10^9 + 7.\n\nExamples\n\nInput\n\n2 6\n\n\nOutput\n\n4\n\n\nInput\n\n3 12\n\n\nOutput\n\n18\n\n\nInput\n\n100000 1000000000\n\n\nOutput\n\n957870001", "grammar": {"answer": null}}
{"name": "908_G. New Year and Original Order", "description": "Let S(n) denote the number that represents the digits of n in sorted order. For example, S(1) = 1, S(5) = 5, S(50394) = 3459, S(353535) = 333555.\n\nGiven a number X, compute <image> modulo 109 + 7.\n\nInput\n\nThe first line of input will contain the integer X (1 ≤ X ≤ 10700).\n\nOutput\n\nPrint a single integer, the answer to the question.\n\nExamples\n\nInput\n\n21\n\n\nOutput\n\n195\n\n\nInput\n\n345342\n\n\nOutput\n\n390548434\n\nNote\n\nThe first few values of S are 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 12. The sum of these values is 195. ", "grammar": {"answer": null}}
{"name": "856_B. Similar Words", "description": "Let us call a non-empty sequence of lowercase English letters a word. Prefix of a word x is a word y that can be obtained from x by removing zero or more last letters of x.\n\nLet us call two words similar, if one of them can be obtained from the other by removing its first letter.\n\nYou are given a set S of words. Find the maximal possible size of set of non-empty words X such that they satisfy the following: \n\n  * each word of X is prefix of some word from S; \n  * X has no similar words. \n\nInput\n\nInput data contains multiple test cases. The first line of the input data contains an integer t — the number of test cases. The descriptions of test cases follow.\n\nThe first line of each description contains an integer n — the number of words in the set S (1 ≤ n ≤ 106). Each of the following n lines contains one non-empty word — elements of S. All words in S are different.\n\nIt is guaranteed that the total length of all words in one input data doesn't exceed 106.\n\nOutput\n\nFor each test case print one line that contains one integer m — the maximal number of words that X can contain.\n\nExample\n\nInput\n\n2\n3\naba\nbaba\naaab\n2\naa\na\n\n\nOutput\n\n6\n1", "grammar": {"answer": null}}
{"name": "p01462 Network Reliability", "description": "An undirected graph is given. Each edge of the graph disappears with a constant probability. Calculate the probability with which the remained graph is connected.\n\n\n\nInput\n\nThe first line contains three integers N (1 \\leq N \\leq 14), M (0 \\leq M \\leq 100) and P (0 \\leq P \\leq 100), separated by a single space. N is the number of the vertices and M is the number of the edges. P is the probability represented by a percentage.\n\nThe following M lines describe the edges. Each line contains two integers v_i and u_i (1 \\leq u_i, v_i \\leq N). (u_i, v_i) indicates the edge that connects the two vertices u_i and v_i.\n\nOutput\n\nOutput a line containing the probability with which the remained graph is connected. Your program may output an arbitrary number of digits after the decimal point. However, the absolute error should be 10^{-9} or less.\n\nExamples\n\nInput\n\n3 3 50\n1 2\n2 3\n3 1\n\n\nOutput\n\n0.500000000000\n\n\nInput\n\n3 3 10\n1 2\n2 3\n3 1\n\n\nOutput\n\n0.972000000000\n\n\nInput\n\n4 5 50\n1 2\n2 3\n3 4\n4 1\n1 3\n\n\nOutput\n\n0.437500000000", "grammar": {"answer": null}}
{"name": "1089_F. Fractions", "description": "You are given a positive integer n.\n\nFind a sequence of fractions (a_i)/(b_i), i = 1 … k (where a_i and b_i are positive integers) for some k such that:\n\n$$$ \\begin{cases} $b_i$ divides $n$, $1 < b_i < n$ for $i = 1 … k$ \\\\\\ $1 ≤ a_i < b_i$ for $i = 1 … k$ \\\\\\ \\text{$∑_{i=1}^k (a_i)/(b_i) = 1 - 1/n$} \\end{cases} $$$\n\nInput\n\nThe input consists of a single integer n (2 ≤ n ≤ 10^9).\n\nOutput\n\nIn the first line print \"YES\" if there exists such a sequence of fractions or \"NO\" otherwise.\n\nIf there exists such a sequence, next lines should contain a description of the sequence in the following format.\n\nThe second line should contain integer k (1 ≤ k ≤ 100 000) — the number of elements in the sequence. It is guaranteed that if such a sequence exists, then there exists a sequence of length at most 100 000.\n\nNext k lines should contain fractions of the sequence with two integers a_i and b_i on each line.\n\nExamples\n\nInput\n\n\n2\n\n\nOutput\n\n\nNO\n\n\nInput\n\n\n6\n\n\nOutput\n\n\nYES\n2\n1 2\n1 3\n\nNote\n\nIn the second example there is a sequence 1/2, 1/3 such that 1/2 + 1/3 = 1 - 1/6.", "grammar": {"answer": null}}
{"name": "p02430 Enumeration of Combinations", "description": "Print all combinations which can be made by $k$ different elements from $0, 1, ..., n-1$. Note that we represent $0, 1, ... n-1$ as 00...0001, 00...0010, 00...0100, ..., 10...0000 in binary respectively and the integer representation of a combination is calculated by bitwise OR of the selected elements.\n\nConstraints\n\n* $1 \\leq n \\leq 18$\n* $k \\leq n$\n\nInput\n\nThe input is given in the following format.\n\n\n$n \\; k$\n\n\nOutput\n\nPrint the combinations ordered by their decimal integers. Print a combination in the following format.\n\n\n$d$: $e_0$ $e_1$ ...\n\n\nPrint ':' after the integer value $d$, then print elements $e_i$ in the combination in ascending order. Separate two adjacency elements by a space character.\n\nExample\n\nInput\n\n5 3\n\n\nOutput\n\n7: 0 1 2\n11: 0 1 3\n13: 0 2 3\n14: 1 2 3\n19: 0 1 4\n21: 0 2 4\n22: 1 2 4\n25: 0 3 4\n26: 1 3 4\n28: 2 3 4", "grammar": {"answer": null}}
{"name": "1132_C. Painting the Fence", "description": "You have a long fence which consists of n sections. Unfortunately, it is not painted, so you decided to hire q painters to paint it. i-th painter will paint all sections x such that l_i ≤ x ≤ r_i.\n\nUnfortunately, you are on a tight budget, so you may hire only q - 2 painters. Obviously, only painters you hire will do their work.\n\nYou want to maximize the number of painted sections if you choose q - 2 painters optimally. A section is considered painted if at least one painter paints it.\n\nInput\n\nThe first line contains two integers n and q (3 ≤ n, q ≤ 5000) — the number of sections and the number of painters availible for hire, respectively.\n\nThen q lines follow, each describing one of the painters: i-th line contains two integers l_i and r_i (1 ≤ l_i ≤ r_i ≤ n).\n\nOutput\n\nPrint one integer — maximum number of painted sections if you hire q - 2 painters.\n\nExamples\n\nInput\n\n\n7 5\n1 4\n4 5\n5 6\n6 7\n3 5\n\n\nOutput\n\n\n7\n\n\nInput\n\n\n4 3\n1 1\n2 2\n3 4\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n4 4\n1 1\n2 2\n2 3\n3 4\n\n\nOutput\n\n\n3", "grammar": {"answer": null}}
{"name": "p03349 AtCoder Grand Contest 024 - Sequence Growing Hard", "description": "Find the number of the possible tuples of sequences (A_0,A_1,...,A_N) that satisfy all of the following conditions, modulo M:\n\n* For every i (0\\leq i\\leq N), A_i is a sequence of length i consisting of integers between 1 and K (inclusive);\n* For every i (1\\leq i\\leq N), A_{i-1} is a subsequence of A_i, that is, there exists 1\\leq x_i\\leq i such that the removal of the x_i-th element of A_i would result in a sequence equal to A_{i-1};\n* For every i (1\\leq i\\leq N), A_i is lexicographically larger than A_{i-1}.\n\nConstraints\n\n* 1 \\leq N,K \\leq 300\n* 2 \\leq M \\leq 10^9\n* N, K and M are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K M\n\n\nOutput\n\nPrint the number of the possible tuples of sequences (A_0,A_1,...,A_N), modulo M.\n\nExamples\n\nInput\n\n2 2 100\n\n\nOutput\n\n5\n\n\nInput\n\n4 3 999999999\n\n\nOutput\n\n358\n\n\nInput\n\n150 150 998244353\n\n\nOutput\n\n186248260", "grammar": {"answer": null}}
{"name": "p00330 Word", "description": "The smallest unit of data handled by a computer is called a bit, and the amount of information that represents multiple bits together is called a word. Currently, many computers process one word as 32 bits.\n\nFor a computer that represents one word in 32 bits, create a program that outputs the amount of data W given in word units in bit units.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\nW\n\n\nThe input consists of one line and is given the amount of data W (0 ≤ W ≤ 100).\n\nOutput\n\nOutputs the bitwise value on one line.\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n128\n\n\nInput\n\n3\n\n\nOutput\n\n96", "grammar": {"answer": null}}
{"name": "p03274 AtCoder Beginner Contest 107 - Candles", "description": "There are N candles placed on a number line. The i-th candle from the left is placed on coordinate x_i. Here, x_1 < x_2 < ... < x_N holds.\n\nInitially, no candles are burning. Snuke decides to light K of the N candles.\n\nNow, he is at coordinate 0. He can move left and right along the line with speed 1. He can also light a candle when he is at the same position as the candle, in negligible time.\n\nFind the minimum time required to light K candles.\n\nConstraints\n\n* 1 \\leq N \\leq 10^5\n* 1 \\leq K \\leq N\n* x_i is an integer.\n* |x_i| \\leq 10^8\n* x_1 < x_2 < ... < x_N\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nx_1 x_2 ... x_N\n\n\nOutput\n\nPrint the minimum time required to light K candles.\n\nExamples\n\nInput\n\n5 3\n-30 -10 10 20 50\n\n\nOutput\n\n40\n\n\nInput\n\n3 2\n10 20 30\n\n\nOutput\n\n20\n\n\nInput\n\n1 1\n0\n\n\nOutput\n\n0\n\n\nInput\n\n8 5\n-9 -7 -4 -3 1 2 3 4\n\n\nOutput\n\n10", "grammar": {"answer": null}}
{"name": "p02923 AtCoder Beginner Contest 139 - Lower", "description": "There are N squares arranged in a row from left to right.\n\nThe height of the i-th square from the left is H_i.\n\nYou will land on a square of your choice, then repeat moving to the adjacent square on the right as long as the height of the next square is not greater than that of the current square.\n\nFind the maximum number of times you can move.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 10^5\n* 1 \\leq H_i \\leq 10^9\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nH_1 H_2 ... H_N\n\n\nOutput\n\nPrint the maximum number of times you can move.\n\nExamples\n\nInput\n\n5\n10 4 8 7 3\n\n\nOutput\n\n2\n\n\nInput\n\n7\n4 4 5 6 6 5 5\n\n\nOutput\n\n3\n\n\nInput\n\n4\n1 2 3 4\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "784_E. Twisted Circuit", "description": "<image>\n\nInput\n\nThe input consists of four lines, each line containing a single digit 0 or 1.\n\nOutput\n\nOutput a single digit, 0 or 1.\n\nExample\n\nInput\n\n0\n1\n1\n0\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "678_B. The Same Calendar", "description": "The girl Taylor has a beautiful calendar for the year y. In the calendar all days are given with their days of week: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.\n\nThe calendar is so beautiful that she wants to know what is the next year after y when the calendar will be exactly the same. Help Taylor to find that year.\n\nNote that leap years has 366 days. The year is leap if it is divisible by 400 or it is divisible by 4, but not by 100 (<https://en.wikipedia.org/wiki/Leap_year>).\n\nInput\n\nThe only line contains integer y (1000 ≤ y < 100'000) — the year of the calendar.\n\nOutput\n\nPrint the only integer y' — the next year after y when the calendar will be the same. Note that you should find the first year after y with the same calendar.\n\nExamples\n\nInput\n\n2016\n\n\nOutput\n\n2044\n\n\nInput\n\n2000\n\n\nOutput\n\n2028\n\n\nInput\n\n50501\n\n\nOutput\n\n50507\n\nNote\n\nToday is Monday, the 13th of June, 2016.", "grammar": {"answer": null}}
{"name": "792_E. Colored Balls", "description": "There are n boxes with colored balls on the table. Colors are numbered from 1 to n. i-th box contains ai balls, all of which have color i. You have to write a program that will divide all balls into sets such that:\n\n  * each ball belongs to exactly one of the sets, \n  * there are no empty sets, \n  * there is no set containing two (or more) balls of different colors (each set contains only balls of one color), \n  * there are no two sets such that the difference between their sizes is greater than 1. \n\n\n\nPrint the minimum possible number of sets.\n\nInput\n\nThe first line contains one integer number n (1 ≤ n ≤ 500).\n\nThe second line contains n integer numbers a1, a2, ... , an (1 ≤ ai ≤ 109).\n\nOutput\n\nPrint one integer number — the minimum possible number of sets.\n\nExamples\n\nInput\n\n3\n4 7 8\n\n\nOutput\n\n5\n\n\nInput\n\n2\n2 7\n\n\nOutput\n\n4\n\nNote\n\nIn the first example the balls can be divided into sets like that: one set with 4 balls of the first color, two sets with 3 and 4 balls, respectively, of the second color, and two sets with 4 balls of the third color.", "grammar": {"answer": null}}
{"name": "932_C. Permutation Cycle", "description": "For a permutation P[1... N] of integers from 1 to N, function f is defined as follows:\n\n<image>\n\nLet g(i) be the minimum positive integer j such that f(i, j) = i. We can show such j always exists.\n\nFor given N, A, B, find a permutation P of integers from 1 to N such that for 1 ≤ i ≤ N, g(i) equals either A or B.\n\nInput\n\nThe only line contains three integers N, A, B (1 ≤ N ≤ 106, 1 ≤ A, B ≤ N).\n\nOutput\n\nIf no such permutation exists, output -1. Otherwise, output a permutation of integers from 1 to N.\n\nExamples\n\nInput\n\n9 2 5\n\n\nOutput\n\n6 5 8 3 4 1 9 2 7\n\nInput\n\n3 2 1\n\n\nOutput\n\n1 2 3 \n\nNote\n\nIn the first example, g(1) = g(6) = g(7) = g(9) = 2 and g(2) = g(3) = g(4) = g(5) = g(8) = 5\n\nIn the second example, g(1) = g(2) = g(3) = 1", "grammar": {"answer": null}}
{"name": "p02424 Bit Operation II", "description": "Given two non-negative decimal integers $a$ and $b$, calculate their AND (logical conjunction), OR (logical disjunction) and XOR (exclusive disjunction) and print them in binary representation of 32 bits.\n\nConstraints\n\n* $0 \\leq a, b \\leq 2^{32} - 1$\n\nInput\n\nThe input is given in the following format.\n\n\n$a \\; b$\n\n\nOutput\n\nPrint results of AND, OR and XOR in a line respectively.\n\nExample\n\nInput\n\n8 10\n\n\nOutput\n\n00000000000000000000000000001000\n00000000000000000000000000001010\n00000000000000000000000000000010", "grammar": {"answer": null}}
{"name": "1098_B. Nice table", "description": "You are given an n × m table, consisting of characters «A», «G», «C», «T». Let's call a table nice, if every 2 × 2 square contains all four distinct characters. Your task is to find a nice table (also consisting of «A», «G», «C», «T»), that differs from the given table in the minimum number of characters.\n\nInput\n\nFirst line contains two positive integers n and m — number of rows and columns in the table you are given (2 ≤ n, m, n × m ≤ 300 000). Then, n lines describing the table follow. Each line contains exactly m characters «A», «G», «C», «T».\n\nOutput\n\nOutput n lines, m characters each. This table must be nice and differ from the input table in the minimum number of characters.\n\nExamples\n\nInput\n\n\n2 2\nAG\nCT\n\n\nOutput\n\n\nAG\nCT\n\n\nInput\n\n\n3 5\nAGCAG\nAGCAG\nAGCAG\n\n\nOutput\n\n\nTGCAT\nCATGC\nTGCAT\n\nNote\n\nIn the first sample, the table is already nice. In the second sample, you can change 9 elements to make the table nice.", "grammar": {"answer": null}}
{"name": "365_C. Matrix", "description": "You have a string of decimal digits s. Let's define bij = si·sj. Find in matrix b the number of such rectangles that the sum bij for all cells (i, j) that are the elements of the rectangle equals a in each rectangle.\n\nA rectangle in a matrix is a group of four integers (x, y, z, t) (x ≤ y, z ≤ t). The elements of the rectangle are all cells (i, j) such that x ≤ i ≤ y, z ≤ j ≤ t.\n\nInput\n\nThe first line contains integer a (0 ≤ a ≤ 109), the second line contains a string of decimal integers s (1 ≤ |s| ≤ 4000).\n\nOutput\n\nPrint a single integer — the answer to a problem.\n\nPlease, do not write the %lld specifier to read or write 64-bit integers in С++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nExamples\n\nInput\n\n10\n12345\n\n\nOutput\n\n6\n\n\nInput\n\n16\n439873893693495623498263984765\n\n\nOutput\n\n40", "grammar": {"answer": null}}
{"name": "911_A. Nearest Minimums", "description": "You are given an array of n integer numbers a0, a1, ..., an - 1. Find the distance between two closest (nearest) minimums in it. It is guaranteed that in the array a minimum occurs at least two times.\n\nInput\n\nThe first line contains positive integer n (2 ≤ n ≤ 105) — size of the given array. The second line contains n integers a0, a1, ..., an - 1 (1 ≤ ai ≤ 109) — elements of the array. It is guaranteed that in the array a minimum occurs at least two times.\n\nOutput\n\nPrint the only number — distance between two nearest minimums in the array.\n\nExamples\n\nInput\n\n2\n3 3\n\n\nOutput\n\n1\n\n\nInput\n\n3\n5 6 5\n\n\nOutput\n\n2\n\n\nInput\n\n9\n2 1 3 5 4 1 2 3 1\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p02782 AtCoder Beginner Contest 154 - Many Many Paths", "description": "Snuke is standing on a two-dimensional plane. In one operation, he can move by 1 in the positive x-direction, or move by 1 in the positive y-direction.\n\nLet us define a function f(r, c) as follows:\n\n* f(r,c) :=  (The number of paths from the point (0, 0) to the point (r, c) that Snuke can trace by repeating the operation above)\n\n\n\nGiven are integers r_1, r_2, c_1, and c_2. Find the sum of f(i, j) over all pair of integers (i, j) such that r_1 ≤ i ≤ r_2 and c_1 ≤ j ≤ c_2, and compute this value modulo (10^9+7).\n\nConstraints\n\n* 1 ≤ r_1 ≤ r_2 ≤ 10^6\n* 1 ≤ c_1 ≤ c_2 ≤ 10^6\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nr_1 c_1 r_2 c_2\n\n\nOutput\n\nPrint the sum of f(i, j) modulo (10^9+7).\n\nExamples\n\nInput\n\n1 1 2 2\n\n\nOutput\n\n14\n\n\nInput\n\n314 159 2653 589\n\n\nOutput\n\n602215194", "grammar": {"answer": null}}
{"name": "946_G. Almost Increasing Array", "description": "We call an array almost increasing if we can erase not more than one element from it so that the array becomes strictly increasing (that is, every element is striclty greater than every element before it).\n\nYou are given an array a consisting of n elements. You are allowed to replace any element with any integer number (and you may do so any number of times you need). What is the minimum number of replacements you have to perform in order to make the array almost increasing?\n\nInput\n\nThe first line contains one integer n (2 ≤ n ≤ 200000) — the number of elements in a.\n\nThe second line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 109) — the array a.\n\nOutput\n\nPrint the minimum number of replaces you have to perform so that a is almost increasing.\n\nExamples\n\nInput\n\n5\n5 4 3 2 1\n\n\nOutput\n\n3\n\n\nInput\n\n5\n1 2 8 9 5\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "1188_B. Count Pairs", "description": "You are given a prime number p, n integers a_1, a_2, …, a_n, and an integer k. \n\nFind the number of pairs of indexes (i, j) (1 ≤ i < j ≤ n) for which (a_i + a_j)(a_i^2 + a_j^2) ≡ k mod p.\n\nInput\n\nThe first line contains integers n, p, k (2 ≤ n ≤ 3 ⋅ 10^5, 2 ≤ p ≤ 10^9, 0 ≤ k ≤ p-1). p is guaranteed to be prime.\n\nThe second line contains n integers a_1, a_2, …, a_n (0 ≤ a_i ≤ p-1). It is guaranteed that all elements are different.\n\nOutput\n\nOutput a single integer — answer to the problem.\n\nExamples\n\nInput\n\n\n3 3 0\n0 1 2\n\n\nOutput\n\n\n1\n\nInput\n\n\n6 7 2\n1 2 3 4 5 6\n\n\nOutput\n\n\n3\n\nNote\n\nIn the first example:\n\n(0+1)(0^2 + 1^2) = 1 ≡ 1 mod 3.\n\n(0+2)(0^2 + 2^2) = 8 ≡ 2 mod 3.\n\n(1+2)(1^2 + 2^2) = 15 ≡ 0 mod 3.\n\nSo only 1 pair satisfies the condition.\n\nIn the second example, there are 3 such pairs: (1, 5), (2, 3), (4, 6).", "grammar": {"answer": null}}
{"name": "p02248 String Search", "description": "Find places where a string P is found within a text T. Print all indices of T where P found. The indices of T start with 0.\n\nConstraints\n\n* 1 ≤ length of T ≤ 1000000\n* 1 ≤ length of P ≤ 10000\n* The input consists of alphabetical characters and digits\n\nInput\n\nIn the first line, a text T is given. In the second line, a string P is given.\n\nOutput\n\nPrint an index of T where P found in a line. Print the indices in ascending order.\n\nExamples\n\nInput\n\naabaaa\naa\n\n\nOutput\n\n0\n3\n4\n\n\nInput\n\nxyzz\nyz\n\n\nOutput\n\n1\n\n\nInput\n\nabc\nxyz\n\n\nOutput", "grammar": {"answer": null}}
{"name": "p02873 AtCoder Grand Contest 040 - ><", "description": "Given is a string S of length N-1. Each character in S is `<` or `>`.\n\nA sequence of N non-negative integers, a_1,a_2,\\cdots,a_N, is said to be good when the following condition is satisfied for all i (1 \\leq i \\leq N-1):\n\n* If S_i= `<`: a_i<a_{i+1}\n* If S_i= `>`: a_i>a_{i+1}\n\n\n\nFind the minimum possible sum of the elements of a good sequence of N non-negative integers.\n\nConstraints\n\n* 2 \\leq N \\leq 5 \\times 10^5\n* S is a string of length N-1 consisting of `<` and `>`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nFind the minimum possible sum of the elements of a good sequence of N non-negative integers.\n\nExamples\n\nInput\n\n<>>\n\n\nOutput\n\n3\n\n\nInput\n\n<>>><<><<<<<>>><\n\n\nOutput\n\n28", "grammar": {"answer": null}}
{"name": "p03083 ExaWizards 2019 - Black or White", "description": "Today, Snuke will eat B pieces of black chocolate and W pieces of white chocolate for an afternoon snack.\n\nHe will repeat the following procedure until there is no piece left:\n\n* Choose black or white with equal probability, and eat a piece of that color if it exists.\n\n\n\nFor each integer i from 1 to B+W (inclusive), find the probability that the color of the i-th piece to be eaten is black. It can be shown that these probabilities are rational, and we ask you to print them modulo 10^9 + 7, as described in Notes.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq B,W \\leq 10^{5}\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nB W\n\n\nOutput\n\nPrint the answers in B+W lines. In the i-th line, print the probability that the color of the i-th piece to be eaten is black, modulo 10^{9}+7.\n\nExamples\n\nInput\n\n2 1\n\n\nOutput\n\n500000004\n750000006\n750000006\n\n\nInput\n\n3 2\n\n\nOutput\n\n500000004\n500000004\n625000005\n187500002\n187500002\n\n\nInput\n\n6 9\n\n\nOutput\n\n500000004\n500000004\n500000004\n500000004\n500000004\n500000004\n929687507\n218750002\n224609377\n303710940\n633300786\n694091802\n172485353\n411682132\n411682132", "grammar": {"answer": null}}
{"name": "113_C. Double Happiness", "description": "On the math lesson a teacher asked each pupil to come up with his own lucky numbers. As a fan of number theory Peter chose prime numbers. Bob was more original. He said that number t is his lucky number, if it can be represented as: \n\nt = a2 + b2,  where a, b are arbitrary positive integers.\n\nNow, the boys decided to find out how many days of the interval [l, r] (l ≤ r) are suitable for pair programming. They decided that the day i (l ≤ i ≤ r) is suitable for pair programming if and only if the number i is lucky for Peter and lucky for Bob at the same time. Help the boys to find the number of such days.\n\nInput\n\nThe first line of the input contains integer numbers l, r (1 ≤ l, r ≤ 3·108).\n\nOutput\n\nIn the only line print the number of days on the segment [l, r], which are lucky for Peter and Bob at the same time.\n\nExamples\n\nInput\n\n3 5\n\n\nOutput\n\n1\n\n\nInput\n\n6 66\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "p02400 Circle", "description": "Write a program which calculates the area and circumference of a circle for given radius r.\n\nConstraints\n\n* 0 < r < 10000\n\nInput\n\nA real number r is given.\n\nOutput\n\nPrint the area and circumference of the circle in a line. Put a single space between them. The output should not contain an absolute error greater than 10-5.\n\nExamples\n\nInput\n\n2\n\n\nOutput\n\n12.566371 12.566371\n\n\nInput\n\n3\n\n\nOutput\n\n28.274334 18.849556", "grammar": {"answer": null}}
{"name": "456_A. Laptops", "description": "One day Dima and Alex had an argument about the price and quality of laptops. Dima thinks that the more expensive a laptop is, the better it is. Alex disagrees. Alex thinks that there are two laptops, such that the price of the first laptop is less (strictly smaller) than the price of the second laptop but the quality of the first laptop is higher (strictly greater) than the quality of the second laptop.\n\nPlease, check the guess of Alex. You are given descriptions of n laptops. Determine whether two described above laptops exist.\n\nInput\n\nThe first line contains an integer n (1 ≤ n ≤ 105) — the number of laptops.\n\nNext n lines contain two integers each, ai and bi (1 ≤ ai, bi ≤ n), where ai is the price of the i-th laptop, and bi is the number that represents the quality of the i-th laptop (the larger the number is, the higher is the quality).\n\nAll ai are distinct. All bi are distinct. \n\nOutput\n\nIf Alex is correct, print \"Happy Alex\", otherwise print \"Poor Alex\" (without the quotes).\n\nExamples\n\nInput\n\n2\n1 2\n2 1\n\n\nOutput\n\nHappy Alex", "grammar": {"answer": null}}
{"name": "p03059 AtCoder Beginner Contest 125 - Biscuit Generator", "description": "A biscuit making machine produces B biscuits at the following moments: A seconds, 2A seconds, 3A seconds and each subsequent multiple of A seconds after activation.\n\nFind the total number of biscuits produced within T + 0.5 seconds after activation.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq A, B, T \\leq 20\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nA B T\n\n\nOutput\n\nPrint the total number of biscuits produced within T + 0.5 seconds after activation.\n\nExamples\n\nInput\n\n3 5 7\n\n\nOutput\n\n10\n\n\nInput\n\n3 2 9\n\n\nOutput\n\n6\n\n\nInput\n\n20 20 19\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "803_A. Maximal Binary Matrix", "description": "You are given matrix with n rows and n columns filled with zeroes. You should put k ones in it in such a way that the resulting matrix is symmetrical with respect to the main diagonal (the diagonal that goes from the top left to the bottom right corner) and is lexicographically maximal.\n\nOne matrix is lexicographically greater than the other if the first different number in the first different row from the top in the first matrix is greater than the corresponding number in the second one.\n\nIf there exists no such matrix then output -1.\n\nInput\n\nThe first line consists of two numbers n and k (1 ≤ n ≤ 100, 0 ≤ k ≤ 106).\n\nOutput\n\nIf the answer exists then output resulting matrix. Otherwise output -1.\n\nExamples\n\nInput\n\n2 1\n\n\nOutput\n\n1 0 \n0 0 \n\n\nInput\n\n3 2\n\n\nOutput\n\n1 0 0 \n0 1 0 \n0 0 0 \n\n\nInput\n\n2 5\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p00027 What day is today?", "description": "Your task is to write a program which reads a date (from 2004/1/1 to 2004/12/31) and prints the day of the date. Jan. 1, 2004, is Thursday. Note that 2004 is a leap year and we have Feb. 29.\n\n\n\nInput\n\nThe input is a sequence of datasets. The end of the input is indicated by a line containing one zero. Each dataset consists of two integers m and d separated by a single space in a line. These integers respectively represent the month and the day.\n\nThe number of datasets is less than or equal to 50.\n\nOutput\n\nFor each dataset, print the day (please see the following words) in a line.\n\n\nMonday\nTuesday\nWednesday\nThursday\nFriday\nSaturday\nSunday\n\n\nExample\n\nInput\n\n1 1\n2 29\n0 0\n\n\nOutput\n\nThursday\nSunday", "grammar": {"answer": null}}
{"name": "926_A. 2-3-numbers", "description": "A positive integer is called a 2-3-integer, if it is equal to 2x·3y for some non-negative integers x and y. In other words, these integers are such integers that only have 2 and 3 among their prime divisors. For example, integers 1, 6, 9, 16 and 108 — are 2-3 integers, while 5, 10, 21 and 120 are not.\n\nPrint the number of 2-3-integers on the given segment [l, r], i. e. the number of sich 2-3-integers t that l ≤ t ≤ r.\n\nInput\n\nThe only line contains two integers l and r (1 ≤ l ≤ r ≤ 2·109).\n\nOutput\n\nPrint a single integer the number of 2-3-integers on the segment [l, r].\n\nExamples\n\nInput\n\n1 10\n\n\nOutput\n\n7\n\n\nInput\n\n100 200\n\n\nOutput\n\n5\n\n\nInput\n\n1 2000000000\n\n\nOutput\n\n326\n\nNote\n\nIn the first example the 2-3-integers are 1, 2, 3, 4, 6, 8 and 9.\n\nIn the second example the 2-3-integers are 108, 128, 144, 162 and 192.", "grammar": {"answer": null}}
{"name": "p03654 AtCoder Grand Contest 018 - Tree and Hamilton Path", "description": "There is a tree with N vertices, numbered 1 through N. The i-th edge in this tree connects Vertices A_i and B_i and has a length of C_i.\n\nJoisino created a complete graph with N vertices. The length of the edge connecting Vertices u and v in this graph, is equal to the shortest distance between Vertices u and v in the tree above.\n\nJoisino would like to know the length of the longest Hamiltonian path (see Notes) in this complete graph. Find the length of that path.\n\nConstraints\n\n* 2 \\leq N \\leq 10^5\n* 1 \\leq A_i < B_i \\leq N\n* The given graph is a tree.\n* 1 \\leq C_i \\leq 10^8\n* All input values are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nA_1 B_1 C_1\nA_2 B_2 C_2\n:\nA_{N-1} B_{N-1} C_{N-1}\n\n\nOutput\n\nPrint the length of the longest Hamiltonian path in the complete graph created by Joisino.\n\nExamples\n\nInput\n\n5\n1 2 5\n3 4 7\n2 3 3\n2 5 2\n\n\nOutput\n\n38\n\n\nInput\n\n8\n2 8 8\n1 5 1\n4 8 2\n2 5 4\n3 8 6\n6 8 9\n2 7 12\n\n\nOutput\n\n132", "grammar": {"answer": null}}
{"name": "662_C. Binary Table", "description": "You are given a table consisting of n rows and m columns. Each cell of the table contains either 0 or 1. In one move, you are allowed to pick any row or any column and invert all values, that is, replace 0 by 1 and vice versa.\n\nWhat is the minimum number of cells with value 1 you can get after applying some number of operations?\n\nInput\n\nThe first line of the input contains two integers n and m (1 ≤ n ≤ 20, 1 ≤ m ≤ 100 000) — the number of rows and the number of columns, respectively.\n\nThen n lines follows with the descriptions of the rows. Each line has length m and contains only digits '0' and '1'.\n\nOutput\n\nOutput a single integer — the minimum possible number of ones you can get after applying some sequence of operations.\n\nExample\n\nInput\n\n3 4\n0110\n1010\n0111\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p02662 AtCoder Beginner Contest 169 - Knapsack for All Subsets", "description": "Given are a sequence of N positive integers A_1, A_2, \\ldots, A_N and another positive integer S.\nFor a non-empty subset T of the set \\\\{1, 2, \\ldots , N \\\\}, let us define f(T) as follows:\n\n\n* f(T) is the number of different non-empty subsets \\\\{x_1, x_2, \\ldots , x_k \\\\} of T such that A_{x_1}+A_{x_2}+\\cdots +A_{x_k} = S.\n\n\n\nFind the sum of f(T) over all 2^N-1 subsets T of \\\\{1, 2, \\ldots , N \\\\}. Since the sum can be enormous, print it modulo 998244353.\n\nConstraints\n\n* All values in input are integers.\n* 1 \\leq N \\leq 3000\n* 1 \\leq S \\leq 3000\n* 1 \\leq A_i \\leq 3000\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN S\nA_1 A_2 ... A_N\n\n\nOutput\n\nPrint the sum of f(T) modulo 998244353.\n\nExamples\n\nInput\n\n3 4\n2 2 4\n\n\nOutput\n\n6\n\n\nInput\n\n5 8\n9 9 9 9 9\n\n\nOutput\n\n0\n\n\nInput\n\n10 10\n3 1 4 1 5 9 2 6 5 3\n\n\nOutput\n\n3296", "grammar": {"answer": null}}
{"name": "845_G. Shortest Path Problem?", "description": "You are given an undirected graph with weighted edges. The length of some path between two vertices is the bitwise xor of weights of all edges belonging to this path (if some edge is traversed more than once, then it is included in bitwise xor the same number of times). You have to find the minimum length of path between vertex 1 and vertex n.\n\nNote that graph can contain multiple edges and loops. It is guaranteed that the graph is connected.\n\nInput\n\nThe first line contains two numbers n and m (1 ≤ n ≤ 100000, n - 1 ≤ m ≤ 100000) — the number of vertices and the number of edges, respectively.\n\nThen m lines follow, each line containing three integer numbers x, y and w (1 ≤ x, y ≤ n, 0 ≤ w ≤ 108). These numbers denote an edge that connects vertices x and y and has weight w.\n\nOutput\n\nPrint one number — the minimum length of path between vertices 1 and n.\n\nExamples\n\nInput\n\n3 3\n1 2 3\n1 3 2\n3 2 0\n\n\nOutput\n\n2\n\n\nInput\n\n2 2\n1 1 3\n1 2 3\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02444 Rotate", "description": "Write a program which reads a sequence of integers $A = \\\\{a_0, a_1, ..., a_{n-1}\\\\}$ and rotate specified elements by a list of the following operation:\n\n* rotate($b, m, e$): For each integer $k$ ($0 \\leq k < (e - b)$), move element $b + k$ to the place of element $b + ((k + (e - m)) \\mod (e - b))$.\n\nConstraints\n\n* $1 \\leq n \\leq 1,000$\n* $-1,000,000,000 \\leq a_i \\leq 1,000,000,000$\n* $1 \\leq q \\leq 1,000$\n* $0 \\leq b_i \\leq m_i < e_i \\leq n$\n\nInput\n\nThe input is given in the following format.\n\n\n$n$\n$a_0 \\; a_1 \\; ...,\\; a_{n-1}$\n$q$\n$b_1 \\; m_1 \\; e_1$\n$b_2 \\; m_2 \\; e_2$\n:\n$b_{q} \\; m_{q} \\; e_{q}$\n\n\nIn the first line, $n$ (the number of elements in $A$) is given. In the second line, $a_i$ (each element in $A$) are given. In the third line, the number of queries $q$ is given and each query is given by three integers $b_i \\; m_i \\; e_i$ in the following $q$ lines.\n\nOutput\n\nPrint all elements of $A$ in a line after performing the given operations. Put a single space character between adjacency elements and a newline at the end of the last element.\n\nExample\n\nInput\n\n11\n1 2 3 4 5 6 7 8 9 10 11\n1\n2 6 9\n\n\nOutput\n\n1 2 7 8 9 3 4 5 6 10 11", "grammar": {"answer": null}}
{"name": "1492_D. Genius's Gambit", "description": "You are given three integers a, b, k.\n\nFind two binary integers x and y (x ≥ y) such that \n\n  1. both x and y consist of a zeroes and b ones; \n  2. x - y (also written in binary form) has exactly k ones. \n\nYou are not allowed to use leading zeros for x and y. \n\nInput\n\nThe only line contains three integers a, b, and k (0 ≤ a; 1 ≤ b; 0 ≤ k ≤ a + b ≤ 2 ⋅ 10^5) — the number of zeroes, ones, and the number of ones in the result.\n\nOutput\n\nIf it's possible to find two suitable integers, print \"Yes\" followed by x and y in base-2.\n\nOtherwise print \"No\".\n\nIf there are multiple possible answers, print any of them.\n\nExamples\n\nInput\n\n\n4 2 3\n\n\nOutput\n\n\nYes\n101000\n100001\n\n\nInput\n\n\n3 2 1\n\n\nOutput\n\n\nYes\n10100\n10010\n\n\nInput\n\n\n3 2 5\n\n\nOutput\n\n\nNo\n\nNote\n\nIn the first example, x = 101000_2 = 2^5 + 2^3 = 40_{10}, y = 100001_2 = 2^5 + 2^0 = 33_{10}, 40_{10} - 33_{10} = 7_{10} = 2^2 + 2^1 + 2^0 = 111_{2}. Hence x-y has 3 ones in base-2.\n\nIn the second example, x = 10100_2 = 2^4 + 2^2 = 20_{10}, y = 10010_2 = 2^4 + 2^1 = 18, x - y = 20 - 18 = 2_{10} = 10_{2}. This is precisely one 1.\n\nIn the third example, one may show, that it's impossible to find an answer.", "grammar": {"answer": null}}
{"name": "894_A. QAQ", "description": "\"QAQ\" is a word to denote an expression of crying. Imagine \"Q\" as eyes with tears and \"A\" as a mouth.\n\nNow Diamond has given Bort a string consisting of only uppercase English letters of length n. There is a great number of \"QAQ\" in the string (Diamond is so cute!).\n\n<image> illustration by 猫屋 https://twitter.com/nekoyaliu\n\nBort wants to know how many subsequences \"QAQ\" are in the string Diamond has given. Note that the letters \"QAQ\" don't have to be consecutive, but the order of letters should be exact.\n\nInput\n\nThe only line contains a string of length n (1 ≤ n ≤ 100). It's guaranteed that the string only contains uppercase English letters.\n\nOutput\n\nPrint a single integer — the number of subsequences \"QAQ\" in the string.\n\nExamples\n\nInput\n\nQAQAQYSYIOIWIN\n\n\nOutput\n\n4\n\n\nInput\n\nQAQQQZZYNOIWIN\n\n\nOutput\n\n3\n\nNote\n\nIn the first example there are 4 subsequences \"QAQ\": \"QAQAQYSYIOIWIN\", \"QAQAQYSYIOIWIN\", \"QAQAQYSYIOIWIN\", \"QAQAQYSYIOIWIN\".", "grammar": {"answer": null}}
{"name": "409_B. Mysterious Language", "description": "You are given a mysterious language (codenamed \"Secret\") available in \"Custom Invocation\" tab. Figure out what this language is and write a program which prints its name. Note that the program must be written in this language.\n\nInput\n\nThis program has only one test (your program doesn't have to read anything).\n\nOutput\n\nOutput the name of the mysterious language. Note that the name is case-sensitive and might contain digits and special characters.\n\nExamples\n\nNote\n\nSome scientists disagree on what should be considered as a language and what should be considered as a dialect.", "grammar": {"answer": null}}
{"name": "393_C. Blocked Points", "description": "Imagine you have an infinite 2D plane with Cartesian coordinate system. Some of the integral points are blocked, and others are not. Two integral points A and B on the plane are 4-connected if and only if:\n\n  * the Euclidean distance between A and B is one unit and neither A nor B is blocked; \n  * or there is some integral point C, such that A is 4-connected with C, and C is 4-connected with B. \n\n\n\nLet's assume that the plane doesn't contain blocked points. Consider all the integral points of the plane whose Euclidean distance from the origin is no more than n, we'll name these points special. Chubby Yang wants to get the following property: no special point is 4-connected to some non-special point. To get the property she can pick some integral points of the plane and make them blocked. What is the minimum number of points she needs to pick?\n\nInput\n\nThe first line contains an integer n (0 ≤ n ≤ 4·107).\n\nOutput\n\nPrint a single integer — the minimum number of points that should be blocked.\n\nExamples\n\nInput\n\n1\n\n\nOutput\n\n4\n\n\nInput\n\n2\n\n\nOutput\n\n8\n\n\nInput\n\n3\n\n\nOutput\n\n16", "grammar": {"answer": null}}
{"name": "841_C. Leha and Function", "description": "Leha like all kinds of strange things. Recently he liked the function F(n, k). Consider all possible k-element subsets of the set [1, 2, ..., n]. For subset find minimal element in it. F(n, k) — mathematical expectation of the minimal element among all k-element subsets.\n\nBut only function does not interest him. He wants to do interesting things with it. Mom brought him two arrays A and B, each consists of m integers. For all i, j such that 1 ≤ i, j ≤ m the condition Ai ≥ Bj holds. Help Leha rearrange the numbers in the array A so that the sum <image> is maximally possible, where A' is already rearranged array.\n\nInput\n\nFirst line of input data contains single integer m (1 ≤ m ≤ 2·105) — length of arrays A and B.\n\nNext line contains m integers a1, a2, ..., am (1 ≤ ai ≤ 109) — array A.\n\nNext line contains m integers b1, b2, ..., bm (1 ≤ bi ≤ 109) — array B.\n\nOutput\n\nOutput m integers a'1, a'2, ..., a'm — array A' which is permutation of the array A.\n\nExamples\n\nInput\n\n5\n7 3 5 3 4\n2 1 3 2 3\n\n\nOutput\n\n4 7 3 5 3\n\n\nInput\n\n7\n4 6 5 8 8 2 6\n2 1 2 2 1 1 2\n\n\nOutput\n\n2 6 4 5 8 8 6", "grammar": {"answer": null}}
{"name": "299_A. Ksusha and Array", "description": "Ksusha is a beginner coder. Today she starts studying arrays. She has array a1, a2, ..., an, consisting of n positive integers.\n\nHer university teacher gave her a task. Find such number in the array, that all array elements are divisible by it. Help her and find the number!\n\nInput\n\nThe first line contains integer n (1 ≤ n ≤ 105), showing how many numbers the array has. The next line contains integers a1, a2, ..., an (1 ≤ ai ≤ 109) — the array elements.\n\nOutput\n\nPrint a single integer — the number from the array, such that all array elements are divisible by it. If such number doesn't exist, print -1.\n\nIf there are multiple answers, you are allowed to print any of them.\n\nExamples\n\nInput\n\n3\n2 2 4\n\n\nOutput\n\n2\n\n\nInput\n\n5\n2 1 3 1 6\n\n\nOutput\n\n1\n\n\nInput\n\n3\n2 3 5\n\n\nOutput\n\n-1", "grammar": {"answer": null}}
{"name": "p02939 AtCoder Grand Contest 037 - Dividing a String", "description": "Given is a string S consisting of lowercase English letters. Find the maximum positive integer K that satisfies the following condition:\n\n* There exists a partition of S into K non-empty strings S=S_1S_2...S_K such that S_i \\neq S_{i+1} (1 \\leq i \\leq K-1).\n\n\n\nHere S_1S_2...S_K represents the concatenation of S_1,S_2,...,S_K in this order.\n\nConstraints\n\n* 1 \\leq |S| \\leq 2 \\times 10^5\n* S consists of lowercase English letters.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the maximum positive integer K that satisfies the condition.\n\nExamples\n\nInput\n\naabbaa\n\n\nOutput\n\n4\n\n\nInput\n\naaaccacabaababc\n\n\nOutput\n\n12", "grammar": {"answer": null}}
{"name": "368_D. Sereja ans Anagrams", "description": "Sereja has two sequences a and b and number p. Sequence a consists of n integers a1, a2, ..., an. Similarly, sequence b consists of m integers b1, b2, ..., bm. As usual, Sereja studies the sequences he has. Today he wants to find the number of positions q (q + (m - 1)·p ≤ n; q ≥ 1), such that sequence b can be obtained from sequence aq, aq + p, aq + 2p, ..., aq + (m - 1)p by rearranging elements.\n\nSereja needs to rush to the gym, so he asked to find all the described positions of q.\n\nInput\n\nThe first line contains three integers n, m and p (1 ≤ n, m ≤ 2·105, 1 ≤ p ≤ 2·105). The next line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 109). The next line contains m integers b1, b2, ..., bm (1 ≤ bi ≤ 109).\n\nOutput\n\nIn the first line print the number of valid qs. In the second line, print the valid values in the increasing order.\n\nExamples\n\nInput\n\n5 3 1\n1 2 3 2 1\n1 2 3\n\n\nOutput\n\n2\n1 3\n\n\nInput\n\n6 3 2\n1 3 2 2 3 1\n1 2 3\n\n\nOutput\n\n2\n1 2", "grammar": {"answer": null}}
{"name": "p00388 Design of a Mansion", "description": "Our master carpenter is designing a condominium called Bange Hills Mansion. The condominium is constructed by stacking up floors of the same height. The height of each floor is designed so that the total height of the stacked floors coincides with the predetermined height of the condominium. The height of each floor can be adjusted freely with a certain range.\n\nThe final outcome of the building depends on clever height allotment for each floor. So, he plans to calculate possible combinations of per-floor heights to check how many options he has.\n\nGiven the height of the condominium and the adjustable range of each floor’s height, make a program to enumerate the number of choices for a floor.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\n$H$ $A$ $B$\n\n\nThe input line provides the height of the condominium $H$ ($1 \\leq H \\leq 10^5$) and the upper and lower limits $A$ and $B$ of the height adjustable range for one floor ($1 \\leq A \\leq B \\leq H$). All data are given as integers.\n\nOutput\n\nOutput the number of possible height selections for each floor in a line.\n\nExamples\n\nInput\n\n100 2 4\n\n\nOutput\n\n2\n\n\nInput\n\n101 3 5\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "p02805 AtCoder Beginner Contest 151 - Enclose All", "description": "Given are N points (x_i, y_i) in a two-dimensional plane.\n\nFind the minimum radius of a circle such that all the points are inside or on it.\n\nConstraints\n\n* 2 \\leq N \\leq 50\n* 0 \\leq x_i \\leq 1000\n* 0 \\leq y_i \\leq 1000\n* The given N points are all different.\n* The values in input are all integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nx_1 y_1\n:\nx_N y_N\n\n\nOutput\n\nPrint the minimum radius of a circle such that all the N points are inside or on it.\n\nYour output will be considered correct if the absolute or relative error from our answer is at most 10^{-6}.\n\nExamples\n\nInput\n\n2\n0 0\n1 0\n\n\nOutput\n\n0.500000000000000000\n\n\nInput\n\n3\n0 0\n0 1\n1 0\n\n\nOutput\n\n0.707106781186497524\n\n\nInput\n\n10\n10 9\n5 9\n2 0\n0 0\n2 7\n3 3\n2 5\n10 0\n3 7\n1 9\n\n\nOutput\n\n6.726812023536805158", "grammar": {"answer": null}}
{"name": "753_A. Santa Claus and Candies", "description": "Santa Claus has n candies, he dreams to give them as gifts to children.\n\nWhat is the maximal number of children for whose he can give candies if Santa Claus want each kid should get distinct positive integer number of candies. Santa Class wants to give all n candies he has.\n\nInput\n\nThe only line contains positive integer number n (1 ≤ n ≤ 1000) — number of candies Santa Claus has.\n\nOutput\n\nPrint to the first line integer number k — maximal number of kids which can get candies.\n\nPrint to the second line k distinct integer numbers: number of candies for each of k kid. The sum of k printed numbers should be exactly n.\n\nIf there are many solutions, print any of them.\n\nExamples\n\nInput\n\n5\n\n\nOutput\n\n2\n2 3\n\n\nInput\n\n9\n\n\nOutput\n\n3\n3 5 1\n\n\nInput\n\n2\n\n\nOutput\n\n1\n2 ", "grammar": {"answer": null}}
{"name": "424_C. Magic Formulas", "description": "People in the Tomskaya region like magic formulas very much. You can see some of them below.\n\nImagine you are given a sequence of positive integer numbers p1, p2, ..., pn. Lets write down some magic formulas:\n\n<image><image>\n\nHere, \"mod\" means the operation of taking the residue after dividing.\n\nThe expression <image> means applying the bitwise xor (excluding \"OR\") operation to integers x and y. The given operation exists in all modern programming languages. For example, in languages C++ and Java it is represented by \"^\", in Pascal — by \"xor\".\n\nPeople in the Tomskaya region like magic formulas very much, but they don't like to calculate them! Therefore you are given the sequence p, calculate the value of Q.\n\nInput\n\nThe first line of the input contains the only integer n (1 ≤ n ≤ 106). The next line contains n integers: p1, p2, ..., pn (0 ≤ pi ≤ 2·109).\n\nOutput\n\nThe only line of output should contain a single integer — the value of Q.\n\nExamples\n\nInput\n\n3\n1 2 3\n\n\nOutput\n\n3", "grammar": {"answer": null}}
{"name": "p03860 AtCoder Beginner Contest 048 - AtCoder *** Contest", "description": "Snuke is going to open a contest named \"AtCoder s Contest\". Here, s is a string of length 1 or greater, where the first character is an uppercase English letter, and the second and subsequent characters are lowercase English letters.\n\nSnuke has decided to abbreviate the name of the contest as \"AxC\". Here, x is the uppercase English letter at the beginning of s.\n\nGiven the name of the contest, print the abbreviation of the name.\n\nConstraints\n\n* The length of s is between 1 and 100, inclusive.\n* The first character in s is an uppercase English letter.\n* The second and subsequent characters in s are lowercase English letters.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nAtCoder s Contest\n\n\nOutput\n\nPrint the abbreviation of the name of the contest.\n\nExamples\n\nInput\n\nAtCoder Beginner Contest\n\n\nOutput\n\nABC\n\n\nInput\n\nAtCoder Snuke Contest\n\n\nOutput\n\nASC\n\n\nInput\n\nAtCoder X Contest\n\n\nOutput\n\nAXC", "grammar": {"answer": null}}
{"name": "865_D. Buy Low Sell High", "description": "You can perfectly predict the price of a certain stock for the next N days. You would like to profit on this knowledge, but only want to transact one share of stock per day. That is, each day you will either buy one share, sell one share, or do nothing. Initially you own zero shares, and you cannot sell shares when you don't own any. At the end of the N days you would like to again own zero shares, but want to have as much money as possible.\n\nInput\n\nInput begins with an integer N (2 ≤ N ≤ 3·105), the number of days.\n\nFollowing this is a line with exactly N integers p1, p2, ..., pN (1 ≤ pi ≤ 106). The price of one share of stock on the i-th day is given by pi.\n\nOutput\n\nPrint the maximum amount of money you can end up with at the end of N days.\n\nExamples\n\nInput\n\n9\n10 5 4 7 9 12 6 2 10\n\n\nOutput\n\n20\n\n\nInput\n\n20\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4\n\n\nOutput\n\n41\n\nNote\n\nIn the first example, buy a share at 5, buy another at 4, sell one at 9 and another at 12. Then buy at 2 and sell at 10. The total profit is  - 5 - 4 + 9 + 12 - 2 + 10 = 20.", "grammar": {"answer": null}}
{"name": "p01882 We don't wanna work!", "description": "Example\n\nInput\n\n4\nDurett 7\nGayles 3\nFacenda 6\nDaughtery 0\n1\n+ Mccourtney 2\n\n\nOutput\n\nMccourtney is not working now.\nDurett is working hard now.", "grammar": {"answer": null}}
{"name": "p02537 ACL Beginner Contest - Flat Subsequence", "description": "You are given a sequence A_1, A_2, ..., A_N and an integer K.\n\nPrint the maximum possible length of a sequence B that satisfies the following conditions:\n\n* B is a (not necessarily continuous) subsequence of A.\n* For each pair of adjacents elements of B, the absolute difference of the elements is at most K.\n\nConstraints\n\n* 1 \\leq N \\leq 300,000\n* 0 \\leq A_i \\leq 300,000\n* 0 \\leq K \\leq 300,000\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN K\nA_1\nA_2\n:\nA_N\n\n\nOutput\n\nPrint the answer.\n\nExample\n\nInput\n\n10 3\n1\n5\n4\n3\n8\n6\n9\n7\n2\n4\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "p02751 Social Infrastructure Information Systems Division  Hitachi Programming Contest 2020 - Odd Sum Rectangles", "description": "We have a grid with (2^N - 1) rows and (2^M-1) columns. You are asked to write 0 or 1 in each of these squares. Let a_{i,j} be the number written in the square at the i-th row from the top and the j-th column from the left.\n\nFor a quadruple of integers (i_1, i_2, j_1, j_2) such that 1\\leq i_1 \\leq i_2\\leq 2^N-1, 1\\leq j_1 \\leq j_2\\leq 2^M-1, let S(i_1, i_2, j_1, j_2) = \\displaystyle \\sum_{r=i_1}^{i_2}\\sum_{c=j_1}^{j_2}a_{r,c}. Then, let the oddness of the grid be the number of quadruples (i_1, i_2, j_1, j_2) such that S(i_1, i_2, j_1, j_2) is odd.\n\nFind a way to fill in the grid that maximizes its oddness.\n\nConstraints\n\n* N and M are integers between 1 and 10 (inclusive).\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\n\n\nOutput\n\nPrint numbers to write in the grid so that its oddness is maximized, in the following format:\n\n\na_{1,1}a_{1,2}\\cdots a_{1,2^M-1}\na_{2,1}a_{2,2}\\cdots a_{2,2^M-1}\n\\vdots\na_{2^N-1,1}a_{2^N-1,2}\\cdots a_{2^N-1,2^M-1}\n\n\nIf there are multiple solutions, you can print any of them.\n\nExample\n\nInput\n\n1 2\n\n\nOutput\n\n111", "grammar": {"answer": null}}
{"name": "p03502 AtCoder Beginner Contest 080 - Harshad Number", "description": "An integer X is called a Harshad number if X is divisible by f(X), where f(X) is the sum of the digits in X when written in base 10.\n\nGiven an integer N, determine whether it is a Harshad number.\n\nConstraints\n\n* 1?N?10^8\n* N is an integer.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\n\n\nOutput\n\nPrint `Yes` if N is a Harshad number; print `No` otherwise.\n\nExamples\n\nInput\n\n12\n\n\nOutput\n\nYes\n\n\nInput\n\n57\n\n\nOutput\n\nNo\n\n\nInput\n\n148\n\n\nOutput\n\nNo", "grammar": {"answer": null}}
{"name": "408_C. Triangle", "description": "There is a right triangle with legs of length a and b. Your task is to determine whether it is possible to locate the triangle on the plane in such a way that none of its sides is parallel to the coordinate axes. All the vertices must have integer coordinates. If there exists such a location, you have to output the appropriate coordinates of vertices.\n\nInput\n\nThe first line contains two integers a, b (1 ≤ a, b ≤ 1000), separated by a single space.\n\nOutput\n\nIn the first line print either \"YES\" or \"NO\" (without the quotes) depending on whether the required location exists. If it does, print in the next three lines three pairs of integers — the coordinates of the triangle vertices, one pair per line. The coordinates must be integers, not exceeding 109 in their absolute value.\n\nExamples\n\nInput\n\n1 1\n\n\nOutput\n\nNO\n\n\nInput\n\n5 5\n\n\nOutput\n\nYES\n2 1\n5 5\n-2 4\n\n\nInput\n\n5 10\n\n\nOutput\n\nYES\n-10 4\n-2 -2\n1 2", "grammar": {"answer": null}}
{"name": "535_B. Tavas and SaDDas", "description": "Once again Tavas started eating coffee mix without water! Keione told him that it smells awful, but he didn't stop doing that. That's why Keione told his smart friend, SaDDas to punish him! SaDDas took Tavas' headphones and told him: \"If you solve the following problem, I'll return it to you.\"\n\n<image>\n\nThe problem is: \n\nYou are given a lucky number n. Lucky numbers are the positive integers whose decimal representations contain only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.\n\nIf we sort all lucky numbers in increasing order, what's the 1-based index of n? \n\nTavas is not as smart as SaDDas, so he asked you to do him a favor and solve this problem so he can have his headphones back.\n\nInput\n\nThe first and only line of input contains a lucky number n (1 ≤ n ≤ 109).\n\nOutput\n\nPrint the index of n among all lucky numbers.\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n1\n\n\nInput\n\n7\n\n\nOutput\n\n2\n\n\nInput\n\n77\n\n\nOutput\n\n6", "grammar": {"answer": null}}
{"name": "p02536 ACL Beginner Contest - Connect Cities", "description": "There are N cities numbered 1 through N, and M bidirectional roads numbered 1 through M. Road i connects City A_i and City B_i.\n\nSnuke can perform the following operation zero or more times:\n\n* Choose two distinct cities that are not directly connected by a road, and build a new road between the two cities.\n\n\n\nAfter he finishes the operations, it must be possible to travel from any city to any other cities by following roads (possibly multiple times).\n\nWhat is the minimum number of roads he must build to achieve the goal?\n\nConstraints\n\n* 2 \\leq N \\leq 100,000\n* 1 \\leq M \\leq 100,000\n* 1 \\leq A_i < B_i \\leq N\n* No two roads connect the same pair of cities.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN M\nA_1 B_1\n:\nA_M B_M\n\n\nOutput\n\nPrint the answer.\n\nExample\n\nInput\n\n3 1\n1 2\n\n\nOutput\n\n1", "grammar": {"answer": null}}
{"name": "p02325 Bitonic Traveling Salesman Problem", "description": "For given $N$ points in the 2D Euclidean plane, find the distance of the shortest tour that meets the following criteria:\n\n* Visit the points according to the following steps:\n1. It starts from the leftmost point (starting point), goes strictly from left to right, and then visits the rightmost point (turn-around point).\n2. Then it starts from the turn-around point, goes strictly from right to left, and then back to the starting point.\n* Through the processes 1. 2., the tour must visit each point at least once.\n\nConstraints\n\n* $2 \\leq N \\leq 1000$\n* $-1000 \\leq x_i, y_i \\leq 1000$\n* $x_i$ differ from each other\n* The given points are already sorted by x-coordinates\n\nInput\n\nThe input data is given in the following format:\n\n$N$\n$x_1$ $y_1$\n$x_2$ $y_2$\n...\n$x_N$ $y_N$\n\nOutput\n\nPrint the distance of the shortest tour in a line. The output should not have an error greater than 0.0001.\n\nExamples\n\nInput\n\n3\n0 0\n1 1\n2 0\n\n\nOutput\n\n4.82842712\n\n\nInput\n\n4\n0 1\n1 2\n2 0\n3 1\n\n\nOutput\n\n7.30056308\n\n\nInput\n\n5\n0 0\n1 2\n2 1\n3 2\n4 0\n\n\nOutput\n\n10.94427191", "grammar": {"answer": null}}
{"name": "p02794 AtCoder Beginner Contest 152 - Tree and Constraints", "description": "We have a tree with N vertices numbered 1 to N. The i-th edge in this tree connects Vertex a_i and Vertex b_i.\nConsider painting each of these edges white or black. There are 2^{N-1} such ways to paint the edges. Among them, how many satisfy all of the following M restrictions?\n\n* The i-th (1 \\leq i \\leq M) restriction is represented by two integers u_i and v_i, which mean that the path connecting Vertex u_i and Vertex v_i must contain at least one edge painted black.\n\nConstraints\n\n* 2 \\leq N \\leq 50\n* 1 \\leq a_i,b_i \\leq N\n* The graph given in input is a tree.\n* 1 \\leq M \\leq \\min(20,\\frac{N(N-1)}{2})\n* 1 \\leq u_i < v_i \\leq N\n* If i \\not= j, either u_i \\not=u_j or v_i\\not=v_j\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\na_1 b_1\n:\na_{N-1} b_{N-1}\nM\nu_1 v_1\n:\nu_M v_M\n\n\nOutput\n\nPrint the number of ways to paint the edges that satisfy all of the M conditions.\n\nExamples\n\nInput\n\n3\n1 2\n2 3\n1\n1 3\n\n\nOutput\n\n3\n\n\nInput\n\n2\n1 2\n1\n1 2\n\n\nOutput\n\n1\n\n\nInput\n\n5\n1 2\n3 2\n3 4\n5 3\n3\n1 3\n2 4\n2 5\n\n\nOutput\n\n9\n\n\nInput\n\n8\n1 2\n2 3\n4 3\n2 5\n6 3\n6 7\n8 6\n5\n2 7\n3 5\n1 6\n2 8\n7 8\n\n\nOutput\n\n62", "grammar": {"answer": null}}
{"name": "652_B. z-sort", "description": "A student of z-school found a kind of sorting called z-sort. The array a with n elements are z-sorted if two conditions hold:\n\n  1. ai ≥ ai - 1 for all even i, \n  2. ai ≤ ai - 1 for all odd i > 1. \n\n\n\nFor example the arrays [1,2,1,2] and [1,1,1,1] are z-sorted while the array [1,2,3,4] isn’t z-sorted.\n\nCan you make the array z-sorted?\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 1000) — the number of elements in the array a.\n\nThe second line contains n integers ai (1 ≤ ai ≤ 109) — the elements of the array a.\n\nOutput\n\nIf it's possible to make the array a z-sorted print n space separated integers ai — the elements after z-sort. Otherwise print the only word \"Impossible\".\n\nExamples\n\nInput\n\n4\n1 2 2 1\n\n\nOutput\n\n1 2 1 2\n\n\nInput\n\n5\n1 3 2 2 5\n\n\nOutput\n\n1 5 2 3 2", "grammar": {"answer": null}}
{"name": "670_A. Holidays", "description": "On the planet Mars a year lasts exactly n days (there are no leap years on Mars). But Martians have the same weeks as earthlings — 5 work days and then 2 days off. Your task is to determine the minimum possible and the maximum possible number of days off per year on Mars.\n\nInput\n\nThe first line of the input contains a positive integer n (1 ≤ n ≤ 1 000 000) — the number of days in a year on Mars.\n\nOutput\n\nPrint two integers — the minimum possible and the maximum possible number of days off per year on Mars.\n\nExamples\n\nInput\n\n14\n\n\nOutput\n\n4 4\n\n\nInput\n\n2\n\n\nOutput\n\n0 2\n\nNote\n\nIn the first sample there are 14 days in a year on Mars, and therefore independently of the day a year starts with there will be exactly 4 days off .\n\nIn the second sample there are only 2 days in a year on Mars, and they can both be either work days or days off.", "grammar": {"answer": null}}
{"name": "859_B. Lazy Security Guard", "description": "Your security guard friend recently got a new job at a new security company. The company requires him to patrol an area of the city encompassing exactly N city blocks, but they let him choose which blocks. That is, your friend must walk the perimeter of a region whose area is exactly N blocks. Your friend is quite lazy and would like your help to find the shortest possible route that meets the requirements. The city is laid out in a square grid pattern, and is large enough that for the sake of the problem it can be considered infinite.\n\nInput\n\nInput will consist of a single integer N (1 ≤ N ≤ 106), the number of city blocks that must be enclosed by the route.\n\nOutput\n\nPrint the minimum perimeter that can be achieved.\n\nExamples\n\nInput\n\n4\n\n\nOutput\n\n8\n\n\nInput\n\n11\n\n\nOutput\n\n14\n\n\nInput\n\n22\n\n\nOutput\n\n20\n\nNote\n\nHere are some possible shapes for the examples:\n\n<image>", "grammar": {"answer": null}}
{"name": "p02847 AtCoder Beginner Contest 146 - Can't Wait for Holiday", "description": "Given is a string S representing the day of the week today.\n\nS is `SUN`, `MON`, `TUE`, `WED`, `THU`, `FRI`, or `SAT`, for Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday, respectively.\n\nAfter how many days is the next Sunday (tomorrow or later)?\n\nConstraints\n\n* S is `SUN`, `MON`, `TUE`, `WED`, `THU`, `FRI`, or `SAT`.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nS\n\n\nOutput\n\nPrint the number of days before the next Sunday.\n\nExamples\n\nInput\n\nSAT\n\n\nOutput\n\n1\n\n\nInput\n\nSUN\n\n\nOutput\n\n7", "grammar": {"answer": null}}
{"name": "842_A. Kirill And The Game", "description": "Kirill plays a new computer game. He came to the potion store where he can buy any potion. Each potion is characterized by two integers — amount of experience and cost. The efficiency of a potion is the ratio of the amount of experience to the cost. Efficiency may be a non-integer number.\n\nFor each two integer numbers a and b such that l ≤ a ≤ r and x ≤ b ≤ y there is a potion with experience a and cost b in the store (that is, there are (r - l + 1)·(y - x + 1) potions).\n\nKirill wants to buy a potion which has efficiency k. Will he be able to do this?\n\nInput\n\nFirst string contains five integer numbers l, r, x, y, k (1 ≤ l ≤ r ≤ 107, 1 ≤ x ≤ y ≤ 107, 1 ≤ k ≤ 107).\n\nOutput\n\nPrint \"YES\" without quotes if a potion with efficiency exactly k can be bought in the store and \"NO\" without quotes otherwise.\n\nYou can output each of the letters in any register.\n\nExamples\n\nInput\n\n1 10 1 10 1\n\n\nOutput\n\nYES\n\nInput\n\n1 5 6 10 1\n\n\nOutput\n\nNO", "grammar": {"answer": null}}
{"name": "p01076 Graph Making", "description": "Problem\n\nThere are n vertices that are not connected to any of the vertices.\nAn undirected side is stretched between each vertex.\nFind out how many sides can be stretched when the diameter is set to d.\nThe diameter represents the largest of the shortest distances between two vertices.\nHere, the shortest distance is the minimum value of the number of sides required to move between vertices.\nMultiple edges and self-loops are not allowed.\n\nConstraints\n\n* 2 ≤ n ≤ 109\n* 1 ≤ d ≤ n−1\n\nInput\n\n\nn d\n\n\nTwo integers n and d are given on one line, separated by blanks.\n\nOutput\n\nOutput the maximum number of sides that can be stretched on one line.\n\nExamples\n\nInput\n\n4 3\n\n\nOutput\n\n3\n\n\nInput\n\n5 1\n\n\nOutput\n\n10\n\n\nInput\n\n4 2\n\n\nOutput\n\n5", "grammar": {"answer": null}}
{"name": "p03827 AtCoder Beginner Contest 052 - Increment Decrement", "description": "You have an integer variable x. Initially, x=0.\n\nSome person gave you a string S of length N, and using the string you performed the following operation N times. In the i-th operation, you incremented the value of x by 1 if S_i=`I`, and decremented the value of x by 1 if S_i=`D`.\n\nFind the maximum value taken by x during the operations (including before the first operation, and after the last operation).\n\nConstraints\n\n* 1≤N≤100\n* |S|=N\n* No characters except `I` and `D` occur in S.\n\nInput\n\nThe input is given from Standard Input in the following format:\n\n\nN\nS\n\n\nOutput\n\nPrint the maximum value taken by x during the operations.\n\nExamples\n\nInput\n\n5\nIIDID\n\n\nOutput\n\n2\n\n\nInput\n\n7\nDDIDDII\n\n\nOutput\n\n0", "grammar": {"answer": null}}
{"name": "984_C. Finite or not?", "description": "You are given several queries. Each query consists of three integers p, q and b. You need to answer whether the result of p/q in notation with base b is a finite fraction.\n\nA fraction in notation with base b is finite if it contains finite number of numerals after the decimal point. It is also possible that a fraction has zero numerals after the decimal point.\n\nInput\n\nThe first line contains a single integer n (1 ≤ n ≤ 10^5) — the number of queries.\n\nNext n lines contain queries, one per line. Each line contains three integers p, q, and b (0 ≤ p ≤ 10^{18}, 1 ≤ q ≤ 10^{18}, 2 ≤ b ≤ 10^{18}). All numbers are given in notation with base 10.\n\nOutput\n\nFor each question, in a separate line, print Finite if the fraction is finite and Infinite otherwise.\n\nExamples\n\nInput\n\n2\n6 12 10\n4 3 10\n\n\nOutput\n\nFinite\nInfinite\n\n\nInput\n\n4\n1 1 2\n9 36 2\n4 12 3\n3 5 4\n\n\nOutput\n\nFinite\nFinite\nFinite\nInfinite\n\nNote\n\n6/12 = 1/2 = 0,5_{10}\n\n4/3 = 1,(3)_{10}\n\n9/36 = 1/4 = 0,01_2\n\n4/12 = 1/3 = 0,1_3 ", "grammar": {"answer": null}}
{"name": "p03006 diverta 2019 Programming Contest 2 - Picking Up", "description": "There are N balls in a two-dimensional plane. The i-th ball is at coordinates (x_i, y_i).\n\nWe will collect all of these balls, by choosing two integers p and q such that p \\neq 0 or q \\neq 0 and then repeating the following operation:\n\n* Choose a ball remaining in the plane and collect it. Let (a, b) be the coordinates of this ball. If we collected a ball at coordinates (a - p, b - q) in the previous operation, the cost of this operation is 0. Otherwise, including when this is the first time to do this operation, the cost of this operation is 1.\n\n\n\nFind the minimum total cost required to collect all the balls when we optimally choose p and q.\n\nConstraints\n\n* 1 \\leq N \\leq 50\n* |x_i|, |y_i| \\leq 10^9\n* If i \\neq j, x_i \\neq x_j or y_i \\neq y_j.\n* All values in input are integers.\n\nInput\n\nInput is given from Standard Input in the following format:\n\n\nN\nx_1 y_1\n:\nx_N y_N\n\n\nOutput\n\nPrint the minimum total cost required to collect all the balls.\n\nExamples\n\nInput\n\n2\n1 1\n2 2\n\n\nOutput\n\n1\n\n\nInput\n\n3\n1 4\n4 6\n7 8\n\n\nOutput\n\n1\n\n\nInput\n\n4\n1 1\n1 2\n2 1\n2 2\n\n\nOutput\n\n2", "grammar": {"answer": null}}
{"name": "p00320 Cuboid", "description": "The educational program (AHK Education) of the Aiz Broadcasting Corporation broadcasts a program called \"Play with Tsukuro\" for children. Today is the time to make a box with drawing paper, but I would like to see if the rectangular drawing paper I prepared can make a rectangular parallelepiped. However, do not cut or fold the drawing paper.\n\nGiven six rectangles, write a program to determine if you can make a rectangular parallelepiped using them.\n\n\n\nInput\n\nThe input is given in the following format.\n\n\nh1 w1\nh2 w2\nh3 w3\nh4 w4\nh5 w5\nh6 w6\n\n\nThe input consists of 6 lines, each line given the integer hi (1 ≤ hi ≤ 1000) for the vertical length of each rectangle and the integer wi (1 ≤ wi ≤ 1000) for the horizontal length.\n\nOutput\n\nIf a rectangular parallelepiped can be created, \"yes\" is output, and if it cannot be created, \"no\" is output. However, since a cube is a kind of rectangular parallelepiped, \"yes\" is output even if it is a cube.\n\nExamples\n\nInput\n\n2 2\n2 3\n2 3\n2 3\n2 2\n3 2\n\n\nOutput\n\nyes\n\n\nInput\n\n2 2\n2 3\n2 3\n2 3\n2 2\n2 2\n\n\nOutput\n\nno", "grammar": {"answer": null}}
{"name": "109_E. Lucky Interval", "description": "Petya loves lucky numbers. We all know that lucky numbers are the positive integers whose decimal representations contain only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.\n\nOne day Petya came across an interval of numbers [a, a + l - 1]. Let F(x) be the number of lucky digits of number x. Find the minimum b (a < b) such, that F(a) = F(b), F(a + 1) = F(b + 1), ..., F(a + l - 1) = F(b + l - 1).\n\nInput\n\nThe single line contains two integers a and l (1 ≤ a, l ≤ 109) — the interval's first number and the interval's length correspondingly.\n\nOutput\n\nOn the single line print number b — the answer to the problem.\n\nExamples\n\nInput\n\n7 4\n\n\nOutput\n\n17\n\n\nInput\n\n4 7\n\n\nOutput\n\n14\n\nNote\n\nConsider that [a, b] denotes an interval of integers; this interval includes the boundaries. That is, <image>", "grammar": {"answer": null}}
{"name": "p02246 15 Puzzle", "description": "The goal of the 15 puzzle problem is to complete pieces on $4 \\times 4$ cells where one of the cells is empty space.\n\nIn this problem, the space is represented by 0 and pieces are represented by integers from 1 to 15 as shown below.\n\n\n1 2 3 4\n6 7 8 0\n5 10 11 12\n9 13 14 15\n\n\nYou can move a piece toward the empty space at one step. Your goal is to make the pieces the following configuration in the shortest move (fewest steps).\n\n\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 0\n\n\nWrite a program which reads an initial state of the puzzle and prints the fewest steps to solve the puzzle.\n\nConstraints\n\n* The given puzzle is solvable in at most 45 steps.\n\nInput\n\nThe $4 \\times 4$ integers denoting the pieces or space are given.\n\nOutput\n\nPrint the fewest steps in a line.\n\nExample\n\nInput\n\n1 2 3 4\n6 7 8 0\n5 10 11 12\n9 13 14 15\n\n\nOutput\n\n8", "grammar": {"answer": null}}
